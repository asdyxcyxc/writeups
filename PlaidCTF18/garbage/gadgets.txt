Gadgets information
============================================================
0x000000000053b030 : adc ah, 0xf0 ; call qword ptr [rax]
0x00000000004b9370 : adc ah, al ; out 0x2c, al ; inc byte ptr [rcx + 9] ; ret
0x00000000004f875a : adc ah, bh ; sti ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rbp - 0x31], esp ; jg 0x4f87a8 ; ret
0x000000000050c945 : adc ah, byte ptr [rbx + rcx*8 + 6] ; push rcx ; shl byte ptr [rdx + 0x56], 1 ; ret 0x3451
0x000000000050be4c : adc ah, byte ptr [rbx + rcx*8] ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x00000000004b18aa : adc ah, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; xor eax, eax ; pop rbx ; ret
0x000000000043b8c2 : adc ah, dh ; xor dword ptr [rax], eax ; ret
0x000000000053e1c8 : adc al, 0 ; add byte ptr [rax], al ; hlt ; int1 ; add byte ptr [rax], al ; ret 0xfff1
0x000000000054b2c0 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000053b380 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000053b280 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000054b278 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000053b238 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x000000000053e200 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0xf2 ; add byte ptr [rax], al ; cwde ; ret 0xfff1
0x000000000053b368 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000053b268 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000547a08 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0x8a ; add dword ptr [rax], eax ; nop ; ret 0xfff3
0x0000000000540bec : adc al, 0x1c ; add dword ptr [rax], eax ; mov dl, 0xf2 ; jmp qword ptr [rsi]
0x00000000004f8764 : adc al, 0x1c ; ret
0x000000000052be88 : adc al, 0x21 ; cmc ; inc esp ; ret
0x00000000004c4a23 : adc al, 0x24 ; mov rdi, r12 ; mov rsi, rbp ; call r15
0x00000000004c68da : adc al, 0x24 ; mov rdi, r13 ; call rdx
0x00000000005514ec : adc al, 0x25 ; add al, byte ptr [rax] ; or byte ptr [rax], 0xf6 ; call qword ptr [rsi]
0x0000000000492b4f : adc al, 0x26 ; adc edx, dword ptr [rbx] ; xor eax, 0x35131326 ; ret
0x00000000005296b0 : adc al, 0x27 ; int1 ; jmp rsp
0x00000000005417ec : adc al, 0x28 ; add dword ptr [rax], eax ; sbb bh, 0xf2 ; call qword ptr [rax]
0x0000000000529700 : adc al, 0x28 ; int1 ; call rsp
0x00000000004f8791 : adc al, 0x32 ; ret
0x000000000052b440 : adc al, 0x33 ; hlt ; call rsp
0x000000000052c090 : adc al, 0x35 ; cmc ; jmp rsp
0x00000000004cae84 : adc al, 0x39 ; ret 0x8f0f
0x000000000052b480 : adc al, 0x3a ; hlt ; call rsp
0x0000000000445541 : adc al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048404f : adc al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004b3492 : adc al, 0x48 ; add esp, 0x38 ; ret
0x0000000000480852 : adc al, 0x48 ; add esp, 0x48 ; ret
0x000000000046a793 : adc al, 0x48 ; add esp, 8 ; ret
0x0000000000486326 : adc al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000424baf : adc al, 0x48 ; test ecx, ecx ; jne 0x424be9 ; xor eax, eax ; pop rbx ; ret
0x0000000000553bec : adc al, 0x4c ; add al, byte ptr [rax] ; nop ; jl 0x553bf0 ; jmp qword ptr [rbx]
0x00000000005299c8 : adc al, 0x50 ; int1 ; jmp rsp
0x0000000000402328 : adc al, 0x5b ; ret
0x00000000005450ec : adc al, 0x61 ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x00000000004fbdff : adc al, 0x62 ; ret
0x00000000004fb46f : adc al, 0x72 ; ret 0xec77
0x0000000000404486 : adc al, 0x76 ; lea rax, qword ptr [rsi + rdx*4] ; xor rax, rcx ; ret
0x000000000051172c : adc al, 0x83 ; ret
0x0000000000515b4d : adc al, 0x87 ; ror esp, cl ; ret 0xcac1
0x000000000043ff39 : adc al, 0x89 ; ret
0x00000000005479ec : adc al, 0x8a ; add dword ptr [rax], eax ; add dl, 0xf3 ; jmp qword ptr [rdx]
0x00000000004feaba : adc al, 0x90 ; ret
0x0000000000529cc0 : adc al, 0x95 ; int1 ; jmp rsp
0x00000000004b9754 : adc al, 0x9d ; add byte ptr [rsi + 0x52], ch ; add byte ptr [rbp - 0x77], al ; ret 0x8941
0x00000000004f7aae : adc al, 0x9f ; ret 0x61c0
0x00000000005123cf : adc al, 0xaa ; fst dword ptr [rcx - 0x79a63c10] ; ret
0x0000000000529f88 : adc al, 0xb2 ; int1 ; jmp rsp
0x000000000053baec : adc al, 0xcb ; add byte ptr [rax], al ; push rax ; out -0x10, eax ; jmp rbx
0x00000000005064ff : adc al, 0xd1 ; mov al, 0xf6 ; jle 0x50652c ; ret
0x0000000000500683 : adc al, 0xd6 ; int1 ; stosb byte ptr [rdi], al ; ret
0x00000000004fd8c5 : adc al, 0xd7 ; sahf ; cmp al, 0x26 ; ret 0x6f8
0x00000000004fd355 : adc al, 0xdd ; ret 0x8c0e
0x000000000052a218 : adc al, 0xea ; int1 ; call rsp
0x0000000000420649 : adc al, 0xf ; lahf ; ret 0xb60f
0x00000000004533ab : adc al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000041c88b : adc al, 0xf0 ; mov rax, rdx ; ret
0x0000000000549e09 : adc al, 0xf4 ; call qword ptr [rbx]
0x00000000004ce14b : adc al, 0xf5 ; inc dword ptr [rbp - 0x7ce18b40] ; ret
0x0000000000551a49 : adc al, 0xf6 ; call qword ptr [rcx]
0x000000000052a390 : adc al, 0xfa ; int1 ; call rsp
0x000000000054ecec : adc al, 0xfd ; add dword ptr [rax], eax ; xor byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x0000000000540445 : adc al, 1 ; add byte ptr [rax - 0x59], bh ; call qword ptr [rsi]
0x000000000052ce25 : adc al, 2 ; add byte ptr [rdi + rbx - 0xa], ah ; call rsp
0x000000000052df68 : adc al, 2 ; clc ; jmp rsp
0x00000000005063fe : adc al, 5 ; ret
0x00000000004c5334 : adc al, 8 ; lea eax, dword ptr [rbx + 1] ; add edx, eax ; jmp 0x4c5349
0x0000000000542800 : adc al, bh ; call qword ptr [rbx]
0x000000000054c680 : adc al, bh ; hlt ; jmp qword ptr [rax]
0x0000000000480955 : adc al, bh ; inc dword ptr [rbp - 0x7cbb8b40] ; ret
0x000000000050fea9 : adc al, byte ptr [rax + rbx*8 - 0x65] ; call qword ptr [r14]
0x0000000000530205 : adc al, byte ptr [rax] ; add al, bh ; pop rbp ; in eax, dx ; call qword ptr [rdx]
0x00000000004fcda8 : adc al, byte ptr [rax] ; mov esp, dr0 ; ret
0x0000000000529d2d : adc al, byte ptr [rcx] ; add byte ptr [rbp + rbp*4 - 0xf], al ; call rsp
0x0000000000472710 : adc al, byte ptr [rdi + rcx - 0x4a] ; and cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000004b0547 : adc al, byte ptr [rdi] ; mov rdi, r15 ; call 0x41c7d8
0x0000000000465e9f : adc al, ch ; jmp 0x465e69
0x000000000040db37 : adc al, ch ; ret
0x0000000000466054 : adc al, ch ; ret 0xfff9
0x0000000000425296 : adc al, dh ; loope 0x425270 ; ret
0x0000000000425295 : adc al, sil ; loope 0x425271 ; ret
0x0000000000425293 : adc bh, al ; adc al, sil ; loope 0x425273 ; ret
0x0000000000547c00 : adc bh, al ; call qword ptr [rdx]
0x000000000048440c : adc bh, al ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004051f0 : adc bh, bh ; push rax ; adc byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000517a5b : adc bh, byte ptr [rdi + 0x7c44912e] ; ret 0x2496
0x0000000000513408 : adc bh, byte ptr [rdi] ; mov bh, 0x58 ; rcr byte ptr [rsi - 0x52], 1 ; mov cl, 0x4d ; ret
0x0000000000528791 : adc bh, ch ; jmp rsp
0x00000000004b4734 : adc bh, cl ; inc dword ptr [rbp - 0x7cc08b40] ; ret
0x000000000045030f : adc bh, dh ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004795b6 : adc bh, dh ; ret 0
0x0000000000439bec : adc bl, ah ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000004b677b : adc bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000512308 : adc bl, bh ; xchg rax, r12 ; sahf ; ret 0x667b
0x0000000000509bbb : adc bl, byte ptr [rbx] ; sbb al, 0x1e ; ret
0x0000000000468b7a : adc bl, ch ; ret
0x00000000004f48d4 : adc bl, cl ; in al, 0xa ; ret
0x00000000004274d2 : adc bl, dh ; ret
0x0000000000430d86 : adc bpl, r8b ; cli ; outsd dx, dword ptr [rsi] ; push rsi ; and ah, al ; ret 0x79
0x0000000000511548 : adc byte ptr [r10], dil ; ret
0x00000000004a3c0c : adc byte ptr [r13 + r9*4 + 0x47], r9b ; sub byte ptr [rcx + rcx*4 - 0x29], cl ; call rax
0x000000000045a457 : adc byte ptr [r8 + 0x23], r9b ; push rsi ; sbb byte ptr [rax + 0x31], cl ; ret 0x8948
0x00000000004691d7 : adc byte ptr [r8 - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x318b
0x0000000000403067 : adc byte ptr [r8 - 0x77], r9b ; cli ; mov edi, ecx ; jmp rax
0x00000000004b7212 : adc byte ptr [r8 - 0x77], r9b ; ja 0x4b722e ; ret
0x000000000045cbe5 : adc byte ptr [r9 + r9*4 + 0x4f], r9b ; sbb bl, dh ; ret
0x00000000004c298d : adc byte ptr [r9 - 0x77], cl ; ret 0x8d4c
0x000000000045196f : adc byte ptr [r9 - 0x77], r9b ; ret
0x000000000040fe98 : adc byte ptr [r9 - 0x77], r9b ; ror dword ptr [rcx + rcx*4 - 0x38], 1 ; ret
0x000000000041c8cb : adc byte ptr [r9], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000047b3fe : adc byte ptr [r9], r14b ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret 0xd639
0x000000000045a458 : adc byte ptr [rax + 0x23], cl ; push rsi ; sbb byte ptr [rax + 0x31], cl ; ret 0x8948
0x00000000004fcdc1 : adc byte ptr [rax + 0x47], dh ; pop rdi ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x00000000004491d1 : adc byte ptr [rax + 0x63], cl ; adc ebx, dword ptr [rbx + 0x48] ; xor eax, edx ; ret
0x0000000000403c6c : adc byte ptr [rax + 0x63], cl ; ret
0x000000000046e1bb : adc byte ptr [rax + 0x63], cl ; sar bh, 1 ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000403c6b : adc byte ptr [rax + 0x63], r9b ; ret
0x0000000000425b11 : adc byte ptr [rax + 0xc595], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000425aaf : adc byte ptr [rax + 0xcd95], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000425181 : adc byte ptr [rax + 1], bh ; pop r12 ; ret
0x0000000000405ea6 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000046aef3 : adc byte ptr [rax + 1], bh ; ret
0x0000000000455185 : adc byte ptr [rax + 1], cl ; push rdi ; adc byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000045520e : adc byte ptr [rax + 1], cl ; push rdi ; and byte ptr [rax - 0x77], cl ; ret 0x114c
0x00000000004c5e79 : adc byte ptr [rax + 1], cl ; ret
0x0000000000441fa2 : adc byte ptr [rax + rcx*4 + 0x7d], al ; add byte ptr [rax - 0x77], cl ; ret 0xdfe9
0x00000000004c7c3d : adc byte ptr [rax - 0x73], cl ; and al, 0x18 ; ret
0x00000000004c6767 : adc byte ptr [rax - 0x73], cl ; jae 0x4c67d1 ; call rax
0x00000000004c6728 : adc byte ptr [rax - 0x73], cl ; jg 0x4c6772 ; call rax
0x0000000000466189 : adc byte ptr [rax - 0x73], cl ; jl 0x4661ba ; xor al, ch ; insb byte ptr [rdi], dx ; ret 0xfff9
0x0000000000468bbf : adc byte ptr [rax - 0x73], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004c66b6 : adc byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x00000000004c5e74 : adc byte ptr [rax - 0x75], cl ; jl 0x4c5ea5 ; adc byte ptr [rax + 1], cl ; ret
0x0000000000449203 : adc byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; salc ; jmp rax
0x00000000004c6f91 : adc byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; call r12
0x0000000000425bc4 : adc byte ptr [rax - 0x76b702ad], cl ; ret 0xc148
0x00000000004bcfa6 : adc byte ptr [rax - 0x76bb00b0], cl ; ret 0x8d49
0x0000000000476d63 : adc byte ptr [rax - 0x77], cl ; add dword ptr [rax + 1], edi ; ret
0x0000000000497eff : adc byte ptr [rax - 0x77], cl ; call rax
0x0000000000403068 : adc byte ptr [rax - 0x77], cl ; cli ; mov edi, ecx ; jmp rax
0x00000000004691d8 : adc byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x318b
0x00000000004b7213 : adc byte ptr [rax - 0x77], cl ; ja 0x4b722d ; ret
0x00000000004969d1 : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r15
0x000000000046ec22 : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000496d89 : adc byte ptr [rax - 0x77], cl ; out dx, eax ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000459746 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000455200 : adc byte ptr [rax - 0x77], cl ; ret 0x114c
0x00000000004b3073 : adc byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000455189 : adc byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000004b58f9 : adc byte ptr [rax - 0x77], cl ; ret 0x50be
0x000000000044208a : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000474684 : adc byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000048536a : adc byte ptr [rax - 0x77], cl ; ret 0x8b4c
0x000000000040bfcf : adc byte ptr [rax - 0x77], cl ; ret 0x920f
0x00000000004051f3 : adc byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004180c1 : adc byte ptr [rax - 0x77], cl ; ret 0xf48
0x00000000004c7468 : adc byte ptr [rax - 0x77], cl ; ret 0xff41
0x000000000040bfce : adc byte ptr [rax - 0x77], r9b ; ret 0x920f
0x000000000047d8e5 : adc byte ptr [rax - 0x7b], cl ; div byte ptr [rdx + rdx - 0x41] ; stosb byte ptr [rdi], al ; ret
0x000000000047d71e : adc byte ptr [rax - 0x7b], cl ; div byte ptr [rsp + rbx*4 - 0x41] ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000498fed : adc byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x0000000000471c3f : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rcx + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000046a49e : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rdx + 0x48], cl ; mov edi, ebx ; call rdx
0x00000000004c61bd : adc byte ptr [rax - 0x7cb7eefc], cl ; ret 0x4801
0x00000000004c5c88 : adc byte ptr [rax - 0x7d], cl ; mov byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000041dfcd : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048b547 : adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000041c2b4 : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000410b25 : adc byte ptr [rax - 9], cl ; or byte ptr [rcx + 1], cl ; ret 0x1148
0x0000000000410b24 : adc byte ptr [rax - 9], r9b ; or byte ptr [rcx + 1], cl ; ret 0x1148
0x000000000048aaad : adc byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000004a115f : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041c2cb : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x41c2f5 ; ret
0x00000000004ce7ba : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x39e8
0x000000000041ca76 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000051b1a0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x000000000041c3f8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004a80c5 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000475a87 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004cec95 : adc byte ptr [rax], al ; cmove rax, rcx ; call rax
0x0000000000439bd7 : adc byte ptr [rax], al ; je 0x439bf0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000439c47 : adc byte ptr [rax], al ; je 0x439c60 ; mov rax, rbx ; pop rbx ; ret
0x0000000000439cb7 : adc byte ptr [rax], al ; je 0x439cd0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000484b88 : adc byte ptr [rax], al ; mov eax, 1 ; je 0x484ba1 ; ret
0x000000000046844e : adc byte ptr [rax], al ; sete al ; movzx eax, al ; ret
0x000000000047b3ac : adc byte ptr [rax], al ; setne al ; ret
0x0000000000549270 : adc byte ptr [rax], cl ; hlt ; call rsp
0x000000000046c83d : adc byte ptr [rbp + 0x10], dh ; add rsp, 8 ; jmp rax
0x0000000000440164 : adc byte ptr [rbp + 0x31], al ; in eax, dx ; call rax
0x00000000004b84a3 : adc byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000050043a : adc byte ptr [rbp + 0x482e474c], 0x4b ; ret 0xb611
0x00000000004b8eea : adc byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x00000000004a3c0d : adc byte ptr [rbp + rcx*4 + 0x47], cl ; sub byte ptr [rcx + rcx*4 - 0x29], cl ; call rax
0x000000000053d8c0 : adc byte ptr [rbp - 0xf], ah ; jmp rax
0x0000000000448bff : adc byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004a88a7 : adc byte ptr [rbx + 0x37417f8], al ; xor eax, eax ; ret
0x00000000004cae80 : adc byte ptr [rbx + 0x39142444], cl ; ret 0x8f0f
0x0000000000402751 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040259e : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000479d57 : adc byte ptr [rbx + 0x75d28510], cl ; xor eax, eax ; ret
0x000000000053c20b : adc byte ptr [rbx + 0xa530202], al ; ret
0x000000000053c25b : adc byte ptr [rbx + 0xa700202], al ; ret
0x000000000052ff30 : adc byte ptr [rbx - 0x13], bl ; call qword ptr [rbx]
0x00000000004bded1 : adc byte ptr [rbx - 0x24], dh ; movdqu xmmword ptr [r8], xmm6 ; ret
0x00000000004f6965 : adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x0000000000553340 : adc byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x00000000004e0f50 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e3e
0x000000000050ac74 : adc byte ptr [rbx], bl ; cmc ; ret 0x1d0d
0x0000000000418a64 : adc byte ptr [rcx + 0x21], cl ; ret 0x894c
0x000000000049903a : adc byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000004c8a58 : adc byte ptr [rcx + 0xf], al ; push rdi ; in al, 0xf ; push rdi ; ret
0x0000000000410100 : adc byte ptr [rcx + 1], cl ; ret
0x0000000000410877 : adc byte ptr [rcx + 1], cl ; ret 0x1148
0x00000000004100a1 : adc byte ptr [rcx + 1], cl ; ret 0x1149
0x000000000040fd98 : adc byte ptr [rcx + 1], cl ; ret 0x8348
0x000000000045cbe6 : adc byte ptr [rcx + rcx*4 + 0x4f], cl ; sbb bl, dh ; ret
0x000000000045ce1a : adc byte ptr [rcx + rcx*4 + 0x7f], cl ; sbb bl, dh ; ret
0x00000000004978a3 : adc byte ptr [rcx + rcx*4 - 0x11], cl ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000004cc1d3 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000004c71e2 : adc byte ptr [rcx + rcx*4 - 1], cl ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000501fea : adc byte ptr [rcx - 0x18bf7c53], dl ; ret
0x0000000000462484 : adc byte ptr [rcx - 0x61b173d], cl ; sti ; ljmp ptr [rcx] ; ret
0x00000000004c5331 : adc byte ptr [rcx - 0x73], cl ; adc al, 8 ; lea eax, dword ptr [rbx + 1] ; add edx, eax ; jmp 0x4c534c
0x00000000004c6474 : adc byte ptr [rcx - 0x73], cl ; ja 0x4c64e2 ; lea rdi, qword ptr [r15 + 0x40] ; call rax
0x00000000004729bd : adc byte ptr [rcx - 0x75], cl ; add r14b, r14b ; ret
0x00000000004bd6d8 : adc byte ptr [rcx - 0x77], al ; ret 0x65e9
0x00000000004434d9 : adc byte ptr [rcx - 0x77], cl ; add byte ptr [rax + 1], bh ; ret
0x0000000000451970 : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000004c298e : adc byte ptr [rcx - 0x77], cl ; ret 0x8d4c
0x000000000040fe99 : adc byte ptr [rcx - 0x77], cl ; ror dword ptr [rcx + rcx*4 - 0x38], 1 ; ret
0x00000000004c4e81 : adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041fad9 : adc byte ptr [rcx - 0x7d], cl ; ret 0x8508
0x000000000054ec90 : adc byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x0000000000410561 : adc byte ptr [rcx - 9], cl ; and byte ptr [rcx + 1], cl ; ret 0x1149
0x0000000000492335 : adc byte ptr [rcx - 9], cl ; ret 0xfff0
0x0000000000410560 : adc byte ptr [rcx - 9], r9b ; and byte ptr [rcx + 1], cl ; ret 0x1149
0x0000000000437d9c : adc byte ptr [rcx], ah ; xor al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000054002d : adc byte ptr [rcx], al ; add al, dl ; pushfq ; call qword ptr [rbx]
0x0000000000423bd6 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041c8cc : adc byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000041e076 : adc byte ptr [rcx], al ; ret
0x000000000051028e : adc byte ptr [rcx], bl ; ret
0x000000000054a7c0 : adc byte ptr [rcx], ch ; hlt ; jmp rdx
0x000000000041ac51 : adc byte ptr [rcx], ch ; ret
0x0000000000424a20 : adc byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x2b48
0x000000000049906a : adc byte ptr [rcx], dh ; fisttp dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x0000000000402aa8 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004baf5c : adc byte ptr [rcx], dh ; ret 0xb70f
0x0000000000423b37 : adc byte ptr [rcx], dh ; rol byte ptr [rax + 0x97406f9], 0xf3 ; ret
0x000000000047b3ff : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret 0xd639
0x00000000004622ba : adc byte ptr [rdi + 0x38f], bh ; call 0x41e568
0x00000000004facb0 : adc byte ptr [rdi + 0x69942721], al ; ret
0x000000000043b855 : adc byte ptr [rdi + rax + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004c1d21 : adc byte ptr [rdi + rcx + 0x57], al ; ret 0xf66
0x000000000054e9c0 : adc byte ptr [rdi - 0xb], ch ; call rsp
0x00000000005450f0 : adc byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x00000000004fa806 : adc byte ptr [rdi], ah ; xor al, 0xb0 ; ret 0xa613
0x0000000000450fe1 : adc byte ptr [rdi], cl ; ret 0xf8c1
0x00000000004729c9 : adc byte ptr [rdi], cl ; test byte ptr [rax - 0xa000000], al ; ret
0x00000000004729ed : adc byte ptr [rdi], cl ; test dl, al ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000437433 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x854d
0x000000000053cd60 : adc byte ptr [rdx], ah ; int1 ; call qword ptr [rbx]
0x000000000041f3a9 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000511549 : adc byte ptr [rdx], bh ; ret
0x0000000000491192 : adc byte ptr [rdx], dl ; ret
0x0000000000509185 : adc byte ptr [rsi + 0x55], dh ; stc ; ret
0x00000000004bdca2 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; shl dword ptr [rsi + 0xf], -0x11 ; ret 0xc3f3
0x00000000004c8b83 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; ret
0x00000000004bd789 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0x8d4c
0x00000000004bd7ed : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0xf66
0x0000000000476d2f : adc byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000005100fe : adc byte ptr [rsi + rcx*2 - 3], ch ; jbe 0x510115 ; pop qword ptr [rbx - 0x72] ; ret
0x0000000000530380 : adc byte ptr [rsi - 0x13], bl ; call qword ptr [rax]
0x000000000043c1dc : adc byte ptr [rsi - 4], 0xff ; mov rax, qword ptr [rdi + 0x58] ; ret
0x0000000000512a2d : adc byte ptr [rsi], cl ; mov edx, 0x4631a3c4 ; mov ebx, dword ptr [rcx] ; ret 0xa260
0x000000000045a4e4 : adc byte ptr [rsp + rsi*2], al ; or bl, dh ; ret
0x0000000000501fe9 : adc byte ptr ds:[rcx - 0x18bf7c53], dl ; ret
0x0000000000430d87 : adc ch, al ; cli ; outsd dx, dword ptr [rsi] ; push rsi ; and ah, al ; ret 0x79
0x00000000004ca56e : adc ch, al ; cmp edi, ebp ; ret 0xc3c4
0x00000000004c90f9 : adc ch, al ; stc ; out dx, eax ; ret
0x000000000052bd79 : adc ch, dh ; jmp rsp
0x00000000004f9e40 : adc ch, dh ; ret
0x0000000000427f21 : adc cl, al ; ret 0x105
0x00000000004b683b : adc cl, byte ptr [rax - 0x77] ; out 0x48, al ; mov edi, edx ; call rcx
0x000000000050a9e2 : adc cl, byte ptr [rcx - 0x78] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000464a42 : adc cl, ch ; mov esi, 0xe8fffff7 ; ret
0x000000000051573c : adc dh, byte ptr [rax + rbp*4 - 0xc] ; ret 0x82f4
0x0000000000503925 : adc dh, byte ptr [rbp - 0x63] ; jb 0x503930 ; ret 0x4a9d
0x00000000004f695f : adc dh, byte ptr [rdi + rcx + 0x6e] ; jno 0x4f698e ; adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x000000000052bdb9 : adc dh, ch ; jmp rsp
0x00000000004bdbbb : adc dh, cl ; ret
0x00000000004030f4 : adc dh, dh ; ret 0x7501
0x000000000052a519 : adc dh, dl ; jmp rsp
0x00000000004f4d61 : adc dh, dl ; out -0x2e, eax ; jo 0x4f4cfc ; ret 0x65aa
0x00000000004fb996 : adc dl, byte ptr [rbp + 0x6b0cc9ec] ; ret 0x1320
0x00000000004f582e : adc dl, byte ptr [rbx - 0x7b] ; jmp 0xffffffffc2b85a4f
0x00000000004f5ee8 : adc dl, byte ptr [rdx + 0x3d394030] ; xchg eax, esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xd0e1
0x0000000000494b22 : adc dl, byte ptr [rdx] ; ret
0x0000000000503ffc : adc dl, byte ptr [rsp - 0x5b] ; pop rdx ; loop 0x50406a ; ret
0x0000000000503ffb : adc dl, byte ptr [rsp - 0x5b] ; pop rdx ; loop 0x50406b ; ret
0x000000000050fcf6 : adc dword ptr [r14], 0x6824f43f ; xchg eax, edi ; ret
0x0000000000507421 : adc dword ptr [rax + 0x58e98f71], ebx ; mov ecx, esp ; ret
0x000000000040586f : adc dword ptr [rax + 2], 0 ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000004c61c0 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000425020 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x0000000000405ea5 : adc dword ptr [rax], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000425ce1 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000415568 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000000005103dd : adc dword ptr [rax], ebp ; xchg eax, ebx ; call qword ptr [rcx]
0x0000000000404c23 : adc dword ptr [rbp + rsi], ecx ; test rax, rax ; je 0x404c39 ; ret
0x000000000041c4a6 : adc dword ptr [rbp - 0x19], esi ; mov dword ptr [rdi], r10d ; ret
0x000000000043d30b : adc dword ptr [rbx - 0x3fce0004], eax ; pop rbx ; ret
0x00000000004fa8ce : adc dword ptr [rcx - 0x11], eax ; ret 0x3a29
0x00000000005154ba : adc dword ptr [rcx - 0x4820b9a4], edi ; int 0x80
0x0000000000517f9f : adc dword ptr [rcx - 0x63], 0xdbf37a85 ; ret
0x00000000004b8c44 : adc dword ptr [rcx - 0x77], eax ; ret
0x000000000045049b : adc dword ptr [rcx - 5], 0x5bc031ff ; ret
0x0000000000517197 : adc dword ptr [rcx], 0x5e ; xor dword ptr [rbx], ebp ; jrcxz 0x51716f ; push rdi ; ret
0x0000000000529ce5 : adc dword ptr [rcx], eax ; add byte ptr [rsp + rbp*4], ah ; int1 ; call rsp
0x0000000000402949 : adc dword ptr [rcx], esi ; ror byte ptr [rax - 0x7b], 0xf6 ; setne al ; ret
0x000000000045527d : adc dword ptr [rdi + 0x88], edx ; ret
0x0000000000513e19 : adc dword ptr [rdi - 0x60], ebp ; xor dword ptr [rbp - 0x1ab24fd0], edx ; ret 0xf505
0x00000000004c88dd : adc dword ptr [rdi], ecx ; push rdi ; ret
0x000000000041abf5 : adc dword ptr [rdi], ecx ; sahf ; ret 0x8348
0x0000000000454337 : adc dword ptr [rdi], ecx ; test byte ptr [rdx - 0x9ffffff], ch ; ret
0x000000000050f352 : adc dword ptr [rdx + 0x46056b6d], eax ; ret
0x0000000000494b52 : adc dword ptr [rdx], edx ; ret
0x0000000000517198 : adc dword ptr [rsi + 0x31], ebx ; sub esp, ebx ; leave ; push rdi ; ret
0x00000000004ca10b : adc dword ptr [rsi + 0x50], esi ; lea rsi, qword ptr [rsi + 0x60] ; ret
0x00000000005016ed : adc dword ptr [rsi - 0x78], eax ; ret
0x000000000050fcf7 : adc dword ptr [rsi], 0x6824f43f ; xchg eax, edi ; ret
0x00000000004c1035 : adc dword ptr [rsi], edx ; pxor xmm2, xmm2 ; ret
0x000000000041cf8c : adc eax, 0x10c48348 ; pop rbx ; ret
0x00000000004faac5 : adc eax, 0x1d2136be ; sub eax, edi ; ret 0x6dc0
0x00000000004fa803 : adc eax, 0x2710841a ; xor al, 0xb0 ; ret 0xa613
0x00000000004845e9 : adc eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x0000000000406a03 : adc eax, 0x34fda8 ; ret
0x000000000043c317 : adc eax, 0x39fffe05 ; ret
0x000000000050549a : adc eax, 0x699a1c2d ; and ebp, edi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; ret 0x779c
0x00000000005167f7 : adc eax, 0x95fb1887 ; mov cl, ah ; int 0xc3
0x00000000004fea3e : adc eax, 0xa72d001e ; ret
0x000000000051211a : adc eax, 0xad49bdbd ; ret
0x00000000004f7afe : adc eax, 0xadf8c391 ; pop rdi ; ret 0xd710
0x0000000000529e2d : adc eax, 0xaf440001 ; int1 ; call rsp
0x0000000000465284 : adc eax, 0xc085fffa ; jle 0x465299 ; pop rbx ; ret
0x000000000055058d : adc eax, 0xc4e00002 ; cmc ; jmp qword ptr [rdi]
0x00000000005115b7 : adc eax, 0xd707d642 ; sub bl, bh ; ret
0x00000000005151ad : adc eax, dword ptr [rax - 2] ; ret
0x000000000053033d : adc eax, dword ptr [rax] ; add al, dl ; pop rbp ; in eax, dx ; jmp qword ptr [rax]
0x00000000004a8b93 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000053037d : adc eax, dword ptr [rax] ; add byte ptr [rax], dl ; pop rsi ; in eax, dx ; call qword ptr [rax]
0x000000000041fca8 : adc eax, dword ptr [rbx + 0x440f13f8] ; ret 0x3145
0x0000000000436924 : adc eax, dword ptr [rbx - 0x7cb7fe3f] ; ret 0x3901
0x000000000053033c : adc eax, dword ptr fs:[rax] ; add al, dl ; pop rbp ; in eax, dx ; jmp qword ptr [rax]
0x0000000000518ea2 : adc ebp, dword ptr [rsi] ; adc ecx, ecx ; ret 0x15a3
0x0000000000478ccd : adc ebp, ebx ; ret
0x0000000000424131 : adc ebx, dword ptr [rbx + 0x48] ; mov dword ptr [rdi], eax ; ret
0x00000000004491b6 : adc ebx, dword ptr [rbx + 0x48] ; xor eax, edx ; ret
0x000000000050394d : adc ebx, dword ptr [rdx] ; std ; cmp byte ptr [rax - 0x2b], bh ; push rdi ; ret 0xb9d9
0x000000000051180e : adc ebx, ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; ret 0x3c61
0x0000000000421b18 : adc ebx, esi ; ret
0x000000000048e099 : adc ecx, dword ptr [rax + 0x63] ; salc ; mov esi, 7 ; call rax
0x00000000004030f1 : adc ecx, dword ptr [rax - 0x75] ; adc dh, dh ; ret 0x7501
0x0000000000460527 : adc ecx, dword ptr [rax - 0x77] ; ret
0x0000000000407416 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000050ba3b : adc ecx, dword ptr [rbp - 0x66aec903] ; ret
0x0000000000513b14 : adc ecx, dword ptr [rbx - 0x5c] ; cmp dword ptr [rbp - 0x59], edi ; ret
0x0000000000503305 : adc ecx, dword ptr [rbx] ; call qword ptr [rsi]
0x00000000004851ae : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x4101
0x0000000000425682 : adc ecx, dword ptr [rdi] ; enter 0x4489, 0x15 ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000041fcab : adc ecx, dword ptr [rdi] ; ret 0x3145
0x000000000050273b : adc ecx, dword ptr [rdi] ; ret 0x3453
0x00000000004e60ac : adc ecx, ebx ; ret
0x0000000000518ea4 : adc ecx, ecx ; ret 0x15a3
0x00000000004f72ed : adc edi, 0x2c208dfd ; pop rbp ; ret
0x00000000004f9f84 : adc edi, edi ; ret 0xa4e6
0x000000000047b75b : adc edi, esp ; add al, byte ptr [rax] ; add rsp, 0x18 ; ret
0x000000000040fda5 : adc edx, 0 ; mov r10, rdx ; mov rax, r10 ; ret
0x000000000050d01b : adc edx, dword ptr [rbp + 7] ; ret 0xa3cf
0x0000000000492b55 : adc edx, dword ptr [rbx] ; xor eax, 0x2fececc3 ; ret
0x0000000000492b51 : adc edx, dword ptr [rbx] ; xor eax, 0x35131326 ; ret
0x0000000000492b54 : adc edx, dword ptr es:[rbx] ; xor eax, 0x2fececc3 ; ret
0x0000000000492b50 : adc edx, dword ptr es:[rbx] ; xor eax, 0x35131326 ; ret
0x0000000000518061 : adc edx, edx ; out dx, eax ; ret 0xd875
0x000000000044a0ac : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000492b56 : adc esi, dword ptr [rip + 0x2fececc3] ; ret
0x0000000000492b52 : adc esi, dword ptr [rip + 0x35131326] ; ret
0x0000000000501d88 : adc esi, ebp ; ret 0xb687
0x0000000000543131 : adc esi, ebx ; jmp rsp
0x0000000000551a09 : adc esi, esi ; call qword ptr [rcx]
0x00000000004a488c : adc esi, esi ; ret
0x00000000004f9d38 : adc esp, dword ptr [rax + rsi*8 - 0x73] ; sub dword ptr [rsi], esi ; ret 0xfa3e
0x00000000004c1dcd : adc esp, dword ptr [rax] ; mov r10, rax ; jmp 0x4c1de4
0x00000000004c8e58 : adc esp, eax ; jrcxz 0x4c8eda ; ret 0xc400
0x00000000004c8ed8 : adc esp, eax ; jrcxz 0x4c8f5a ; ret 0xc400
0x00000000004ca2dc : adc esp, eax ; ret
0x000000000045527c : adc qword ptr [rdi + 0x88], r10 ; ret
0x00000000004274d1 : adc r11b, r14b ; ret
0x00000000004c1dcc : adc r12, qword ptr [rax] ; mov r10, rax ; jmp 0x4c1de5
0x000000000052ede7 : add ah, ah ; call 0xffffffffc3c7eded
0x000000000054ecbb : add ah, ah ; cld ; add dword ptr [rax], eax ; and byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000052c15f : add ah, ah ; cmp ch, dh ; jmp rsp
0x000000000052eb27 : add ah, ah ; idiv al ; call rsp
0x000000000052d93f : add ah, ah ; jg 0x52d93e ; call rsp
0x000000000052c597 : add ah, ah ; jne 0x52c594 ; call rsp
0x000000000052a9bf : add ah, ah ; jno 0x52a9b9 ; jmp rsp
0x000000000052cbff : add ah, ah ; loop 0x52cbfc ; call rsp
0x000000000052caff : add ah, ah ; loopne 0x52cafc ; call rsp
0x000000000054a7bb : add ah, ah ; mov bh, 1 ; add byte ptr [rax], dl ; sub esp, esi ; jmp rdx
0x000000000052e40f : add ah, ah ; mov dr1, eax ; call rsp
0x000000000052d597 : add ah, ah ; or bh, dh ; jmp rsp
0x000000000053f8bb : add ah, ah ; or byte ptr [rcx], al ; add al, al ; jge 0x53f8bd ; jmp qword ptr [rsi]
0x00000000005289f7 : add ah, ah ; out dx, eax ; call rsp
0x000000000052c3d7 : add ah, ah ; push rcx ; cmc ; jmp rsp
0x000000000052c9a7 : add ah, ah ; ret
0x000000000053b2bb : add ah, ah ; ret 0
0x00000000005280d7 : add ah, ah ; ret 0xffed
0x000000000054e9bb : add ah, ah ; stc ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; call rsp
0x0000000000531cbb : add ah, ah ; sub al, 0 ; add byte ptr [rax - 0x32], ah ; in eax, dx ; jmp rcx
0x000000000052b8c7 : add ah, ah ; xchg eax, edx ; hlt ; jmp rsp
0x000000000052e19f : add ah, ah ; xor al, 0xf8 ; jmp rsp
0x000000000055339b : add ah, al ; add al, byte ptr [r8] ; xor byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x000000000054549b : add ah, al ; add dword ptr fs:[rax], eax ; mov al, 0x66 ; call qword ptr [rbx]
0x0000000000552c9b : add ah, al ; cmp al, 2 ; add al, al ; cmp esi, esi ; call qword ptr [rbx]
0x0000000000529837 : add ah, al ; int1 ; call rsp
0x000000000052edef : add ah, al ; jmp 0xffffffffc427edf5
0x000000000054d39b : add ah, al ; jrcxz 0x54d3a8 ; add byte ptr [rax + 0x30], dl ; cmc ; call qword ptr [rdx]
0x000000000052d9ff : add ah, al ; mov esi, edi ; jmp rsp
0x0000000000432ef6 : add ah, al ; ret
0x000000000053b29b : add ah, al ; ret 0
0x000000000045d1b9 : add ah, al ; ret 0xf7cb
0x000000000054089b : add ah, al ; sbb byte ptr [rcx], al ; add byte ptr [rax], ah ; stosd dword ptr [rdi], eax ; call qword ptr [rdi]
0x00000000005339d3 : add ah, bh ; add byte ptr [r8], al ; js 0x533999 ; out dx, al ; jmp rcx
0x00000000005455d3 : add ah, bh ; add dword ptr gs:[rax], eax ; fsub dword ptr [rsi - 0xd] ; call qword ptr [rax]
0x000000000054ecd3 : add ah, bh ; cld ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x0000000000532bd3 : add ah, bh ; cmp eax, dword ptr [rax] ; add byte ptr [rax], bl ; xchg eax, esi ; out dx, al ; call rax
0x0000000000542bd3 : add ah, bh ; cmp eax, dword ptr [rcx] ; add byte ptr [rax], bl ; add al, 0xf3 ; jmp qword ptr [rcx]
0x000000000054d3d3 : add ah, bh ; jrcxz 0x54d3e0 ; add byte ptr [rax], bh ; xor ebp, esi ; call qword ptr [rdx]
0x000000000054ded3 : add ah, bh ; out dx, al ; add dword ptr [rax], eax ; test al, 0x4b ; cmc ; call qword ptr [rsi]
0x000000000054b3d3 : add ah, bh ; ret
0x00000000005533b3 : add ah, bl ; add al, byte ptr [r8] ; cmp byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x0000000000552cb3 : add ah, bl ; cmp al, 2 ; add al, cl ; cmp esi, esi ; jmp qword ptr [rbx]
0x000000000052fbb3 : add ah, bl ; or eax, dword ptr [rax] ; add al, bh ; push rax ; in eax, dx ; jmp qword ptr [rax]
0x0000000000548cb3 : add ah, bl ; pushfq ; add dword ptr [rax], eax ; sub cl, ch ; call qword ptr [rcx]
0x000000000053570f : add ah, byte ptr [rax + 0xa] ; ret
0x000000000053c235 : add ah, byte ptr [rbp + 0xa] ; ret
0x000000000053254a : add ah, byte ptr [rbx + 0xa] ; ret
0x000000000054f3e2 : add ah, byte ptr [rcx + 0xa] ; ret
0x000000000050d801 : add ah, byte ptr [rcx + rbp*8 - 0x74] ; lodsd eax, dword ptr [rsi] ; ret 0x82b3
0x0000000000429466 : add ah, byte ptr [rcx] ; ret 0x144
0x0000000000429379 : add ah, byte ptr [rcx] ; ret 0x7ec5
0x000000000053eb8e : add ah, byte ptr [rdx + 0xa] ; ret
0x0000000000537c85 : add ah, byte ptr [rsi + 0xa] ; ret
0x00000000004bf35c : add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x00000000004be413 : add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret 0x4466
0x000000000047d0e0 : add ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0x000000000052f5c3 : add ah, ch ; add eax, 0x3ae80000 ; in eax, dx ; call qword ptr [rcx]
0x000000000054eac3 : add ah, ch ; cli ; add dword ptr [rax], eax ; js 0x54eb42 ; cmc ; call qword ptr [rsi]
0x0000000000536bc3 : add ah, ch ; jnp 0x536bcf ; add byte ptr [rax], cl ; sub dh, al ; jmp rsp
0x000000000054b6c3 : add ah, ch ; mov byte ptr [rcx], 0 ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rax]
0x000000000053fac3 : add ah, ch ; or al, byte ptr [rcx] ; add byte ptr [rax], bh ; test dh, dl ; jmp rax
0x0000000000544dc3 : add ah, ch ; pop rbp ; add dword ptr [rax], eax ; fsub dword ptr [rbp - 0xd] ; jmp qword ptr [rcx]
0x000000000054b2c3 : add ah, ch ; ret 1
0x0000000000540dc3 : add ah, ch ; sbb eax, 0xb8b80001 ; jmp qword ptr [rsi]
0x00000000005471a3 : add ah, cl ; add dword ptr [rcx], 0xf3a7f800 ; jmp rbx
0x00000000005455a3 : add ah, cl ; add dword ptr gs:[rax], eax ; fsub dword ptr [rsi - 0xd] ; call qword ptr [rax]
0x00000000005510a3 : add ah, cl ; and byte ptr [rdx], al ; add al, cl ; add dh, dh ; jmp qword ptr [rdx]
0x000000000054eca3 : add ah, cl ; cld ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000050c968 : add ah, cl ; jbe 0x50c94e ; rcr eax, 1 ; ret
0x000000000054fba3 : add ah, cl ; or eax, dword ptr [rdx] ; add byte ptr [rax], cl ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000005444a3 : add ah, cl ; push rsp ; add dword ptr [rax], eax ; cmp byte ptr [rsi - 0xd], bl ; call rsi
0x00000000005319a3 : add ah, cl ; sub dword ptr [rax], eax ; add byte ptr [rax - 0x39], ch ; in eax, dx ; call qword ptr [rcx]
0x000000000052b147 : add ah, dh ; add ah, dh ; jmp rsp
0x00000000005434cb : add ah, dh ; add dword ptr [rax], r8d ; xor ebx, esi ; jmp qword ptr [rdx]
0x0000000000552ccb : add ah, dh ; cmp al, 2 ; add al, ah ; cmp esi, esi ; call qword ptr [rbx]
0x000000000052b50f : add ah, dh ; hlt ; jmp rsp
0x000000000053e1cb : add ah, dh ; int1 ; add byte ptr [rax], al ; ret 0xfff1
0x00000000004ed20c : add ah, dh ; int1 ; in al, dx ; ret 0xe63
0x0000000000528c6f : add ah, dh ; jb 0x528c66 ; call rsp
0x000000000052b149 : add ah, dh ; jmp rsp
0x000000000052cd27 : add ah, dh ; or dh, dh ; call rsp
0x0000000000528637 : add ah, dh ; pop rcx ; out dx, al ; jmp rsp
0x000000000052ef37 : add ah, dh ; pop rsp ; cli ; call rsp
0x000000000052c987 : add ah, dh ; ret 0xfff5
0x000000000052dcbf : add ah, dh ; ret 0xfff7
0x000000000052ab87 : add ah, dh ; sal dl, 1 ; jmp rsp
0x0000000000540bcb : add ah, dh ; sbb eax, dword ptr [rcx] ; add byte ptr [rax], dh ; mov dl, 0xf2 ; jmp qword ptr [rdx]
0x000000000054ebcb : add ah, dh ; sti ; add dword ptr [rax], eax ; sal byte ptr [rax - 0xb], 1 ; call qword ptr [rsi]
0x000000000052d08f : add ah, dh ; sub esi, esi ; jmp rsp
0x000000000052c79f : add ah, dh ; xchg eax, esi ; cmc ; jmp rsp
0x00000000005434ab : add ah, dl ; add dword ptr [rax], r8d ; xor byte ptr [rcx], dh ; jmp qword ptr [rdx]
0x000000000054f1ab : add ah, dl ; add dword ptr [rdx], eax ; add byte ptr [rax - 0x7c], dl ; cmc ; call qword ptr [rbx]
0x0000000000528dcf : add ah, dl ; cdq ; out dx, eax ; jmp qword ptr [rbx + rax*8]
0x000000000052b0ff : add ah, dl ; cld ; call rsp
0x000000000054eaab : add ah, dl ; cli ; add dword ptr [rax], eax ; jo 0x54eb2a ; cmc ; call qword ptr [rsi]
0x000000000054ceab : add ah, dl ; fiadd word ptr [rcx] ; add al, dl ; sub ch, dh ; call rcx
0x000000000052848f : add ah, dl ; int1 ; in eax, dx ; jmp rsp
0x000000000052b687 : add ah, dl ; jb 0x52b683 ; jmp rsp
0x0000000000546dab : add ah, dl ; jge 0x546db8 ; add byte ptr [rax], al ; pushfq ; call qword ptr [rdx]
0x000000000052b9f7 : add ah, dl ; lahf ; hlt ; call rsp
0x000000000053d2ab : add ah, dl ; loop 0x53d2b7 ; add byte ptr [rax + 0x38], dh ; int1 ; call qword ptr [rdi]
0x00000000005282f7 : add ah, dl ; loopne 0x5282ec ; call rsp
0x000000000052dbaf : add ah, dl ; mov al, 0xf7 ; call rsp
0x000000000052bad7 : add ah, dl ; mov cl, 0xf4 ; jmp rsp
0x000000000052a487 : add ah, dl ; or dh, dl ; call rsp
0x0000000000528c1f : add ah, dl ; out dx, eax ; jmp rsp
0x0000000000529b4f : add ah, dl ; push 0xf1 ; jmp rsp
0x0000000000529187 : add ah, dl ; ret 0xffef
0x000000000054b2ab : add ah, dl ; ret 1
0x0000000000528edf : add ah, dl ; sahf ; out dx, eax ; jmp rsp
0x000000000052bfaf : add ah, dl ; sub esi, ebp ; jmp rsp
0x00000000005481ab : add ah, dl ; xchg eax, ecx ; add dword ptr [rax], eax ; rcl dl, 0xf3 ; call rax
0x00000000005321ab : add ah, dl ; xor dword ptr [rax], eax ; add byte ptr [rax + 0x73], dh ; out dx, al ; jmp qword ptr [rbx]
0x00000000005425ab : add ah, dl ; xor eax, 0xf2900001 ; call qword ptr [rcx]
0x000000000052a78f : add ah, dl ; xor esi, edx ; call rsp
0x0000000000432ef4 : add al, 0 ; add ah, al ; ret
0x000000000052f44d : add al, 0 ; add al, dl ; xor al, 0xed ; call rsp
0x0000000000458328 : add al, 0 ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x00000000004804a4 : add al, 0 ; add byte ptr [rax], al ; je 0x4804c7 ; ret
0x00000000004a7db3 : add al, 0 ; add byte ptr [rax], al ; mov esi, 6 ; call rax
0x00000000004a7e06 : add al, 0 ; add byte ptr [rax], al ; mov esi, 6 ; jmp rax
0x0000000000441c91 : add al, 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004950fd : add al, 0 ; add byte ptr [rax], al ; mov rsi, rbx ; call r14
0x00000000004a960e : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000044660c : add al, 0 ; add byte ptr [rax], al ; test eax, eax ; cmovne eax, edx ; jmp 0x4465ca
0x000000000044067e : add al, 0 ; add dh, dh ; ret 0xf02
0x000000000041c4a5 : add al, 0x11 ; jne 0x41c497 ; mov dword ptr [rdi], r10d ; ret
0x00000000004cdb62 : add al, 0x17 ; je 0x4cdb76 ; xor eax, eax ; ret
0x00000000004cdb82 : add al, 0x17 ; je 0x4cdb96 ; xor eax, eax ; ret
0x00000000004f582c : add al, 0x18 ; adc dl, byte ptr [rbx - 0x7b] ; jmp 0xffffffffc2b85a51
0x00000000004a8472 : add al, 0x18 ; je 0x4a8486 ; xor eax, eax ; ret
0x00000000004a8492 : add al, 0x18 ; je 0x4a84a6 ; xor eax, eax ; ret
0x000000000051200a : add al, 0x1b ; xor eax, dword ptr [rip + 0x3398db0f] ; ret
0x00000000004a8ba4 : add al, 0x1c ; je 0x4a8bb5 ; ret
0x000000000050e989 : add al, 0x1c ; push rbp ; salc ; mov esp, 0xffe87f6a ; ret
0x0000000000490667 : add al, 0x21 ; ret 0xf41
0x000000000042e160 : add al, 0x24 ; add esp, eax ; ret
0x0000000000478b74 : add al, 0x24 ; call rbx
0x0000000000445552 : add al, 0x24 ; jmp 0x445538
0x000000000052b2e0 : add al, 0x28 ; hlt ; jmp rsp
0x00000000004a797b : add al, 0x29 ; ret
0x000000000046898c : add al, 0x29 ; ret 0x3941
0x000000000043d6d8 : add al, 0x2b ; add al, 0xf3 ; ret
0x000000000052b308 : add al, 0x2c ; hlt ; call rsp
0x00000000004f1fe3 : add al, 0x37 ; sbb eax, 0x2a8d03ec ; ret
0x00000000004a1a20 : add al, 0x39 ; ret
0x000000000052eea8 : add al, 0x3c ; cli ; call rsp
0x00000000004b2445 : add al, 0x45 ; test eax, eax ; je 0x4b2458 ; xor eax, eax ; ret
0x00000000004b2444 : add al, 0x45 ; test eax, eax ; je 0x4b2459 ; xor eax, eax ; ret
0x0000000000480913 : add al, 0x48 ; add eax, 0x756e80 ; ret
0x000000000042466b : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a605e : add al, 0x48 ; lea esi, dword ptr [rsp + 0x40] ; mov edi, dword ptr [rdi] ; call rax
0x000000000044922d : add al, 0x48 ; mov dword ptr [rdx + rax*8], edi ; ret
0x000000000041d921 : add al, 0x48 ; mov eax, dword ptr [rax + 0x10] ; add rsp, 0x38 ; jmp rax
0x000000000044e313 : add al, 0x48 ; mov eax, dword ptr [rax + 0x4eb7e0] ; ret
0x00000000004875c2 : add al, 0x48 ; mov eax, dword ptr [rdx + 8] ; pop rbx ; ret
0x000000000043e6fc : add al, 0x48 ; mov edi, eax ; mov rdx, qword ptr [rax + 0x38] ; jmp rdx
0x0000000000505fe4 : add al, 0x55 ; scasd eax, dword ptr [rdi] ; ret
0x00000000005346dc : add al, 0x57 ; add byte ptr [rax], al ; loopne 0x5346c0 ; out dx, al ; call qword ptr [rbx]
0x0000000000424b8b : add al, 0x5b ; ret
0x0000000000544ddc : add al, 0x5e ; add dword ptr [rax], eax ; call qword ptr gs:[rbx]
0x0000000000535adc : add al, 0x6b ; add byte ptr [rax], al ; loopne 0x535ad4 ; out dx, eax ; jmp qword ptr [rdx]
0x00000000005417b7 : add al, 0x6c ; ret
0x000000000053a347 : add al, 0x6f ; ret
0x0000000000484d6a : add al, 0x70 ; and eax, 1 ; ret
0x0000000000542e8f : add al, 0x72 ; ret
0x000000000041498f : add al, 0x72 ; shr eax, cl ; and eax, 0x1f ; ret
0x000000000045a4e5 : add al, 0x74 ; or bl, dh ; ret
0x00000000004f5381 : add al, 0x74 ; pop rdi ; ret
0x00000000004875c0 : add al, 0x75 ; add al, 0x48 ; mov eax, dword ptr [rdx + 8] ; pop rbx ; ret
0x000000000052ad50 : add al, 0x85 ; jmp rsp
0x0000000000494cd9 : add al, 0x89 ; add ecx, dword ptr [rax - 0x3f] ; clc ; and byte ptr [rax + 1], cl ; ret 0x438b
0x00000000004bacf5 : add al, 0x89 ; ret 0x8941
0x00000000004663ea : add al, 0x89 ; ret 0x8944
0x00000000004bf5e4 : add al, 0x89 ; ret 0xc148
0x00000000004bd292 : add al, 0x8b ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000404763 : add al, 0x90 ; ret
0x000000000050414f : add al, 0x94 ; cli ; ret 0xeca0
0x000000000040448a : add al, 0x96 ; xor rax, rcx ; ret
0x0000000000528dc8 : add al, 0x99 ; out dx, eax ; call rsp
0x00000000004eea00 : add al, 0x9b ; push rax ; ret
0x000000000052e528 : add al, 0x9d ; clc ; call rsp
0x000000000044fc58 : add al, 0x9f ; push rcx ; add byte ptr [rax + 0xf], cl ; ret 0xc748
0x000000000052ab08 : add al, 0xa6 ; call rsp
0x000000000043ea68 : add al, 0xb0 ; ret
0x000000000052c900 : add al, 0xb3 ; cmc ; jmp rsp
0x00000000004ffe85 : add al, 0xb4 ; pop rax ; xchg eax, ebx ; xor al, 0xcc ; ret
0x00000000004a8c5c : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000475368 : add al, 0xb8 ; mov ecx, 0xf480051 ; ret 0xc5f6
0x000000000048f562 : add al, 0xbe ; or byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048e332 : add al, 0xbe ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000004c7f69 : add al, 0xc1 ; ret 0x4c08
0x000000000054b4dc : add al, 0xc5 ; add dword ptr [rax], eax ; test al, 0xf4 ; jmp qword ptr [rax]
0x00000000004b35f2 : add al, 0xc5 ; loopne 0x4b3674 ; jne 0x4b35fe ; ret
0x000000000050379d : add al, 0xc5 ; loopne 0x503799 ; ret 0x77fc
0x000000000054b9dc : add al, 0xca ; add dword ptr [rax], eax ; ret
0x0000000000402b5a : add al, 0xd0 ; shr rax, cl ; and eax, 1 ; ret
0x00000000004f4c0d : add al, 0xe7 ; jmp qword ptr [rdi]
0x000000000052e9f8 : add al, 0xe8 ; clc ; jmp rsp
0x0000000000516a1b : add al, 0xea ; cdq ; rcr byte ptr [rdi], 0xfd ; sub ch, cl ; in al, dx ; ret
0x000000000054dcdc : add al, 0xed ; add dword ptr [rax], eax ; jo 0x54dd2d ; cmc ; call qword ptr [rax]
0x0000000000479803 : add al, 0xf ; mov dh, 0xb6 ; ret 0x51
0x00000000004729db : add al, 0xf ; test byte ptr [rdx], al ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000041c85b : add al, 0xf0 ; ret
0x0000000000542bd9 : add al, 0xf3 ; jmp qword ptr [rcx]
0x000000000040605b : add al, 0xf3 ; ret
0x000000000052ec99 : add al, 0xf9 ; call rsp
0x0000000000490758 : add al, 0xfc ; jmp 0x4906f2
0x00000000004410bc : add al, 0xfd ; insb byte ptr [rdi], dx ; add bl, r14b ; ret
0x000000000040613e : add al, 0xfd ; sbb dword ptr [rbp], ecx ; ret
0x00000000004431ae : add al, 0xfd ; shr byte ptr [rcx + 0x75], 0 ; ret
0x000000000040706b : add al, 0xff ; loopne 0x4070db ; nop ; ret
0x000000000040708b : add al, 0xff ; loopne 0x4070fc ; nop ; xor eax, eax ; ret
0x000000000053f44d : add al, 1 ; add byte ptr [rax + 0x6e], dh ; jmp qword ptr [rsi]
0x00000000004a53c1 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b3831 : add al, 1 ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000422277 : add al, 1 ; jne 0x422285 ; ret
0x0000000000422276 : add al, 1 ; jne 0x422286 ; ret
0x000000000047bdc2 : add al, 1 ; jne 0x47bdd5 ; ret
0x000000000047bdc1 : add al, 1 ; jne 0x47bdd6 ; ret
0x000000000053505f : add al, 2 ; pop rax ; ret
0x0000000000423b18 : add al, 2 ; ret
0x0000000000518572 : add al, 3 ; mov ebp, 0xb93ee2be ; nop ; leave ; ret 0x9a60
0x00000000004070ed : add al, 6 ; add rax, rdi ; ret
0x000000000045264c : add al, 7 ; sar eax, cl ; and eax, 1 ; ret
0x000000000054517f : add al, ah ; call qword ptr [rax]
0x0000000000552ccf : add al, ah ; cmp esi, esi ; call qword ptr [rbx]
0x000000000054ebff : add al, ah ; jo 0x54ebfc ; call qword ptr [rsi]
0x000000000053864f : add al, ah ; movsxd rsi, eax ; call qword ptr [rbx]
0x000000000042e5c7 : add al, ah ; ret
0x0000000000551d3f : add al, ah ; sbb dh, dh ; call qword ptr [rdx]
0x0000000000551eff : add al, ah ; sbb esi, esi ; call qword ptr [rcx]
0x00000000005346df : add al, ah ; xlatb ; out dx, al ; call qword ptr [rbx]
0x000000000052f18f : add al, ah ; xor ch, ch ; jmp qword ptr [rax]
0x000000000054520f : add al, al ; call qword ptr [rax]
0x00000000005454cf : add al, al ; call qword ptr [rbx]
0x0000000000552c9f : add al, al ; cmp esi, esi ; call qword ptr [rbx]
0x000000000053b64f : add al, al ; fcomi st(0) ; jmp qword ptr [rbx]
0x000000000053f8bf : add al, al ; jge 0x53f8b9 ; jmp qword ptr [rsi]
0x000000000054eb9f : add al, al ; jo 0x54eb9c ; call qword ptr [rsi]
0x0000000000530f5f : add al, al ; mov ch, ch ; call qword ptr [rdx]
0x000000000055176f : add al, al ; or al, 0xf6 ; jmp qword ptr [rdx]
0x0000000000533dbf : add al, al ; ret
0x000000000053e21f : add al, al ; ret 0xfff1
0x00000000005481af : add al, al ; sal bl, cl ; call rax
0x0000000000542a3f : add al, al ; sti ; jmp rbx
0x0000000000551a07 : add al, bh ; adc esi, esi ; call qword ptr [rcx]
0x0000000000545137 : add al, bh ; call qword ptr [rax]
0x00000000005372d7 : add al, bh ; cmp eax, esi ; jmp qword ptr [rdi]
0x00000000005471a7 : add al, bh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rbx
0x0000000000545757 : add al, bh ; jmp qword ptr [edi]
0x000000000054ec47 : add al, bh ; jo 0x54ec44 ; call qword ptr [rsi]
0x00000000005327b7 : add al, bh ; jp 0x5327ad ; call qword ptr [rsi]
0x0000000000532817 : add al, bh ; jp 0x53280d ; call qword ptr [rbx]
0x0000000000553d47 : add al, bh ; or esi, edi ; call rsi
0x0000000000530207 : add al, bh ; pop rbp ; in eax, dx ; call qword ptr [rdx]
0x000000000052fee7 : add al, bh ; pop rdx ; in eax, dx ; call qword ptr [rsi]
0x0000000000546ee7 : add al, bh ; popfq ; call rbx
0x000000000052fbb7 : add al, bh ; push rax ; in eax, dx ; jmp qword ptr [rax]
0x000000000053e257 : add al, bh ; ret
0x000000000053e767 : add al, bh ; sub edx, esi ; call qword ptr [rdi]
0x0000000000551a47 : add al, bl ; adc al, 0xf6 ; call qword ptr [rcx]
0x0000000000545197 : add al, bl ; call qword ptr [rax]
0x0000000000544dc7 : add al, bl ; jmp qword ptr gs:[rcx]
0x000000000054ebe7 : add al, bl ; jo 0x54ebe4 ; call qword ptr [rsi]
0x000000000041a8c6 : add al, bpl ; ret
0x000000000055333d : add al, byte ptr [r8] ; adc byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x000000000055330d : add al, byte ptr [r8] ; add byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x000000000055336d : add al, byte ptr [r8] ; and byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x00000000005533b5 : add al, byte ptr [r8] ; cmp byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x0000000000553325 : add al, byte ptr [r8] ; or byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x000000000052d6e5 : add al, byte ptr [r8] ; push rsp ; xor edi, esi ; call rsp
0x0000000000553355 : add al, byte ptr [r8] ; sbb byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x0000000000553385 : add al, byte ptr [r8] ; sub byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x000000000055339d : add al, byte ptr [r8] ; xor byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x000000000052df66 : add al, byte ptr [rax] ; adc al, 2 ; clc ; jmp rsp
0x000000000055333e : add al, byte ptr [rax] ; adc byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x000000000052eea6 : add al, byte ptr [rax] ; add al, 0x3c ; cli ; call rsp
0x000000000052e526 : add al, byte ptr [rax] ; add al, 0x9d ; clc ; call rsp
0x000000000052e9f6 : add al, byte ptr [rax] ; add al, 0xe8 ; clc ; jmp rsp
0x000000000052ec96 : add al, byte ptr [rax] ; add al, 0xf9 ; call rsp
0x0000000000457ad9 : add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x000000000044a388 : add al, byte ptr [rax] ; add byte ptr [rax + 1], bh ; ret
0x00000000004583f5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x3349
0x000000000044de03 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000405e83 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc748
0x00000000004921ce : add al, byte ptr [rax] ; add byte ptr [rax - 9], cl ; ret 0xf
0x0000000000402a75 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3908
0x0000000000408d4d : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4408
0x000000000044705d : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000475475 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x000000000046ea70 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov byte ptr [rsp + 1], al ; call r12
0x0000000000486f02 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x000000000046ce92 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004b3352 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000465540 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041e336 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004b229c : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000041f3aa : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000405532 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000055330e : add al, byte ptr [rax] ; add byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x000000000045891a : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], al ; dec dword ptr [rax - 0x77] ; ret 0xc148
0x00000000004a4648 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000405871 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x840f
0x000000000041b774 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; lahf ; ret 0x854d
0x00000000004729fa : add al, byte ptr [rax] ; add dh, dh ; ret
0x000000000052ec46 : add al, byte ptr [rax] ; add edi, ecx ; jmp rsp
0x000000000047b61a : add al, byte ptr [rax] ; add rsp, 0x18 ; ret
0x00000000004489a3 : add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000000000052e326 : add al, byte ptr [rax] ; and al, 0x62 ; clc ; jmp rsp
0x000000000052e34e : add al, byte ptr [rax] ; and al, 0x64 ; clc ; call rsp
0x000000000052e676 : add al, byte ptr [rax] ; and al, 0xb3 ; clc ; jmp rsp
0x000000000055336e : add al, byte ptr [rax] ; and byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x0000000000551a06 : add al, byte ptr [rax] ; clc ; adc esi, esi ; call qword ptr [rcx]
0x000000000052e22e : add al, byte ptr [rax] ; clc ; call rsp
0x0000000000553d46 : add al, byte ptr [rax] ; clc ; or esi, edi ; call rsi
0x00000000005533b6 : add al, byte ptr [rax] ; cmp byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x0000000000550c96 : add al, byte ptr [rax] ; cmp dl, ah ; cmc ; jmp qword ptr [rbx]
0x0000000000551636 : add al, byte ptr [rax] ; cwde ; or dh, dh ; call qword ptr [rbx]
0x0000000000550736 : add al, byte ptr [rax] ; cwde ; sal ch, 1 ; call rbx
0x0000000000550486 : add al, byte ptr [rax] ; fadd st(1) ; cmc ; jmp rsi
0x0000000000551a46 : add al, byte ptr [rax] ; fcom dword ptr [rsi + rsi*8] ; call qword ptr [rcx]
0x0000000000550b76 : add al, byte ptr [rax] ; fdivr st(5), st(0) ; jmp rsi
0x000000000052cd26 : add al, byte ptr [rax] ; hlt ; or dh, dh ; call rsp
0x000000000052ef36 : add al, byte ptr [rax] ; hlt ; pop rsp ; cli ; call rsp
0x000000000052dcbe : add al, byte ptr [rax] ; hlt ; ret 0xfff7
0x000000000052d08e : add al, byte ptr [rax] ; hlt ; sub esi, esi ; jmp rsp
0x000000000052cbfe : add al, byte ptr [rax] ; in al, -0x1e ; cmc ; call rsp
0x000000000052cafe : add al, byte ptr [rax] ; in al, -0x20 ; cmc ; call rsp
0x000000000052e40e : add al, byte ptr [rax] ; in al, -0x72 ; clc ; call rsp
0x000000000052eb26 : add al, byte ptr [rax] ; in al, -0xa ; clc ; call rsp
0x000000000052e19e : add al, byte ptr [rax] ; in al, 0x34 ; clc ; jmp rsp
0x000000000052d876 : add al, byte ptr [rax] ; jbe 0x52d877 ; call rsp
0x000000000052e296 : add al, byte ptr [rax] ; je 0x52e2eb ; clc ; call rsp
0x000000000052e7be : add al, byte ptr [rax] ; je 0x52e787 ; clc ; jmp rsp
0x000000000052cbae : add al, byte ptr [rax] ; loop 0x52cbad ; jmp rsp
0x000000000055058e : add al, byte ptr [rax] ; loopne 0x55055b ; cmc ; jmp qword ptr [rdi]
0x000000000052e456 : add al, byte ptr [rax] ; mov ah, 0x90 ; clc ; call rsp
0x000000000052e71e : add al, byte ptr [rax] ; mov ah, 0xb9 ; clc ; jmp rsp
0x000000000052ca56 : add al, byte ptr [rax] ; mov ah, 0xcd ; cmc ; jmp rsp
0x000000000052ed86 : add al, byte ptr [rax] ; mov ah, 0xcf ; stc ; jmp rsp
0x0000000000550406 : add al, byte ptr [rax] ; mov cl, al ; cmc ; call qword ptr [rbx]
0x000000000043d2e0 : add al, byte ptr [rax] ; mov rax, qword ptr [rbx + 0x20] ; pop rbx ; ret
0x000000000052eade : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; clc ; jmp rsp
0x0000000000553bee : add al, byte ptr [rax] ; nop ; jl 0x553bee ; jmp qword ptr [rbx]
0x000000000055173e : add al, byte ptr [rax] ; nop ; or al, 0xf6 ; jmp qword ptr [rbx]
0x000000000055161e : add al, byte ptr [rax] ; nop ; or dh, dh ; call qword ptr [rbx]
0x00000000004490b9 : add al, byte ptr [rax] ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000048b4cb : add al, byte ptr [rax] ; nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x00000000005514ee : add al, byte ptr [rax] ; or byte ptr [rax], 0xf6 ; call qword ptr [rsi]
0x0000000000553326 : add al, byte ptr [rax] ; or byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x00000000005528ae : add al, byte ptr [rax] ; push rax ; sub al, 0xf6 ; jmp qword ptr [rdx]
0x000000000054f1ae : add al, byte ptr [rax] ; push rax ; test dh, ch ; call qword ptr [rbx]
0x000000000054f16e : add al, byte ptr [rax] ; push rax ; test dh, ch ; jmp qword ptr [rdi]
0x000000000052d39e : add al, byte ptr [rax] ; push rsp ; jge 0x52d39e ; jmp rsp
0x000000000052e5ae : add al, byte ptr [rax] ; push rsp ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; call rsp
0x000000000052d446 : add al, byte ptr [rax] ; push rsp ; ret 0xfff6
0x000000000052d6e6 : add al, byte ptr [rax] ; push rsp ; xor edi, esi ; call rsp
0x000000000052dcb6 : add al, byte ptr [rax] ; ret 0xfff7
0x0000000000552c9e : add al, byte ptr [rax] ; sar byte ptr [rcx], 0xf6 ; call qword ptr [rbx]
0x0000000000553356 : add al, byte ptr [rax] ; sbb byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x0000000000553386 : add al, byte ptr [rax] ; sub byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x0000000000550356 : add al, byte ptr [rax] ; sub cl, al ; cmc ; call qword ptr [rbx]
0x000000000052db6e : add al, byte ptr [rax] ; test al, 0xf7 ; jmp rsp
0x000000000052e7de : add al, byte ptr [rax] ; test al, ah ; clc ; jmp rsp
0x000000000052e2be : add al, byte ptr [rax] ; test byte ptr [rax - 8], bl ; jmp rsp
0x000000000052ef9e : add al, byte ptr [rax] ; test byte ptr [rdx - 6], dh ; jmp rsp
0x000000000052ecbe : add al, byte ptr [rax] ; test byte ptr [rdx], cl ; stc ; jmp rsp
0x000000000052ce9e : add al, byte ptr [rax] ; test byte ptr [rsi + rsi*8], ah ; call rsp
0x000000000052e25e : add al, byte ptr [rax] ; test byte ptr [rsi - 8], al ; jmp rsp
0x000000000052cabe : add al, byte ptr [rax] ; xchg eax, esp ; fcompi st(5) ; jmp rsp
0x000000000052e6e6 : add al, byte ptr [rax] ; xchg eax, esp ; mov dh, 0xf8 ; call rsp
0x000000000052e8ce : add al, byte ptr [rax] ; xchg eax, esp ; sar al, cl ; call rsp
0x000000000052d6be : add al, byte ptr [rax] ; xchg eax, esp ; sub al, 0xf7 ; jmp rsp
0x000000000052ed26 : add al, byte ptr [rax] ; xor al, 0x1c ; stc ; jmp rsp
0x000000000052ee86 : add al, byte ptr [rax] ; xor al, 0x35 ; cli ; jmp rsp
0x000000000055339e : add al, byte ptr [rax] ; xor byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x0000000000439bee : add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000040908c : add al, byte ptr [rcx - 0x77] ; ret 0xe883
0x000000000041dfc9 : add al, byte ptr [rcx - 1] ; push rdx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000041dc41 : add al, byte ptr [rcx - 1] ; push rdx ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000005430b8 : add al, byte ptr [rdi + 0xa] ; ret
0x0000000000530ae0 : add al, byte ptr [rdx + 0x43280e0a] ; ret
0x000000000053c25d : add al, byte ptr [rdx] ; jo 0x53c26f ; ret
0x000000000053487d : add al, byte ptr [rdx] ; ret
0x000000000053fade : add al, byte ptr [rdx] ; stosd dword ptr [rdi], eax ; ret
0x000000000053f07e : add al, byte ptr [rsi + rcx + 0x18] ; ret
0x000000000054cd40 : add al, byte ptr [rsi + rcx + 0x28] ; ret
0x000000000053a5e8 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x000000000052d39d : add al, byte ptr cs:[rax] ; push rsp ; jge 0x52d39f ; jmp rsp
0x0000000000551635 : add al, byte ptr es:[rax] ; cwde ; or dh, dh ; call qword ptr [rbx]
0x000000000055161d : add al, byte ptr es:[rax] ; nop ; or dh, dh ; call qword ptr [rbx]
0x000000000055333c : add al, byte ptr fs:[r8] ; adc byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x00000000004a4647 : add al, byte ptr gs:[rax] ; add byte ptr [rcx], bh ; ret
0x000000000043d309 : add al, ch ; adc dword ptr [rbx - 0x3fce0004], eax ; pop rbx ; ret
0x0000000000450499 : add al, ch ; adc dword ptr [rcx - 5], 0x5bc031ff ; ret
0x0000000000479539 : add al, ch ; add dword ptr [rbx], esi ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000048c419 : add al, ch ; add dword ptr [rdx - 0x3fce0009], edx ; pop rbx ; ret
0x000000000043a4f9 : add al, ch ; and dword ptr [rcx - 0x3fce0004], esi ; pop rbx ; ret
0x000000000048b3f9 : add al, ch ; and dword ptr [rdx - 0x3fce0009], esp ; pop rbx ; ret
0x0000000000545167 : add al, ch ; call qword ptr [rax]
0x000000000052f5c7 : add al, ch ; cmp ch, ch ; call qword ptr [rcx]
0x000000000043bfe1 : add al, ch ; cmp dword ptr [rsi - 0x3fce0004], edx ; jmp 0x43bfb7
0x000000000047bfe1 : add al, ch ; cmp dword ptr [rsi - 0x3fce0008], edx ; pop rbx ; ret
0x000000000041d41c : add al, ch ; dec byte ptr [rdi - 0x27760002] ; pop rbx ; ret
0x00000000004475e7 : add al, ch ; jae 0x447642 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000053f2f7 : add al, ch ; jmp qword ptr gs:[rsi]
0x0000000000489ba1 : add al, ch ; jns 0x489b68 ; idiv edi ; xor eax, eax ; pop rbx ; ret
0x00000000004a0aa1 : add al, ch ; jns 0x4a0af9 ; idiv bh ; xor eax, eax ; jmp 0x4a0a77
0x000000000054ec17 : add al, ch ; jo 0x54ec14 ; call qword ptr [rsi]
0x000000000044d383 : add al, ch ; out -0x67, eax ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004b05cd : add al, ch ; pop rbp ; ret 0xfff6
0x00000000004892c1 : add al, ch ; pop rcx ; ret
0x00000000004897c8 : add al, ch ; push rdx ; mov esi, 0xc031fff7 ; pop rbx ; ret
0x000000000044937e : add al, ch ; pushfq ; ret 0xfffb
0x000000000040f457 : add al, ch ; ret
0x00000000004878a8 : add al, ch ; ret 0x204
0x000000000041c238 : add al, ch ; ret 0x25
0x0000000000444798 : add al, ch ; ret 0x276
0x00000000004a9af8 : add al, ch ; ret 0xf783
0x000000000048e298 : add al, ch ; ret 0xf902
0x0000000000480168 : add al, ch ; ret 0xfa38
0x0000000000442558 : add al, ch ; ret 0xfc30
0x0000000000442458 : add al, ch ; ret 0xfc31
0x0000000000441358 : add al, ch ; ret 0xfc42
0x0000000000457558 : add al, ch ; ret 0xfff5
0x0000000000406658 : add al, ch ; ret 0xfffd
0x0000000000420cd8 : add al, ch ; ret 7
0x000000000048e059 : add al, ch ; sal dword ptr [rbp - 9], -1 ; xor eax, eax ; pop rbx ; ret
0x0000000000489e49 : add al, ch ; sal dword ptr [rdi - 0x3fce0009], 1 ; pop rbx ; ret
0x000000000043571d : add al, ch ; sbb eax, 0x8900001b ; ret 0xc031
0x0000000000533837 : add al, ch ; scasb al, byte ptr [rdi] ; out dx, al ; call rsp
0x000000000045a48c : add al, ch ; scasb al, byte ptr [rdi] ; ret
0x000000000043d521 : add al, ch ; stc ; cmp ah, 0xff ; xor eax, eax ; pop rbx ; ret
0x00000000004622bf : add al, ch ; wait ; ret 0xfffb
0x00000000004385e4 : add al, ch ; xchg byte ptr [rbp - 0x76b70004], bl ; ret
0x0000000000535fd7 : add al, cl ; add dh, al ; call rsp
0x00000000005510a7 : add al, cl ; add dh, dh ; jmp qword ptr [rdx]
0x00000000005451c7 : add al, cl ; call qword ptr [rax]
0x0000000000552cb7 : add al, cl ; cmp esi, esi ; jmp qword ptr [rbx]
0x00000000005487e7 : add al, cl ; fdivrp st(3) ; jmp qword ptr [rdi]
0x000000000054ebb7 : add al, cl ; jo 0x54ebb4 ; call qword ptr [rsi]
0x00000000005444f7 : add al, cl ; pop rsi ; jmp rax
0x000000000053e237 : add al, cl ; ret
0x000000000054514f : add al, dh ; call qword ptr [rax]
0x0000000000544ddf : add al, dh ; call qword ptr gs:[rbx]
0x000000000054ec2f : add al, dh ; jo 0x54ec2c ; call qword ptr [rsi]
0x00000000005327ff : add al, dh ; jp 0x5327f5 ; call qword ptr [rbx]
0x000000000053aa7f : add al, dh ; ret 0xfff0
0x000000000054d26f : add al, dh ; sub al, 0xf5 ; jmp rax
0x00000000005451af : add al, dl ; call qword ptr [rax]
0x0000000000546c0f : add al, dl ; cdq ; call qword ptr [rsi]
0x000000000054ebcf : add al, dl ; jo 0x54ebcc ; call qword ptr [rsi]
0x000000000053033f : add al, dl ; pop rbp ; in eax, dx ; jmp qword ptr [rax]
0x0000000000543cff : add al, dl ; push rax ; call qword ptr [rdx]
0x000000000054002f : add al, dl ; pushfq ; call qword ptr [rbx]
0x000000000054596a : add al, dl ; ret
0x0000000000533d5f : add al, dl ; ret 0xffee
0x000000000054ceaf : add al, dl ; sub ch, dh ; call rcx
0x000000000054cf7f : add al, dl ; sub dh, ch ; jmp rcx
0x000000000052f44f : add al, dl ; xor al, 0xed ; call rsp
0x000000000054352f : add al, dl ; xor ebx, esi ; call qword ptr [rax]
0x000000000044d382 : add al, r13b ; out -0x67, eax ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000449256 : add al, r13b ; ret
0x00000000004c7867 : add bh, ah ; mov dword ptr [rsi + rax - 4], edx ; ret
0x0000000000423bd3 : add bh, al ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000052df69 : add bh, al ; jmp rsp
0x00000000004a2603 : add bh, al ; pop r12 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a22cc : add bh, al ; pop r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000418bf7 : add bh, bh ; enter -0x1b8b, -0x3b ; clc ; ja 0x418bfc ; ret
0x000000000046558a : add bh, byte ptr [rax + 1] ; je 0x4655b9 ; pop rbx ; ret
0x000000000049fdaa : add bh, byte ptr [rax + 1] ; je 0x49fdd9 ; pop rbx ; ret
0x000000000049feda : add bh, byte ptr [rax + 1] ; je 0x49ff09 ; pop rbx ; ret
0x0000000000423efe : add bh, byte ptr [rax + 1] ; mov qword ptr [rdi], rdx ; ret
0x0000000000446bb6 : add bh, byte ptr [rax + 1] ; ret
0x00000000004a960c : add bh, byte ptr [rax + 4] ; ret
0x000000000054da4a : add bh, byte ptr [rbp + 0x41380e0a] ; ret
0x000000000047c8db : add bh, byte ptr [rcx - 0x5a41ffaf] ; ret 0x51
0x000000000046f4cc : add bh, byte ptr [rcx - 0x76b7ffaf] ; out dx, eax ; call rbx
0x000000000047fa49 : add bh, byte ptr [rcx - 0x76bbffaf] ; loop 0x47fa17 ; ret
0x000000000055182e : add bh, byte ptr [rsi + rcx + 0x28] ; ret
0x00000000004c7857 : add bh, dh ; mov word ptr [rsi + rax - 2], dx ; ret
0x0000000000478cb9 : add bh, dh ; ret 0
0x000000000040fec9 : add bh, dh ; ret 0xfffc
0x000000000041987f : add bh, dh ; salc ; and dword ptr [rdi + 0x20], esi ; ret
0x000000000044efaf : add bh, dh ; salc ; and dword ptr [rdi + 0x2c], esi ; ret
0x00000000004c1cb9 : add bh, dh ; sub r10, rax ; jmp 0x4c1cc4
0x00000000004fa898 : add bh, dl ; mov bl, 0xe0 ; test dword ptr [rax], ecx ; ret
0x00000000004f827b : add bh, dl ; ret
0x000000000050d58c : add bl, ah ; ret 0xcd52
0x000000000041e294 : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000004a9780 : add bl, al ; mov eax, 5 ; ret
0x00000000004a977a : add bl, al ; mov eax, 6 ; ret
0x00000000004b23bc : add bl, al ; nop ; xor eax, eax ; ret
0x00000000004434e1 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000043a73b : add bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x00000000004b2063 : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000053e4f7 : add bl, al ; ret
0x000000000054111a : add bl, byte ptr [rax + 0xa] ; ret
0x0000000000532760 : add bl, byte ptr [rbp + 0x44280e0a] ; ret
0x0000000000530365 : add bl, byte ptr [rbx + 0xa] ; ret
0x0000000000531170 : add bl, byte ptr [rdi + 0xa] ; ret
0x000000000052f280 : add bl, byte ptr [rdx + 0x41280e0a] ; ret
0x0000000000532c88 : add bl, byte ptr [rsi + 0xa] ; ret
0x00000000005350ee : add bl, byte ptr [rsi + rcx + 0x18] ; ret
0x0000000000547e38 : add bl, byte ptr [rsi + rcx + 0x28] ; ret
0x000000000047270e : add bl, ch ; adc al, byte ptr [rdi + rcx - 0x4a] ; and cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x000000000046e85d : add bl, ch ; lahf ; xor eax, eax ; ret
0x00000000005128e9 : add bl, ch ; ret
0x0000000000402abd : add bl, ch ; ret 0xf685
0x0000000000405f6d : add bl, ch ; sar dword ptr [rax + 0x29], 1 ; ret
0x0000000000402113 : add bl, dh ; ret
0x0000000000504ee3 : add bl, dh ; ret 0xeccc
0x000000000040e0e8 : add bl, dl ; loopne 0x40e079 ; ret 0x550a
0x00000000004410c0 : add bl, r14b ; ret
0x0000000000406486 : add bl, sil ; ret
0x00000000005454fb : add byte ptr [0x66d00001], ah ; call qword ptr [rax]
0x00000000004ec3b9 : add byte ptr [r13 + 0x45e1daf2], r8b ; ret 0x5325
0x0000000000475df1 : add byte ptr [r13 - 0x7cb7fead], r9b ; ret
0x0000000000499b78 : add byte ptr [r8 + 0x39], r9b ; ret 0x8e0f
0x0000000000443e6a : add byte ptr [r8 + 0x39], r9b ; ret 0x8f0f
0x00000000004cae96 : add byte ptr [r8 + 0x63], r9b ; ret
0x00000000004346af : add byte ptr [r8 + 1], dil ; pop rbx ; ret
0x000000000047bc5c : add byte ptr [r8 - 0x77], r9b ; ret 0x894c
0x000000000041b50d : add byte ptr [r8 - 0x77], r9b ; ror dword ptr [rdi], 1 ; xchg eax, ebp ; ret 0x8341
0x0000000000425b82 : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000005339d5 : add byte ptr [r8], al ; js 0x533997 ; out dx, al ; jmp rcx
0x0000000000405759 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000533d5d : add byte ptr [r8], r8b ; rol dl, 1 ; out dx, al ; call rax
0x0000000000533f45 : add byte ptr [r8], r8b ; sbb dl, cl ; out dx, al ; call qword ptr [rdx]
0x00000000004b0548 : add byte ptr [r9 + r9*4 - 1], r9b ; call 0x41c7d7
0x00000000004a2a22 : add byte ptr [r9 + rcx*4 - 0x20], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044fd9f : add byte ptr [r9], r14b ; ror byte ptr [rcx + rcx*4 - 1], 0xe8 ; ret 0xfffc
0x000000000040615d : add byte ptr [r9], r15b ; sar dword ptr [rsi + 5], cl ; pop rbx ; ret
0x0000000000490dd0 : add byte ptr [r9], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054312f : add byte ptr [rax + 0x13], dh ; jmp rsp
0x000000000054a16f : add byte ptr [rax + 0x19], ah ; hlt ; call qword ptr [rax]
0x0000000000421d0f : add byte ptr [rax + 0x1a9], bh ; pop rbx ; ret
0x0000000000421c54 : add byte ptr [rax + 0x1e], bh ; pop rbx ; ret
0x00000000004490cf : add byte ptr [rax + 0x20], bh ; ret
0x00000000004b3e07 : add byte ptr [rax + 0x21], cl ; ja 0x4b3e29 ; ret
0x000000000054ceff : add byte ptr [rax + 0x29], ah ; cmc ; jmp rdi
0x00000000004250d8 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000004255e8 : add byte ptr [rax + 0x29], cl ; ret 0x14c
0x0000000000425d97 : add byte ptr [rax + 0x29], cl ; ret 0x3948
0x000000000041fe86 : add byte ptr [rax + 0x29], cl ; ret 0xc031
0x00000000004251e9 : add byte ptr [rax + 0x29], cl ; ret 0xf74
0x00000000004bdf70 : add byte ptr [rax + 0x2a], dh ; pop rdx ; cwde ; call 0x7854a233
0x000000000054a85f : add byte ptr [rax + 0x2d], dh ; hlt ; call rbx
0x000000000054d39f : add byte ptr [rax + 0x30], dl ; cmc ; call qword ptr [rdx]
0x00000000005434cf : add byte ptr [rax + 0x31], al ; jmp qword ptr [rdx]
0x0000000000461c4c : add byte ptr [rax + 0x35], bh ; jne 0x461c73 ; ret
0x000000000052f4fb : add byte ptr [rax + 0x37000000], ah ; in eax, dx ; jmp qword ptr [rax]
0x000000000054d797 : add byte ptr [rax + 0x37], bh ; cmc ; jmp qword ptr [rdi]
0x000000000042030e : add byte ptr [rax + 0x38478b48], dl ; ret
0x000000000053d2af : add byte ptr [rax + 0x38], dh ; int1 ; call qword ptr [rdi]
0x000000000043abaf : add byte ptr [rax + 0x39], cl ; ret
0x0000000000499b79 : add byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000443e6b : add byte ptr [rax + 0x39], cl ; ret 0x8f0f
0x00000000004a3bb8 : add byte ptr [rax + 0x39], cl ; ret 0xd775
0x0000000000475f2b : add byte ptr [rax + 0x39], cl ; sar dword ptr [rsi + 2], -0x77 ; ret 0x8b48
0x000000000044a36f : add byte ptr [rax + 0x40], bh ; ret
0x000000000046ea73 : add byte ptr [rax + 0x41012444], cl ; call rsp
0x000000000054dcdf : add byte ptr [rax + 0x44], dh ; cmc ; call qword ptr [rax]
0x000000000054dd6f : add byte ptr [rax + 0x45], dh ; cmc ; jmp qword ptr [rdi]
0x000000000040216f : add byte ptr [rax + 0x4d0230], bh ; ret
0x000000000040617f : add byte ptr [rax + 0x4d17bf], bh ; ret
0x0000000000421a3f : add byte ptr [rax + 0x4e50c0], bh ; ret
0x0000000000421a2f : add byte ptr [rax + 0x4e5140], bh ; ret
0x0000000000421a1f : add byte ptr [rax + 0x4e51c0], bh ; ret
0x0000000000421a0f : add byte ptr [rax + 0x4e5240], bh ; ret
0x00000000004219ff : add byte ptr [rax + 0x4e52c0], bh ; ret
0x000000000054ae1f : add byte ptr [rax + 0x4e], dl ; hlt ; jmp qword ptr [rdx]
0x0000000000454fdf : add byte ptr [rax + 0x4f0620], bh ; ret
0x000000000045a12f : add byte ptr [rax + 0x4f1400], bh ; ret
0x000000000045c4ef : add byte ptr [rax + 0x4f3000], bh ; ret
0x000000000045c4ee : add byte ptr [rax + 0x4f3000], dil ; ret
0x0000000000543e37 : add byte ptr [rax + 0x51], bh ; call qword ptr [rbx]
0x0000000000543e07 : add byte ptr [rax + 0x51], ch ; call qword ptr [rbx]
0x0000000000543e1f : add byte ptr [rax + 0x51], dh ; call qword ptr [rbx]
0x0000000000478bdf : add byte ptr [rax + 0x51c1b1], bh ; ret
0x0000000000478bef : add byte ptr [rax + 0x51c1c6], bh ; ret
0x0000000000478bff : add byte ptr [rax + 0x51c1d3], bh ; ret
0x0000000000478c0f : add byte ptr [rax + 0x51c1e6], bh ; ret
0x0000000000478c1f : add byte ptr [rax + 0x51c1fc], bh ; ret
0x0000000000478c2f : add byte ptr [rax + 0x51c209], bh ; ret
0x000000000049118f : add byte ptr [rax + 0x5210b8], bh ; ret
0x0000000000494b5f : add byte ptr [rax + 0x5211c0], bh ; ret
0x0000000000494b4f : add byte ptr [rax + 0x5211e0], bh ; ret
0x0000000000494b3f : add byte ptr [rax + 0x521200], bh ; ret
0x0000000000494b2f : add byte ptr [rax + 0x521220], bh ; ret
0x000000000049879f : add byte ptr [rax + 0x5216c0], bh ; ret
0x0000000000498ccf : add byte ptr [rax + 0x521800], bh ; ret
0x000000000049ccbf : add byte ptr [rax + 0x522380], bh ; ret
0x00000000004a3acf : add byte ptr [rax + 0x522ee0], bh ; ret
0x00000000004a3a9f : add byte ptr [rax + 0x522f40], bh ; ret
0x00000000004a3a8f : add byte ptr [rax + 0x522fa0], bh ; ret
0x00000000004a3a7f : add byte ptr [rax + 0x523000], bh ; ret
0x00000000004a3a6f : add byte ptr [rax + 0x523060], bh ; ret
0x00000000004a3a5f : add byte ptr [rax + 0x5230c0], bh ; ret
0x00000000004a3a4f : add byte ptr [rax + 0x523120], bh ; ret
0x00000000004a3a3f : add byte ptr [rax + 0x523180], bh ; ret
0x00000000004a3a2f : add byte ptr [rax + 0x5231e0], bh ; ret
0x00000000004a3a1f : add byte ptr [rax + 0x523240], bh ; ret
0x00000000004a3a0f : add byte ptr [rax + 0x5232a0], bh ; ret
0x00000000004a5e5f : add byte ptr [rax + 0x523480], bh ; ret
0x00000000004a5e4f : add byte ptr [rax + 0x5234e0], bh ; ret
0x00000000004a5e3f : add byte ptr [rax + 0x523540], bh ; ret
0x00000000004a5e2b : add byte ptr [rax + 0x523600], bh ; cmove rax, rdx ; ret
0x00000000004a5e0b : add byte ptr [rax + 0x5236c0], bh ; cmove rax, rdx ; ret
0x00000000004a5deb : add byte ptr [rax + 0x523780], bh ; cmove rax, rdx ; ret
0x00000000004a5dcb : add byte ptr [rax + 0x523840], bh ; cmove rax, rdx ; ret
0x00000000004a5dab : add byte ptr [rax + 0x523900], bh ; cmove rax, rdx ; ret
0x00000000004a5d8b : add byte ptr [rax + 0x5239c0], bh ; cmove rax, rdx ; ret
0x00000000004a5d6b : add byte ptr [rax + 0x523a80], bh ; cmove rax, rdx ; ret
0x00000000004a5d4b : add byte ptr [rax + 0x523b40], bh ; cmove rax, rdx ; ret
0x00000000004a5d2b : add byte ptr [rax + 0x523c00], bh ; cmove rax, rdx ; ret
0x00000000004a5d0b : add byte ptr [rax + 0x523cc0], bh ; cmove rax, rdx ; ret
0x00000000004a5ceb : add byte ptr [rax + 0x523d80], bh ; cmove rax, rdx ; ret
0x00000000004a5ccb : add byte ptr [rax + 0x523e40], bh ; cmove rax, rdx ; ret
0x00000000004a5cab : add byte ptr [rax + 0x523f00], bh ; cmove rax, rdx ; ret
0x00000000004a5c8b : add byte ptr [rax + 0x523fc0], bh ; cmove rax, rdx ; ret
0x00000000004a5c6b : add byte ptr [rax + 0x524080], bh ; cmove rax, rdx ; ret
0x00000000004a5c4b : add byte ptr [rax + 0x524140], bh ; cmove rax, rdx ; ret
0x00000000004a5c2b : add byte ptr [rax + 0x524200], bh ; cmove rax, rdx ; ret
0x00000000004a5c0b : add byte ptr [rax + 0x5242c0], bh ; cmove rax, rdx ; ret
0x00000000004a5beb : add byte ptr [rax + 0x524380], bh ; cmove rax, rdx ; ret
0x00000000004a5bcb : add byte ptr [rax + 0x524440], bh ; cmove rax, rdx ; ret
0x00000000004a5bab : add byte ptr [rax + 0x524500], bh ; cmove rax, rdx ; ret
0x00000000004a5b8b : add byte ptr [rax + 0x5245c0], bh ; cmove rax, rdx ; ret
0x00000000004a5b6b : add byte ptr [rax + 0x524680], bh ; cmove rax, rdx ; ret
0x00000000004a5b4b : add byte ptr [rax + 0x524740], bh ; cmove rax, rdx ; ret
0x00000000004a5b2b : add byte ptr [rax + 0x524800], bh ; cmove rax, rdx ; ret
0x00000000004a5b0b : add byte ptr [rax + 0x5248c0], bh ; cmove rax, rdx ; ret
0x00000000004a5aeb : add byte ptr [rax + 0x524980], bh ; cmove rax, rdx ; ret
0x00000000004a5acb : add byte ptr [rax + 0x524a40], bh ; cmove rax, rdx ; ret
0x00000000004a5aab : add byte ptr [rax + 0x524b00], bh ; cmove rax, rdx ; ret
0x00000000004a5e9f : add byte ptr [rax + 0x524b60], bh ; ret
0x00000000004a5c6d : add byte ptr [rax + 0x52], 0 ; cmove rax, rdx ; ret
0x00000000004a5b2d : add byte ptr [rax + 0x52], cl ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000544127 : add byte ptr [rax + 0x5a], ch ; jmp qword ptr [rbx]
0x0000000000423210 : add byte ptr [rax + 0x5b0b7501], ch ; ret
0x000000000054b027 : add byte ptr [rax + 0x5c], bh ; hlt ; jmp rsp
0x000000000054b00f : add byte ptr [rax + 0x5c], dh ; hlt ; call qword ptr [rcx]
0x0000000000544347 : add byte ptr [rax + 0x5d], ch ; jmp qword ptr [rbx]
0x000000000054432f : add byte ptr [rax + 0x5d], dl ; jmp qword ptr [rbx]
0x000000000054b147 : add byte ptr [rax + 0x60], bh ; hlt ; call qword ptr [rdi]
0x000000000054479f : add byte ptr [rax + 0x62], al ; call qword ptr [rbx]
0x00000000004498ce : add byte ptr [rax + 0x62b078b], dl ; ret
0x000000000046a78f : add byte ptr [rax + 0x63], cl ; adc al, 0x48 ; add esp, 8 ; ret
0x0000000000443e67 : add byte ptr [rax + 0x63], cl ; add byte ptr [r8 + 0x39], r9b ; ret 0x8f0f
0x000000000040849f : add byte ptr [rax + 0x63], cl ; ret
0x000000000045b54f : add byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000054508b : add byte ptr [rax + 0x67300001], dh ; call qword ptr [rax]
0x0000000000545073 : add byte ptr [rax + 0x67380001], bl ; call qword ptr [rax]
0x000000000054505b : add byte ptr [rax + 0x67400001], al ; call qword ptr [rax]
0x000000000054505f : add byte ptr [rax + 0x67], al ; call qword ptr [rax]
0x0000000000545017 : add byte ptr [rax + 0x67], bl ; call qword ptr [rax]
0x0000000000545047 : add byte ptr [rax + 0x67], cl ; call qword ptr [rax]
0x000000000054502f : add byte ptr [rax + 0x67], dl ; call qword ptr [rax]
0x000000000053f44f : add byte ptr [rax + 0x6e], dh ; jmp qword ptr [rsi]
0x000000000054ea7f : add byte ptr [rax + 0x70], ah ; cmc ; call qword ptr [rsi]
0x000000000054eac7 : add byte ptr [rax + 0x70], bh ; cmc ; call qword ptr [rsi]
0x000000000054ea67 : add byte ptr [rax + 0x70], bl ; cmc ; call qword ptr [rsi]
0x000000000054ea97 : add byte ptr [rax + 0x70], ch ; cmc ; call qword ptr [rsi]
0x000000000054eaaf : add byte ptr [rax + 0x70], dh ; cmc ; call qword ptr [rsi]
0x000000000054ea4f : add byte ptr [rax + 0x70], dl ; cmc ; call qword ptr [rsi]
0x00000000005321af : add byte ptr [rax + 0x73], dh ; out dx, al ; jmp qword ptr [rbx]
0x000000000042099f : add byte ptr [rax + 0x7568c0], bh ; ret
0x0000000000438e6f : add byte ptr [rax + 0x756980], bh ; ret
0x0000000000467c0f : add byte ptr [rax + 0x756aa0], bh ; ret
0x000000000046a2bf : add byte ptr [rax + 0x756b00], bh ; ret
0x0000000000485eef : add byte ptr [rax + 0x757040], bh ; ret
0x0000000000485edf : add byte ptr [rax + 0x7570a0], bh ; ret
0x000000000049f57f : add byte ptr [rax + 0x757500], bh ; ret
0x00000000004a0f3f : add byte ptr [rax + 0x7575e0], bh ; ret
0x00000000004a108f : add byte ptr [rax + 0x757640], bh ; ret
0x00000000004a1aff : add byte ptr [rax + 0x7576a0], bh ; ret
0x00000000004a664f : add byte ptr [rax + 0x757700], bh ; ret
0x00000000004a664e : add byte ptr [rax + 0x757700], dil ; ret
0x00000000004a75ef : add byte ptr [rax + 0x757760], bh ; ret
0x00000000004a7d6f : add byte ptr [rax + 0x7577c0], bh ; ret
0x00000000004a7d6e : add byte ptr [rax + 0x7577c0], dil ; ret
0x00000000004b81bf : add byte ptr [rax + 0x757c60], bh ; ret
0x000000000043a7bf : add byte ptr [rax + 0x759eb8], bh ; ret
0x00000000004a2a8b : add byte ptr [rax + 0x75a020], bh ; cmove rax, rdx ; ret
0x0000000000406199 : add byte ptr [rax + 0x75b4b8], bh ; ret
0x000000000044accc : add byte ptr [rax + 0x7789c609], al ; ret
0x0000000000532527 : add byte ptr [rax + 0x78], cl ; out dx, al ; call rbx
0x0000000000532887 : add byte ptr [rax + 0x7b], cl ; out dx, al ; jmp qword ptr [rbx]
0x000000000044318f : add byte ptr [rax + 0xc], bh ; ret
0x000000000043a176 : add byte ptr [rax + 0xf], al ; xchg eax, edi ; ret 0x8148
0x0000000000458262 : add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000452df5 : add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x000000000046f367 : add byte ptr [rax + 0xf], cl ; ret 0x4c89
0x00000000004a2a90 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040d83e : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000004a594f : add byte ptr [rax + 0xf], cl ; ret 0x85c7
0x0000000000406c06 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000047536d : add byte ptr [rax + 0xf], cl ; ret 0xc5f6
0x000000000044fc5b : add byte ptr [rax + 0xf], cl ; ret 0xc748
0x00000000004a594e : add byte ptr [rax + 0xf], r9b ; ret 0x85c7
0x00000000004a429c : add byte ptr [rax + 0xf], r9b ; ret 0x8948
0x0000000000421bd5 : add byte ptr [rax + 1], bh ; je 0x421c08 ; ret
0x0000000000484b89 : add byte ptr [rax + 1], bh ; je 0x484ba0 ; ret
0x0000000000421b11 : add byte ptr [rax + 1], bh ; jne 0x421b33 ; ret
0x000000000041a3be : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000402b1f : add byte ptr [rax + 1], bh ; ret
0x0000000000545043 : add byte ptr [rax + 1], ch ; add byte ptr [rax + 0x67], cl ; call qword ptr [rax]
0x0000000000445ec1 : add byte ptr [rax + 1], cl ; ret 0x42c6
0x0000000000424d67 : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x0000000000402ce6 : add byte ptr [rax + 1], dil ; ret
0x000000000054502b : add byte ptr [rax + 1], dl ; add byte ptr [rax + 0x67], dl ; call qword ptr [rax]
0x00000000004655be : add byte ptr [rax + 2], bh ; pop rbx ; ret
0x00000000004b33f7 : add byte ptr [rax + 3], bh ; ret
0x000000000040bf5a : add byte ptr [rax + 3], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x920f
0x00000000004b459f : add byte ptr [rax + 5], bh ; ret
0x0000000000535a07 : add byte ptr [rax + 5], ch ; out dx, eax ; call qword ptr [rbx]
0x0000000000535a2f : add byte ptr [rax + 6], ah ; out dx, eax ; call qword ptr [rbx]
0x0000000000549217 : add byte ptr [rax + 7], bh ; hlt ; jmp rsi
0x0000000000448add : add byte ptr [rax + 8], bh ; ret
0x00000000004808ef : add byte ptr [rax + 9], bh ; ret
0x0000000000458b6e : add byte ptr [rax + 9], cl ; ret 0x69e8
0x000000000054b023 : add byte ptr [rax + rax*8 + 1], cl ; add byte ptr [rax + 0x5c], bh ; hlt ; jmp rsp
0x000000000052e7bf : add byte ptr [rax + rax*8 - 8], dh ; jmp rsp
0x000000000054b00b : add byte ptr [rax + rax*8], dh ; add dword ptr [rax], eax ; jo 0x54b076 ; hlt ; call qword ptr [rcx]
0x000000000054b3cf : add byte ptr [rax + rax], al ; add ah, bh ; ret
0x000000000054b2bf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000053b37f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000053b27f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000054b277 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000053b237 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x000000000053b367 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000053b267 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000005357fb : add byte ptr [rax + rbp*2], ah ; add byte ptr [rax], al ; push rax ; std ; out dx, al ; jmp qword ptr [rbx]
0x000000000052db6f : add byte ptr [rax + rbp*4 - 9], al ; jmp rsp
0x000000000054d87b : add byte ptr [rax + rbp*8 + 0x37d00001], ah ; cmc ; jmp qword ptr [rbx]
0x000000000052e9f7 : add byte ptr [rax + rbp*8], al ; clc ; jmp rsp
0x000000000052b2df : add byte ptr [rax + rbp], al ; hlt ; jmp rsp
0x00000000005417eb : add byte ptr [rax + rbp], dl ; add dword ptr [rax], eax ; sbb bh, 0xf2 ; call qword ptr [rax]
0x00000000005296ff : add byte ptr [rax + rbp], dl ; int1 ; call rsp
0x0000000000540843 : add byte ptr [rax + rbx + 1], ch ; add byte ptr [rax - 0x56], bl ; call qword ptr [rdi]
0x000000000052b977 : add byte ptr [rax + rbx*4 - 0xc], dh ; jmp rsp
0x0000000000437859 : add byte ptr [rax + rcx - 9], dh ; ret 0xfeff
0x0000000000533833 : add byte ptr [rax + rcx*2], bl ; add al, ch ; scasb al, byte ptr [rdi] ; out dx, al ; call rsp
0x0000000000532883 : add byte ptr [rax + rdi + 0x7b480000], ch ; out dx, al ; jmp qword ptr [rbx]
0x000000000054a85b : add byte ptr [rax + rdi*4 + 0x2d700001], al ; hlt ; call rbx
0x000000000054e85b : add byte ptr [rax + rdi*8 + 0x69000001], al ; cmc ; jmp qword ptr [rbx]
0x000000000052a357 : add byte ptr [rax + rdi*8 - 0xf], dl ; jmp rsp
0x00000000005427fb : add byte ptr [rax + rdi], ah ; add dword ptr [rax], eax ; adc al, bh ; call qword ptr [rbx]
0x0000000000532813 : add byte ptr [rax + rdi], bh ; add byte ptr [rax], al ; clc ; jp 0x532811 ; call qword ptr [rbx]
0x000000000053282b : add byte ptr [rax + rdi], dl ; add byte ptr [rax], al ; jnp 0x532829 ; jmp qword ptr [rbx]
0x000000000054002b : add byte ptr [rax + rdx + 1], dl ; add al, dl ; pushfq ; call qword ptr [rbx]
0x000000000052878f : add byte ptr [rax + rdx - 0x11], dh ; jmp rsp
0x000000000052bd77 : add byte ptr [rax + rdx - 0xb], ah ; jmp rsp
0x00000000005299c7 : add byte ptr [rax + rdx*2], dl ; int1 ; jmp rsp
0x0000000000548063 : add byte ptr [rax + rdx*4 - 0x3307ffff], cl ; call qword ptr [rax]
0x000000000047d5bf : add byte ptr [rax + rdx*4 - 0x42], dh ; popfq ; ret
0x0000000000547fe3 : add byte ptr [rax + rdx*4], cl ; add dword ptr [rax], eax ; cmp ah, cl ; call rbx
0x00000000005351bf : add byte ptr [rax - 0x10], al ; out dx, al ; call qword ptr [rdi]
0x0000000000531f3f : add byte ptr [rax - 0x15], dl ; in eax, dx ; jmp qword ptr [rsi]
0x00000000004a2243 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x8948
0x0000000000407426 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x8b49
0x000000000040749b : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xbe
0x00000000004a1df3 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x0000000000548c0f : add byte ptr [rax - 0x18], ah ; call qword ptr [rdi]
0x0000000000541d3f : add byte ptr [rax - 0x1a], al ; call qword ptr [rdi]
0x0000000000550b77 : add byte ptr [rax - 0x24], cl ; cmc ; jmp rsi
0x0000000000534187 : add byte ptr [rax - 0x2c], bh ; out dx, al ; jmp qword ptr [rcx]
0x0000000000548177 : add byte ptr [rax - 0x2e], ch ; jmp qword ptr [rbx]
0x000000000054815f : add byte ptr [rax - 0x2e], dl ; jmp qword ptr [rbx]
0x000000000054bc8f : add byte ptr [rax - 0x30], dl ; hlt ; call qword ptr [rbx]
0x0000000000531cbf : add byte ptr [rax - 0x32], ah ; in eax, dx ; jmp rcx
0x000000000053e32f : add byte ptr [rax - 0x37], dl ; int1 ; jmp rbx
0x0000000000531a07 : add byte ptr [rax - 0x39], bh ; in eax, dx ; call qword ptr [rax]
0x00000000005319a7 : add byte ptr [rax - 0x39], ch ; in eax, dx ; call qword ptr [rcx]
0x000000000045502e : add byte ptr [rax - 0x39], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000408b53 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000540f17 : add byte ptr [rax - 0x43], ch ; jmp qword ptr [rsi]
0x0000000000533a5f : add byte ptr [rax - 0x47], dh ; out dx, al ; jmp rcx
0x00000000005339d7 : add byte ptr [rax - 0x49], bh ; out dx, al ; jmp rcx
0x0000000000540bef : add byte ptr [rax - 0x4e], al ; jmp qword ptr [rsi]
0x000000000054b6c7 : add byte ptr [rax - 0x52], cl ; hlt ; jmp qword ptr [rax]
0x00000000005337f7 : add byte ptr [rax - 0x53], ch ; out dx, al ; call rsp
0x0000000000540847 : add byte ptr [rax - 0x56], bl ; call qword ptr [rdi]
0x000000000054b5a7 : add byte ptr [rax - 0x57], ch ; hlt ; call rbx
0x000000000054b4df : add byte ptr [rax - 0x58], al ; hlt ; jmp qword ptr [rax]
0x000000000054b4ff : add byte ptr [rax - 0x58], al ; hlt ; jmp qword ptr [rsi]
0x0000000000540447 : add byte ptr [rax - 0x59], bh ; call qword ptr [rsi]
0x0000000000547157 : add byte ptr [rax - 0x59], bl ; jmp rdi
0x00000000004f0897 : add byte ptr [rax - 0x59], cl ; ret 0xccd8
0x000000000054671f : add byte ptr [rax - 0x70], dl ; jmp rsp
0x00000000004ae86e : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [r8 - 0x7d] ; ret 0x4402
0x00000000004c666f : add byte ptr [rax - 0x73], cl ; jae 0x4c66dd ; lea rdi, qword ptr [rbx + 0x40] ; call rax
0x000000000046ec1d : add byte ptr [rax - 0x73], cl ; je 0x46ec4f ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000046ec6d : add byte ptr [rax - 0x73], cl ; je 0x46ec9f ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000046ecac : add byte ptr [rax - 0x73], cl ; je 0x46ecde ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000046604f : add byte ptr [rax - 0x73], cl ; jl 0x466080 ; adc al, ch ; ret 0xfff9
0x000000000048c5ef : add byte ptr [rax - 0x73], cl ; ret
0x00000000004b720f : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x77], r9b ; ja 0x4b7231 ; ret
0x000000000044554f : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; jmp 0x44553b
0x0000000000499b75 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 + 0x39], r9b ; ret 0x8e0f
0x0000000000425b7f : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004adeef : add byte ptr [rax - 0x75], cl ; add eax, 0x2a99d9 ; ret
0x000000000046a2df : add byte ptr [rax - 0x75], cl ; add eax, 0x2efcd9 ; ret
0x000000000040689f : add byte ptr [rax - 0x75], cl ; add eax, 0x351419 ; ret
0x000000000040786f : add byte ptr [rax - 0x75], cl ; add eax, 0x352061 ; ret
0x00000000004060ef : add byte ptr [rax - 0x75], cl ; add eax, 0x353771 ; ret
0x000000000040606f : add byte ptr [rax - 0x75], cl ; add eax, 0x3537e9 ; ret
0x0000000000405fef : add byte ptr [rax - 0x75], cl ; add eax, 0x353879 ; ret
0x0000000000405fdf : add byte ptr [rax - 0x75], cl ; add eax, 0x353891 ; ret
0x0000000000405f9f : add byte ptr [rax - 0x75], cl ; add eax, 0x3538a1 ; ret
0x0000000000405f8f : add byte ptr [rax - 0x75], cl ; add eax, 0x3538b9 ; ret
0x0000000000405f7f : add byte ptr [rax - 0x75], cl ; add eax, 0x3538d1 ; ret
0x000000000044012c : add byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044015f : add byte ptr [rax - 0x75], cl ; and al, 0x10 ; xor r13d, r13d ; call rax
0x0000000000407462 : add byte ptr [rax - 0x75], cl ; je 0x407494 ; or byte ptr [rcx], ch ; fidivr dword ptr [rcx] ; ret 0x8c0f
0x000000000047fdd7 : add byte ptr [rax - 0x75], cl ; jl 0x47fe08 ; adc byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000046581f : add byte ptr [rax - 0x75], cl ; js 0x465876 ; mov eax, dword ptr [rax + 0x18] ; jmp rax
0x000000000046582f : add byte ptr [rax - 0x75], cl ; js 0x465886 ; mov eax, dword ptr [rax + 8] ; jmp rax
0x000000000046583f : add byte ptr [rax - 0x75], cl ; js 0x465896 ; mov eax, dword ptr [rax + 0x10] ; jmp rax
0x0000000000446b2f : add byte ptr [rax - 0x75], cl ; or r11b, r8b ; xor eax, eax ; ret
0x000000000044ad9f : add byte ptr [rax - 0x75], cl ; pop r8 ; ret
0x000000000044ad8f : add byte ptr [rax - 0x75], cl ; push r8 ; ret
0x0000000000405b37 : add byte ptr [rax - 0x75], cl ; push rax ; add rsp, 8 ; jmp rax
0x0000000000408b4f : add byte ptr [rax - 0x75], cl ; push rbp ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044a6cf : add byte ptr [rax - 0x75], cl ; ret
0x000000000043e7b8 : add byte ptr [rax - 0x75], cl ; test rsi, rsi ; je 0x43e7f9 ; call rax
0x000000000043e948 : add byte ptr [rax - 0x75], cl ; test rsi, rsi ; je 0x43e989 ; call rdx
0x000000000048a96c : add byte ptr [rax - 0x76b7ffff], dl ; ret
0x0000000000408049 : add byte ptr [rax - 0x76beb38e], al ; ret 0x1b8
0x0000000000406a00 : add byte ptr [rax - 0x77], cl ; adc eax, 0x34fda8 ; ret
0x0000000000406b4b : add byte ptr [rax - 0x77], cl ; add dh, bl ; ret
0x00000000004702bd : add byte ptr [rax - 0x77], cl ; add dword ptr [rax + 1], edi ; ret
0x00000000004a9f5c : add byte ptr [rax - 0x77], cl ; and al, 0x18 ; xor eax, eax ; call r15
0x00000000004024f7 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004b74ff : add byte ptr [rax - 0x77], cl ; cmp eax, 0x2a2bf1 ; ret
0x00000000004b34b6 : add byte ptr [rax - 0x77], cl ; cmp eax, 0x2a4562 ; ret
0x00000000004adedf : add byte ptr [rax - 0x77], cl ; cmp eax, 0x2a99e9 ; ret
0x0000000000479d7f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x2dce61 ; ret
0x000000000046a2cf : add byte ptr [rax - 0x77], cl ; cmp eax, 0x2efce9 ; ret
0x0000000000469d1f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x2f0291 ; ret
0x0000000000467c1f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x2f2389 ; ret
0x0000000000437d6f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x322139 ; ret
0x000000000040785f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x352071 ; ret
0x00000000004060ff : add byte ptr [rax - 0x77], cl ; cmp eax, 0x353761 ; ret
0x000000000040601f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x353849 ; ret
0x0000000000405fcf : add byte ptr [rax - 0x77], cl ; cmp eax, 0x353871 ; ret
0x0000000000405fbf : add byte ptr [rax - 0x77], cl ; cmp eax, 0x353889 ; ret
0x0000000000405faf : add byte ptr [rax - 0x77], cl ; cmp eax, 0x3538a1 ; ret
0x000000000043f3f4 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004afe93 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x75] ; and al, 0x20 ; call rax
0x00000000004954ba : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; out dx, eax ; call r14
0x000000000046fc4e : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x00000000004a03c2 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret 0xffff
0x000000000045a2f7 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x38 ; call rax
0x0000000000404cde : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; ret
0x00000000004aa6c0 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rdi] ; xchg eax, edi ; ret 0x8348
0x0000000000407b25 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0x150
0x00000000004052c4 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000406036 : add byte ptr [rax - 0x77], cl ; ja 0x406048 ; ret
0x00000000004198bf : add byte ptr [rax - 0x77], cl ; ja 0x4198d1 ; ret
0x00000000004198cf : add byte ptr [rax - 0x77], cl ; ja 0x4198e9 ; ret
0x000000000041c2cf : add byte ptr [rax - 0x77], cl ; ja 0x41c2f1 ; ret
0x0000000000421dcf : add byte ptr [rax - 0x77], cl ; ja 0x421e39 ; ret
0x00000000004228ff : add byte ptr [rax - 0x77], cl ; ja 0x422931 ; ret
0x00000000004228ef : add byte ptr [rax - 0x77], cl ; ja 0x42293c ; mov dword ptr [rdi + 0x48], edx ; ret
0x000000000042295f : add byte ptr [rax - 0x77], cl ; ja 0x422971 ; ret
0x000000000042293f : add byte ptr [rax - 0x77], cl ; ja 0x422979 ; ret
0x000000000042296f : add byte ptr [rax - 0x77], cl ; ja 0x422989 ; ret
0x000000000042297f : add byte ptr [rax - 0x77], cl ; ja 0x4229a1 ; ret
0x000000000042298f : add byte ptr [rax - 0x77], cl ; ja 0x4229bd ; mov qword ptr [rdi + 0x28], rdx ; ret
0x000000000042299f : add byte ptr [rax - 0x77], cl ; ja 0x4229dd ; mov qword ptr [rdi + 0x38], rdx ; ret
0x00000000004229af : add byte ptr [rax - 0x77], cl ; ja 0x4229fd ; mov qword ptr [rdi + 0x48], rdx ; ret
0x00000000004229bf : add byte ptr [rax - 0x77], cl ; ja 0x422a1d ; mov qword ptr [rdi + 0x58], rdx ; ret
0x00000000004229cf : add byte ptr [rax - 0x77], cl ; ja 0x422a3d ; mov qword ptr [rdi + 0x68], rdx ; ret
0x00000000004229df : add byte ptr [rax - 0x77], cl ; ja 0x422a5d ; mov qword ptr [rdi + 0x78], rdx ; ret
0x000000000043808f : add byte ptr [rax - 0x77], cl ; ja 0x4380a1 ; ret
0x000000000043809f : add byte ptr [rax - 0x77], cl ; ja 0x4380b9 ; ret
0x00000000004380af : add byte ptr [rax - 0x77], cl ; ja 0x4380d1 ; ret
0x00000000004380ff : add byte ptr [rax - 0x77], cl ; ja 0x438131 ; ret
0x000000000043ea0f : add byte ptr [rax - 0x77], cl ; ja 0x43ea51 ; ret
0x000000000044778f : add byte ptr [rax - 0x77], cl ; ja 0x4477b9 ; ret
0x00000000004477bf : add byte ptr [rax - 0x77], cl ; ja 0x4477e1 ; ret
0x00000000004477df : add byte ptr [rax - 0x77], cl ; ja 0x447811 ; ret
0x000000000044a6af : add byte ptr [rax - 0x77], cl ; ja 0x44a6d9 ; ret
0x000000000044a6df : add byte ptr [rax - 0x77], cl ; ja 0x44a729 ; ret
0x000000000047213f : add byte ptr [rax - 0x77], cl ; ja 0x4721b9 ; ret
0x00000000004ab4df : add byte ptr [rax - 0x77], cl ; ja 0x4ab4f1 ; ret
0x00000000004ab4ff : add byte ptr [rax - 0x77], cl ; ja 0x4ab519 ; ret
0x00000000004ab51f : add byte ptr [rax - 0x77], cl ; ja 0x4ab541 ; ret
0x00000000004ab53f : add byte ptr [rax - 0x77], cl ; ja 0x4ab569 ; ret
0x00000000004b0e7f : add byte ptr [rax - 0x77], cl ; ja 0x4b0e99 ; ret
0x00000000004b0e8f : add byte ptr [rax - 0x77], cl ; ja 0x4b0eb1 ; ret
0x00000000004b0e9f : add byte ptr [rax - 0x77], cl ; ja 0x4b0ec9 ; ret
0x00000000004b185f : add byte ptr [rax - 0x77], cl ; ja 0x4b18a9 ; ret
0x00000000004b185e : add byte ptr [rax - 0x77], cl ; ja 0x4b18aa ; ret
0x00000000004b327f : add byte ptr [rax - 0x77], cl ; ja 0x4b32b1 ; ret
0x00000000004b328f : add byte ptr [rax - 0x77], cl ; ja 0x4b3301 ; ret
0x00000000004b5567 : add byte ptr [rax - 0x77], cl ; ja 0x4b55a1 ; ret
0x00000000004b5657 : add byte ptr [rax - 0x77], cl ; ja 0x4b5691 ; ret
0x00000000004607f4 : add byte ptr [rax - 0x77], cl ; jmp 0x4d08914a
0x0000000000410a84 : add byte ptr [rax - 0x77], cl ; jo 0x410adf ; mov dword ptr [rdi + 0x78], edx ; ret
0x0000000000418954 : add byte ptr [rax - 0x77], cl ; js 0x4189af ; mov eax, ebx ; ret
0x000000000048e337 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000046ebdc : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000404819 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000421b03 : add byte ptr [rax - 0x77], cl ; ret 0x2774
0x00000000004a0811 : add byte ptr [rax - 0x77], cl ; ret 0x2bf
0x00000000004583f7 : add byte ptr [rax - 0x77], cl ; ret 0x3349
0x00000000004ce7be : add byte ptr [rax - 0x77], cl ; ret 0x39e8
0x0000000000416b6f : add byte ptr [rax - 0x77], cl ; ret 0x62c4
0x0000000000425af7 : add byte ptr [rax - 0x77], cl ; ret 0x8588
0x000000000040f99d : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047bc5d : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000041ceb7 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000452bf8 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004398f4 : add byte ptr [rax - 0x77], cl ; ret 0x98be
0x0000000000425aa8 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000405e85 : add byte ptr [rax - 0x77], cl ; ret 0xc748
0x0000000000487549 : add byte ptr [rax - 0x77], cl ; ret 0xde89
0x0000000000441fa6 : add byte ptr [rax - 0x77], cl ; ret 0xdfe9
0x000000000041b50e : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], 1 ; xchg eax, ebp ; ret 0x8341
0x0000000000406008 : add byte ptr [rax - 0x77], cl ; sbb eax, 0x353868 ; pop rbx ; ret
0x0000000000422a36 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; enter 0, 0 ; ret
0x00000000004229f6 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000422a16 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000406a8a : add byte ptr [rax - 0x77], cl ; xor eax, 0x34fd36 ; ret
0x0000000000406a4a : add byte ptr [rax - 0x77], cl ; xor eax, 0x34fd5e ; ret
0x000000000048de4a : add byte ptr [rax - 0x77], r9b ; ret
0x000000000053fc87 : add byte ptr [rax - 0x78], ch ; jmp rbx
0x000000000053fbf7 : add byte ptr [rax - 0x78], cl ; jmp qword ptr [rsi]
0x0000000000421ebf : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi] ; ret
0x00000000004b13dc : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x40ba
0x000000000044f92a : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000437b47 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + 0x48], 0x89 ; ret 0x74be
0x000000000048993d : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x48], 0x89 ; ret
0x0000000000439b95 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax*2 + 0x48], 0x89 ; ret
0x0000000000420295 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rbx + 0x48], 0x89 ; ret
0x00000000004047df : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rbx*2 + 0x31], 0xff ; call qword ptr [rax]
0x00000000004b2324 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rcx + 0x48], cl ; mov edi, eax ; call rdx
0x0000000000463730 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbx + 0x48], 0x89 ; ret 0x6be
0x00000000004488a0 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rsi + 0x48], 0x89 ; ret
0x0000000000425c79 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x000000000054f1af : add byte ptr [rax - 0x7c], dl ; cmc ; call qword ptr [rbx]
0x000000000054f16f : add byte ptr [rax - 0x7c], dl ; cmc ; jmp qword ptr [rdi]
0x00000000004347a3 : add byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; ret
0x000000000048480f : add byte ptr [rax - 0x7d], cl ; jg 0x484825 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000404572 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402a79 : add byte ptr [rax - 0x7d], cl ; ret 0x3908
0x0000000000408d51 : add byte ptr [rax - 0x7d], cl ; ret 0x4408
0x0000000000472635 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000425688 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000040c5df : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047e1f7 : add byte ptr [rax - 0x7d], cl ; ret 0x4818
0x0000000000403cd6 : add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000481f51 : add byte ptr [rax - 0x7d], cl ; ret 0x4d0a
0x000000000048feda : add byte ptr [rax - 0x7d], cl ; ret 0xbe08
0x0000000000489de2 : add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x0000000000442a04 : add byte ptr [rax - 0x7d], cl ; ret 0xe902
0x00000000004858dd : add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x000000000041f33f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000448aaf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0x237e
0x0000000000468e8f : add byte ptr [rax - 0x7f], cl ; jmp rax
0x00000000004955b5 : add byte ptr [rax - 0x7f], cl ; ret 0x1500
0x00000000004c1829 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004a54bf : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000423657 : add byte ptr [rax - 1], bh ; ret
0x000000000043d15e : add byte ptr [rax - 1], dil ; ret
0x00000000004376cf : add byte ptr [rax - 2], bh ; pop rbx ; ret
0x000000000043d0ef : add byte ptr [rax - 2], bh ; ret
0x000000000054c917 : add byte ptr [rax - 2], bl ; hlt ; call rsp
0x00000000004376ce : add byte ptr [rax - 2], dil ; pop rbx ; ret
0x0000000000535817 : add byte ptr [rax - 3], ch ; out dx, al ; jmp qword ptr [rsi]
0x00000000005357ff : add byte ptr [rax - 3], dl ; out dx, al ; jmp qword ptr [rbx]
0x00000000004f0b47 : add byte ptr [rax - 6], al ; ret
0x0000000000474fdc : add byte ptr [rax - 6], dl ; push rsi ; ret
0x0000000000548df7 : add byte ptr [rax - 8], bl ; jmp rdi
0x00000000005355ef : add byte ptr [rax - 9], ah ; out dx, al ; jmp qword ptr [rax]
0x000000000047c42d : add byte ptr [rax - 9], cl ; ret
0x00000000004921d0 : add byte ptr [rax - 9], cl ; ret 0xf
0x00000000004b440f : add byte ptr [rax - 9], cl ; ret 0xfffb
0x000000000054b4fb : add byte ptr [rax*8 - 0x57bfffff], ah ; hlt ; jmp qword ptr [rsi]
0x000000000054b4db : add byte ptr [rax*8 - 0x57bfffff], al ; hlt ; jmp qword ptr [rax]
0x0000000000416fff : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000425c61 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x29], cl ; ret 0x14c
0x0000000000425d94 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x29], cl ; ret 0x3948
0x000000000043a713 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], bh ; ret
0x000000000041ca52 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c1826 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004b3e3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x28], esi ; ret
0x000000000044aceb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x48], esi ; ret
0x000000000041a0cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000043d58b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x000000000041985b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000004b327b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x28], rsi ; ret
0x000000000043808b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000004b721b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004024f3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000042096b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000437fcb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000406a0b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004729cc : add byte ptr [rax], 0 ; add dh, dh ; ret
0x000000000051f0e7 : add byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, al ; jmp 0x51f14d
0x00000000005450bf : add byte ptr [rax], ah ; call qword ptr [eax]
0x0000000000552d4f : add byte ptr [rax], ah ; cmp dh, dh ; call qword ptr [rbx]
0x0000000000532d8f : add byte ptr [rax], ah ; cwde ; out dx, al ; jmp qword ptr [rdx]
0x000000000052fa2f : add byte ptr [rax], ah ; in eax, dx ; call qword ptr [rsi]
0x000000000054ecbf : add byte ptr [rax], ah ; jno 0x54ecbc ; call qword ptr [rsi]
0x000000000053176f : add byte ptr [rax], ah ; ret 0xffed
0x000000000054fbef : add byte ptr [rax], ah ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rax]
0x000000000054089f : add byte ptr [rax], ah ; stosd dword ptr [rdi], eax ; call qword ptr [rdi]
0x00000000005526cf : add byte ptr [rax], ah ; sub dh, dh ; jmp rdx
0x000000000053b02e : add byte ptr [rax], al ; adc ah, 0xf0 ; call qword ptr [rax]
0x000000000054b2be : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000053b37e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000053b27e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000054b276 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000053b236 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x000000000053b366 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000053b266 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000540bea : add byte ptr [rax], al ; adc al, 0x1c ; add dword ptr [rax], eax ; mov dl, 0xf2 ; jmp qword ptr [rsi]
0x00000000005514ea : add byte ptr [rax], al ; adc al, 0x25 ; add al, byte ptr [rax] ; or byte ptr [rax], 0xf6 ; call qword ptr [rsi]
0x00000000005296ae : add byte ptr [rax], al ; adc al, 0x27 ; int1 ; jmp rsp
0x00000000005417ea : add byte ptr [rax], al ; adc al, 0x28 ; add dword ptr [rax], eax ; sbb bh, 0xf2 ; call qword ptr [rax]
0x00000000005296fe : add byte ptr [rax], al ; adc al, 0x28 ; int1 ; call rsp
0x0000000000553bea : add byte ptr [rax], al ; adc al, 0x4c ; add al, byte ptr [rax] ; nop ; jl 0x553bf2 ; jmp qword ptr [rbx]
0x00000000005299c6 : add byte ptr [rax], al ; adc al, 0x50 ; int1 ; jmp rsp
0x00000000005450ea : add byte ptr [rax], al ; adc al, 0x61 ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x00000000005479ea : add byte ptr [rax], al ; adc al, 0x8a ; add dword ptr [rax], eax ; add dl, 0xf3 ; jmp qword ptr [rdx]
0x000000000053baea : add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; push rax ; out -0x10, eax ; jmp rbx
0x000000000054ecea : add byte ptr [rax], al ; adc al, 0xfd ; add dword ptr [rax], eax ; xor byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000053d8be : add byte ptr [rax], al ; adc byte ptr [rbp - 0xf], ah ; jmp rax
0x000000000052ff2e : add byte ptr [rax], al ; adc byte ptr [rbx - 0x13], bl ; call qword ptr [rbx]
0x000000000053cd5e : add byte ptr [rax], al ; adc byte ptr [rdx], ah ; int1 ; call qword ptr [rbx]
0x000000000053037e : add byte ptr [rax], al ; adc byte ptr [rsi - 0x13], bl ; call qword ptr [rax]
0x000000000053033a : add byte ptr [rax], al ; adc eax, dword ptr fs:[rax] ; add al, dl ; pop rbp ; in eax, dx ; jmp qword ptr [rax]
0x000000000045527a : add byte ptr [rax], al ; adc qword ptr [rdi + 0x88], r10 ; ret
0x000000000053b3b9 : add byte ptr [rax], al ; add ah, ah ; ret
0x000000000053b2b9 : add byte ptr [rax], al ; add ah, ah ; ret 0
0x000000000053b399 : add byte ptr [rax], al ; add ah, al ; ret
0x000000000053b299 : add byte ptr [rax], al ; add ah, al ; ret 0
0x000000000054b3d1 : add byte ptr [rax], al ; add ah, bh ; ret
0x000000000054b2c1 : add byte ptr [rax], al ; add ah, ch ; ret 1
0x000000000053e1c9 : add byte ptr [rax], al ; add ah, dh ; int1 ; add byte ptr [rax], al ; ret 0xfff1
0x000000000054b2a9 : add byte ptr [rax], al ; add ah, dl ; ret 1
0x00000000005346da : add byte ptr [rax], al ; add al, 0x57 ; add byte ptr [rax], al ; loopne 0x5346c2 ; out dx, al ; call qword ptr [rbx]
0x0000000000544dda : add byte ptr [rax], al ; add al, 0x5e ; add dword ptr [rax], eax ; call qword ptr gs:[rbx]
0x0000000000535ada : add byte ptr [rax], al ; add al, 0x6b ; add byte ptr [rax], al ; loopne 0x535ad6 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000528dc6 : add byte ptr [rax], al ; add al, 0x99 ; out dx, eax ; call rsp
0x000000000054b4da : add byte ptr [rax], al ; add al, 0xc5 ; add dword ptr [rax], eax ; test al, 0xf4 ; jmp qword ptr [rax]
0x000000000054b9da : add byte ptr [rax], al ; add al, 0xca ; add dword ptr [rax], eax ; ret
0x000000000054dcda : add byte ptr [rax], al ; add al, 0xed ; add dword ptr [rax], eax ; jo 0x54dd2f ; cmc ; call qword ptr [rax]
0x0000000000553322 : add byte ptr [rax], al ; add al, byte ptr [r8] ; or byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x000000000055161a : add byte ptr [rax], al ; add al, byte ptr es:[rax] ; nop ; or dh, dh ; call qword ptr [rbx]
0x000000000055333a : add byte ptr [rax], al ; add al, byte ptr fs:[r8] ; adc byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x00000000004b05cb : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret 0xfff6
0x00000000004892bf : add byte ptr [rax], al ; add al, ch ; pop rcx ; ret
0x000000000044937c : add byte ptr [rax], al ; add al, ch ; pushfq ; ret 0xfffb
0x000000000040f455 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000041c236 : add byte ptr [rax], al ; add al, ch ; ret 0x25
0x0000000000444796 : add byte ptr [rax], al ; add al, ch ; ret 0x276
0x00000000004a9af6 : add byte ptr [rax], al ; add al, ch ; ret 0xf783
0x000000000048e296 : add byte ptr [rax], al ; add al, ch ; ret 0xf902
0x0000000000442556 : add byte ptr [rax], al ; add al, ch ; ret 0xfc30
0x0000000000442456 : add byte ptr [rax], al ; add al, ch ; ret 0xfc31
0x0000000000441356 : add byte ptr [rax], al ; add al, ch ; ret 0xfc42
0x0000000000406656 : add byte ptr [rax], al ; add al, ch ; ret 0xfffd
0x000000000043571b : add byte ptr [rax], al ; add al, ch ; sbb eax, 0x8900001b ; ret 0xc031
0x000000000045a48a : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x0000000000478cb7 : add byte ptr [rax], al ; add bh, dh ; ret 0
0x000000000040fec7 : add byte ptr [rax], al ; add bh, dh ; ret 0xfffc
0x000000000041987d : add byte ptr [rax], al ; add bh, dh ; salc ; and dword ptr [rdi + 0x20], esi ; ret
0x000000000044efad : add byte ptr [rax], al ; add bh, dh ; salc ; and dword ptr [rdi + 0x2c], esi ; ret
0x000000000041e292 : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000004a977e : add byte ptr [rax], al ; add bl, al ; mov eax, 5 ; ret
0x00000000004a9778 : add byte ptr [rax], al ; add bl, al ; mov eax, 6 ; ret
0x00000000004b23ba : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000004b2061 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000046e85b : add byte ptr [rax], al ; add bl, ch ; lahf ; xor eax, eax ; ret
0x0000000000402b22 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040e0e6 : add byte ptr [rax], al ; add bl, dl ; loopne 0x40e07b ; ret 0x550a
0x0000000000421c52 : add byte ptr [rax], al ; add byte ptr [rax + 0x1e], bh ; pop rbx ; ret
0x00000000004b3e05 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ja 0x4b3e2b ; ret
0x00000000004250d6 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000004255e6 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x14c
0x0000000000425d95 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x3948
0x000000000041fe84 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xc031
0x00000000004a3bb6 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xd775
0x000000000046ea71 : add byte ptr [rax], al ; add byte ptr [rax + 0x41012444], cl ; call rsp
0x000000000040216d : add byte ptr [rax], al ; add byte ptr [rax + 0x4d0230], bh ; ret
0x000000000040617d : add byte ptr [rax], al ; add byte ptr [rax + 0x4d17bf], bh ; ret
0x0000000000421a3d : add byte ptr [rax], al ; add byte ptr [rax + 0x4e50c0], bh ; ret
0x0000000000421a2d : add byte ptr [rax], al ; add byte ptr [rax + 0x4e5140], bh ; ret
0x0000000000421a1d : add byte ptr [rax], al ; add byte ptr [rax + 0x4e51c0], bh ; ret
0x0000000000421a0d : add byte ptr [rax], al ; add byte ptr [rax + 0x4e5240], bh ; ret
0x00000000004219fd : add byte ptr [rax], al ; add byte ptr [rax + 0x4e52c0], bh ; ret
0x000000000045a12d : add byte ptr [rax], al ; add byte ptr [rax + 0x4f1400], bh ; ret
0x0000000000478bdd : add byte ptr [rax], al ; add byte ptr [rax + 0x51c1b1], bh ; ret
0x0000000000478bed : add byte ptr [rax], al ; add byte ptr [rax + 0x51c1c6], bh ; ret
0x0000000000478bfd : add byte ptr [rax], al ; add byte ptr [rax + 0x51c1d3], bh ; ret
0x0000000000478c0d : add byte ptr [rax], al ; add byte ptr [rax + 0x51c1e6], bh ; ret
0x0000000000478c1d : add byte ptr [rax], al ; add byte ptr [rax + 0x51c1fc], bh ; ret
0x0000000000478c2d : add byte ptr [rax], al ; add byte ptr [rax + 0x51c209], bh ; ret
0x000000000049118d : add byte ptr [rax], al ; add byte ptr [rax + 0x5210b8], bh ; ret
0x0000000000494b5d : add byte ptr [rax], al ; add byte ptr [rax + 0x5211c0], bh ; ret
0x0000000000494b4d : add byte ptr [rax], al ; add byte ptr [rax + 0x5211e0], bh ; ret
0x0000000000494b3d : add byte ptr [rax], al ; add byte ptr [rax + 0x521200], bh ; ret
0x0000000000494b2d : add byte ptr [rax], al ; add byte ptr [rax + 0x521220], bh ; ret
0x000000000049879d : add byte ptr [rax], al ; add byte ptr [rax + 0x5216c0], bh ; ret
0x0000000000498ccd : add byte ptr [rax], al ; add byte ptr [rax + 0x521800], bh ; ret
0x000000000049ccbd : add byte ptr [rax], al ; add byte ptr [rax + 0x522380], bh ; ret
0x00000000004a3acd : add byte ptr [rax], al ; add byte ptr [rax + 0x522ee0], bh ; ret
0x00000000004a3a9d : add byte ptr [rax], al ; add byte ptr [rax + 0x522f40], bh ; ret
0x00000000004a3a8d : add byte ptr [rax], al ; add byte ptr [rax + 0x522fa0], bh ; ret
0x00000000004a3a7d : add byte ptr [rax], al ; add byte ptr [rax + 0x523000], bh ; ret
0x00000000004a3a6d : add byte ptr [rax], al ; add byte ptr [rax + 0x523060], bh ; ret
0x00000000004a3a5d : add byte ptr [rax], al ; add byte ptr [rax + 0x5230c0], bh ; ret
0x00000000004a3a4d : add byte ptr [rax], al ; add byte ptr [rax + 0x523120], bh ; ret
0x00000000004a3a3d : add byte ptr [rax], al ; add byte ptr [rax + 0x523180], bh ; ret
0x00000000004a3a2d : add byte ptr [rax], al ; add byte ptr [rax + 0x5231e0], bh ; ret
0x00000000004a3a1d : add byte ptr [rax], al ; add byte ptr [rax + 0x523240], bh ; ret
0x00000000004a3a0d : add byte ptr [rax], al ; add byte ptr [rax + 0x5232a0], bh ; ret
0x00000000004a5e5d : add byte ptr [rax], al ; add byte ptr [rax + 0x523480], bh ; ret
0x00000000004a5e4d : add byte ptr [rax], al ; add byte ptr [rax + 0x5234e0], bh ; ret
0x00000000004a5e3d : add byte ptr [rax], al ; add byte ptr [rax + 0x523540], bh ; ret
0x00000000004a5e9d : add byte ptr [rax], al ; add byte ptr [rax + 0x524b60], bh ; ret
0x000000000042320e : add byte ptr [rax], al ; add byte ptr [rax + 0x5b0b7501], ch ; ret
0x00000000004498cc : add byte ptr [rax], al ; add byte ptr [rax + 0x62b078b], dl ; ret
0x0000000000438e6d : add byte ptr [rax], al ; add byte ptr [rax + 0x756980], bh ; ret
0x0000000000467c0d : add byte ptr [rax], al ; add byte ptr [rax + 0x756aa0], bh ; ret
0x0000000000485eed : add byte ptr [rax], al ; add byte ptr [rax + 0x757040], bh ; ret
0x000000000049f57d : add byte ptr [rax], al ; add byte ptr [rax + 0x757500], bh ; ret
0x00000000004a0f3d : add byte ptr [rax], al ; add byte ptr [rax + 0x7575e0], bh ; ret
0x00000000004a108d : add byte ptr [rax], al ; add byte ptr [rax + 0x757640], bh ; ret
0x00000000004a75ed : add byte ptr [rax], al ; add byte ptr [rax + 0x757760], bh ; ret
0x000000000043a7bd : add byte ptr [rax], al ; add byte ptr [rax + 0x759eb8], bh ; ret
0x0000000000406197 : add byte ptr [rax], al ; add byte ptr [rax + 0x75b4b8], bh ; ret
0x000000000044acca : add byte ptr [rax], al ; add byte ptr [rax + 0x7789c609], al ; ret
0x000000000043a174 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; xchg eax, edi ; ret 0x8148
0x00000000004450e1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041a3bc : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000402b1d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000004655bc : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; pop rbx ; ret
0x000000000040bf58 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x920f
0x0000000000458b6c : add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x69e8
0x000000000054b3cd : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, bh ; ret
0x000000000054b2bd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000053b37d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000053b27d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000054b275 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000053b365 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000053b265 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000437857 : add byte ptr [rax], al ; add byte ptr [rax + rcx - 9], dh ; ret 0xfeff
0x000000000047d5bd : add byte ptr [rax], al ; add byte ptr [rax + rdx*4 - 0x42], dh ; popfq ; ret
0x000000000048c5ed : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret
0x0000000000499b73 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [r8 + 0x39], r9b ; ret 0x8e0f
0x000000000044012a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044ad9d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop r8 ; ret
0x0000000000408b4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044a6cd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000000004024f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000480bfd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; ret
0x00000000004aa6be : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rdi] ; xchg eax, edi ; ret 0x8348
0x00000000004052c2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000406034 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x40604a ; ret
0x00000000004198bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4198d3 ; ret
0x00000000004198cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4198eb ; ret
0x000000000041c2cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x41c2f3 ; ret
0x0000000000421dcd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x421e3b ; ret
0x00000000004228fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x422933 ; ret
0x000000000042295d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x422973 ; ret
0x000000000042293d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x42297b ; ret
0x000000000042296d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x42298b ; ret
0x000000000042297d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4229a3 ; ret
0x000000000043808d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4380a3 ; ret
0x000000000043809d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4380bb ; ret
0x00000000004380ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4380d3 ; ret
0x00000000004380fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x438133 ; ret
0x000000000043ea0d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x43ea53 ; ret
0x000000000044778d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4477bb ; ret
0x00000000004477bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4477e3 ; ret
0x00000000004477dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x447813 ; ret
0x000000000044a6ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x44a6db ; ret
0x000000000044a6dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x44a72b ; ret
0x000000000047213d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4721bb ; ret
0x00000000004ab4dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4ab4f3 ; ret
0x00000000004ab4fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4ab51b ; ret
0x00000000004ab51d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4ab543 ; ret
0x00000000004ab53d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4ab56b ; ret
0x00000000004b0e7d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4b0e9b ; ret
0x00000000004b0e8d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4b0eb3 ; ret
0x00000000004b0e9d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4b0ecb ; ret
0x00000000004b327d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4b32b3 ; ret
0x00000000004b328d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4b3303 ; ret
0x00000000004607f2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jmp 0x4d08914c
0x000000000048e335 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004049cf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ce7bc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x39e8
0x0000000000416b6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x62c4
0x0000000000425af5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8588
0x0000000000452bf6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000425aa6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000425c77 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x0000000000404570 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402a77 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3908
0x0000000000408d4f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4408
0x0000000000472633 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040cf1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000403cd4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000481f4f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4d0a
0x0000000000442a02 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe902
0x00000000004858db : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x0000000000485b6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004c1827 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000048c5d5 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000043929d : add byte ptr [rax], al ; add byte ptr [rax - 2], bh ; pop rbx ; ret
0x000000000043d0ed : add byte ptr [rax], al ; add byte ptr [rax - 2], bh ; ret
0x000000000047c42b : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x000000000054b2bc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000053b37c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000053b27c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000053b264 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000041f5db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000048c5eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret
0x000000000044ad9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop r8 ; ret
0x000000000044a6cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000000004198bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4198d5 ; ret
0x00000000004198cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4198ed ; ret
0x0000000000421dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x421e3d ; ret
0x00000000004228fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x422935 ; ret
0x000000000042295b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x422975 ; ret
0x000000000042293b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x42297d ; ret
0x000000000042296b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x42298d ; ret
0x000000000042297b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4229a5 ; ret
0x000000000043809b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4380bd ; ret
0x00000000004380ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4380d5 ; ret
0x00000000004380fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x438135 ; ret
0x000000000043ea0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x43ea55 ; ret
0x000000000044778b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4477bd ; ret
0x00000000004477bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4477e5 ; ret
0x00000000004477db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x447815 ; ret
0x000000000044a6ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x44a6dd ; ret
0x000000000044a6db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x44a72d ; ret
0x000000000047213b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4721bd ; ret
0x00000000004ab4db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4ab4f5 ; ret
0x00000000004ab4fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4ab51d ; ret
0x00000000004ab51b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4ab545 ; ret
0x00000000004ab53b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4ab56d ; ret
0x00000000004b0e7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4b0e9d ; ret
0x00000000004b0e8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4b0eb5 ; ret
0x00000000004b0e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4b0ecd ; ret
0x00000000004b328b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x4b3305 ; ret
0x0000000000443550 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040456e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040cf1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000044354e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ea7f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004dac78 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004ca5d7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004dbd80 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d36
0x00000000004dc870 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d3b
0x00000000004de850 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d49
0x00000000004e1e60 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d62
0x00000000004c9657 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000051f0e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, al ; jmp 0x51f14b
0x00000000004ea7f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004987c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043a42f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004ca5d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004dbd82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d36
0x00000000004dc872 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d3b
0x00000000004de852 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d49
0x00000000004e1e62 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d62
0x000000000051d23a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51ce
0x000000000051f0ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51eb
0x00000000004c9672 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004c9659 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000054b3cc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; ret
0x000000000041cb5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000047176e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000044bd9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x48], al ; ret
0x00000000004ee4c6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rcx], ah ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xeec8
0x000000000041989b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ja 0x4198cb ; ret
0x000000000044ef9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ja 0x44efd7 ; ret
0x00000000004c1ddb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x57], al ; ret 0xf66
0x00000000004edaa4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; jmp rcx
0x00000000004203f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x000000000051f0eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, al ; jmp 0x51f149
0x000000000042426c : add byte ptr [rax], al ; add byte ptr [rax], al ; add eax, 3 ; ret
0x00000000004023ac : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000496b30 : add byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x00000000004ea7f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004805d1 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000423514 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000004f1b24 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rbx], edi ; cdq ; cwde ; ret
0x000000000048073d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp eax, 2 ; cmove eax, edx ; ret
0x000000000044a6bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x28] ; ret
0x000000000048c5ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x48] ; ret
0x00000000004c96fa : add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x4c96bd ; add byte ptr [rax], al ; ret 0x8401
0x0000000000402322 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x14], eax ; pop rbx ; ret
0x00000000004a25e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x000000000044edfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x20], esi ; ret
0x00000000004b3e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x28], esi ; ret
0x000000000044acec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x48], esi ; ret
0x000000000042470c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], esi ; ret
0x000000000040216c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x4d0230 ; ret
0x000000000040617c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x4d17bf ; ret
0x0000000000421a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x4e50c0 ; ret
0x0000000000421a2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x4e5140 ; ret
0x0000000000421a1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x4e51c0 ; ret
0x0000000000421a0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x4e5240 ; ret
0x00000000004219fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x4e52c0 ; ret
0x000000000045a12c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x4f1400 ; ret
0x0000000000478bdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x51c1b1 ; ret
0x0000000000478bec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x51c1c6 ; ret
0x0000000000478bfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x51c1d3 ; ret
0x0000000000478c0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x51c1e6 ; ret
0x0000000000478c1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x51c1fc ; ret
0x0000000000478c2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x51c209 ; ret
0x000000000049118c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5210b8 ; ret
0x0000000000494b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5211c0 ; ret
0x0000000000494b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5211e0 ; ret
0x0000000000494b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x521200 ; ret
0x0000000000494b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x521220 ; ret
0x000000000049879c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5216c0 ; ret
0x0000000000498ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x521800 ; ret
0x000000000049ccbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x522380 ; ret
0x00000000004a3acc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x522ee0 ; ret
0x00000000004a3a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x522f40 ; ret
0x00000000004a3a8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x522fa0 ; ret
0x00000000004a3a7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x523000 ; ret
0x00000000004a3a6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x523060 ; ret
0x00000000004a3a5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5230c0 ; ret
0x00000000004a3a4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x523120 ; ret
0x00000000004a3a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x523180 ; ret
0x00000000004a3a2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5231e0 ; ret
0x00000000004a3a1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x523240 ; ret
0x00000000004a3a0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5232a0 ; ret
0x00000000004a5e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x523480 ; ret
0x00000000004a5e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5234e0 ; ret
0x00000000004a5e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x523540 ; ret
0x00000000004a5e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x524b60 ; ret
0x0000000000438e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x756980 ; ret
0x0000000000467c0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x756aa0 ; ret
0x0000000000485eec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x757040 ; ret
0x000000000049f57c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x757500 ; ret
0x00000000004a0f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7575e0 ; ret
0x00000000004a108c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x757640 ; ret
0x00000000004a75ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x757760 ; ret
0x000000000043a7bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x759eb8 ; ret
0x0000000000406196 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x75b4b8 ; ret
0x000000000043d0ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfffffffe ; ret
0x000000000048c5d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000041c8ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000041988c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; and eax, esi ; ret
0x00000000004228dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000041a0cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000044ef8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x2c] ; ret
0x000000000044acac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x40] ; ret
0x000000000044acfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x48] ; ret
0x0000000000421e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x64] ; ret
0x0000000000421e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000421ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x0000000000421d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; ret
0x0000000000421dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000421e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x000000000041d36c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x000000000041985c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000004060a5 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x00000000004198cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000041c2cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000044778c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x00000000004228fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x28], rsi ; ret
0x000000000042293c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x30], rsi ; ret
0x000000000043ea0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], rsi ; ret
0x000000000044a6dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x40], rsi ; ret
0x0000000000421dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rsi ; ret
0x00000000004b328c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x68], rsi ; ret
0x000000000047213c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x70], rsi ; ret
0x0000000000406033 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000004380cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000004198dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000042292c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000044777c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000042148c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x28] ; jmp rax
0x000000000042290c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000042294c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x30] ; ret
0x000000000043ea1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000044a6cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x40] ; ret
0x000000000044ad9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x58] ; ret
0x0000000000421dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x60] ; ret
0x000000000043a75c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000043a76c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x70] ; ret
0x000000000043a77c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x78] ; ret
0x00000000004198ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004198fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x000000000044779c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x00000000004024f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041d35c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rax, dword ptr [rdi] ; ret
0x00000000004498cb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x000000000043b7db : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; movsxd rax, dword ptr [rdi] ; ret
0x000000000043db8b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000041987c : add byte ptr [rax], al ; add byte ptr [rax], al ; not esi ; and dword ptr [rdi + 0x20], esi ; ret
0x000000000044efac : add byte ptr [rax], al ; add byte ptr [rax], al ; not esi ; and dword ptr [rdi + 0x2c], esi ; ret
0x000000000041e067 : add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rax + 0x20], 0xd ; ret
0x000000000041989c : add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rdi + 0x20], esi ; ret
0x000000000044ef9c : add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rdi + 0x2c], esi ; ret
0x0000000000401c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041c3f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000402655 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000402363 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004ca5db : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004dbd84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d36
0x00000000004dc874 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d3b
0x00000000004de384 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d47
0x00000000004de854 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d49
0x00000000004e1e64 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d62
0x000000000051d23c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51ce
0x000000000051f0ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51eb
0x00000000004c9674 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004e031c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000004c965b : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000053e21a : add byte ptr [rax], al ; add byte ptr [rax], al ; rol dl, 0xf1 ; call qword ptr [rbx]
0x000000000042097c : add byte ptr [rax], al ; add byte ptr [rax], al ; test esi, esi ; jne 0x420999 ; ret
0x0000000000434ffc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000402b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044b82c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x000000000044046c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, qword ptr [rbx] ; call rax
0x000000000054b3ce : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; ret
0x000000000041c119 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x38 ; ret
0x0000000000421b14 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; ret
0x000000000043fbcc : add byte ptr [rax], al ; add byte ptr [rbp + 0x13], dh ; add rsp, 0x18 ; ret
0x00000000004b348e : add byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; add rsp, 0x38 ; ret
0x000000000048084e : add byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; add rsp, 0x48 ; ret
0x0000000000461c4f : add byte ptr [rax], al ; add byte ptr [rbp + 0x16], dh ; ret
0x00000000004c581e : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], cl ; ror dword ptr [rbp - 0x77], cl ; ret 0xd149
0x00000000004a64db : add byte ptr [rax], al ; add byte ptr [rbp + 0x23], dh ; add rsp, 0x18 ; ret
0x00000000004050a7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x28], dh ; add rsp, 0x38 ; ret
0x000000000043bfb9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2d], dh ; add rsp, 0x18 ; ret
0x0000000000459277 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; in al, -0x18 ; sahf ; ret
0x000000000040fea5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; mov rax, r9 ; ret
0x000000000048e720 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], dh ; add rsp, 0x28 ; ret
0x00000000004766bb : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], dh ; add rsp, 0x28 ; ret
0x000000000041e7b4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x48 ; ret
0x0000000000476b3f : add byte ptr [rax], al ; add byte ptr [rbp + 0x37], dh ; add rsp, 0x28 ; ret
0x000000000041e6d3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x37], dh ; add rsp, 0x48 ; ret
0x000000000047684c : add byte ptr [rax], al ; add byte ptr [rbp + 0x3a], dh ; add rsp, 0x28 ; ret
0x000000000041e5f0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3a], dh ; add rsp, 0x48 ; ret
0x000000000048be1e : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000402a3a : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000041e9c9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x48], dh ; add rsp, 0x38 ; ret
0x000000000041eeed : add byte ptr [rax], al ; add byte ptr [rbp + 0x52], dh ; add rsp, 0x58 ; ret
0x00000000004849a2 : add byte ptr [rax], al ; add byte ptr [rbp + 0xd], dh ; add rsp, 0x28 ; ret
0x0000000000418b7c : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], cl ; lodsb al, byte ptr [rsi] ; ret
0x0000000000419ec8 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x18 ; ret
0x000000000043a214 : add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; in eax, -0x7d ; ret
0x0000000000419e7d : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000043bd0a : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x00000000004234e5 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000448874 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x00000000004a00e3 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x68 ; ret
0x0000000000489606 : add byte ptr [rax], al ; add byte ptr [rbp + 9], dh ; add rsp, 0x18 ; ret
0x0000000000550541 : add byte ptr [rax], al ; add byte ptr [rbp + rdx + 2], ch ; add byte ptr [rax], cl ; ret
0x000000000052fd0e : add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dl ; call rbx
0x00000000004807a2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x2a], dh ; ret
0x000000000044660d : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf040], al ; jmp 0x4465c9
0x00000000004b849e : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; adc byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000004c6a86 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x8341
0x00000000004a290d : add byte ptr [rax], al ; add byte ptr [rbp - 0x9f6812e], al ; ret 0xf03
0x000000000042097d : add byte ptr [rax], al ; add byte ptr [rbp - 0xcf38a0a], al ; ret
0x000000000040dc5d : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000048073e : add byte ptr [rax], al ; add byte ptr [rbx + 0x440f02f8], al ; ret 0xfc3
0x00000000004b01fc : add byte ptr [rax], al ; add byte ptr [rbx + 0x59e801eb], al ; ret
0x000000000046c52a : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000040865d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000041970c : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000401ecd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041b43d : add byte ptr [rax], al ; add byte ptr [rbx + 0xff201e8], al ; pop rcx ; ret 0xf775
0x000000000047142d : add byte ptr [rax], al ; add byte ptr [rbx + rax + 0x5b], dh ; ret
0x000000000053282e : add byte ptr [rax], al ; add byte ptr [rbx - 0x12], bh ; jmp qword ptr [rbx]
0x000000000048bf2a : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop ; xor eax, eax ; pop rbx ; ret
0x00000000004a62ba : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop ; xor eax, eax ; ret
0x0000000000424dab : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x000000000043665d : add byte ptr [rax], al ; add byte ptr [rbx - 0x71f0fa02], al ; ret 0xfffe
0x0000000000494a1e : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf00003], al ; ret 0
0x000000000041f86d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7f7ab], cl ; ret
0x000000000041c5a2 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000041988d : add byte ptr [rax], al ; add byte ptr [rbx - 0xfdedfb9], cl ; ret
0x0000000000408a38 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x0000000000471500 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000425184 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x00000000004ca82a : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8d48
0x00000000004b07b8 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000486b34 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000047c73a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x00000000004c60cd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x00000000004755be : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], cl ; call rax
0x00000000004b00e1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x000000000048562b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x401858
0x00000000004571bf : add byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x2a], al ; ja 0x457179 ; ret
0x000000000044b23d : add byte ptr [rax], al ; add byte ptr [rcx - 0x48], al ; ret
0x000000000043781c : add byte ptr [rax], al ; add byte ptr [rcx - 0x48], al ; ret 0
0x0000000000455489 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000044d58e : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000004533ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000048585b : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7420
0x0000000000402323 : add byte ptr [rax], al ; add byte ptr [rcx - 0xca4ebbd], cl ; ret
0x000000000041702e : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; leave ; jne 0x417029 ; ret
0x0000000000492529 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 0xfff0
0x00000000004ee4c8 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rcx], ah ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xeec8
0x000000000046eead : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000000004088bd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x4489
0x00000000004cdd1a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x458b
0x000000000041989d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ja 0x4198c9 ; ret
0x000000000044ef9d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ja 0x44efd5 ; ret
0x000000000044b82d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000435953 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fucomi st(0) ; ret
0x0000000000479339 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; call 0x405627
0x0000000000424324 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000044046d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x75], 0x3b ; call rax
0x00000000004aa114 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x11], 0x41 ; call rsp
0x00000000004c1ddd : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x57], al ; ret 0xf66
0x00000000004a9686 : add byte ptr [rax], al ; add byte ptr [rdi - 0x3b], dh ; ret
0x0000000000531731 : add byte ptr [rax], al ; add byte ptr [rdi], bl ; add byte ptr [rax], cl ; ret 0xffed
0x00000000004edaa6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; jmp rcx
0x00000000004850b4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x000000000045730a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x173d
0x0000000000479590 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x43e9
0x00000000004affaa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x00000000004805d2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x0000000000423515 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x000000000040798f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004203f8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x000000000052f4fe : add byte ptr [rax], al ; add byte ptr [rdi], dh ; in eax, dx ; jmp qword ptr [rax]
0x0000000000547a09 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*4], dh ; add dword ptr [rax], eax ; nop ; ret 0xfff3
0x000000000054b9d9 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*8], al ; add dword ptr [rax], eax ; ret
0x000000000053e219 : add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], al ; add al, al ; ret 0xfff1
0x000000000053e251 : add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], bh ; add al, bh ; ret
0x000000000053e231 : add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], bl ; add al, cl ; ret
0x000000000053e201 : add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ch ; add byte ptr [rax], al ; cwde ; ret 0xfff1
0x000000000043a464 : add byte ptr [rax], al ; add byte ptr [rsi + 0x33], bh ; pop rbx ; ret
0x00000000004197f1 : add byte ptr [rax], al ; add byte ptr [rsi + 0xa], bh ; mov eax, edx ; pop rbx ; ret
0x0000000000411ce5 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; jmp 0x411cb4
0x0000000000411d35 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; jmp 0x411d04
0x0000000000412385 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; jmp 0x412354
0x00000000004123d5 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; jmp 0x4123a4
0x0000000000413875 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; jmp 0x413844
0x00000000004138bd : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; jmp 0x41388c
0x00000000004a7db4 : add byte ptr [rax], al ; add byte ptr [rsi + 6], bh ; call rax
0x00000000004a7e07 : add byte ptr [rax], al ; add byte ptr [rsi + 6], bh ; jmp rax
0x000000000046558d : add byte ptr [rax], al ; add byte ptr [rsi + rbx + 0x5b], dh ; ret
0x000000000052f996 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], cl ; add dword ptr [rdx], 0x67 ; ret
0x00000000004804a5 : add byte ptr [rax], al ; add byte ptr [rsi + rdx - 0xd], dh ; ret
0x000000000047d591 : add byte ptr [rax], al ; add byte ptr [rsp + rdi*4 - 0x42], dh ; xchg eax, esi ; ret
0x0000000000404d33 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x7d] ; ret
0x0000000000434dc1 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000043fc1d : add byte ptr [rax], al ; add dh, dh ; mov byte ptr [rbx], 0x75 ; jrcxz 0x43fc25 ; ret 0x7406
0x0000000000425e38 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000440d2d : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004ab598 : add byte ptr [rax], al ; add dh, dh ; ret 0x4d06
0x00000000004a545d : add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x000000000051f0ed : add byte ptr [rax], al ; add dl, al ; jmp 0x51f147
0x000000000045220d : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004ece0a : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000042426e : add byte ptr [rax], al ; add eax, 3 ; ret
0x0000000000543e1a : add byte ptr [rax], al ; add qword ptr [rax], r8 ; jo 0x543e7c ; call qword ptr [rbx]
0x00000000004aa5b9 : add byte ptr [rax], al ; add qword ptr [rsi], 1 ; ret
0x00000000004aa5d3 : add byte ptr [rax], al ; add qword ptr [rsi], 2 ; ret
0x00000000004aa607 : add byte ptr [rax], al ; add qword ptr [rsi], 4 ; ret
0x000000000041f6c4 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000405f16 : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000041d29e : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004222c7 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000407df6 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004076fd : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000045037b : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000462406 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000452634 : add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000000000047dc13 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000044b90e : add byte ptr [rax], al ; add rsp, 8 ; jmp r10
0x000000000044b88e : add byte ptr [rax], al ; add rsp, 8 ; jmp rdx
0x00000000004b817d : add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; ret
0x000000000040678e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000401718 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000054561a : add byte ptr [rax], al ; add word ptr [rax], ax ; loopne 0x545691 ; call qword ptr [rax]
0x0000000000528876 : add byte ptr [rax], al ; and al, 0x1e ; out dx, eax ; call rsp
0x00000000005427fa : add byte ptr [rax], al ; and al, 0x38 ; add dword ptr [rax], eax ; adc al, bh ; call qword ptr [rbx]
0x0000000000543cfa : add byte ptr [rax], al ; and al, 0x4d ; add dword ptr [rax], eax ; rcl byte ptr [rax - 0xd], 1 ; call qword ptr [rdx]
0x000000000052998e : add byte ptr [rax], al ; and al, 0x4d ; int1 ; call rsp
0x00000000005454fa : add byte ptr [rax], al ; and al, 0x65 ; add dword ptr [rax], eax ; shl byte ptr [rsi - 0xd], 1 ; call qword ptr [rax]
0x00000000005357fa : add byte ptr [rax], al ; and al, 0x68 ; add byte ptr [rax], al ; push rax ; std ; out dx, al ; jmp qword ptr [rbx]
0x000000000052875e : add byte ptr [rax], al ; and al, 0x87 ; out dx, al ; call rsp
0x0000000000547bfa : add byte ptr [rax], al ; and al, 0x8c ; add dword ptr [rax], eax ; adc bh, al ; call qword ptr [rdx]
0x00000000005489fa : add byte ptr [rax], al ; and al, 0x9a ; add dword ptr [rax], eax ; mov al, 0xe3 ; jmp qword ptr [rsi]
0x0000000000528f7e : add byte ptr [rax], al ; and al, 0xa3 ; out dx, eax ; jmp rsp
0x0000000000527fde : add byte ptr [rax], al ; and al, 0xa4 ; in eax, dx ; call rsp
0x000000000054a4fa : add byte ptr [rax], al ; and al, 0xb5 ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; hlt ; call qword ptr [rdi]
0x00000000005280de : add byte ptr [rax], al ; and al, 0xc3 ; in eax, dx ; jmp rsp
0x000000000054b4fa : add byte ptr [rax], al ; and al, 0xc5 ; add dword ptr [rax], eax ; test al, 0xf4 ; jmp qword ptr [rsi]
0x000000000053b9fa : add byte ptr [rax], al ; and al, 0xca ; add byte ptr [rax], al ; in eax, -0x10 ; call qword ptr [rbx]
0x000000000054ebfa : add byte ptr [rax], al ; and al, 0xfc ; add dword ptr [rax], eax ; loopne 0x54ec7b ; cmc ; call qword ptr [rsi]
0x000000000052f4fa : add byte ptr [rax], al ; and al, 5 ; add byte ptr [rax], al ; add byte ptr [rdi], dh ; in eax, dx ; jmp qword ptr [rax]
0x0000000000534e3e : add byte ptr [rax], al ; and al, ch ; out dx, al ; call rcx
0x000000000052fa2e : add byte ptr [rax], al ; and byte ptr [rbp - 0x13], cl ; call qword ptr [rsi]
0x0000000000537c0e : add byte ptr [rax], al ; and byte ptr [rsi - 0x10], cl ; jmp qword ptr [rax]
0x00000000004b3e06 : add byte ptr [rax], al ; and qword ptr [rdi + 0x18], rsi ; ret
0x000000000052f5c6 : add byte ptr [rax], al ; call 0x1252e30c
0x00000000004093a8 : add byte ptr [rax], al ; call 0x405624
0x000000000046aaf0 : add byte ptr [rax], al ; call 0x405628
0x000000000046a5d0 : add byte ptr [rax], al ; call 0x406844
0x000000000044aada : add byte ptr [rax], al ; call 0x406d74
0x0000000000487ddd : add byte ptr [rax], al ; call 0x419d78
0x00000000004b059a : add byte ptr [rax], al ; call 0x41c834
0x00000000004622be : add byte ptr [rax], al ; call 0x41e564
0x0000000000454f65 : add byte ptr [rax], al ; call 0x452f69
0x0000000000536f56 : add byte ptr [rax], al ; call 0xffffffffc4535f97
0x0000000000533836 : add byte ptr [rax], al ; call 0xffffffffd55326f0
0x0000000000533835 : add byte ptr [rax], al ; call 0xffffffffd55326f1
0x0000000000538406 : add byte ptr [rax], al ; call 0xffffffffe453746c
0x000000000054511f : add byte ptr [rax], al ; call qword ptr [eax]
0x0000000000404a48 : add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000419f34 : add byte ptr [rax], al ; call r12
0x000000000043fa1d : add byte ptr [rax], al ; call r14
0x0000000000496b32 : add byte ptr [rax], al ; call r15
0x00000000004400dd : add byte ptr [rax], al ; call rax
0x00000000004ea7f6 : add byte ptr [rax], al ; call rbx
0x00000000005372d6 : add byte ptr [rax], al ; clc ; cmp eax, esi ; jmp qword ptr [rdi]
0x00000000005327b6 : add byte ptr [rax], al ; clc ; jp 0x5327ae ; call qword ptr [rsi]
0x0000000000532816 : add byte ptr [rax], al ; clc ; jp 0x53280e ; call qword ptr [rbx]
0x0000000000530206 : add byte ptr [rax], al ; clc ; pop rbp ; in eax, dx ; call qword ptr [rdx]
0x000000000052fee6 : add byte ptr [rax], al ; clc ; pop rdx ; in eax, dx ; call qword ptr [rsi]
0x000000000052fbb6 : add byte ptr [rax], al ; clc ; push rax ; in eax, dx ; jmp qword ptr [rax]
0x000000000053e256 : add byte ptr [rax], al ; clc ; ret
0x000000000053e766 : add byte ptr [rax], al ; clc ; sub edx, esi ; call qword ptr [rdi]
0x00000000005339d2 : add byte ptr [rax], al ; cld ; add byte ptr [r8], al ; js 0x53399a ; out dx, al ; jmp rcx
0x00000000005455d2 : add byte ptr [rax], al ; cld ; add dword ptr gs:[rax], eax ; fsub dword ptr [rsi - 0xd] ; call qword ptr [rax]
0x000000000054ecd2 : add byte ptr [rax], al ; cld ; cld ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x0000000000532bd2 : add byte ptr [rax], al ; cld ; cmp eax, dword ptr [rax] ; add byte ptr [rax], bl ; xchg eax, esi ; out dx, al ; call rax
0x0000000000542bd2 : add byte ptr [rax], al ; cld ; cmp eax, dword ptr [rcx] ; add byte ptr [rax], bl ; add al, 0xf3 ; jmp qword ptr [rcx]
0x000000000054d3d2 : add byte ptr [rax], al ; cld ; jrcxz 0x54d3e1 ; add byte ptr [rax], bh ; xor ebp, esi ; call qword ptr [rdx]
0x000000000054ded2 : add byte ptr [rax], al ; cld ; out dx, al ; add dword ptr [rax], eax ; test al, 0x4b ; cmc ; call qword ptr [rsi]
0x000000000054b3d2 : add byte ptr [rax], al ; cld ; ret
0x0000000000402134 : add byte ptr [rax], al ; cmove eax, dword ptr [rip + 0x355b8f] ; ret
0x00000000004805d3 : add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000499e3e : add byte ptr [rax], al ; cmove edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000423516 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000532812 : add byte ptr [rax], al ; cmp al, 0x38 ; add byte ptr [rax], al ; clc ; jp 0x532812 ; call qword ptr [rbx]
0x0000000000545012 : add byte ptr [rax], al ; cmp al, 0x60 ; add dword ptr [rax], eax ; pop rax ; call qword ptr [eax]
0x0000000000549212 : add byte ptr [rax], al ; cmp al, 0xa2 ; add dword ptr [rax], eax ; js 0x54922a ; hlt ; jmp rsi
0x000000000054c512 : add byte ptr [rax], al ; cmp al, 0xd5 ; add dword ptr [rax], eax ; sub ah, dh ; hlt ; jmp qword ptr [rsi]
0x000000000054ec12 : add byte ptr [rax], al ; cmp al, 0xfc ; add dword ptr [rax], eax ; call 0x1754e196
0x0000000000542a3a : add byte ptr [rax], al ; cmp al, byte ptr fs:[rcx] ; add al, al ; sti ; jmp rbx
0x00000000004f1b26 : add byte ptr [rax], al ; cmp dword ptr [rbx], edi ; cdq ; cwde ; ret
0x000000000048c58e : add byte ptr [rax], al ; cmp eax, 1 ; je 0x48c5a9 ; xor eax, eax ; ret
0x0000000000490b66 : add byte ptr [rax], al ; cmp eax, 1 ; je 0x490b79 ; xor eax, eax ; ret
0x000000000048073f : add byte ptr [rax], al ; cmp eax, 2 ; cmove eax, edx ; ret
0x00000000004571c0 : add byte ptr [rax], al ; cmp esi, r10d ; ja 0x457178 ; ret
0x000000000044531e : add byte ptr [rax], al ; cmp rsi, rcx ; je 0x445339 ; xor eax, eax ; ret
0x0000000000535b66 : add byte ptr [rax], al ; cwde ; in al, dx ; out dx, eax ; call rsp
0x000000000053d6c6 : add byte ptr [rax], al ; cwde ; int1 ; jmp qword ptr [rdi]
0x0000000000530d36 : add byte ptr [rax], al ; cwde ; js 0x530d2d ; call rsp
0x000000000053e206 : add byte ptr [rax], al ; cwde ; ret 0xfff1
0x000000000041702f : add byte ptr [rax], al ; dec r9d ; jne 0x417028 ; ret
0x000000000053b55e : add byte ptr [rax], al ; fcomi st(0) ; jmp qword ptr [rbx]
0x0000000000548cb2 : add byte ptr [rax], al ; fcomp qword ptr [rcx + rax - 0xc16d800] ; call qword ptr [rcx]
0x00000000005327b2 : add byte ptr [rax], al ; fdiv qword ptr [rdi] ; add byte ptr [rax], al ; clc ; jp 0x5327b2 ; call qword ptr [rsi]
0x0000000000552cb2 : add byte ptr [rax], al ; fdivr qword ptr [rdx + rax] ; add al, cl ; cmp esi, esi ; jmp qword ptr [rbx]
0x000000000053b67f : add byte ptr [rax], al ; fdivr st(0), st(0) ; call qword ptr [rdx]
0x000000000052fbb2 : add byte ptr [rax], al ; fmul qword ptr [rbx] ; add byte ptr [rax], al ; clc ; push rax ; in eax, dx ; jmp qword ptr [rax]
0x000000000053ef56 : add byte ptr [rax], al ; fsub dword ptr [rax - 0xe] ; call qword ptr [rsi]
0x00000000005434ca : add byte ptr [rax], al ; hlt ; add dword ptr [rax], r8d ; xor ebx, esi ; jmp qword ptr [rdx]
0x0000000000552cca : add byte ptr [rax], al ; hlt ; cmp al, 2 ; add al, ah ; cmp esi, esi ; call qword ptr [rbx]
0x000000000053e1ca : add byte ptr [rax], al ; hlt ; int1 ; add byte ptr [rax], al ; ret 0xfff1
0x0000000000528c6e : add byte ptr [rax], al ; hlt ; jb 0x528c67 ; call rsp
0x0000000000528636 : add byte ptr [rax], al ; hlt ; pop rcx ; out dx, al ; jmp rsp
0x0000000000540bca : add byte ptr [rax], al ; hlt ; sbb eax, dword ptr [rcx] ; add byte ptr [rax], dh ; mov dl, 0xf2 ; jmp qword ptr [rdx]
0x000000000054ebca : add byte ptr [rax], al ; hlt ; sti ; add dword ptr [rax], eax ; sal byte ptr [rax - 0xb], 1 ; call qword ptr [rsi]
0x000000000053d8ba : add byte ptr [rax], al ; in al, -0x18 ; add byte ptr [rax], al ; adc byte ptr [rbp - 0xf], ah ; jmp rax
0x000000000053acba : add byte ptr [rax], al ; in al, -0x44 ; add byte ptr [rax], al ; or dl, 0xf0 ; call qword ptr [rdi]
0x000000000054a7ba : add byte ptr [rax], al ; in al, -0x49 ; add dword ptr [rax], eax ; adc byte ptr [rcx], ch ; hlt ; jmp rdx
0x000000000054ecba : add byte ptr [rax], al ; in al, -4 ; add dword ptr [rax], eax ; and byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000054e9ba : add byte ptr [rax], al ; in al, -7 ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; call rsp
0x0000000000531bba : add byte ptr [rax], al ; in al, 0x2b ; add byte ptr [rax], al ; or ah, 0xed ; jmp qword ptr [rcx]
0x00000000005289f6 : add byte ptr [rax], al ; in al, 0x45 ; out dx, eax ; call rsp
0x00000000005450ba : add byte ptr [rax], al ; in al, 0x60 ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x000000000052f5c2 : add byte ptr [rax], al ; in al, dx ; add eax, 0x3ae80000 ; in eax, dx ; call qword ptr [rcx]
0x000000000054eac2 : add byte ptr [rax], al ; in al, dx ; cli ; add dword ptr [rax], eax ; js 0x54eb43 ; cmc ; call qword ptr [rsi]
0x0000000000536bc2 : add byte ptr [rax], al ; in al, dx ; jnp 0x536bd0 ; add byte ptr [rax], cl ; sub dh, al ; jmp rsp
0x000000000054b6c2 : add byte ptr [rax], al ; in al, dx ; mov byte ptr [rcx], 0 ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rax]
0x000000000053fac2 : add byte ptr [rax], al ; in al, dx ; or al, byte ptr [rcx] ; add byte ptr [rax], bh ; test dh, dl ; jmp rax
0x0000000000544dc2 : add byte ptr [rax], al ; in al, dx ; pop rbp ; add dword ptr [rax], eax ; fsub dword ptr [rbp - 0xd] ; jmp qword ptr [rcx]
0x000000000054b2c2 : add byte ptr [rax], al ; in al, dx ; ret 1
0x0000000000540dc2 : add byte ptr [rax], al ; in al, dx ; sbb eax, 0xb8b80001 ; jmp qword ptr [rsi]
0x000000000053b9fe : add byte ptr [rax], al ; in eax, -0x10 ; call qword ptr [rbx]
0x000000000054ee3a : add byte ptr [rax], al ; inc byte ptr fs:[rcx] ; add byte ptr [rax], dh ; je 0x54ee41 ; call qword ptr [rbx]
0x0000000000540442 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc al, 1 ; add byte ptr [rax - 0x59], bh ; call qword ptr [rsi]
0x0000000000533f42 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [r8], r8b ; sbb dl, cl ; out dx, al ; call qword ptr [rdx]
0x0000000000541642 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr es:[rax], eax ; call 0xffffffffd754092a
0x0000000000553d42 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add r8b, byte ptr [r8] ; clc ; or esi, edi ; call rsi
0x000000000054ec42 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cld ; add dword ptr [rax], eax ; clc ; jo 0x54ec49 ; call qword ptr [rsi]
0x000000000053cd42 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; fld qword ptr [rax] ; add byte ptr [rax], cl ; and dh, cl ; call qword ptr [rdx]
0x000000000054b142 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; rol dword ptr [rcx], 0 ; js 0x54b1b3 ; hlt ; call qword ptr [rdi]
0x0000000000530a42 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb al, byte ptr [rax] ; add byte ptr [rax], ch ; insb byte ptr [rdi], dx ; in eax, dx ; call rax
0x0000000000540842 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb byte ptr [rcx], al ; add byte ptr [rax - 0x56], bl ; call qword ptr [rdi]
0x0000000000551a42 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub al, byte ptr [rdx] ; add al, bl ; adc al, 0xf6 ; call qword ptr [rcx]
0x00000000005298ee : add byte ptr [rax], al ; int1 ; call rsp
0x000000000054bf1a : add byte ptr [rax], al ; iretd ; add dword ptr [rax], eax ; rcl ah, 0xf4 ; call qword ptr [rcx]
0x00000000004a966d : add byte ptr [rax], al ; ja 0x4a95c2 ; ret
0x00000000004a9687 : add byte ptr [rax], al ; ja 0x4a9655 ; ret
0x000000000054671a : add byte ptr [rax], al ; ja 0x546729 ; add byte ptr [rax - 0x70], dl ; jmp rsp
0x0000000000406058 : add byte ptr [rax], al ; je 0x406065 ; ret
0x0000000000413405 : add byte ptr [rax], al ; je 0x413427 ; xor eax, eax ; ret
0x0000000000421bd9 : add byte ptr [rax], al ; je 0x421c04 ; ret
0x000000000043cfcd : add byte ptr [rax], al ; je 0x43cfdd ; ret
0x000000000043f4f0 : add byte ptr [rax], al ; je 0x43f509 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000449286 : add byte ptr [rax], al ; je 0x449299 ; mov eax, 1 ; ret
0x0000000000461c66 : add byte ptr [rax], al ; je 0x461c5d ; mov eax, 0xffffffff ; ret
0x0000000000465505 : add byte ptr [rax], al ; je 0x465514 ; ret
0x000000000046558e : add byte ptr [rax], al ; je 0x4655b5 ; pop rbx ; ret
0x000000000046e9a0 : add byte ptr [rax], al ; je 0x46e9b9 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047142e : add byte ptr [rax], al ; je 0x47143b ; pop rbx ; ret
0x0000000000478c49 : add byte ptr [rax], al ; je 0x478c61 ; mov eax, 0x39 ; ret
0x00000000004804a6 : add byte ptr [rax], al ; je 0x4804c5 ; ret
0x0000000000484b8d : add byte ptr [rax], al ; je 0x484b9c ; ret
0x0000000000499df6 : add byte ptr [rax], al ; je 0x499e07 ; mov eax, edx ; pop rbx ; ret
0x000000000049fdae : add byte ptr [rax], al ; je 0x49fdd5 ; pop rbx ; ret
0x000000000049fede : add byte ptr [rax], al ; je 0x49ff05 ; pop rbx ; ret
0x00000000004ae4e6 : add byte ptr [rax], al ; je 0x4ae4f9 ; mov eax, 1 ; ret
0x000000000052878e : add byte ptr [rax], al ; je 0x5287a7 ; out dx, eax ; jmp rsp
0x000000000053b64a : add byte ptr [rax], al ; je 0x53b61d ; add byte ptr [rax], al ; rcr bl, 0xf0 ; jmp qword ptr [rbx]
0x000000000053f44a : add byte ptr [rax], al ; je 0x53f45b ; add dword ptr [rax], eax ; jo 0x53f4c9 ; jmp qword ptr [rsi]
0x000000000054514a : add byte ptr [rax], al ; je 0x5451b8 ; add dword ptr [rax], eax ; call qword ptr [rax]
0x000000000054ea4a : add byte ptr [rax], al ; je 0x54ea51 ; add dword ptr [rax], eax ; push rax ; jo 0x54ea51 ; call qword ptr [rsi]
0x000000000053e252 : add byte ptr [rax], al ; jl 0x53e24f ; add byte ptr [rax], al ; clc ; ret
0x000000000053ef52 : add byte ptr [rax], al ; jl 0x53ef5e ; add byte ptr [rax], al ; fsub dword ptr [rax - 0xe] ; call qword ptr [rsi]
0x0000000000541052 : add byte ptr [rax], al ; jl 0x54107d ; add dword ptr [rax], eax ; ret
0x0000000000545252 : add byte ptr [rax], al ; jl 0x5452c1 ; add dword ptr [rax], eax ; test al, 0x66 ; call qword ptr [rax]
0x0000000000545752 : add byte ptr [rax], al ; jl 0x5457c6 ; add dword ptr [rax], eax ; clc ; jmp qword ptr [edi]
0x0000000000547152 : add byte ptr [rax], al ; jl 0x5470e0 ; add dword ptr [rax], eax ; pop rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rdi
0x000000000054eb52 : add byte ptr [rax], al ; jl 0x54eb5a ; add dword ptr [rax], eax ; test al, 0x70 ; cmc ; call qword ptr [rsi]
0x0000000000550352 : add byte ptr [rax], al ; jl 0x550372 ; add al, byte ptr [rax] ; sub cl, al ; cmc ; call qword ptr [rbx]
0x0000000000553352 : add byte ptr [rax], al ; jl 0x5533a2 ; add al, byte ptr [rax] ; sbb byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x00000000004197f2 : add byte ptr [rax], al ; jle 0x419807 ; mov eax, edx ; pop rbx ; ret
0x000000000043a465 : add byte ptr [rax], al ; jle 0x43a4a1 ; pop rbx ; ret
0x0000000000401769 : add byte ptr [rax], al ; jmp 0x401729
0x0000000000419df4 : add byte ptr [rax], al ; jmp rax
0x0000000000404906 : add byte ptr [rax], al ; jne 0x40495a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004049f6 : add byte ptr [rax], al ; jne 0x404a25 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000404b53 : add byte ptr [rax], al ; jne 0x404b85 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004050a8 : add byte ptr [rax], al ; jne 0x4050dc ; add rsp, 0x38 ; ret
0x0000000000405128 : add byte ptr [rax], al ; jne 0x40515c ; add rsp, 0x38 ; ret
0x00000000004051b5 : add byte ptr [rax], al ; jne 0x405209 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000407c26 : add byte ptr [rax], al ; jne 0x407c93 ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000419e7e : add byte ptr [rax], al ; jne 0x419e8f ; add rsp, 0x18 ; ret
0x0000000000419ec9 : add byte ptr [rax], al ; jne 0x419ee4 ; add rsp, 0x18 ; ret
0x000000000041c11a : add byte ptr [rax], al ; jne 0x41c137 ; add rsp, 0x38 ; ret
0x000000000041cf89 : add byte ptr [rax], al ; jne 0x41cfab ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041e5f1 : add byte ptr [rax], al ; jne 0x41e637 ; add rsp, 0x48 ; ret
0x000000000041e6d4 : add byte ptr [rax], al ; jne 0x41e717 ; add rsp, 0x48 ; ret
0x000000000041e7b5 : add byte ptr [rax], al ; jne 0x41e7f7 ; add rsp, 0x48 ; ret
0x000000000041e9ca : add byte ptr [rax], al ; jne 0x41ea1e ; add rsp, 0x38 ; ret
0x000000000041eeee : add byte ptr [rax], al ; jne 0x41ef4c ; add rsp, 0x58 ; ret
0x000000000041efae : add byte ptr [rax], al ; jne 0x41f00c ; add rsp, 0x58 ; ret
0x0000000000420411 : add byte ptr [rax], al ; jne 0x420496 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000421b15 : add byte ptr [rax], al ; jne 0x421b2f ; ret
0x00000000004234e6 : add byte ptr [rax], al ; jne 0x4234f7 ; add rsp, 0x38 ; ret
0x00000000004246ee : add byte ptr [rax], al ; jne 0x424701 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000043bd0b : add byte ptr [rax], al ; jne 0x43bd1c ; add rsp, 0x28 ; ret
0x000000000043bfba : add byte ptr [rax], al ; jne 0x43bff3 ; add rsp, 0x18 ; ret
0x000000000043c1aa : add byte ptr [rax], al ; jne 0x43c1e3 ; add rsp, 0x18 ; ret
0x000000000043c50a : add byte ptr [rax], al ; jne 0x43c543 ; add rsp, 0x18 ; ret
0x000000000043ccab : add byte ptr [rax], al ; jne 0x43ccbc ; add rsp, 0x28 ; ret
0x000000000043ccfb : add byte ptr [rax], al ; jne 0x43cd0c ; add rsp, 0x28 ; ret
0x000000000043cd4b : add byte ptr [rax], al ; jne 0x43cd5c ; add rsp, 0x28 ; ret
0x000000000043cd9b : add byte ptr [rax], al ; jne 0x43cdac ; add rsp, 0x28 ; ret
0x000000000043fbcd : add byte ptr [rax], al ; jne 0x43fbec ; add rsp, 0x18 ; ret
0x0000000000442b56 : add byte ptr [rax], al ; jne 0x442b67 ; add rsp, 0x38 ; ret
0x0000000000442bf8 : add byte ptr [rax], al ; jne 0x442c15 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000448875 : add byte ptr [rax], al ; jne 0x448886 ; add rsp, 0x58 ; ret
0x0000000000449682 : add byte ptr [rax], al ; jne 0x4496bc ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449731 : add byte ptr [rax], al ; jne 0x449742 ; add rsp, 0x28 ; ret
0x0000000000449a67 : add byte ptr [rax], al ; jne 0x449ab0 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000044c38e : add byte ptr [rax], al ; jne 0x44c39f ; add rsp, 0x28 ; ret
0x0000000000451b57 : add byte ptr [rax], al ; jne 0x451b6a ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000451ba7 : add byte ptr [rax], al ; jne 0x451bba ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000004522c1 : add byte ptr [rax], al ; jne 0x4522d2 ; add rsp, 0x58 ; ret
0x0000000000461c50 : add byte ptr [rax], al ; jne 0x461c6f ; ret
0x0000000000461cee : add byte ptr [rax], al ; jne 0x461d01 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000462e5f : add byte ptr [rax], al ; jne 0x462e72 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000046370e : add byte ptr [rax], al ; jne 0x46377c ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004653cb : add byte ptr [rax], al ; jne 0x4653dc ; add rsp, 0x38 ; ret
0x000000000046dda3 : add byte ptr [rax], al ; jne 0x46dde4 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000046f80e : add byte ptr [rax], al ; jne 0x46f83d ; add rsp, 0x30 ; pop rbx ; ret
0x000000000046fe95 : add byte ptr [rax], al ; jne 0x46fed4 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000474b22 : add byte ptr [rax], al ; jne 0x474b3d ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004766bc : add byte ptr [rax], al ; jne 0x4766fb ; add rsp, 0x28 ; ret
0x000000000047684d : add byte ptr [rax], al ; jne 0x476893 ; add rsp, 0x28 ; ret
0x0000000000476b40 : add byte ptr [rax], al ; jne 0x476b83 ; add rsp, 0x28 ; ret
0x000000000047befa : add byte ptr [rax], al ; jne 0x47bf45 ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000047c1d0 : add byte ptr [rax], al ; jne 0x47c1f5 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004807a3 : add byte ptr [rax], al ; jne 0x480782 ; ret
0x000000000048084f : add byte ptr [rax], al ; jne 0x48086f ; add rsp, 0x48 ; ret
0x0000000000480ccd : add byte ptr [rax], al ; jne 0x480cde ; add rsp, 0x18 ; ret
0x0000000000483655 : add byte ptr [rax], al ; jne 0x48366d ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000484185 : add byte ptr [rax], al ; jne 0x484196 ; add rsp, 0x28 ; ret
0x000000000048427c : add byte ptr [rax], al ; jne 0x48428f ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004844cf : add byte ptr [rax], al ; jne 0x4844ed ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004849a3 : add byte ptr [rax], al ; jne 0x4849bc ; add rsp, 0x28 ; ret
0x0000000000489607 : add byte ptr [rax], al ; jne 0x48961c ; add rsp, 0x18 ; ret
0x000000000048d5b4 : add byte ptr [rax], al ; jne 0x48d5c7 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048e721 : add byte ptr [rax], al ; jne 0x48e75e ; add rsp, 0x28 ; ret
0x00000000004a00e4 : add byte ptr [rax], al ; jne 0x4a00f5 ; add rsp, 0x68 ; ret
0x00000000004a0a7a : add byte ptr [rax], al ; jne 0x4a0ab3 ; add rsp, 0x18 ; ret
0x00000000004a4153 : add byte ptr [rax], al ; jne 0x4a4186 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004a64dc : add byte ptr [rax], al ; jne 0x4a650b ; add rsp, 0x18 ; ret
0x00000000004a8718 : add byte ptr [rax], al ; jne 0x4a8767 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004acba8 : add byte ptr [rax], al ; jne 0x4acbb9 ; add rsp, 0x28 ; ret
0x00000000004acc58 : add byte ptr [rax], al ; jne 0x4acc69 ; add rsp, 0x28 ; ret
0x00000000004ade40 : add byte ptr [rax], al ; jne 0x4ade51 ; add rsp, 0x28 ; ret
0x00000000004ade8c : add byte ptr [rax], al ; jne 0x4ade9f ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004b348f : add byte ptr [rax], al ; jne 0x4b34af ; add rsp, 0x38 ; ret
0x00000000004b4492 : add byte ptr [rax], al ; jne 0x4b44bf ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004b463e : add byte ptr [rax], al ; jne 0x4b4669 ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004b685a : add byte ptr [rax], al ; jne 0x4b686b ; add rsp, 0x58 ; ret
0x00000000004cdf59 : add byte ptr [rax], al ; jne 0x4cdf75 ; add rsp, 0x50 ; pop rbx ; ret
0x000000000054ec5f : add byte ptr [rax], al ; jno 0x54ec5c ; call qword ptr [rsi]
0x000000000053282f : add byte ptr [rax], al ; jnp 0x532825 ; jmp qword ptr [rbx]
0x0000000000532886 : add byte ptr [rax], al ; jnp 0x53287e ; jmp qword ptr [rbx]
0x00000000005321ae : add byte ptr [rax], al ; jo 0x53222a ; out dx, al ; jmp qword ptr [rbx]
0x0000000000533a5e : add byte ptr [rax], al ; jo 0x533a20 ; out dx, al ; jmp rcx
0x0000000000533a5d : add byte ptr [rax], al ; jo 0x533a21 ; out dx, al ; jmp rcx
0x000000000053d2ae : add byte ptr [rax], al ; jo 0x53d2ef ; int1 ; call qword ptr [rdi]
0x0000000000531a06 : add byte ptr [rax], al ; js 0x5319d6 ; in eax, dx ; call qword ptr [rax]
0x0000000000532526 : add byte ptr [rax], al ; js 0x53251e ; call rbx
0x00000000005339d6 : add byte ptr [rax], al ; js 0x533996 ; out dx, al ; jmp rcx
0x0000000000534186 : add byte ptr [rax], al ; js 0x534163 ; out dx, al ; jmp qword ptr [rcx]
0x000000000044a6be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x28] ; ret
0x000000000048c5ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x48] ; ret
0x000000000046604e : add byte ptr [rax], al ; lea rdi, qword ptr [rsp + 0x10] ; call 0x402299
0x0000000000553382 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; sub byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x0000000000545482 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr fs:[rax], eax ; test al, 0x66 ; call qword ptr [rbx]
0x0000000000532882 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp byte ptr [rax], al ; add byte ptr [rax + 0x7b], cl ; out dx, al ; jmp qword ptr [rbx]
0x000000000053fc82 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or al, 1 ; add byte ptr [rax - 0x78], ch ; jmp rbx
0x0000000000534182 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rcx ; add byte ptr [rax], al ; js 0x534167 ; out dx, al ; jmp qword ptr [rcx]
0x0000000000544782 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rdi ; add dword ptr [rax], eax ; cmp byte ptr [rdx - 0xd], ah ; call qword ptr [rbx]
0x000000000053b382 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000053b282 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000004c96fc : add byte ptr [rax], al ; loopne 0x4c96bb ; add byte ptr [rax], al ; ret 0x8401
0x000000000052f18e : add byte ptr [rax], al ; loopne 0x52f1c7 ; in eax, dx ; jmp qword ptr [rax]
0x00000000005346de : add byte ptr [rax], al ; loopne 0x5346be ; out dx, al ; call qword ptr [rbx]
0x0000000000535ade : add byte ptr [rax], al ; loopne 0x535ad2 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000055058a : add byte ptr [rax], al ; mov ah, 0x15 ; add al, byte ptr [rax] ; loopne 0x55055f ; cmc ; jmp qword ptr [rdi]
0x0000000000532e8a : add byte ptr [rax], al ; mov ah, 0x3e ; add byte ptr [rax], al ; mov al, 0x99 ; out dx, al ; jmp qword ptr [rbx]
0x0000000000528b8e : add byte ptr [rax], al ; mov ah, 0x5b ; out dx, eax ; call rsp
0x000000000054508a : add byte ptr [rax], al ; mov ah, 0x60 ; add dword ptr [rax], eax ; xor byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x0000000000528f2e : add byte ptr [rax], al ; mov ah, 0x9f ; out dx, eax ; call rsp
0x00000000005290d6 : add byte ptr [rax], al ; mov ah, 0xb6 ; out dx, eax ; call rsp
0x000000000053ab8a : add byte ptr [rax], al ; mov ah, 0xbb ; add byte ptr [rax], al ; rol ah, 0xf0 ; call qword ptr [rsi]
0x000000000053b58a : add byte ptr [rax], al ; mov ah, 0xc5 ; add byte ptr [rax], al ; push rax ; fcomi st(0) ; call qword ptr [rdx]
0x000000000054bc8a : add byte ptr [rax], al ; mov ah, 0xcc ; add dword ptr [rax], eax ; push rax ; sal ah, 1 ; call qword ptr [rbx]
0x0000000000528346 : add byte ptr [rax], al ; mov ah, 0xe1 ; in eax, dx ; call rsp
0x000000000054ec8a : add byte ptr [rax], al ; mov ah, 0xfc ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000052f18a : add byte ptr [rax], al ; mov ah, 1 ; add byte ptr [rax], al ; loopne 0x52f1cb ; in eax, dx ; jmp qword ptr [rax]
0x000000000053245e : add byte ptr [rax], al ; mov al, 0x76 ; out dx, al ; jmp rsi
0x000000000053dc2e : add byte ptr [rax], al ; mov al, 0x8d ; int1 ; jmp qword ptr [rcx]
0x0000000000532e8e : add byte ptr [rax], al ; mov al, 0x99 ; out dx, al ; jmp qword ptr [rbx]
0x00000000004d750e : add byte ptr [rax], al ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret 1
0x00000000004a2a6e : add byte ptr [rax], al ; mov byte ptr [rip + 0x2b75a9], 0 ; ret
0x000000000046ea72 : add byte ptr [rax], al ; mov byte ptr [rsp + 1], al ; call r12
0x000000000054771f : add byte ptr [rax], al ; mov dl, 0xf3 ; jmp qword ptr [rax]
0x000000000053e1e6 : add byte ptr [rax], al ; mov dl, al ; int1 ; jmp qword ptr [rdi]
0x00000000004b849f : add byte ptr [rax], al ; mov dword ptr [r8], r10d ; pop rbp ; pop r12 ; ret
0x0000000000402324 : add byte ptr [rax], al ; mov dword ptr [rbx + 0x14], eax ; pop rbx ; ret
0x00000000004a25e2 : add byte ptr [rax], al ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x0000000000402c16 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x10], 1 ; ret
0x000000000041a349 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x20], 0 ; ret
0x000000000044edfe : add byte ptr [rax], al ; mov dword ptr [rdi + 0x20], esi ; ret
0x00000000004b3e3e : add byte ptr [rax], al ; mov dword ptr [rdi + 0x28], esi ; ret
0x000000000044acee : add byte ptr [rax], al ; mov dword ptr [rdi + 0x48], esi ; ret
0x00000000004a22cb : add byte ptr [rax], al ; mov dword ptr [rdi + 0x58], 0 ; ret
0x00000000004a2602 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x5c], 0 ; ret
0x00000000004b0dee : add byte ptr [rax], al ; mov dword ptr [rdi + 0xb8], esi ; ret
0x000000000042470e : add byte ptr [rax], al ; mov dword ptr [rdi], esi ; ret
0x000000000043b8be : add byte ptr [rax], al ; mov dword ptr [rip + 0x31e612], edi ; ret
0x000000000046f9ae : add byte ptr [rax], al ; mov dword ptr [rsi], 0xffffffff ; ret
0x0000000000421c53 : add byte ptr [rax], al ; mov eax, 0x1e ; pop rbx ; ret
0x000000000044a36e : add byte ptr [rax], al ; mov eax, 0x40 ; ret
0x000000000040216e : add byte ptr [rax], al ; mov eax, 0x4d0230 ; ret
0x000000000040617e : add byte ptr [rax], al ; mov eax, 0x4d17bf ; ret
0x0000000000421a3e : add byte ptr [rax], al ; mov eax, 0x4e50c0 ; ret
0x0000000000421a2e : add byte ptr [rax], al ; mov eax, 0x4e5140 ; ret
0x0000000000421a1e : add byte ptr [rax], al ; mov eax, 0x4e51c0 ; ret
0x0000000000421a0e : add byte ptr [rax], al ; mov eax, 0x4e5240 ; ret
0x00000000004219fe : add byte ptr [rax], al ; mov eax, 0x4e52c0 ; ret
0x0000000000454fde : add byte ptr [rax], al ; mov eax, 0x4f0620 ; ret
0x000000000045a12e : add byte ptr [rax], al ; mov eax, 0x4f1400 ; ret
0x0000000000478bde : add byte ptr [rax], al ; mov eax, 0x51c1b1 ; ret
0x0000000000478bee : add byte ptr [rax], al ; mov eax, 0x51c1c6 ; ret
0x0000000000478bfe : add byte ptr [rax], al ; mov eax, 0x51c1d3 ; ret
0x0000000000478c0e : add byte ptr [rax], al ; mov eax, 0x51c1e6 ; ret
0x0000000000478c1e : add byte ptr [rax], al ; mov eax, 0x51c1fc ; ret
0x0000000000478c2e : add byte ptr [rax], al ; mov eax, 0x51c209 ; ret
0x000000000049118e : add byte ptr [rax], al ; mov eax, 0x5210b8 ; ret
0x0000000000494b5e : add byte ptr [rax], al ; mov eax, 0x5211c0 ; ret
0x0000000000494b4e : add byte ptr [rax], al ; mov eax, 0x5211e0 ; ret
0x0000000000494b3e : add byte ptr [rax], al ; mov eax, 0x521200 ; ret
0x0000000000494b2e : add byte ptr [rax], al ; mov eax, 0x521220 ; ret
0x000000000049879e : add byte ptr [rax], al ; mov eax, 0x5216c0 ; ret
0x0000000000498cce : add byte ptr [rax], al ; mov eax, 0x521800 ; ret
0x000000000049ccbe : add byte ptr [rax], al ; mov eax, 0x522380 ; ret
0x00000000004a3ace : add byte ptr [rax], al ; mov eax, 0x522ee0 ; ret
0x00000000004a3a9e : add byte ptr [rax], al ; mov eax, 0x522f40 ; ret
0x00000000004a3a8e : add byte ptr [rax], al ; mov eax, 0x522fa0 ; ret
0x00000000004a3a7e : add byte ptr [rax], al ; mov eax, 0x523000 ; ret
0x00000000004a3a6e : add byte ptr [rax], al ; mov eax, 0x523060 ; ret
0x00000000004a3a5e : add byte ptr [rax], al ; mov eax, 0x5230c0 ; ret
0x00000000004a3a4e : add byte ptr [rax], al ; mov eax, 0x523120 ; ret
0x00000000004a3a3e : add byte ptr [rax], al ; mov eax, 0x523180 ; ret
0x00000000004a3a2e : add byte ptr [rax], al ; mov eax, 0x5231e0 ; ret
0x00000000004a3a1e : add byte ptr [rax], al ; mov eax, 0x523240 ; ret
0x00000000004a3a0e : add byte ptr [rax], al ; mov eax, 0x5232a0 ; ret
0x00000000004a5e5e : add byte ptr [rax], al ; mov eax, 0x523480 ; ret
0x00000000004a5e4e : add byte ptr [rax], al ; mov eax, 0x5234e0 ; ret
0x00000000004a5e3e : add byte ptr [rax], al ; mov eax, 0x523540 ; ret
0x00000000004a5e9e : add byte ptr [rax], al ; mov eax, 0x524b60 ; ret
0x0000000000438e6e : add byte ptr [rax], al ; mov eax, 0x756980 ; ret
0x0000000000467c0e : add byte ptr [rax], al ; mov eax, 0x756aa0 ; ret
0x0000000000485eee : add byte ptr [rax], al ; mov eax, 0x757040 ; ret
0x0000000000485ede : add byte ptr [rax], al ; mov eax, 0x7570a0 ; ret
0x000000000049f57e : add byte ptr [rax], al ; mov eax, 0x757500 ; ret
0x00000000004a0f3e : add byte ptr [rax], al ; mov eax, 0x7575e0 ; ret
0x00000000004a108e : add byte ptr [rax], al ; mov eax, 0x757640 ; ret
0x00000000004a1afe : add byte ptr [rax], al ; mov eax, 0x7576a0 ; ret
0x00000000004a75ee : add byte ptr [rax], al ; mov eax, 0x757760 ; ret
0x00000000004b81be : add byte ptr [rax], al ; mov eax, 0x757c60 ; ret
0x000000000043a7be : add byte ptr [rax], al ; mov eax, 0x759eb8 ; ret
0x0000000000406198 : add byte ptr [rax], al ; mov eax, 0x75b4b8 ; ret
0x000000000043929e : add byte ptr [rax], al ; mov eax, 0xfffffffe ; pop rbx ; ret
0x000000000043d0ee : add byte ptr [rax], al ; mov eax, 0xfffffffe ; ret
0x0000000000423656 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000421bd4 : add byte ptr [rax], al ; mov eax, 1 ; je 0x421c09 ; ret
0x000000000041a3bd : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x0000000000402b1e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000004655bd : add byte ptr [rax], al ; mov eax, 2 ; pop rbx ; ret
0x00000000004b33f6 : add byte ptr [rax], al ; mov eax, 3 ; ret
0x0000000000421efe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; and eax, esi ; ret
0x000000000041988e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; and eax, esi ; ret
0x00000000004228de : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000041a0ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; ret
0x00000000004b44be : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000044ef8e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x2c] ; ret
0x000000000044acae : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x40] ; ret
0x000000000043ea76 : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x48] ; ret
0x0000000000421e3e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x64] ; ret
0x0000000000421e0e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000421f2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x70] ; and eax, esi ; ret
0x000000000043a79e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xa8] ; ret
0x00000000004b187e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xb0] ; ret
0x00000000004b0dfe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xb4] ; ret
0x0000000000421dde : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x0000000000421d5e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; ret
0x0000000000421dfe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000421e1e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x000000000041d36e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x000000000043b8ae : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x31e622] ; ret
0x000000000040215e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x355b6e] ; ret
0x000000000040214e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x355b7a] ; ret
0x00000000004491ee : add byte ptr [rax], al ; mov eax, dword ptr [rsi] ; cmp dword ptr [rdi], eax ; je 0x449209 ; ret
0x0000000000471501 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004044e0 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000004ae2ae : add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000419853 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000041985e : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000004a11cf : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000402956 : add byte ptr [rax], al ; mov eax, r9d ; ret
0x000000000054db62 : add byte ptr [rax], al ; mov ebx, gs ; add dword ptr [rax], eax ; test al, 0x3f ; cmc ; call qword ptr [rsi]
0x000000000044691e : add byte ptr [rax], al ; mov ecx, 0x4e7aa0 ; jmp 0x442b99
0x000000000044697e : add byte ptr [rax], al ; mov ecx, 0x4e7c60 ; jmp 0x442b99
0x000000000044693e : add byte ptr [rax], al ; mov ecx, 0x4e7d00 ; jmp 0x442b99
0x000000000048933b : add byte ptr [rax], al ; mov edi, 0x21 ; call 0x405629
0x00000000004093a3 : add byte ptr [rax], al ; mov edi, 3 ; call 0x405629
0x0000000000449378 : add byte ptr [rax], al ; mov edi, 8 ; call 0x405629
0x000000000053e762 : add byte ptr [rax], al ; mov edi, dr0 ; add byte ptr [rax], al ; clc ; sub edx, esi ; call qword ptr [rdi]
0x00000000004442ce : add byte ptr [rax], al ; mov edx, 0x4e7760 ; jmp 0x440589
0x000000000044428e : add byte ptr [rax], al ; mov edx, 0x4e7840 ; jmp 0x440589
0x000000000054ea62 : add byte ptr [rax], al ; mov edx, dr1 ; add dword ptr [rax], eax ; pop rax ; jo 0x54ea69 ; call qword ptr [rsi]
0x0000000000419866 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x4197f9
0x000000000054ae1a : add byte ptr [rax], al ; mov esi, 0x4e500001 ; hlt ; jmp qword ptr [rdx]
0x000000000046a5cb : add byte ptr [rax], al ; mov esi, 1 ; call 0x406849
0x00000000004a7db5 : add byte ptr [rax], al ; mov esi, 6 ; call rax
0x00000000004a7e08 : add byte ptr [rax], al ; mov esi, 6 ; jmp rax
0x00000000004b05b1 : add byte ptr [rax], al ; mov esi, ebp ; call 0x41c846
0x00000000004b05ec : add byte ptr [rax], al ; mov esi, ebx ; call 0x41c846
0x0000000000550c92 : add byte ptr [rax], al ; mov esp, 0x3800021c ; loop 0x550c99 ; jmp qword ptr [rbx]
0x000000000054ea92 : add byte ptr [rax], al ; mov esp, 0x680001fa ; jo 0x54ea99 ; call qword ptr [rsi]
0x0000000000545192 : add byte ptr [rax], al ; mov esp, 0xd8000161 ; call qword ptr [rax]
0x0000000000545692 : add byte ptr [rax], al ; mov esp, 0xe8000166 ; call qword ptr [rax]
0x00000000004060a7 : add byte ptr [rax], al ; mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x00000000004198ce : add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000041c2ce : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000044778e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x00000000004228fe : add byte ptr [rax], al ; mov qword ptr [rdi + 0x28], rsi ; ret
0x000000000042293e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x30], rsi ; ret
0x000000000043ea0e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], rsi ; ret
0x00000000004228ee : add byte ptr [rax], al ; mov qword ptr [rdi + 0x40], rsi ; mov dword ptr [rdi + 0x48], edx ; ret
0x000000000044a6de : add byte ptr [rax], al ; mov qword ptr [rdi + 0x40], rsi ; ret
0x0000000000421dce : add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rsi ; ret
0x00000000004b328e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x68], rsi ; ret
0x000000000047213e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x70], rsi ; ret
0x00000000004229f5 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x88], rdx ; ret
0x000000000044389d : add byte ptr [rax], al ; mov qword ptr [rdi + 0x90], rax ; ret
0x0000000000422a05 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rdx ; ret
0x00000000004438ae : add byte ptr [rax], al ; mov qword ptr [rdi + 0xa0], rsi ; ret
0x0000000000422a15 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xa8], rdx ; ret
0x00000000004438be : add byte ptr [rax], al ; mov qword ptr [rdi + 0xa8], rsi ; ret
0x0000000000422a25 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xb8], rdx ; ret
0x0000000000443825 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xc0], rax ; ret
0x00000000004438d5 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xc0], rsi ; ret
0x000000000042225b : add byte ptr [rax], al ; mov qword ptr [rdi + 0xc8], rax ; ret
0x0000000000422a35 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xc8], rdx ; ret
0x0000000000406035 : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000423f02 : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000004380ce : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000004b74fe : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a2bf1], rdi ; ret
0x00000000004adede : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a99e9], rdi ; ret
0x0000000000479d7e : add byte ptr [rax], al ; mov qword ptr [rip + 0x2dce61], rdi ; ret
0x000000000046a2ce : add byte ptr [rax], al ; mov qword ptr [rip + 0x2efce9], rdi ; ret
0x0000000000469d1e : add byte ptr [rax], al ; mov qword ptr [rip + 0x2f0291], rdi ; ret
0x0000000000467c1e : add byte ptr [rax], al ; mov qword ptr [rip + 0x2f2389], rdi ; ret
0x0000000000437d6e : add byte ptr [rax], al ; mov qword ptr [rip + 0x322139], rdi ; ret
0x0000000000406a89 : add byte ptr [rax], al ; mov qword ptr [rip + 0x34fd36], rsi ; ret
0x0000000000406a49 : add byte ptr [rax], al ; mov qword ptr [rip + 0x34fd5e], rsi ; ret
0x000000000040785e : add byte ptr [rax], al ; mov qword ptr [rip + 0x352071], rdi ; ret
0x00000000004060fe : add byte ptr [rax], al ; mov qword ptr [rip + 0x353761], rdi ; ret
0x000000000040601e : add byte ptr [rax], al ; mov qword ptr [rip + 0x353849], rdi ; ret
0x0000000000405fce : add byte ptr [rax], al ; mov qword ptr [rip + 0x353871], rdi ; ret
0x0000000000405fbe : add byte ptr [rax], al ; mov qword ptr [rip + 0x353889], rdi ; ret
0x0000000000405fae : add byte ptr [rax], al ; mov qword ptr [rip + 0x3538a1], rdi ; ret
0x0000000000467b85 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000467b75 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000004198de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000042292e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000043d25e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000042148e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x28] ; jmp rax
0x000000000042290e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000042294e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000004b43ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x38] ; mov dword ptr [rax + 8], esi ; ret
0x000000000043ea1e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000044a6ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x40] ; ret
0x000000000044ad8e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x50] ; ret
0x000000000044ad9e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x58] ; ret
0x0000000000421dbe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x60] ; ret
0x000000000043a75e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000043a76e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x70] ; ret
0x000000000043a77e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x78] ; ret
0x000000000043a78e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x80] ; ret
0x000000000043a7ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x00000000004b186e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x00000000004b0e0e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xc0] ; ret
0x00000000004b0e4e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xc8] ; ret
0x00000000004b0e5e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xd0] ; ret
0x00000000004b0e6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xe0] ; ret
0x00000000004198ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000421dee : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 0xc] ; ret
0x0000000000421d6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 4] ; ret
0x00000000004198fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x000000000046a2fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov qword ptr [rdi], rsi ; ret
0x0000000000421dae : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x10] ; ret
0x0000000000478dee : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x18] ; ret
0x0000000000478dfe : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000000004198ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000421d8e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x00000000004adeee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a99d9] ; ret
0x000000000046a2de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2efcd9] ; ret
0x000000000040689e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x351419] ; ret
0x000000000040786e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x352061] ; ret
0x00000000004060ee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x353771] ; ret
0x0000000000405fee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x353879] ; ret
0x0000000000405fde : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x353891] ; ret
0x0000000000405f9e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3538a1] ; ret
0x0000000000405f8e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3538b9] ; ret
0x0000000000405f7e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3538d1] ; ret
0x000000000044012b : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000048b686 : add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041c366 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f3f3 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040425a : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000004024f6 : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000004b754e : add byte ptr [rax], al ; mov rax, rsi ; mov qword ptr [rdi], rsi ; ret
0x0000000000486b35 : add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x00000000004b07b9 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000048562c : add byte ptr [rax], al ; mov rdi, r14 ; call 0x401857
0x000000000048e336 : add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x0000000000419f5e : add byte ptr [rax], al ; mov rdi, rbx ; call r12
0x0000000000419819 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004c60ce : add byte ptr [rax], al ; mov rdx, r12 ; call rax
0x00000000004755bf : add byte ptr [rax], al ; mov rdx, r14 ; call rax
0x000000000047c73b : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000004b00e2 : add byte ptr [rax], al ; mov rsi, r15 ; call r14
0x00000000004950ff : add byte ptr [rax], al ; mov rsi, rbx ; call r14
0x000000000046d1f0 : add byte ptr [rax], al ; mov rsi, rbx ; call rax
0x000000000046fc4d : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r12 ; call rax
0x0000000000548062 : add byte ptr [rax], al ; mov word ptr [rax - 0x3307ffff], ss ; call qword ptr [rax]
0x0000000000545162 : add byte ptr [rax], al ; mov word ptr [rcx + 1], fs ; add al, ch ; call qword ptr [rax]
0x0000000000545662 : add byte ptr [rax], al ; mov word ptr [rsi + 1], fs ; add al, ch ; call qword ptr [rax]
0x000000000053037a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], dl ; pop rsi ; in eax, dx ; call qword ptr [rax]
0x000000000054cf7a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rcx] ; add al, dl ; sub dh, ch ; jmp rcx
0x0000000000529876 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call rsp
0x000000000054f97a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rdx], eax ; add byte ptr [rax], dl ; sahf ; cmc ; call qword ptr [rdi]
0x00000000005280ce : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffed
0x000000000054b27a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000054c67a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; salc ; add dword ptr [rax], eax ; adc al, bh ; hlt ; jmp qword ptr [rax]
0x000000000041d35e : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi] ; ret
0x0000000000421ede : add byte ptr [rax], al ; movsxd rsi, esi ; or qword ptr [rdi + 0x10], rsi ; ret
0x0000000000421f0e : add byte ptr [rax], al ; movsxd rsi, esi ; or qword ptr [rdi + 0x70], rsi ; ret
0x0000000000401dbb : add byte ptr [rax], al ; movzx eax, byte ptr [rbp - 1] ; leave ; ret
0x0000000000401d5e : add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004498cd : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x000000000043b7dd : add byte ptr [rax], al ; nop ; movsxd rax, dword ptr [rdi] ; ret
0x000000000043db8d : add byte ptr [rax], al ; nop ; ret
0x000000000053182e : add byte ptr [rax], al ; nop ; ret 0xffed
0x00000000004b18ac : add byte ptr [rax], al ; nop ; xor eax, eax ; pop rbx ; ret
0x000000000043cb2d : add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x0000000000406482 : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000041987e : add byte ptr [rax], al ; not esi ; and dword ptr [rdi + 0x20], esi ; ret
0x000000000044efae : add byte ptr [rax], al ; not esi ; and dword ptr [rdi + 0x2c], esi ; ret
0x0000000000531bbe : add byte ptr [rax], al ; or ah, 0xed ; jmp qword ptr [rcx]
0x0000000000546ee2 : add byte ptr [rax], al ; or al, 0x7f ; add dword ptr [rax], eax ; clc ; popfq ; call rbx
0x00000000005374e2 : add byte ptr [rax], al ; or al, 0x85 ; add byte ptr [rax], al ; sbb byte ptr [rbx - 0x10], al ; call qword ptr [rbx]
0x0000000000547be2 : add byte ptr [rax], al ; or al, 0x8c ; add dword ptr [rax], eax ; or bh, al ; call qword ptr [rdx]
0x0000000000547fe2 : add byte ptr [rax], al ; or al, 0x90 ; add dword ptr [rax], eax ; cmp ah, cl ; call rbx
0x000000000054a8e2 : add byte ptr [rax], al ; or al, 0xb9 ; add dword ptr [rax], eax ; sbb byte ptr [rsi], ch ; hlt ; call qword ptr [rcx]
0x000000000052fee2 : add byte ptr [rax], al ; or al, 0xf ; add byte ptr [rax], al ; clc ; pop rdx ; in eax, dx ; call qword ptr [rsi]
0x000000000053e1e2 : add byte ptr [rax], al ; or al, 0xf2 ; add byte ptr [rax], al ; mov dl, al ; int1 ; jmp qword ptr [rdi]
0x000000000054ebe2 : add byte ptr [rax], al ; or al, 0xfc ; add dword ptr [rax], eax ; fdiv dword ptr [rax - 0xb] ; call qword ptr [rsi]
0x00000000004e29e2 : add byte ptr [rax], al ; or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004ddc62 : add byte ptr [rax], al ; or al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x4e37
0x00000000004df94a : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e3b
0x00000000004e0f52 : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e3e
0x00000000004dc862 : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x000000000044accb : add byte ptr [rax], al ; or byte ptr [rcx], 0xc6 ; mov dword ptr [rdi + 0x44], esi ; ret
0x000000000053cd46 : add byte ptr [rax], al ; or byte ptr [rdx], ah ; int1 ; call qword ptr [rdx]
0x0000000000531c66 : add byte ptr [rax], al ; or dh, cl ; in eax, dx ; call qword ptr [rsi]
0x000000000053acbe : add byte ptr [rax], al ; or dl, 0xf0 ; call qword ptr [rdi]
0x000000000041e069 : add byte ptr [rax], al ; or dword ptr [rax + 0x20], 0xd ; ret
0x00000000004e2352 : add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041989e : add byte ptr [rax], al ; or dword ptr [rdi + 0x20], esi ; ret
0x000000000044ef9e : add byte ptr [rax], al ; or dword ptr [rdi + 0x2c], esi ; ret
0x00000000004db93a : add byte ptr [rax], al ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0x4e30
0x00000000004380be : add byte ptr [rax], al ; or esi, 2 ; mov dword ptr [rdi + 0x20], esi ; ret
0x00000000005285e6 : add byte ptr [rax], al ; out dx, al ; call rsp
0x0000000000425185 : add byte ptr [rax], al ; pop r12 ; ret
0x000000000040e33b : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000048be1f : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000402a3b : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000401c5e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000046c52b : add byte ptr [rax], al ; pop rbx ; pop rbp ; jmp rax
0x000000000040865e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041970d : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401ece : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000402657 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000040dc5e : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000534e3a : add byte ptr [rax], al ; pop rsi ; add byte ptr [rax], al ; and al, ch ; out dx, al ; call rcx
0x0000000000551632 : add byte ptr [rax], al ; pop rsp ; add al, byte ptr es:[rax] ; cwde ; or dh, dh ; call qword ptr [rbx]
0x0000000000533832 : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; call 0xffffffffd55326f4
0x0000000000543e32 : add byte ptr [rax], al ; pop rsp ; add qword ptr [rax], r8 ; js 0x543e94 ; call qword ptr [rbx]
0x0000000000535c32 : add byte ptr [rax], al ; pop rsp ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; sub bh, ch ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000530d32 : add byte ptr [rax], al ; pop rsp ; sbb eax, 0x78980000 ; in eax, dx ; call rsp
0x000000000053b58e : add byte ptr [rax], al ; push rax ; fcomi st(0) ; call qword ptr [rdx]
0x000000000053e32e : add byte ptr [rax], al ; push rax ; leave ; int1 ; jmp rbx
0x000000000053baee : add byte ptr [rax], al ; push rax ; out -0x10, eax ; jmp rbx
0x00000000005357fe : add byte ptr [rax], al ; push rax ; std ; out dx, al ; jmp qword ptr [rbx]
0x000000000052fd0f : add byte ptr [rax], al ; push rbp ; in eax, dx ; call rbx
0x000000000054002a : add byte ptr [rax], al ; push rsp ; adc byte ptr [rcx], al ; add al, dl ; pushfq ; call qword ptr [rbx]
0x000000000053e32a : add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; push rax ; leave ; int1 ; jmp rbx
0x000000000054312a : add byte ptr [rax], al ; push rsp ; add dword ptr [r8], eax ; jo 0x54314e ; jmp rsp
0x000000000054352a : add byte ptr [rax], al ; push rsp ; add dword ptr [r8], r8d ; sal byte ptr [rcx], 1 ; call qword ptr [rax]
0x000000000054552a : add byte ptr [rax], al ; push rsp ; add dword ptr gs:[rax], eax ; shl byte ptr [rsi - 0xd], 1 ; call qword ptr [rax]
0x000000000053282a : add byte ptr [rax], al ; push rsp ; cmp byte ptr [rax], al ; add byte ptr [rax], al ; jnp 0x53282a ; jmp qword ptr [rbx]
0x000000000053dc2a : add byte ptr [rax], al ; push rsp ; in al, dx ; add byte ptr [rax], al ; mov al, 0x8d ; int1 ; jmp qword ptr [rcx]
0x000000000052fa2a : add byte ptr [rax], al ; push rsp ; or al, byte ptr [rax] ; add byte ptr [rax], ah ; in eax, dx ; call qword ptr [rsi]
0x0000000000535a2a : add byte ptr [rax], al ; push rsp ; push 0 ; add byte ptr [rax + 6], ah ; out dx, eax ; call qword ptr [rbx]
0x000000000054432a : add byte ptr [rax], al ; push rsp ; push rbx ; add dword ptr [rax], eax ; push rax ; pop rbp ; jmp qword ptr [rbx]
0x000000000052919e : add byte ptr [rax], al ; push rsp ; ret
0x000000000053b02a : add byte ptr [rax], al ; push rsp ; rol byte ptr [rax], 0 ; adc ah, 0xf0 ; call qword ptr [rax]
0x000000000052ff2a : add byte ptr [rax], al ; push rsp ; sldt word ptr [rax] ; adc byte ptr [rbx - 0x13], bl ; call qword ptr [rbx]
0x0000000000528d9e : add byte ptr [rax], al ; push rsp ; xchg eax, ebp ; out dx, eax ; jmp rsp
0x0000000000546daf : add byte ptr [rax], al ; pushfq ; call qword ptr [rdx]
0x000000000054ec72 : add byte ptr [rax], al ; pushfq ; cld ; add dword ptr [rax], eax ; or byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000054e572 : add byte ptr [rax], al ; pushfq ; cmc ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xb], bl ; jmp qword ptr [rdi]
0x0000000000534272 : add byte ptr [rax], al ; pushfq ; push rdx ; add byte ptr [rax], al ; test al, 0xd6 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000550b72 : add byte ptr [rax], al ; pushfq ; sbb eax, dword ptr [rdx] ; add byte ptr [rax - 0x24], cl ; cmc ; jmp rsi
0x000000000053836e : add byte ptr [rax], al ; rcl byte ptr [rdi - 0x10], 1 ; call qword ptr [rbx]
0x000000000053b64e : add byte ptr [rax], al ; rcr bl, 0xf0 ; jmp qword ptr [rbx]
0x000000000053033e : add byte ptr [rax], al ; rcr byte ptr [rbp - 0x13], 1 ; jmp qword ptr [rax]
0x0000000000402365 : add byte ptr [rax], al ; ret
0x00000000004ca5dd : add byte ptr [rax], al ; ret 0
0x00000000004dbd86 : add byte ptr [rax], al ; ret 0x4d36
0x00000000004dc876 : add byte ptr [rax], al ; ret 0x4d3b
0x00000000004de386 : add byte ptr [rax], al ; ret 0x4d47
0x00000000004de856 : add byte ptr [rax], al ; ret 0x4d49
0x00000000004e1e66 : add byte ptr [rax], al ; ret 0x4d62
0x00000000004da67e : add byte ptr [rax], al ; ret 0x4e2c
0x00000000004db93e : add byte ptr [rax], al ; ret 0x4e30
0x00000000004ddc66 : add byte ptr [rax], al ; ret 0x4e37
0x00000000004df94e : add byte ptr [rax], al ; ret 0x4e3b
0x00000000004e0786 : add byte ptr [rax], al ; ret 0x4e3d
0x00000000004e0f56 : add byte ptr [rax], al ; ret 0x4e3e
0x000000000051d23e : add byte ptr [rax], al ; ret 0x51ce
0x000000000051f0ee : add byte ptr [rax], al ; ret 0x51eb
0x00000000004c9700 : add byte ptr [rax], al ; ret 0x8401
0x00000000005316ff : add byte ptr [rax], al ; ret 0xffed
0x000000000053e1ce : add byte ptr [rax], al ; ret 0xfff1
0x00000000004c9676 : add byte ptr [rax], al ; ret 1
0x00000000004d6d4a : add byte ptr [rax], al ; ret 2
0x00000000004c965d : add byte ptr [rax], al ; ret 7
0x000000000053ab8e : add byte ptr [rax], al ; rol ah, 0xf0 ; call qword ptr [rsi]
0x000000000054b022 : add byte ptr [rax], al ; rol byte ptr [rcx], 0 ; js 0x54b08f ; hlt ; jmp rsp
0x000000000053e21e : add byte ptr [rax], al ; rol dl, 0xf1 ; call qword ptr [rbx]
0x0000000000533d5e : add byte ptr [rax], al ; rol dl, 1 ; out dx, al ; call rax
0x00000000005326f2 : add byte ptr [rax], al ; sbb al, 0x37 ; add byte ptr [rax], al ; sub byte ptr [rdx - 0x12], bh ; call qword ptr [rbx]
0x0000000000548df2 : add byte ptr [rax], al ; sbb al, 0x9e ; add dword ptr [rax], eax ; pop rax ; clc ; jmp rdi
0x000000000053fbf2 : add byte ptr [rax], al ; sbb al, 0xc ; add dword ptr [rax], eax ; mov dl, sil ; jmp qword ptr [rsi]
0x000000000054c4f2 : add byte ptr [rax], al ; sbb al, 0xd5 ; add dword ptr [rax], eax ; sbb ah, dh ; hlt ; jmp qword ptr [rsi]
0x000000000053e6f2 : add byte ptr [rax], al ; sbb al, 0xf7 ; add byte ptr [rax], al ; sub byte ptr [rsi], ah ; call qword ptr [rdx]
0x000000000054eaf2 : add byte ptr [rax], al ; sbb al, 0xfb ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; call qword ptr [rsi]
0x000000000053f2f2 : add byte ptr [rax], al ; sbb al, 3 ; add dword ptr [rax], eax ; call 0x2753e56b
0x00000000005374e6 : add byte ptr [rax], al ; sbb byte ptr [rbx - 0x10], al ; call qword ptr [rbx]
0x000000000053496e : add byte ptr [rax], al ; sbb dh, 0xee ; jmp rsi
0x0000000000533f46 : add byte ptr [rax], al ; sbb dl, cl ; out dx, al ; call qword ptr [rdx]
0x0000000000449276 : add byte ptr [rax], al ; setne al ; add rsp, 8 ; ret
0x00000000004a1034 : add byte ptr [rax], al ; setne al ; movzx eax, al ; ret
0x000000000046b566 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000054eb22 : add byte ptr [rax], al ; sti ; add dword ptr [rax], eax ; cwde ; jo 0x54eb29 ; call qword ptr [rsi]
0x0000000000530202 : add byte ptr [rax], al ; sub al, 0x12 ; add byte ptr [rax], al ; clc ; pop rbp ; in eax, dx ; call qword ptr [rdx]
0x0000000000550402 : add byte ptr [rax], al ; sub al, 0x14 ; add al, byte ptr [rax] ; mov cl, al ; cmc ; call qword ptr [rbx]
0x0000000000551a02 : add byte ptr [rax], al ; sub al, 0x2a ; add al, byte ptr [rax] ; clc ; adc esi, esi ; call qword ptr [rcx]
0x0000000000531a02 : add byte ptr [rax], al ; sub al, 0x2a ; add byte ptr [rax], al ; js 0x5319da ; in eax, dx ; call qword ptr [rax]
0x0000000000545102 : add byte ptr [rax], al ; sub al, 0x61 ; add dword ptr [rax], eax ; or byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x0000000000538402 : add byte ptr [rax], al ; sub al, 0x94 ; add byte ptr [rax], al ; call 0xffffffffe4537470
0x0000000000549e02 : add byte ptr [rax], al ; sub al, 0xae ; add dword ptr [rax], eax ; cmp byte ptr [rsp + rsi*8], dl ; call qword ptr [rbx]
0x000000000053e202 : add byte ptr [rax], al ; sub al, 0xf2 ; add byte ptr [rax], al ; cwde ; ret 0xfff1
0x0000000000535c36 : add byte ptr [rax], al ; sub bh, ch ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000537e36 : add byte ptr [rax], al ; sub byte ptr [rcx - 0x10], dl ; jmp qword ptr [rbx]
0x00000000005326f6 : add byte ptr [rax], al ; sub byte ptr [rdx - 0x12], bh ; call qword ptr [rbx]
0x000000000053e6f6 : add byte ptr [rax], al ; sub byte ptr [rsi], ah ; call qword ptr [rdx]
0x0000000000541d3a : add byte ptr [rax], al ; sub eax, 0xe6400001 ; call qword ptr [rdi]
0x000000000040bb86 : add byte ptr [rax], al ; sub edx, 1 ; jmp 0x40bb56
0x00000000004149b8 : add byte ptr [rax], al ; sub esi, 1 ; jne 0x4149b1 ; ret
0x00000000004dc866 : add byte ptr [rax], al ; sysenter
0x00000000005308d6 : add byte ptr [rax], al ; test al, 0x67 ; in eax, dx ; call qword ptr [rbx]
0x0000000000534276 : add byte ptr [rax], al ; test al, 0xd6 ; out dx, al ; jmp qword ptr [rdx]
0x000000000042320f : add byte ptr [rax], al ; test al, 1 ; jne 0x423228 ; pop rbx ; ret
0x000000000053b55a : add byte ptr [rax], al ; test al, ch ; add byte ptr [rax], al ; fcomi st(0) ; jmp qword ptr [rbx]
0x000000000054ec5a : add byte ptr [rax], al ; test bh, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000054e85a : add byte ptr [rax], al ; test bh, al ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], ch ; jmp qword ptr [rbx]
0x000000000053cd5a : add byte ptr [rax], al ; test bl, ch ; add byte ptr [rax], al ; adc byte ptr [rdx], ah ; int1 ; call qword ptr [rbx]
0x000000000054a85a : add byte ptr [rax], al ; test byte ptr [rax + 0x2d700001], bh ; hlt ; call rbx
0x000000000054505a : add byte ptr [rax], al ; test byte ptr [rax + 1], ah ; add byte ptr [rax + 0x67], al ; call qword ptr [rax]
0x0000000000530c5a : add byte ptr [rax], al ; test byte ptr [rax + rax], bl ; add byte ptr [rax], dh ; jae 0x530c59 ; call qword ptr [rsi]
0x0000000000528a2e : add byte ptr [rax], al ; test byte ptr [rax - 0x11], cl ; jmp rsp
0x000000000054555a : add byte ptr [rax], al ; test byte ptr [rbp + 1], ah ; add al, dl ; call qword ptr [rax]
0x0000000000533d5a : add byte ptr [rax], al ; test byte ptr [rbp], cl ; add al, dl ; ret 0xffee
0x000000000054815a : add byte ptr [rax], al ; test byte ptr [rcx - 0x2dafffff], dl ; jmp qword ptr [rbx]
0x00000000004adebe : add byte ptr [rax], al ; test byte ptr [rdi + 0x20], 1 ; jne 0x4aded9 ; ret
0x00000000004380de : add byte ptr [rax], al ; test byte ptr [rdi + 0x20], 2 ; jne 0x4380f9 ; ret
0x000000000047bdbe : add byte ptr [rax], al ; test byte ptr [rdi + 4], 1 ; jne 0x47bdd9 ; ret
0x0000000000533a5a : add byte ptr [rax], al ; test byte ptr [rdx], cl ; add byte ptr [rax - 0x47], dh ; out dx, al ; jmp rcx
0x0000000000528546 : add byte ptr [rax], al ; test byte ptr [rsi], al ; out dx, al ; jmp rsp
0x00000000004a921e : add byte ptr [rax], al ; test cl, cl ; js 0x4a9239 ; mov qword ptr [rdx], rcx ; ret
0x000000000044660e : add byte ptr [rax], al ; test eax, eax ; cmovne eax, edx ; jmp 0x4465c8
0x00000000004045ec : add byte ptr [rax], al ; test eax, eax ; jle 0x404600 ; pop rbx ; ret
0x000000000043cb03 : add byte ptr [rax], al ; test eax, eax ; jne 0x43cb19 ; xor eax, eax ; pop rbx ; ret
0x000000000042097e : add byte ptr [rax], al ; test esi, esi ; jne 0x420997 ; ret
0x000000000043cdc2 : add byte ptr [rax], al ; test rax, rax ; je 0x43cdda ; call rax
0x000000000043d0d4 : add byte ptr [rax], al ; test rax, rax ; je 0x43d0f7 ; jmp rax
0x000000000043d67e : add byte ptr [rax], al ; test rax, rax ; je 0x43d697 ; jmp rax
0x000000000044c3b2 : add byte ptr [rax], al ; test rax, rax ; je 0x44c3c7 ; jmp rax
0x000000000044c3f2 : add byte ptr [rax], al ; test rax, rax ; je 0x44c407 ; jmp rax
0x000000000047140a : add byte ptr [rax], al ; test rax, rax ; je 0x47141f ; ret
0x00000000004b10be : add byte ptr [rax], al ; test rax, rax ; je 0x4b10d9 ; call rax
0x000000000041c82e : add byte ptr [rax], al ; test rdi, rdi ; je 0x41c841 ; mov eax, dword ptr [rdi] ; ret
0x00000000004b776e : add byte ptr [rax], al ; test rdi, rdi ; je 0x4b7789 ; mov eax, dword ptr [rdi] ; ret
0x000000000043d120 : add byte ptr [rax], al ; test rdx, rdx ; je 0x43d138 ; call rdx
0x000000000043e736 : add byte ptr [rax], al ; test rdx, rdx ; je 0x43e74a ; call rdx
0x000000000043e8c6 : add byte ptr [rax], al ; test rdx, rdx ; je 0x43e8da ; call rdx
0x000000000046c636 : add byte ptr [rax], al ; test rdx, rdx ; je 0x46c64a ; call rdx
0x000000000046c7d6 : add byte ptr [rax], al ; test rdx, rdx ; je 0x46c7ea ; call rdx
0x000000000046c8d6 : add byte ptr [rax], al ; test rdx, rdx ; je 0x46c8ea ; call rdx
0x000000000046ca7c : add byte ptr [rax], al ; test rdx, rdx ; je 0x46ca90 ; call rdx
0x000000000046cc2c : add byte ptr [rax], al ; test rdx, rdx ; je 0x46cc40 ; call rdx
0x000000000046cddc : add byte ptr [rax], al ; test rdx, rdx ; je 0x46cdf0 ; call rdx
0x000000000054771a : add byte ptr [rax], al ; xchg dword ptr [rcx], r8d ; add byte ptr [rax], al ; mov dl, 0xf3 ; jmp qword ptr [rax]
0x000000000055336a : add byte ptr [rax], al ; xchg eax, esp ; add al, byte ptr [r8] ; and byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x000000000054f16a : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [rdx], eax ; add byte ptr [rax - 0x7c], dl ; cmc ; jmp qword ptr [rdi]
0x00000000005285a6 : add byte ptr [rax], al ; xchg eax, esp ; cmp esi, ebp ; jmp rsp
0x000000000054dd6a : add byte ptr [rax], al ; xchg eax, esp ; in eax, dx ; add dword ptr [rax], eax ; jo 0x54ddc0 ; cmc ; jmp qword ptr [rdi]
0x000000000054d26a : add byte ptr [rax], al ; xchg eax, esp ; loop 0x54d279 ; add al, dh ; sub al, 0xf5 ; jmp rax
0x000000000054a16a : add byte ptr [rax], al ; xchg eax, esp ; mov cl, 1 ; add byte ptr [rax + 0x19], ah ; hlt ; call qword ptr [rax]
0x000000000052fd6a : add byte ptr [rax], al ; xchg eax, esp ; or eax, 0x56800000 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000053496a : add byte ptr [rax], al ; xchg eax, esp ; pop rcx ; add byte ptr [rax], al ; sbb dh, 0xee ; jmp rsi
0x000000000053b36a : add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000053b26a : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000529616 : add byte ptr [rax], al ; xchg eax, esp ; sbb esi, ecx ; call rsp
0x000000000054eb6a : add byte ptr [rax], al ; xchg eax, esp ; sti ; add dword ptr [rax], eax ; mov al, 0x70 ; cmc ; call qword ptr [rsi]
0x0000000000529046 : add byte ptr [rax], al ; xchg eax, esp ; stosb byte ptr [rdi], al ; out dx, eax ; jmp rsp
0x000000000053836a : add byte ptr [rax], al ; xchg eax, esp ; xchg eax, ebx ; add byte ptr [rax], al ; rcl byte ptr [rdi - 0x10], 1 ; call qword ptr [rbx]
0x00000000005297be : add byte ptr [rax], al ; xor al, 0x39 ; int1 ; jmp rsp
0x000000000055330a : add byte ptr [rax], al ; xor al, 0x43 ; add al, byte ptr [rax] ; add byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x0000000000547a0a : add byte ptr [rax], al ; xor al, 0x8a ; add dword ptr [rax], eax ; nop ; ret 0xfff3
0x0000000000537c0a : add byte ptr [rax], al ; xor al, 0x8c ; add byte ptr [rax], al ; and byte ptr [rsi - 0x10], cl ; jmp qword ptr [rax]
0x000000000054b00a : add byte ptr [rax], al ; xor al, 0xc0 ; add dword ptr [rax], eax ; jo 0x54b077 ; hlt ; call qword ptr [rcx]
0x000000000052fd0a : add byte ptr [rax], al ; xor al, 0xd ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dl ; call rbx
0x000000000054eb0a : add byte ptr [rax], al ; xor al, 0xfb ; add dword ptr [rax], eax ; nop ; jo 0x54eb11 ; call qword ptr [rsi]
0x0000000000530c5e : add byte ptr [rax], al ; xor byte ptr [rbx - 0x13], dh ; call qword ptr [rsi]
0x0000000000405b06 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000424325 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043472e : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000402b2e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047933a : add byte ptr [rax], al ; xor ebp, ebp ; call 0x405626
0x0000000000406d5d : add byte ptr [rax], al ; xor edi, edi ; jmp rax
0x000000000044b82e : add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x000000000044046e : add byte ptr [rax], al ; xor esi, esi ; mov rdi, qword ptr [rbx] ; call rax
0x0000000000477888 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call r12
0x000000000043b79e : add byte ptr [rax], al ; xor r8d, r8d ; xor ecx, ecx ; mov rdx, rax ; jmp 0x43b781
0x000000000040fea6 : add byte ptr [rax], al ; xor r9d, r9d ; mov rax, r9 ; ret
0x0000000000532522 : add byte ptr [rax], al ; xor rax, 0x78480000 ; out dx, al ; call rbx
0x0000000000549e07 : add byte ptr [rax], bh ; adc al, 0xf4 ; call qword ptr [rbx]
0x0000000000545013 : add byte ptr [rax], bh ; add dword ptr [rax], eax ; pop rax ; call qword ptr [eax]
0x0000000000545077 : add byte ptr [rax], bh ; call qword ptr [eax]
0x000000000054c537 : add byte ptr [rax], bh ; hlt ; hlt ; jmp qword ptr [rax]
0x000000000054b647 : add byte ptr [rax], bh ; lodsb al, byte ptr [rsi] ; hlt ; call qword ptr [rdx]
0x0000000000550c97 : add byte ptr [rax], bh ; loop 0x550c94 ; jmp qword ptr [rbx]
0x00000000005444a7 : add byte ptr [rax], bh ; pop rsi ; call rsi
0x000000000053fac7 : add byte ptr [rax], bh ; test dh, dl ; jmp rax
0x000000000054d3d7 : add byte ptr [rax], bh ; xor ebp, esi ; call qword ptr [rdx]
0x0000000000542bd7 : add byte ptr [rax], bl ; add al, 0xf3 ; jmp qword ptr [rcx]
0x00000000005450d7 : add byte ptr [rax], bl ; call qword ptr [eax]
0x0000000000552d37 : add byte ptr [rax], bl ; cmp dh, dh ; call qword ptr [rbx]
0x000000000054a8e7 : add byte ptr [rax], bl ; hlt ; call qword ptr [rcx]
0x000000000054c4f7 : add byte ptr [rax], bl ; hlt ; hlt ; jmp qword ptr [rsi]
0x000000000054eca7 : add byte ptr [rax], bl ; jno 0x54eca4 ; call qword ptr [rsi]
0x00000000004f1c57 : add byte ptr [rax], bl ; ret
0x0000000000532bd7 : add byte ptr [rax], bl ; xchg eax, esi ; out dx, al ; call rax
0x00000000005450a7 : add byte ptr [rax], ch ; call qword ptr [eax]
0x000000000053e6f7 : add byte ptr [rax], ch ; call qword ptr es:[rdx]
0x0000000000552d67 : add byte ptr [rax], ch ; cmp dh, dh ; call qword ptr [rbx]
0x000000000054c517 : add byte ptr [rax], ch ; hlt ; hlt ; jmp qword ptr [rsi]
0x0000000000530a47 : add byte ptr [rax], ch ; insb byte ptr [rdi], dx ; in eax, dx ; call rax
0x000000000054ecd7 : add byte ptr [rax], ch ; jno 0x54ecd4 ; call qword ptr [rsi]
0x00000000005326f7 : add byte ptr [rax], ch ; jp 0x5326ed ; call qword ptr [rbx]
0x0000000000535c37 : add byte ptr [rax], ch ; out dx, eax ; out dx, eax ; jmp qword ptr [rdi]
0x000000000054b9a7 : add byte ptr [rax], ch ; ret
0x000000000053e1b7 : add byte ptr [rax], ch ; ret 0xfff1
0x0000000000533817 : add byte ptr [rax], ch ; scasb al, byte ptr [rdi] ; out dx, al ; call rsp
0x000000000053cd47 : add byte ptr [rax], cl ; and dh, cl ; call qword ptr [rdx]
0x0000000000545107 : add byte ptr [rax], cl ; call qword ptr [eax]
0x00000000004b5ad9 : add byte ptr [rax], cl ; jne 0x4b5ae5 ; ret
0x000000000054ec77 : add byte ptr [rax], cl ; jno 0x54ec74 ; call qword ptr [rsi]
0x000000000054e577 : add byte ptr [rax], cl ; pop rdx ; cmc ; jmp qword ptr [rdi]
0x0000000000550547 : add byte ptr [rax], cl ; ret
0x0000000000531737 : add byte ptr [rax], cl ; ret 0xffed
0x000000000054fba7 : add byte ptr [rax], cl ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x0000000000536bc7 : add byte ptr [rax], cl ; sub dh, al ; jmp rsp
0x000000000054508f : add byte ptr [rax], dh ; call qword ptr [eax]
0x000000000052be37 : add byte ptr [rax], dh ; cmc ; call rsp
0x0000000000530c5f : add byte ptr [rax], dh ; jae 0x530c54 ; call qword ptr [rsi]
0x000000000054ee3f : add byte ptr [rax], dh ; je 0x54ee3c ; call qword ptr [rbx]
0x000000000054ecef : add byte ptr [rax], dh ; jno 0x54ecec ; call qword ptr [rsi]
0x0000000000540bcf : add byte ptr [rax], dh ; mov dl, 0xf2 ; jmp qword ptr [rdx]
0x000000000054b4bf : add byte ptr [rax], dh ; test al, 0xf4 ; jmp qword ptr [rsi]
0x000000000054f8ff : add byte ptr [rax], dh ; xchg eax, esi ; cmc ; call rsp
0x00000000005434af : add byte ptr [rax], dh ; xor ebx, esi ; jmp qword ptr [rdx]
0x00000000004a80c4 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000053cd5f : add byte ptr [rax], dl ; and dh, cl ; call qword ptr [rbx]
0x00000000005450ef : add byte ptr [rax], dl ; call qword ptr [eax]
0x00000000005427ff : add byte ptr [rax], dl ; clc ; call qword ptr [rbx]
0x000000000054c67f : add byte ptr [rax], dl ; clc ; hlt ; jmp qword ptr [rax]
0x000000000053d8bf : add byte ptr [rax], dl ; int1 ; jmp rax
0x000000000054ec8f : add byte ptr [rax], dl ; jno 0x54ec8c ; call qword ptr [rsi]
0x000000000054926f : add byte ptr [rax], dl ; or ah, dh ; call rsp
0x000000000054e9bf : add byte ptr [rax], dl ; outsd dx, dword ptr [rsi] ; cmc ; call rsp
0x000000000052ff2f : add byte ptr [rax], dl ; pop rbx ; in eax, dx ; call qword ptr [rbx]
0x000000000053037f : add byte ptr [rax], dl ; pop rsi ; in eax, dx ; call qword ptr [rax]
0x000000000054f97f : add byte ptr [rax], dl ; sahf ; cmc ; call qword ptr [rdi]
0x000000000053af6f : add byte ptr [rax], dl ; sal eax, cl ; call qword ptr [rax]
0x000000000054a7bf : add byte ptr [rax], dl ; sub esp, esi ; jmp rdx
0x000000000054b3d0 : add byte ptr [rax], r8b ; add ah, bh ; ret
0x0000000000550540 : add byte ptr [rax], r8b ; add byte ptr [rbp + rdx + 2], ch ; add byte ptr [rax], cl ; ret
0x000000000054b9d8 : add byte ptr [rax], r8b ; add byte ptr [rdx + rcx*8], al ; add dword ptr [rax], eax ; ret
0x000000000044b90d : add byte ptr [rax], r8b ; add rsp, 8 ; jmp r10
0x000000000044b88d : add byte ptr [rax], r8b ; add rsp, 8 ; jmp rdx
0x000000000040678d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000446b05 : add byte ptr [rax], r8b ; mov dword ptr [rdi], esi ; ret
0x000000000046f9ad : add byte ptr [rax], r8b ; mov dword ptr [rsi], 0xffffffff ; ret
0x000000000044a36d : add byte ptr [rax], r8b ; mov eax, 0x40 ; ret
0x0000000000454fdd : add byte ptr [rax], r8b ; mov eax, 0x4f0620 ; ret
0x0000000000485edd : add byte ptr [rax], r8b ; mov eax, 0x7570a0 ; ret
0x00000000004a1afd : add byte ptr [rax], r8b ; mov eax, 0x7576a0 ; ret
0x00000000004b81bd : add byte ptr [rax], r8b ; mov eax, 0x757c60 ; ret
0x00000000004464a5 : add byte ptr [rax], r8b ; mov eax, 0xfffffffe ; ret
0x0000000000423655 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000040ea7d : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00000000004b33f5 : add byte ptr [rax], r8b ; mov eax, 3 ; ret
0x0000000000421efd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; and eax, esi ; ret
0x000000000044eded : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000004b44bd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000043ea75 : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x48] ; ret
0x0000000000421f2d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x70] ; and eax, esi ; ret
0x0000000000481675 : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; ret
0x000000000048045d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x00000000004ae2ad : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x0000000000402955 : add byte ptr [rax], r8b ; mov eax, r9d ; ret
0x0000000000419865 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x4197fa
0x000000000043d25d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000044ad8d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x50] ; ret
0x0000000000421d8d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi] ; ret
0x0000000000406d65 : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000004449ed : add byte ptr [rax], r8b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043ea6d : add byte ptr [rax], r8b ; ret
0x000000000040bb85 : add byte ptr [rax], r8b ; sub edx, 1 ; jmp 0x40bb57
0x0000000000405b05 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000043472d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000402b65 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000442bf9 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004844d0 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000446683 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000041c11b : add byte ptr [rbp + 0x11], dh ; add rsp, 0x38 ; ret
0x000000000045276e : add byte ptr [rbp + 0x11], dh ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000421b16 : add byte ptr [rbp + 0x11], dh ; ret
0x000000000043fbce : add byte ptr [rbp + 0x13], dh ; add rsp, 0x18 ; ret
0x000000000048404d : add byte ptr [rbp + 0x14], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004b3490 : add byte ptr [rbp + 0x14], dh ; add rsp, 0x38 ; ret
0x0000000000480850 : add byte ptr [rbp + 0x14], dh ; add rsp, 0x48 ; ret
0x000000000041cf8a : add byte ptr [rbp + 0x15], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004845e7 : add byte ptr [rbp + 0x15], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000461c51 : add byte ptr [rbp + 0x16], dh ; ret
0x000000000047c1d1 : add byte ptr [rbp + 0x18], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004b463f : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004b2dd2 : add byte ptr [rbp + 0x1f], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004b4493 : add byte ptr [rbp + 0x20], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004a8a43 : add byte ptr [rbp + 0x20], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000437f27 : add byte ptr [rbp + 0x20], dh ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004c5820 : add byte ptr [rbp + 0x21], cl ; ror dword ptr [rbp - 0x77], cl ; ret 0xd149
0x00000000004049f7 : add byte ptr [rbp + 0x22], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046f80f : add byte ptr [rbp + 0x22], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004a64dd : add byte ptr [rbp + 0x23], dh ; add rsp, 0x18 ; ret
0x000000000048b2ee : add byte ptr [rbp + 0x23], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000404b54 : add byte ptr [rbp + 0x25], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004a4154 : add byte ptr [rbp + 0x26], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004050a9 : add byte ptr [rbp + 0x28], dh ; add rsp, 0x38 ; ret
0x000000000043bfbb : add byte ptr [rbp + 0x2d], dh ; add rsp, 0x18 ; ret
0x0000000000449683 : add byte ptr [rbp + 0x2d], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000479e52 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004cb570 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000459279 : add byte ptr [rbp + 0x31], al ; in al, -0x18 ; sahf ; ret
0x000000000040fea7 : add byte ptr [rbp + 0x31], al ; leave ; mov rax, r9 ; ret
0x000000000043b79f : add byte ptr [rbp + 0x31], al ; sal byte ptr [rcx], 0xc9 ; mov rdx, rax ; jmp 0x43b780
0x000000000048e722 : add byte ptr [rbp + 0x31], dh ; add rsp, 0x28 ; ret
0x000000000046fe96 : add byte ptr [rbp + 0x32], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004766bd : add byte ptr [rbp + 0x33], dh ; add rsp, 0x28 ; ret
0x000000000046dda4 : add byte ptr [rbp + 0x34], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000041e7b6 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x48 ; ret
0x000000000047db05 : add byte ptr [rbp + 0x37], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000476b41 : add byte ptr [rbp + 0x37], dh ; add rsp, 0x28 ; ret
0x000000000041e6d5 : add byte ptr [rbp + 0x37], dh ; add rsp, 0x48 ; ret
0x000000000047684e : add byte ptr [rbp + 0x3a], dh ; add rsp, 0x28 ; ret
0x000000000041e5f2 : add byte ptr [rbp + 0x3a], dh ; add rsp, 0x48 ; ret
0x0000000000421cab : add byte ptr [rbp + 0x3a], dh ; mov eax, 0x1a5 ; pop rbx ; ret
0x0000000000449a68 : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000047befb : add byte ptr [rbp + 0x3e], dh ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000004494ae : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000423454 : add byte ptr [rbp + 0x40], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000481441 : add byte ptr [rbp + 0x41], bl ; pop rsp ; mov rax, qword ptr [rdi + 0x10] ; jmp rax
0x00000000004b34fa : add byte ptr [rbp + 0x41], bl ; pop rsp ; mov rax, qword ptr [rdi + 8] ; jmp rax
0x000000000040e33c : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000048be20 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000402a3c : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000004a8719 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048501e : add byte ptr [rbp + 0x45c6db], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004ec3ba : add byte ptr [rbp + 0x45e1daf2], al ; ret 0x5325
0x0000000000404907 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004051b6 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000041e9cb : add byte ptr [rbp + 0x48], dh ; add rsp, 0x38 ; ret
0x000000000043f2a3 : add byte ptr [rbp + 0x49], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004ac429 : add byte ptr [rbp + 0x4b], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000446941 : add byte ptr [rbp + 0x4e], bh ; add cl, ch ; ret 0xffff
0x00000000004a5bad : add byte ptr [rbp + 0x52], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041eeef : add byte ptr [rbp + 0x52], dh ; add rsp, 0x58 ; ret
0x00000000004045ed : add byte ptr [rbp + 0x5b067ec0], al ; ret
0x0000000000480d10 : add byte ptr [rbp + 0x5b0b74d2], al ; pop rbp ; pop r12 ; ret
0x000000000048bb7b : add byte ptr [rbp + 0x5d], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004ae67a : add byte ptr [rbp + 0x5f], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000407c27 : add byte ptr [rbp + 0x60], dh ; add rsp, 0x50 ; pop rbx ; ret
0x000000000046370f : add byte ptr [rbp + 0x61], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000054555b : add byte ptr [rbp + 0x66d00001], al ; call qword ptr [rax]
0x000000000048a1c9 : add byte ptr [rbp + 0x6f], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000420412 : add byte ptr [rbp + 0x78], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000046c50b : add byte ptr [rbp + 0xa], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000483656 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004849a4 : add byte ptr [rbp + 0xd], dh ; add rsp, 0x28 ; ret
0x000000000047e6bb : add byte ptr [rbp + 0xe], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474b23 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000418b7e : add byte ptr [rbp + 0xf], cl ; lodsb al, byte ptr [rsi] ; ret
0x0000000000419eca : add byte ptr [rbp + 0xf], dh ; add rsp, 0x18 ; ret
0x00000000004cdf5a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x50 ; pop rbx ; ret
0x000000000043a216 : add byte ptr [rbp + 1], cl ; in eax, -0x7d ; ret
0x000000000054552b : add byte ptr [rbp + 1], dl ; add al, dl ; call qword ptr [rax]
0x0000000000419e7f : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000043bd0c : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x00000000004234e7 : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000448876 : add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x00000000004a00e5 : add byte ptr [rbp + 5], dh ; add rsp, 0x68 ; ret
0x0000000000461cef : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000462e60 : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004246ef : add byte ptr [rbp + 6], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004ade8d : add byte ptr [rbp + 6], dh ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000451b58 : add byte ptr [rbp + 6], dh ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000004acc0c : add byte ptr [rbp + 7], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000488828 : add byte ptr [rbp + 7], dh ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000489608 : add byte ptr [rbp + 9], dh ; add rsp, 0x18 ; ret
0x000000000054352b : add byte ptr [rbp + rax*2 + 1], dl ; add al, dl ; xor ebx, esi ; call qword ptr [rax]
0x000000000052810f : add byte ptr [rbp + rax*8 - 0x13], dl ; call rsp
0x0000000000541d3b : add byte ptr [rbp + rbp + 1], ah ; add byte ptr [rax - 0x1a], al ; call qword ptr [rdi]
0x0000000000551d3b : add byte ptr [rbp + rbp + 2], ah ; add al, ah ; sbb dh, dh ; call qword ptr [rdx]
0x000000000052a6df : add byte ptr [rbp + rbp - 0xe], dh ; jmp rsp
0x0000000000529d2f : add byte ptr [rbp + rbp*4 - 0xf], al ; call rsp
0x000000000054dd6b : add byte ptr [rbp + rbp*8 + 0x45700001], dl ; cmc ; jmp qword ptr [rdi]
0x000000000054cd5b : add byte ptr [rbp + rbx*8 + 0x1df00001], al ; cmc ; call qword ptr [rdx]
0x000000000053cd5b : add byte ptr [rbp + rbx*8 + 0x22100000], al ; int1 ; call qword ptr [rbx]
0x000000000053cd43 : add byte ptr [rbp + rbx*8], ch ; add byte ptr [rax], cl ; and dh, cl ; call qword ptr [rdx]
0x0000000000439bd8 : add byte ptr [rbp + rcx + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x000000000052fd6b : add byte ptr [rbp + rcx + 0x56800000], dl ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000553d43 : add byte ptr [rbp + rcx*2 + 2], ch ; add al, bh ; or esi, edi ; call rsi
0x0000000000533d5b : add byte ptr [rbp + rcx*2 - 0x3d300000], al ; out dx, al ; call rax
0x000000000052d3ff : add byte ptr [rbp + rcx*4 - 0xa], dl ; call rsp
0x0000000000478c90 : add byte ptr [rbp + rdi + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000552d33 : add byte ptr [rbp + rdi + 2], bl ; add byte ptr [rax], bl ; cmp dh, dh ; call qword ptr [rbx]
0x0000000000552d4b : add byte ptr [rbp + rdi + 2], dh ; add byte ptr [rax], ah ; cmp dh, dh ; call qword ptr [rbx]
0x0000000000532d8b : add byte ptr [rbp + rdi - 0x67e00000], dh ; out dx, al ; jmp qword ptr [rdx]
0x000000000049fb78 : add byte ptr [rbp + rdi*2 - 0x7d], dh ; ret 0x3901
0x000000000052d39f : add byte ptr [rbp + rdi*2 - 0xa], dl ; jmp rsp
0x0000000000529c57 : add byte ptr [rbp + rdi*2 - 0xf], ah ; call rsp
0x000000000052c947 : add byte ptr [rbp + rdi*4 - 0xb], ah ; call rsp
0x0000000000550543 : add byte ptr [rbp + rdx + 2], ch ; add byte ptr [rax], cl ; ret
0x000000000055058b : add byte ptr [rbp + rdx - 0x3b1ffffe], dh ; cmc ; jmp qword ptr [rdi]
0x0000000000528d9f : add byte ptr [rbp + rdx*4 - 0x11], dl ; jmp rsp
0x000000000054c533 : add byte ptr [rbp + rdx*8 + 1], bl ; add byte ptr [rax], bh ; hlt ; hlt ; jmp qword ptr [rax]
0x000000000052d127 : add byte ptr [rbp + rsi - 0xa], dh ; jmp rsp
0x000000000052c547 : add byte ptr [rbp + rsi*2 - 0xb], al ; jmp rsp
0x000000000054e573 : add byte ptr [rbp + rsi*8 + 0x5a080001], bl ; cmc ; jmp qword ptr [rdi]
0x0000000000532523 : add byte ptr [rbp + rsi], cl ; add byte ptr [rax + 0x78], cl ; out dx, al ; call rbx
0x000000000052fd10 : add byte ptr [rbp - 0x13], dl ; call rbx
0x00000000004807a4 : add byte ptr [rbp - 0x2a], dh ; ret
0x0000000000421c7f : add byte ptr [rbp - 0x2d], bh ; mov eax, 0x1ad ; pop rbx ; ret
0x000000000044660f : add byte ptr [rbp - 0x3dbaf040], al ; jmp 0x4465c7
0x00000000004081ac : add byte ptr [rbp - 0x40], dh ; ret
0x000000000043a56e : add byte ptr [rbp - 0x43], dh ; pop rbx ; ret
0x000000000047389f : add byte ptr [rbp - 0x49f056bf], cl ; or ecx, dword ptr [rax - 0x7d] ; ret 0xc101
0x00000000004b84a0 : add byte ptr [rbp - 0x77], al ; adc byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000004c6a88 : add byte ptr [rbp - 0x77], al ; ret 0x8341
0x00000000004b9759 : add byte ptr [rbp - 0x77], al ; ret 0x8941
0x00000000004bada7 : add byte ptr [rbp - 0x77], al ; ret 0xc141
0x000000000049d5b0 : add byte ptr [rbp - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x8348
0x000000000047ddee : add byte ptr [rbp - 0x7c], al ; in al, 0xf ; xchg eax, ebp ; ret 0xc284
0x0000000000475df2 : add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000004a290f : add byte ptr [rbp - 0x9f6812e], al ; ret 0xf03
0x0000000000402674 : add byte ptr [rbp - 0xa], dh ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax] ; ret
0x000000000042097f : add byte ptr [rbp - 0xcf38a0a], al ; ret
0x00000000004c282a : add byte ptr [rbp - 0xd], bl ; ret
0x0000000000545ceb : add byte ptr [rbp*2 + 0x79800001], dl ; call qword ptr [rbx]
0x000000000054dcdb : add byte ptr [rbp*8 + 0x44700001], al ; cmc ; call qword ptr [rax]
0x000000000040586d : add byte ptr [rbx + 0x25083], cl ; add byte ptr [rcx], bh ; ret 0x840f
0x000000000040dc5f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000040770f : add byte ptr [rbx + 0x3521e215], cl ; add dh, dh ; ret 0x7401
0x0000000000490b67 : add byte ptr [rbx + 0x37401f8], al ; xor eax, eax ; ret
0x0000000000480740 : add byte ptr [rbx + 0x440f02f8], al ; ret 0xfc3
0x0000000000421c16 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x18 ; ret
0x000000000043a2ef : add byte ptr [rbx + 0x48], dl ; mov ebx, edi ; call qword ptr [rdi]
0x00000000004a5bed : add byte ptr [rbx + 0x52], 0 ; cmove rax, rdx ; ret
0x00000000004a5aad : add byte ptr [rbx + 0x52], cl ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000475def : add byte ptr [rbx + 0x538d0045], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004b01fe : add byte ptr [rbx + 0x59e801eb], al ; ret
0x000000000046c52c : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000419e2f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000406af3 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040865f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000406989 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000401ecf : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000054535b : add byte ptr [rbx + 0x66a00001], al ; call qword ptr [rax]
0x000000000054538b : add byte ptr [rbx + 0x66a00001], dh ; call qword ptr [rax]
0x00000000004491ef : add byte ptr [rbx + 0x74073906], cl ; or dh, bl ; ret
0x00000000004be120 : add byte ptr [rbx + 0x77f4b536], al ; ret 0x1e41
0x000000000043af6d : add byte ptr [rbx + 0xa893], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048c58f : add byte ptr [rbx + 0xb7401f8], al ; xor eax, eax ; ret
0x000000000041b43f : add byte ptr [rbx + 0xff201e8], al ; pop rcx ; ret 0xf775
0x000000000047142f : add byte ptr [rbx + rax + 0x5b], dh ; ret
0x000000000053f383 : add byte ptr [rbx + rax + 0x69080001], ch ; jmp rdi
0x000000000052ec47 : add byte ptr [rbx + rax - 7], ah ; jmp rsp
0x00000000005285e7 : add byte ptr [rbx + rax*2 - 0x12], al ; call rsp
0x000000000055330b : add byte ptr [rbx + rax*2], dh ; add al, byte ptr [rax] ; add byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x0000000000528cff : add byte ptr [rbx + rax*4 - 0x11], al ; jmp rsp
0x00000000005280df : add byte ptr [rbx + rax*8], ah ; in eax, dx ; jmp rsp
0x000000000053f2f3 : add byte ptr [rbx + rax], bl ; add dword ptr [rax], eax ; call 0x2753e56a
0x000000000052a697 : add byte ptr [rbx + rbp - 0xe], ah ; jmp rsp
0x0000000000545b83 : add byte ptr [rbx + rbp*2 + 0x73b80001], ch ; jmp rsi
0x0000000000535b63 : add byte ptr [rbx + rbp*2 - 0x13680000], cl ; out dx, eax ; call rsp
0x000000000052d35f : add byte ptr [rbx + rbp*2 - 0xa], ah ; jmp rsp
0x0000000000535adb : add byte ptr [rbx + rbp*2], al ; add byte ptr [rax], al ; loopne 0x535ad5 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000054db63 : add byte ptr [rbx + rbp*8 + 0x3fa80001], cl ; cmc ; call qword ptr [rsi]
0x000000000054db7b : add byte ptr [rbx + rbp*8 + 0x3fb00001], ah ; cmc ; call qword ptr [rax]
0x0000000000550b73 : add byte ptr [rbx + rbx - 0x23b7fffe], bl ; cmc ; jmp rsi
0x000000000052a5af : add byte ptr [rbx + rbx - 0xe], ah ; jmp rsp
0x000000000052c407 : add byte ptr [rbx + rbx*2 - 0xb], dl ; call rsp
0x000000000052c7ff : add byte ptr [rbx + rbx*4 - 0xb], ah ; call rsp
0x0000000000478c4a : add byte ptr [rbx + rcx - 0x48], dh ; cmp dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041ddd7 : add byte ptr [rbx + rcx*4 + 0x51], cl ; and byte ptr [rax - 0x77], cl ; ret 0x854d
0x000000000044c2a7 : add byte ptr [rbx + rcx*4 + 4], cl ; ret 0x3b4d
0x00000000004f0a0f : add byte ptr [rbx + rcx*4 - 0x37], bh ; ret 0x8d33
0x000000000053baeb : add byte ptr [rbx + rcx*8], dl ; add byte ptr [rax], al ; push rax ; out -0x10, eax ; jmp rbx
0x000000000054eb6b : add byte ptr [rbx + rdi*8 + 0x70b00001], dl ; cmc ; call qword ptr [rsi]
0x000000000054eb83 : add byte ptr [rbx + rdi*8 + 0x70b80001], ch ; cmc ; call qword ptr [rsi]
0x00000000005294c7 : add byte ptr [rbx + rdi*8 - 0x10], ah ; call rsp
0x000000000054eaf3 : add byte ptr [rbx + rdi*8], bl ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; call qword ptr [rsi]
0x000000000054eb0b : add byte ptr [rbx + rdi*8], dh ; add dword ptr [rax], eax ; nop ; jo 0x54eb10 ; call qword ptr [rsi]
0x000000000053037b : add byte ptr [rbx + rdx + 0x5e100000], ah ; in eax, dx ; call qword ptr [rax]
0x000000000054435b : add byte ptr [rbx + rdx*2 + 0x5d800001], al ; call qword ptr [rbx]
0x0000000000544343 : add byte ptr [rbx + rdx*2 + 1], ch ; add byte ptr [rax + 0x5d], ch ; jmp qword ptr [rbx]
0x000000000054432b : add byte ptr [rbx + rdx*2 + 1], dl ; add byte ptr [rax + 0x5d], dl ; jmp qword ptr [rbx]
0x000000000053033b : add byte ptr [rbx + rdx], ah ; add al, dl ; pop rbp ; in eax, dx ; jmp qword ptr [rax]
0x000000000052e677 : add byte ptr [rbx + rsi*4], ah ; clc ; jmp rsp
0x000000000052c8ff : add byte ptr [rbx + rsi*4], al ; cmc ; jmp rsp
0x000000000053e32b : add byte ptr [rbx + rsi*8], dl ; add byte ptr [rax - 0x37], dl ; int1 ; jmp rbx
0x000000000052b43f : add byte ptr [rbx + rsi], dl ; hlt ; call rsp
0x0000000000532830 : add byte ptr [rbx - 0x12], bh ; jmp qword ptr [rbx]
0x00000000004149b9 : add byte ptr [rbx - 0x158afe12], al ; ret
0x000000000047c024 : add byte ptr [rbx - 0x3d], bl ; mov eax, 1 ; ret
0x0000000000405eab : add byte ptr [rbx - 0x3d], bl ; nop ; xor eax, eax ; pop rbx ; ret
0x00000000004a62bc : add byte ptr [rbx - 0x3d], bl ; nop ; xor eax, eax ; ret
0x00000000004395ba : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000434721 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000424dad : add byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x000000000043665f : add byte ptr [rbx - 0x71f0fa02], al ; ret 0xfffe
0x000000000044e2b7 : add byte ptr [rbx - 0x74b717b6], cl ; xor cl, byte ptr [rax - 0x7d] ; ret 0x8920
0x00000000004719a1 : add byte ptr [rbx - 0x74bbcfb3], cl ; sbb al, 0x83 ; ret 0x8301
0x00000000004cd9cf : add byte ptr [rbx - 0x77ccb3e], al ; xor dword ptr [rdi], ecx ; ret 0x4789
0x0000000000494a20 : add byte ptr [rbx - 0x7bf00003], al ; ret 0
0x000000000040df6c : add byte ptr [rbx - 0x7bf00008], al ; ret 0
0x000000000042573b : add byte ptr [rbx - 0x7cb793bd], cl ; ret 0xc104
0x000000000041f86f : add byte ptr [rbx - 0x7cb7f7ab], cl ; ret
0x000000000047253f : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x0000000000553310 : add byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x0000000000423504 : add byte ptr [rbx - 0xcf88bf9], cl ; ret
0x000000000052afdf : add byte ptr [rbx - 0xd], ah ; jmp rsp
0x000000000041c5a4 : add byte ptr [rbx - 0xd], bl ; ret
0x0000000000421f2f : add byte ptr [rbx - 0xfde8fb9], cl ; ret
0x000000000041988f : add byte ptr [rbx - 0xfdedfb9], cl ; ret
0x0000000000421eff : add byte ptr [rbx - 0xfdeefb9], cl ; ret
0x000000000052db2f : add byte ptr [rbx - 9], dl ; call rsp
0x0000000000528f7f : add byte ptr [rbx], ah ; out dx, eax ; jmp rsp
0x000000000043eb3b : add byte ptr [rcx + 0x100e3], al ; add byte ptr [rcx], bh ; ret
0x0000000000418976 : add byte ptr [rcx + 0x21], cl ; ret
0x0000000000408a3a : add byte ptr [rcx + 0x29], al ; ret
0x0000000000406c03 : add byte ptr [rcx + 0x40], ch ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000445650 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000046b336 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000044691f : add byte ptr [rcx + 0x4e7aa0], bh ; jmp 0x442b98
0x000000000044697f : add byte ptr [rcx + 0x4e7c60], bh ; jmp 0x442b98
0x000000000044693f : add byte ptr [rcx + 0x4e7d00], bh ; jmp 0x442b98
0x000000000052fd0b : add byte ptr [rcx + 0x55000000], dh ; in eax, dx ; call rbx
0x0000000000425186 : add byte ptr [rcx + 0x5c], al ; ret
0x00000000004ca82c : add byte ptr [rcx + 0x63], cl ; ret 0x8d48
0x0000000000545193 : add byte ptr [rcx + 0x66d80001], bh ; call qword ptr [rax]
0x000000000054517b : add byte ptr [rcx + 0x66e00001], ah ; call qword ptr [rax]
0x0000000000545163 : add byte ptr [rcx + 0x66e80001], cl ; call qword ptr [rax]
0x000000000054511b : add byte ptr [rcx + 1], al ; add byte ptr [rax], al ; call qword ptr [eax]
0x00000000004b83cc : add byte ptr [rcx + 1], al ; ret 0x344
0x0000000000545133 : add byte ptr [rcx + 1], bl ; add al, bh ; call qword ptr [rax]
0x000000000045ca6a : add byte ptr [rcx + 1], cl ; ret
0x00000000004106a2 : add byte ptr [rcx + 1], cl ; ret 0x1148
0x000000000045ca52 : add byte ptr [rcx + 1], cl ; ret 0x8948
0x000000000054514b : add byte ptr [rcx + 1], dh ; add al, dh ; call qword ptr [rax]
0x000000000052f18b : add byte ptr [rcx + rax + 0x30e00000], dh ; in eax, dx ; jmp qword ptr [rax]
0x000000000054f16b : add byte ptr [rcx + rax - 0x7baffffe], dl ; cmc ; jmp qword ptr [rdi]
0x000000000054312b : add byte ptr [rcx + rax*2 + 1], dl ; add byte ptr [rax + 0x13], dh ; jmp rsp
0x0000000000547153 : add byte ptr [rcx + rax*4 + 1], bh ; add byte ptr [rax - 0x59], bl ; jmp rdi
0x000000000054b15b : add byte ptr [rcx + rax*8 + 0x60800001], al ; hlt ; call qword ptr [rdi]
0x000000000054b143 : add byte ptr [rcx + rax*8 + 1], ch ; add byte ptr [rax + 0x60], bh ; hlt ; call qword ptr [rdi]
0x0000000000528037 : add byte ptr [rcx + rbp*4 - 0x13], dl ; jmp rsp
0x000000000053496b : add byte ptr [rcx + rbx*2 - 0x21800000], dl ; out dx, al ; jmp rsi
0x0000000000528dc7 : add byte ptr [rcx + rbx*4], al ; out dx, eax ; call rsp
0x000000000054f97b : add byte ptr [rcx + rcx - 0x61effffe], ah ; cmc ; call qword ptr [rdi]
0x0000000000484814 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000041076c : add byte ptr [rcx + rcx*4 + 0x57], cl ; and byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x00000000004108a7 : add byte ptr [rcx + rcx*4 + 0x57], cl ; cmp byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x00000000004104fa : add byte ptr [rcx + rcx*4 + 0x57], cl ; jo 0x410555 ; mov dword ptr [rdi + 0x78], ebx ; ret
0x00000000004106ac : add byte ptr [rcx + rcx*4 + 0x57], cl ; or byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x0000000000410b3d : add byte ptr [rcx + rcx*4 + 0x57], cl ; sbb byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x00000000004b07ba : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004b08ac : add byte ptr [rcx + rcx*4 - 0x12], cl ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000486b36 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000047c73c : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x00000000004c60cf : add byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x00000000004a11d0 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047436b : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407116 : add byte ptr [rcx + rcx*4 - 0x2a], cl ; jmp r9
0x0000000000402957 : add byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x000000000046ecd2 : add byte ptr [rcx + rcx*4 - 0x39], cl ; call rbx
0x00000000004029ef : add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000418ba2 : add byte ptr [rcx + rcx*4 - 0x79], cl ; mov eax, 0xf3000000 ; ret
0x00000000004755c0 : add byte ptr [rcx + rcx*4 - 0xe], cl ; call rax
0x00000000004b0549 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x41c7d6
0x00000000004b00e3 : add byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x000000000048562d : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x401856
0x00000000004571c1 : add byte ptr [rcx + rdi - 0x2a], al ; ja 0x457177 ; ret
0x0000000000529fef : add byte ptr [rcx + rdi*4], ah ; int1 ; jmp rsp
0x000000000054a8e3 : add byte ptr [rcx + rdi*4], cl ; add dword ptr [rax], eax ; sbb byte ptr [rsi], ch ; hlt ; call qword ptr [rcx]
0x00000000005297bf : add byte ptr [rcx + rdi], dh ; int1 ; jmp rsp
0x000000000045527b : add byte ptr [rcx + rdx - 0x69], cl ; mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000544123 : add byte ptr [rcx + rdx*2 + 1], cl ; add byte ptr [rax + 0x5a], ch ; jmp qword ptr [rbx]
0x0000000000534183 : add byte ptr [rcx + rdx*2 - 0x2b880000], ch ; out dx, al ; jmp qword ptr [rcx]
0x0000000000548173 : add byte ptr [rcx + rdx*4 - 0x2d97ffff], bl ; jmp qword ptr [rbx]
0x000000000054815b : add byte ptr [rcx + rdx*4 - 0x2dafffff], al ; jmp qword ptr [rbx]
0x000000000052d6e7 : add byte ptr [rcx + rsi - 9], dl ; call rsp
0x000000000054a16b : add byte ptr [rcx + rsi*4 + 0x19600001], dl ; hlt ; call qword ptr [rax]
0x0000000000529f2f : add byte ptr [rcx + rsi*4 - 0xf], al ; call rsp
0x000000000043e40c : add byte ptr [rcx - 0x48], al ; add eax, 0xb9000001 ; ret
0x000000000047a4a7 : add byte ptr [rcx - 0x48], al ; or eax, 0xb9000001 ; pop rsp ; ret 0x51
0x000000000044b23f : add byte ptr [rcx - 0x48], al ; ret
0x000000000043781e : add byte ptr [rcx - 0x48], al ; ret 0
0x000000000054fcf3 : add byte ptr [rcx - 0x4f47fffe], bl ; cmc ; call qword ptr [rbx]
0x000000000045891c : add byte ptr [rcx - 0x73], al ; dec dword ptr [rax - 0x77] ; ret 0xc148
0x00000000004c63bf : add byte ptr [rcx - 0x73], cl ; ja 0x4c642d ; lea rdi, qword ptr [r15 + 0x40] ; call rax
0x00000000004a7977 : add byte ptr [rcx - 0x75], al ; push rdi ; add al, 0x29 ; ret
0x0000000000516c11 : add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x0000000000485024 : add byte ptr [rcx - 0x77], al ; ret
0x00000000004baad7 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x0000000000406c67 : add byte ptr [rcx - 0x77], cl ; add bl, dh ; ret
0x000000000040a9b3 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000040fda7 : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x00000000004cb7db : add byte ptr [rcx - 0x77], cl ; ror dword ptr [rcx - 0x77], 1 ; ret 0x8944
0x000000000041556a : add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000000000040ab80 : add byte ptr [rcx - 0x7d], al ; call qword ptr [rdi]
0x000000000046104f : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x000000000044d590 : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000004533af : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000048585d : add byte ptr [rcx - 0xa], al ; ret 0x7420
0x0000000000485727 : add byte ptr [rcx - 0xa], al ; ret 0xf10
0x000000000052be97 : add byte ptr [rcx - 0xb], ah ; push rsp ; ret
0x000000000054e860 : add byte ptr [rcx - 0xb], ch ; jmp qword ptr [rbx]
0x000000000054ec60 : add byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x0000000000402325 : add byte ptr [rcx - 0xca4ebbd], cl ; ret
0x0000000000417030 : add byte ptr [rcx - 1], al ; leave ; jne 0x417027 ; ret
0x000000000042ab50 : add byte ptr [rcx - 9], al ; ret 0x200
0x000000000049252b : add byte ptr [rcx - 9], cl ; ret 0xfff0
0x0000000000543cfb : add byte ptr [rcx*2 + 0x50d00001], ah ; call qword ptr [rdx]
0x00000000004ee4cc : add byte ptr [rcx], ah ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xeec8
0x0000000000421b01 : add byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0x2774
0x0000000000407f9f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000490dd1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046be38 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000004521f0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ee4ca : add byte ptr [rcx], al ; add byte ptr [rcx], ah ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xeec8
0x0000000000407845 : add byte ptr [rcx], al ; jne 0x407856 ; xor eax, eax ; ret
0x0000000000407885 : add byte ptr [rcx], al ; jne 0x407896 ; xor eax, eax ; ret
0x000000000042001d : add byte ptr [rcx], al ; mov dword ptr [rbx + 0xb0], edx ; pop rbx ; ret
0x0000000000401cc8 : add byte ptr [rcx], al ; ret
0x0000000000471399 : add byte ptr [rcx], al ; vpsubsb xmm3, xmm14, xmmword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004c564d : add byte ptr [rcx], bh ; enter -0x77bf, 0x14 ; sbb al, 0x89 ; ret
0x00000000004023df : add byte ptr [rcx], bh ; ja 0x4023f8 ; jl 0x4023f9 ; mov rax, rdi ; ret
0x00000000004a5dad : add byte ptr [rcx], bh ; push rdx ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004066e8 : add byte ptr [rcx], bh ; ret
0x0000000000405873 : add byte ptr [rcx], bh ; ret 0x840f
0x000000000040615e : add byte ptr [rcx], bh ; sar dword ptr [rsi + 5], cl ; pop rbx ; ret
0x0000000000545103 : add byte ptr [rcx], ch ; add dword ptr [rax], eax ; or byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x00000000004088bf : add byte ptr [rcx], ch ; ret 0x4489
0x00000000004cdd1c : add byte ptr [rcx], ch ; ret 0x458b
0x00000000004a6875 : add byte ptr [rcx], ch ; ret 0x93e8
0x000000000041989f : add byte ptr [rcx], cl ; ja 0x4198c7 ; ret
0x000000000044ef9f : add byte ptr [rcx], cl ; ja 0x44efd3 ; ret
0x000000000044b82f : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000435955 : add byte ptr [rcx], dh ; fucomi st(0) ; ret
0x000000000044835f : add byte ptr [rcx], dh ; fucomi st(3) ; ret 0x1f0f
0x000000000047933b : add byte ptr [rcx], dh ; in eax, dx ; call 0x405625
0x000000000047a3af : add byte ptr [rcx], dh ; leave ; mov rax, rcx ; ret
0x0000000000424326 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004786bf : add byte ptr [rcx], dh ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004bb2e2 : add byte ptr [rcx], dh ; ret 0x3141
0x00000000004bbe04 : add byte ptr [rcx], dh ; ret 0x8944
0x00000000004a8c67 : add byte ptr [rcx], dh ; rol bl, 0xf3 ; ret
0x000000000047c51f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x47c538 ; ret
0x00000000004a0fff : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xff ; setne al ; ret
0x0000000000478e9f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004864ef : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000044fda0 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 1], 0xe8 ; ret 0xfffc
0x000000000044046f : add byte ptr [rcx], dh ; test byte ptr [rax - 0x75], 0x3b ; call rax
0x00000000004a985a : add byte ptr [rcx], dh ; test byte ptr [rax - 0x75], 0x7c ; and al, 8 ; call r15
0x0000000000477889 : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x11], 0x41 ; call rsp
0x00000000005450eb : add byte ptr [rcx], dl ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x000000000052be87 : add byte ptr [rcx], dl ; cmc ; inc esp ; ret
0x000000000047a3ae : add byte ptr [rcx], sil ; leave ; mov rax, rcx ; ret
0x000000000048933c : add byte ptr [rdi + 0x21], bh ; call 0x405628
0x00000000004f09cf : add byte ptr [rdi + 0x2a], bh ; and bh, byte ptr [rsi - 0x26] ; xchg eax, ebx ; ret
0x000000000054d793 : add byte ptr [rdi + 0x37780001], bh ; cmc ; jmp qword ptr [rdi]
0x00000000004f7aa0 : add byte ptr [rdi + 0x3834d824], bl ; ret 0xa070
0x00000000004fef2f : add byte ptr [rdi + 0x45], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x4fef6e ; ret 0xc109
0x000000000051467d : add byte ptr [rdi + 0x7253c90c], cl ; ret 0xe981
0x000000000044aad6 : add byte ptr [rdi + 0xf0], bh ; call 0x406d78
0x000000000044aad5 : add byte ptr [rdi + 0xf0], r15b ; call 0x406d79
0x0000000000545753 : add byte ptr [rdi + 1], bh ; add al, bh ; jmp qword ptr [edi]
0x00000000004093a4 : add byte ptr [rdi + 3], bh ; call 0x405628
0x0000000000449379 : add byte ptr [rdi + 8], bh ; call 0x405628
0x000000000043cfce : add byte ptr [rdi + rax - 0xd], dh ; ret
0x000000000054771b : add byte ptr [rdi + rax*4 + 1], al ; add byte ptr [rax], al ; mov dl, 0xf3 ; jmp qword ptr [rax]
0x000000000052875f : add byte ptr [rdi + rax*4], ah ; out dx, al ; call rsp
0x000000000052e127 : add byte ptr [rdi + rbp - 8], dl ; call rsp
0x0000000000529e2f : add byte ptr [rdi + rbp*4 - 0xf], al ; call rsp
0x0000000000531f3b : add byte ptr [rdi + rbp], ah ; add byte ptr [rax - 0x15], dl ; in eax, dx ; jmp qword ptr [rsi]
0x0000000000530f5b : add byte ptr [rdi + rbx - 0x77400000], al ; in eax, dx ; call qword ptr [rdx]
0x000000000052ce27 : add byte ptr [rdi + rbx - 0xa], ah ; call rsp
0x000000000054cf7b : add byte ptr [rdi + rbx*8 + 0x2ad00001], ah ; cmc ; jmp rcx
0x00000000004c1ddf : add byte ptr [rdi + rcx + 0x57], al ; ret 0xf66
0x0000000000543f83 : add byte ptr [rdi + rcx*2 + 0x52b80001], ch ; jmp qword ptr [rbx]
0x00000000004f0b37 : add byte ptr [rdi + rcx*2], ah ; ret
0x000000000052fee3 : add byte ptr [rdi + rcx], cl ; add byte ptr [rax], al ; clc ; pop rdx ; in eax, dx ; call qword ptr [rsi]
0x000000000052ff2b : add byte ptr [rdi + rcx], dl ; add byte ptr [rax], dl ; pop rbx ; in eax, dx ; call qword ptr [rbx]
0x0000000000546ee3 : add byte ptr [rdi + rdi*2], cl ; add dword ptr [rax], eax ; clc ; popfq ; call rbx
0x0000000000544783 : add byte ptr [rdi + rdx*2 + 0x62380001], ch ; call qword ptr [rbx]
0x00000000005346db : add byte ptr [rdi + rdx*2], al ; add byte ptr [rax], al ; loopne 0x5346c1 ; out dx, al ; call qword ptr [rbx]
0x000000000054671b : add byte ptr [rdi + rsi*2 + 1], al ; add byte ptr [rax - 0x70], dl ; jmp rsp
0x000000000053e763 : add byte ptr [rdi + rsi*8 + 0x29f80000], cl ; call qword ptr [rdi]
0x000000000053e6f3 : add byte ptr [rdi + rsi*8], bl ; add byte ptr [rax], al ; sub byte ptr [rsi], ah ; call qword ptr [rdx]
0x00000000005326f3 : add byte ptr [rdi + rsi], bl ; add byte ptr [rax], al ; sub byte ptr [rdx - 0x12], bh ; call qword ptr [rbx]
0x00000000004a9688 : add byte ptr [rdi - 0x3b], dh ; ret
0x0000000000545120 : add byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x000000000054eceb : add byte ptr [rdi*8 + 0x71300001], dl ; cmc ; call qword ptr [rsi]
0x00000000004a5cad : add byte ptr [rdi], bh ; push rdx ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000531733 : add byte ptr [rdi], bl ; add byte ptr [rax], cl ; ret 0xffed
0x00000000005160f1 : add byte ptr [rdi], ch ; push rbp ; cdq ; ret
0x0000000000402135 : add byte ptr [rdi], cl ; add eax, 0x355b8f ; ret
0x00000000004edaa8 : add byte ptr [rdi], cl ; jmp rcx
0x000000000041b776 : add byte ptr [rdi], cl ; lahf ; ret 0x854d
0x0000000000401dbc : add byte ptr [rdi], cl ; mov dh, 0x45 ; dec ecx ; ret
0x00000000004850b6 : add byte ptr [rdi], cl ; ret
0x000000000045730c : add byte ptr [rdi], cl ; ret 0x173d
0x0000000000479592 : add byte ptr [rdi], cl ; ret 0x43e9
0x00000000004f209f : add byte ptr [rdi], cl ; ret 0x73d1
0x00000000004affac : add byte ptr [rdi], cl ; ret 0x8941
0x000000000040743a : add byte ptr [rdi], cl ; ret 0x8d48
0x00000000004805d4 : add byte ptr [rdi], cl ; ret 0xc3f3
0x0000000000418e57 : add byte ptr [rdi], cl ; ret 0xe083
0x00000000004526b2 : add byte ptr [rdi], cl ; ret 0xe73d
0x0000000000423517 : add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000492525 : add byte ptr [rdi], cl ; test dl, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 0xfff0
0x000000000046ef91 : add byte ptr [rdi], cl ; test dword ptr [rax - 0xa000000], ebx ; ret
0x00000000004aa87a : add byte ptr [rdi], cl ; test dword ptr [rdi], ebx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000000000041b3bc : add byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76fffffa], ecx ; ret 0x348
0x00000000004a966e : add byte ptr [rdi], cl ; xchg dword ptr [rdi + rdi*8 - 1], eax ; push rbx ; ret
0x0000000000407991 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000046226b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x00000000004203fa : add byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x0000000000438c81 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x0000000000494435 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xca09
0x000000000052f500 : add byte ptr [rdi], dh ; in eax, dx ; jmp qword ptr [rax]
0x00000000005296af : add byte ptr [rdi], dl ; int1 ; jmp rsp
0x000000000054d26b : add byte ptr [rdx + 0x2cf00001], dl ; cmc ; jmp rax
0x00000000004442cf : add byte ptr [rdx + 0x4e7760], bh ; jmp 0x440588
0x000000000044428f : add byte ptr [rdx + 0x4e7840], bh ; jmp 0x440588
0x00000000004a5c2d : add byte ptr [rdx + 0x52], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000545283 : add byte ptr [rdx + 0x66a80001], ch ; call qword ptr [rax]
0x000000000054926b : add byte ptr [rdx + 0x8100001], dl ; hlt ; call rsp
0x000000000053c258 : add byte ptr [rdx + 0xe], cl ; adc byte ptr [rbx + 0xa700202], al ; ret
0x00000000004dc85f : add byte ptr [rdx + 1], cl ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x0000000000533273 : add byte ptr [rdx + rax*2 - 0x5f480000], bl ; out dx, al ; jmp qword ptr [rdi]
0x000000000052df67 : add byte ptr [rdx + rax], dl ; clc ; jmp rsp
0x0000000000551a43 : add byte ptr [rdx + rbp + 2], ch ; add al, bl ; adc al, 0xf6 ; call qword ptr [rcx]
0x0000000000535a2b : add byte ptr [rdx + rbp*2], dl ; add byte ptr [rax + 6], ah ; out dx, eax ; call qword ptr [rbx]
0x000000000052a217 : add byte ptr [rdx + rbp*8], dl ; int1 ; call rsp
0x0000000000551a03 : add byte ptr [rdx + rbp], ch ; add al, byte ptr [rax] ; clc ; adc esi, esi ; call qword ptr [rcx]
0x0000000000531a03 : add byte ptr [rdx + rbp], ch ; add byte ptr [rax], al ; js 0x5319d9 ; in eax, dx ; call qword ptr [rax]
0x000000000052d817 : add byte ptr [rdx + rbx*2 - 9], ah ; jmp rsp
0x0000000000528e07 : add byte ptr [rdx + rbx*4 - 0x11], ah ; call rsp
0x00000000005489fb : add byte ptr [rdx + rbx*4], ah ; add dword ptr [rax], eax ; mov al, 0xe3 ; jmp qword ptr [rsi]
0x0000000000530a43 : add byte ptr [rdx + rbx], ch ; add byte ptr [rax], ch ; insb byte ptr [rdi], dx ; in eax, dx ; call rax
0x0000000000533a5b : add byte ptr [rdx + rcx*2 - 0x46900000], al ; out dx, al ; jmp rcx
0x0000000000547a0b : add byte ptr [rdx + rcx*4], dh ; add dword ptr [rax], eax ; nop ; ret 0xfff3
0x00000000005479eb : add byte ptr [rdx + rcx*4], dl ; add dword ptr [rax], eax ; add dl, 0xf3 ; jmp qword ptr [rdx]
0x000000000054ba7b : add byte ptr [rdx + rcx*8 - 0x380fffff], ah ; hlt ; jmp qword ptr [rdx]
0x000000000053b9fb : add byte ptr [rdx + rcx*8], ah ; add byte ptr [rax], al ; in eax, -0x10 ; call qword ptr [rbx]
0x000000000054b9db : add byte ptr [rdx + rcx*8], al ; add dword ptr [rax], eax ; ret
0x000000000052fa2b : add byte ptr [rdx + rcx], dl ; add byte ptr [rax], ah ; in eax, dx ; call qword ptr [rsi]
0x0000000000542a3b : add byte ptr [rdx + rdi + 1], ah ; add al, al ; sti ; jmp rbx
0x000000000054ea63 : add byte ptr [rdx + rdi*8 + 0x70580001], cl ; cmc ; call qword ptr [rsi]
0x000000000054ea7b : add byte ptr [rdx + rdi*8 + 0x70600001], ah ; cmc ; call qword ptr [rsi]
0x000000000054ea93 : add byte ptr [rdx + rdi*8 + 0x70680001], bh ; cmc ; call qword ptr [rsi]
0x000000000054ea4b : add byte ptr [rdx + rdi*8 + 1], dh ; add byte ptr [rax + 0x70], dl ; cmc ; call qword ptr [rsi]
0x000000000052a38f : add byte ptr [rdx + rdi*8], dl ; int1 ; call rsp
0x000000000052b47f : add byte ptr [rdx + rdi], dl ; hlt ; call rsp
0x0000000000534273 : add byte ptr [rdx + rdx*2 - 0x29580000], bl ; out dx, al ; jmp qword ptr [rdx]
0x00000000004a5d2d : add byte ptr [rdx + rdx*2], bh ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000530203 : add byte ptr [rdx + rdx], ch ; add byte ptr [rax], al ; clc ; pop rbp ; in eax, dx ; call qword ptr [rdx]
0x00000000004f09b7 : add byte ptr [rdx + rsi*2 - 0x7c], bl ; pop rsp ; mov ah, 0x91 ; ret
0x0000000000529f87 : add byte ptr [rdx + rsi*4], dl ; int1 ; jmp rsp
0x000000000053e21b : add byte ptr [rdx + rsi*8], al ; add al, al ; ret 0xfff1
0x000000000053e253 : add byte ptr [rdx + rsi*8], bh ; add al, bh ; ret
0x000000000053e233 : add byte ptr [rdx + rsi*8], bl ; add al, cl ; ret
0x000000000053e203 : add byte ptr [rdx + rsi*8], ch ; add byte ptr [rax], al ; cwde ; ret 0xfff1
0x000000000053e1e3 : add byte ptr [rdx + rsi*8], cl ; add byte ptr [rax], al ; mov dl, al ; int1 ; jmp qword ptr [rdi]
0x000000000052cbaf : add byte ptr [rdx - 0xb], al ; jmp rsp
0x00000000005444f3 : add byte ptr [rdx*2 + 0x5ec80001], bl ; jmp rax
0x000000000054c513 : add byte ptr [rdx*8 - 0xbd7ffff], bh ; hlt ; jmp qword ptr [rsi]
0x000000000054c4f3 : add byte ptr [rdx*8 - 0xbe7ffff], bl ; hlt ; jmp qword ptr [rsi]
0x0000000000458454 : add byte ptr [rdx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x3349
0x00000000004574b8 : add byte ptr [rdx], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000052e19d : add byte ptr [rdx], 0 ; in al, 0x34 ; clc ; jmp rsp
0x000000000052e327 : add byte ptr [rdx], ah ; clc ; jmp rsp
0x0000000000549213 : add byte ptr [rdx], bh ; add dword ptr [rax], eax ; js 0x549229 ; hlt ; jmp rsi
0x0000000000503924 : add byte ptr [rdx], dl ; jne 0x5038cb ; jb 0x503931 ; ret 0x4a9d
0x000000000043a466 : add byte ptr [rsi + 0x33], bh ; pop rbx ; ret
0x000000000046ebd7 : add byte ptr [rsi + 0x51a3c5], bh ; mov rdi, rbp ; call rbx
0x000000000046eccd : add byte ptr [rsi + 0x51a3c6], bh ; mov rdi, r8 ; call rbx
0x000000000046f275 : add byte ptr [rsi + 0x51e935], bh ; mov rdi, rbp ; call rbx
0x00000000004a5b6d : add byte ptr [rsi + 0x52], 0 ; cmove rax, rdx ; ret
0x00000000004b9756 : add byte ptr [rsi + 0x52], ch ; add byte ptr [rbp - 0x77], al ; ret 0x8941
0x0000000000545693 : add byte ptr [rsi + 0x66e80001], bh ; call qword ptr [rax]
0x0000000000545663 : add byte ptr [rsi + 0x66e80001], cl ; call qword ptr [rax]
0x00000000004197f3 : add byte ptr [rsi + 0xa], bh ; mov eax, edx ; pop rbx ; ret
0x000000000053c208 : add byte ptr [rsi + 0xe], al ; adc byte ptr [rbx + 0xa530202], al ; ret
0x0000000000411ce7 : add byte ptr [rsi + 0xf], ah ; jmp 0x411cb2
0x0000000000411d37 : add byte ptr [rsi + 0xf], ah ; jmp 0x411d02
0x0000000000411d86 : add byte ptr [rsi + 0xf], ah ; jmp 0x411d51
0x0000000000412387 : add byte ptr [rsi + 0xf], ah ; jmp 0x412352
0x00000000004123d7 : add byte ptr [rsi + 0xf], ah ; jmp 0x4123a2
0x0000000000412426 : add byte ptr [rsi + 0xf], ah ; jmp 0x4123f1
0x0000000000413877 : add byte ptr [rsi + 0xf], ah ; jmp 0x413842
0x00000000004138bf : add byte ptr [rsi + 0xf], ah ; jmp 0x41388a
0x0000000000413906 : add byte ptr [rsi + 0xf], ah ; jmp 0x4138d1
0x00000000004bd8fc : add byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0x8349
0x000000000041b466 : add byte ptr [rsi + 0xf], ah ; ret
0x000000000054561b : add byte ptr [rsi + 1], al ; add al, ah ; call qword ptr [rax]
0x000000000046a5cc : add byte ptr [rsi + 1], bh ; call 0x406848
0x0000000000419815 : add byte ptr [rsi + 1], bh ; mov rdi, rbx ; call rax
0x00000000004a7db6 : add byte ptr [rsi + 6], bh ; call rax
0x00000000004a7e09 : add byte ptr [rsi + 6], bh ; jmp rax
0x0000000000449287 : add byte ptr [rsi + rax - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000533693 : add byte ptr [rsi + rax*2 - 0x56380000], bh ; out dx, al ; call qword ptr [rax]
0x000000000054b643 : add byte ptr [rsi + rax*8 + 1], ch ; add byte ptr [rax], bh ; lodsb al, byte ptr [rsi] ; hlt ; call qword ptr [rdx]
0x000000000052e827 : add byte ptr [rsi + rax*8 - 8], ah ; jmp rsp
0x000000000053b64b : add byte ptr [rsi + rax*8], dh ; add al, al ; fcomi st(0) ; jmp qword ptr [rbx]
0x0000000000549e03 : add byte ptr [rsi + rbp*4], ch ; add dword ptr [rax], eax ; cmp byte ptr [rsp + rsi*8], dl ; call qword ptr [rbx]
0x000000000046558f : add byte ptr [rsi + rbx + 0x5b], dh ; ret
0x0000000000540e63 : add byte ptr [rsi + rbx - 0x4547ffff], cl ; jmp qword ptr [rsi]
0x000000000052be27 : add byte ptr [rsi + rbx - 0xb], al ; jmp qword ptr [rdx + rax*8 + 1]
0x0000000000544ddb : add byte ptr [rsi + rbx*2], al ; add dword ptr [rax], eax ; call qword ptr gs:[rbx]
0x0000000000548df3 : add byte ptr [rsi + rbx*4], bl ; add dword ptr [rax], eax ; pop rax ; clc ; jmp rdi
0x0000000000528877 : add byte ptr [rsi + rbx], ah ; out dx, eax ; call rsp
0x0000000000509bbd : add byte ptr [rsi + rbx], bl ; ret
0x000000000052f998 : add byte ptr [rsi + rcx + 0x10], cl ; add dword ptr [rdx], 0x67 ; ret
0x0000000000543e1b : add byte ptr [rsi + rcx*2 + 1], al ; add byte ptr [rax + 0x51], dh ; call qword ptr [rbx]
0x0000000000543e33 : add byte ptr [rsi + rcx*2 + 1], bl ; add byte ptr [rax + 0x51], bh ; call qword ptr [rbx]
0x000000000052925f : add byte ptr [rsi + rcx*8 - 0x11], al ; call rsp
0x0000000000532e8b : add byte ptr [rsi + rdi - 0x66500000], dh ; out dx, al ; jmp qword ptr [rbx]
0x000000000052d75f : add byte ptr [rsi + rdi - 9], ah ; call rsp
0x000000000054ae1b : add byte ptr [rsi + rdi*4 + 1], al ; add byte ptr [rax + 0x4e], dl ; hlt ; jmp qword ptr [rdx]
0x000000000054ee3b : add byte ptr [rsi + rdi*8 + 1], ah ; add byte ptr [rax], dh ; je 0x54ee40 ; call qword ptr [rbx]
0x00000000004804a7 : add byte ptr [rsi + rdx - 0xd], dh ; ret
0x000000000053864b : add byte ptr [rsi + rdx*4], dh ; add al, ah ; movsxd rsi, eax ; call qword ptr [rbx]
0x000000000054c67b : add byte ptr [rsi + rdx*8 - 0x7efffff], ah ; hlt ; jmp qword ptr [rax]
0x000000000052d877 : add byte ptr [rsi + rsi*2 - 9], al ; call rsp
0x00000000004f9e3a : add byte ptr [rsi - 0x26], bl ; or edi, edx ; int1 ; adc ch, dh ; ret
0x00000000004f1317 : add byte ptr [rsi - 0x4b], bl ; ret
0x00000000004b18ad : add byte ptr [rsi - 0x70], ah ; xor eax, eax ; pop rbx ; ret
0x000000000046fde7 : add byte ptr [rsi - 0x76b7ffaf], ah ; ret
0x000000000054a4fb : add byte ptr [rsi*4 + 0x1fd00001], ah ; hlt ; call qword ptr [rdi]
0x00000000004f106f : add byte ptr [rsi], ah ; ret
0x000000000052ab07 : add byte ptr [rsi], al ; call rsp
0x00000000004a5e2d : add byte ptr [rsi], dh ; push rdx ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000054546b : add byte ptr [rsp + 0x66a00001], dl ; call qword ptr [rbx]
0x0000000000545483 : add byte ptr [rsp + 0x66a80001], ch ; call qword ptr [rbx]
0x000000000053f44b : add byte ptr [rsp + rax + 1], dh ; add byte ptr [rax + 0x6e], dh ; jmp qword ptr [rsi]
0x0000000000406059 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x000000000052ec97 : add byte ptr [rsp + rax - 7], al ; call rsp
0x000000000052a857 : add byte ptr [rsp + rax*2 - 0xe], dl ; jmp rsp
0x00000000005298ef : add byte ptr [rsp + rax*2 - 0xf], al ; call rsp
0x000000000052e22f : add byte ptr [rsp + rax*2 - 8], ah ; call rsp
0x000000000052f44b : add byte ptr [rsp + rax], dh ; add al, dl ; xor al, 0xed ; call rsp
0x0000000000531c63 : add byte ptr [rsp + rbp - 0x31f80000], cl ; in eax, dx ; call qword ptr [rsi]
0x0000000000535c33 : add byte ptr [rsp + rbp*2], bl ; add byte ptr [rax], ch ; out dx, eax ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000549c7b : add byte ptr [rsp + rbp*4 + 0xd800001], ah ; hlt ; call qword ptr [rcx]
0x0000000000529ce7 : add byte ptr [rsp + rbp*4], ah ; int1 ; call rsp
0x000000000052bc3f : add byte ptr [rsp + rbp*8], dh ; hlt ; jmp rsp
0x000000000052b307 : add byte ptr [rsp + rbp], al ; hlt ; call rsp
0x0000000000530c5b : add byte ptr [rsp + rbx + 0x73300000], al ; in eax, dx ; call qword ptr [rsi]
0x0000000000550c93 : add byte ptr [rsp + rbx - 0x1dc7fffe], bh ; cmc ; jmp qword ptr [rbx]
0x000000000052bdff : add byte ptr [rsp + rbx - 0xb], al ; call rsp
0x0000000000554c7b : add byte ptr [rsp + rbx*2 + 0x7d100002], ah ; idiv edi ; ret 3
0x000000000052dd77 : add byte ptr [rsp + rbx*8 - 9], dh ; call rsp
0x000000000052ed27 : add byte ptr [rsp + rbx], dh ; stc ; jmp rsp
0x0000000000540beb : add byte ptr [rsp + rbx], dl ; add dword ptr [rax], eax ; mov dl, 0xf2 ; jmp qword ptr [rsi]
0x000000000043f4f1 : add byte ptr [rsp + rcx + 0x48], dh ; add esp, 0x10 ; pop rbx ; ret
0x000000000053fc83 : add byte ptr [rsp + rcx - 0x7797ffff], ch ; jmp rbx
0x000000000052d5bf : add byte ptr [rsp + rcx - 9], dh ; call rsp
0x000000000052e297 : add byte ptr [rsp + rcx*2 - 8], dh ; call rsp
0x0000000000553beb : add byte ptr [rsp + rcx*2], dl ; add al, byte ptr [rax] ; nop ; jl 0x553bf1 ; jmp qword ptr [rbx]
0x0000000000547bfb : add byte ptr [rsp + rcx*4], ah ; add dword ptr [rax], eax ; adc bh, al ; call qword ptr [rdx]
0x0000000000547be3 : add byte ptr [rsp + rcx*4], cl ; add dword ptr [rax], eax ; or bh, al ; call qword ptr [rdx]
0x0000000000537c0b : add byte ptr [rsp + rcx*4], dh ; add byte ptr [rax], al ; and byte ptr [rsi - 0x10], cl ; jmp qword ptr [rax]
0x000000000054bc8b : add byte ptr [rsp + rcx*8 - 0x2fafffff], dh ; hlt ; call qword ptr [rbx]
0x000000000053fbf3 : add byte ptr [rsp + rcx], bl ; add dword ptr [rax], eax ; mov dl, sil ; jmp qword ptr [rsi]
0x000000000047d593 : add byte ptr [rsp + rdi*4 - 0x42], dh ; xchg eax, esi ; ret
0x000000000054ec5b : add byte ptr [rsp + rdi*8 + 0x71000001], al ; cmc ; call qword ptr [rsi]
0x000000000054ec73 : add byte ptr [rsp + rdi*8 + 0x71080001], bl ; cmc ; call qword ptr [rsi]
0x000000000054ec8b : add byte ptr [rsp + rdi*8 + 0x71100001], dh ; cmc ; call qword ptr [rsi]
0x000000000054ec43 : add byte ptr [rsp + rdi*8 + 1], ch ; add al, bh ; jo 0x54ec48 ; call qword ptr [rsi]
0x000000000054ec2b : add byte ptr [rsp + rdi*8 + 1], dl ; add al, dh ; jo 0x54ec30 ; call qword ptr [rsi]
0x000000000054ebfb : add byte ptr [rsp + rdi*8], ah ; add dword ptr [rax], eax ; loopne 0x54ec7a ; cmc ; call qword ptr [rsi]
0x000000000054ec13 : add byte ptr [rsp + rdi*8], bh ; add dword ptr [rax], eax ; call 0x1754e195
0x000000000054ebe3 : add byte ptr [rsp + rdi*8], cl ; add dword ptr [rax], eax ; fdiv dword ptr [rax - 0xb] ; call qword ptr [rsi]
0x000000000052eea7 : add byte ptr [rsp + rdi], al ; cli ; call rsp
0x0000000000540443 : add byte ptr [rsp + rdx + 1], ch ; add byte ptr [rax - 0x59], bh ; call qword ptr [rsi]
0x0000000000550483 : add byte ptr [rsp + rdx - 0x3e27fffe], ch ; cmc ; jmp rsi
0x000000000052b58f : add byte ptr [rsp + rdx*2], dh ; hlt ; call rsp
0x0000000000538403 : add byte ptr [rsp + rdx*4], ch ; add byte ptr [rax], al ; call 0xffffffffe453746f
0x0000000000550403 : add byte ptr [rsp + rdx], ch ; add al, byte ptr [rax] ; mov cl, al ; cmc ; call qword ptr [rbx]
0x000000000053245b : add byte ptr [rsp + rsi + 0x76b00000], al ; out dx, al ; jmp rsi
0x000000000046f0e9 : add byte ptr [rsp + rsi*2 - 0x7d], dh ; ret
0x000000000052e5af : add byte ptr [rsp - 8], dl ; call rsp
0x000000000052e34f : add byte ptr [rsp], ah ; clc ; call rsp
0x0000000000527fdf : add byte ptr [rsp], ah ; in eax, dx ; call rsp
0x000000000052c4af : add byte ptr [rsp], dh ; cmc ; call rsp
0x00000000004572b3 : add byte ptr cs:[rax], al ; add rsp, 0x38 ; ret
0x00000000004911cf : add byte ptr cs:[rax], al ; add rsp, 8 ; ret
0x0000000000448adc : add byte ptr ds:[rax + 8], bh ; ret
0x0000000000532e8d : add byte ptr ds:[rax], al ; mov al, 0x99 ; out dx, al ; jmp qword ptr [rbx]
0x00000000004c2829 : add byte ptr gs:[rbp - 0xd], bl ; ret
0x00000000004f09b6 : add byte ptr ss:[rdx + rsi*2 - 0x7c], bl ; pop rsp ; mov ah, 0x91 ; ret
0x00000000004c8762 : add ch, al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000514bf4 : add ch, bl ; ret 0x2dbe
0x00000000005322cd : add ch, byte ptr [rbp + 0xa] ; ret
0x000000000041e179 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004c9800 : add cl, ah ; ret 0x84e0
0x00000000004bdca6 : add cl, al ; pxor xmm0, xmm2 ; ret
0x00000000004bd89c : add cl, al ; ret
0x00000000004c7fa5 : add cl, al ; ret 0x4c08
0x00000000004f58b3 : add cl, al ; xchg eax, edi ; sti ; sub al, 0xf1 ; ret 0x7130
0x000000000041b4f7 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000004c694e : add cl, byte ptr [rax + 0x5b6d750b] ; pop rbp ; pop r12 ; ret
0x0000000000404d35 : add cl, byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x7d] ; ret
0x00000000004738b9 : add cl, byte ptr [rax - 0x7d] ; ret
0x00000000004ae872 : add cl, byte ptr [rax - 0x7d] ; ret 0x4402
0x0000000000461987 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x39 ; ret
0x0000000000402172 : add cl, byte ptr [rbp] ; ret
0x0000000000462493 : add cl, byte ptr [rcx - 0x17f3dba4] ; ret
0x0000000000485aaf : add cl, byte ptr [rcx - 0x77] ; ret
0x0000000000453901 : add cl, byte ptr [rcx] ; ret 0x37e8
0x00000000004ae0ec : add cl, byte ptr [rdi + rcx + 0x44] ; ret 0x8348
0x0000000000480743 : add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000004729d2 : add cl, byte ptr [rdi] ; test dl, bh ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004442d4 : add cl, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004217b0 : add cl, ch ; ret
0x0000000000446924 : add cl, ch ; ret 0xffff
0x00000000004442d3 : add cl, r13b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000446923 : add cl, r13b ; ret 0xffff
0x000000000046538d : add dh, al ; and al, 0x20 ; dec dword ptr [rdi] ; ret 0xf631
0x0000000000437ed4 : add dh, al ; and al, 0x30 ; dec dword ptr [rdi] ; ret 0xf631
0x0000000000535fd9 : add dh, al ; call rsp
0x00000000004f1137 : add dh, bl ; or dword ptr [rax + rdi*2 + 0x25], ebx ; ret 0xc4
0x0000000000406b4e : add dh, bl ; ret
0x000000000053c25e : add dh, byte ptr [rax + 0xa] ; ret
0x00000000004380e3 : add dh, byte ptr [rbp + 0xa] ; ret
0x000000000044be6a : add dh, byte ptr [rbp + 0xb] ; add rsp, 8 ; jmp r8
0x00000000004b66d8 : add dh, byte ptr [rbp + 5] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004b7827 : add dh, byte ptr [rbp + 6] ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000044bc92 : add dh, byte ptr [rbp - 0x2d] ; add rsp, 8 ; jmp r8
0x0000000000476b82 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000429714 : add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429bca : add dh, byte ptr [rcx] ; ret 0x41c4
0x0000000000429acb : add dh, byte ptr [rcx] ; ret 0xbdc5
0x0000000000429639 : add dh, byte ptr [rcx] ; ret 0xc1c4
0x0000000000544522 : add dh, byte ptr [rsi + 0x41380e0a] ; ret
0x0000000000516997 : add dh, byte ptr [rsp + rbx*2] ; ret
0x0000000000501ec2 : add dh, ch ; and eax, 0xd937d55a ; ret 0x69e4
0x00000000004f1817 : add dh, ch ; ret 0xd8d1
0x000000000047bdbf : add dh, dh ; add al, 1 ; jne 0x47bdd8 ; ret
0x00000000004380df : add dh, dh ; and byte ptr [r10], r8b ; jne 0x4380f8 ; ret
0x00000000004adebf : add dh, dh ; and byte ptr [r9], r8b ; jne 0x4aded8 ; ret
0x00000000005510a9 : add dh, dh ; jmp qword ptr [rdx]
0x000000000043fc1f : add dh, dh ; mov byte ptr [rbx], 0x75 ; jrcxz 0x43fc23 ; ret 0x7406
0x000000000040a162 : add dh, dh ; ret
0x0000000000440d2f : add dh, dh ; ret 0x4801
0x00000000004ab59a : add dh, dh ; ret 0x4d06
0x0000000000407715 : add dh, dh ; ret 0x7401
0x000000000048541f : add dh, dh ; ret 0x7420
0x00000000004a545f : add dh, dh ; ret 0xf01
0x0000000000440680 : add dh, dh ; ret 0xf02
0x00000000004a269f : add dh, dh ; ret 0xf03
0x0000000000425db0 : add dh, dh ; ret 0xf04
0x00000000005479f0 : add dl, 0xf3 ; jmp qword ptr [rdx]
0x00000000004dc877 : add dl, al ; cmp ecx, dword ptr [rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d3b
0x000000000051f0ef : add dl, al ; jmp 0x51f145
0x00000000004c8dbe : add dl, al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004bda32 : add dl, al ; ret
0x000000000053c20e : add dl, byte ptr [rbx + 0xa] ; ret
0x000000000053f05e : add dl, byte ptr [rdi + 0x44180e0a] ; ret
0x00000000005359b7 : add dl, byte ptr [rdi + 0xa] ; ret
0x0000000000518169 : add dl, byte ptr [rsi + 0x47583183] ; ret
0x00000000005302ad : add dl, byte ptr [rsi + 0xa] ; ret
0x000000000052f1cf : add dl, byte ptr [rsi + rcx + 0x18] ; ret
0x00000000004fdb91 : add dl, byte ptr [rsi + rdi*4 - 0x6a73c358] ; ret 0x45da
0x00000000004fdb90 : add dl, byte ptr cs:[rsi + rdi*4 - 0x6a73c358] ; ret 0x45da
0x00000000004f1277 : add dl, ch ; ret
0x00000000004f7225 : add dl, dl ; ret 0xe9a9
0x0000000000545755 : add dword ptr [eax], eax ; clc ; jmp qword ptr [edi]
0x0000000000483e22 : add dword ptr [r11 - 0x7cb6d413], eax ; ret
0x00000000004a9645 : add dword ptr [r8 + 3], r15d ; ret
0x00000000004b005c : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000054312d : add dword ptr [r8], eax ; jo 0x54314b ; jmp rsp
0x000000000054352d : add dword ptr [r8], r8d ; sal byte ptr [rcx], 1 ; call qword ptr [rax]
0x00000000004858d0 : add dword ptr [r9 + 0x39], eax ; ret 0x8941
0x000000000042412d : add dword ptr [r9 - 0x78], eax ; adc ebx, dword ptr [rbx + 0x48] ; mov dword ptr [rdi], eax ; ret
0x00000000004c5337 : add dword ptr [r9], eax ; ret 0x6eb
0x000000000041e074 : add dword ptr [rax + 0x10], 1 ; ret
0x00000000004a95a4 : add dword ptr [rax + 0x2b807], ecx ; add byte ptr [rax], al ; ret
0x00000000004420e9 : add dword ptr [rax + 0x2b], ecx ; add dword ptr [rcx + 0x29], ecx ; ret
0x0000000000483ff3 : add dword ptr [rax + 0x2d], esp ; add byte ptr [rax + 1], bh ; ret
0x000000000040e698 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000441eae : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000043ec99 : add dword ptr [rax + 0x39], ecx ; ret 0xe975
0x00000000004cc76f : add dword ptr [rax + 0x39], ecx ; ret 0xf375
0x000000000047740e : add dword ptr [rax + 0x39], ecx ; ret 0xf475
0x0000000000401fcd : add dword ptr [rax + 0x48], esi ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000408d87 : add dword ptr [rax + 0x63], ecx ; ret 0x8b48
0x0000000000514d71 : add dword ptr [rax + 0x79725764], 0 ; ret
0x00000000004cca19 : add dword ptr [rax + 0xf], ecx ; ret 0x3948
0x00000000004cc669 : add dword ptr [rax + 0xf], ecx ; ret 0x8548
0x0000000000456e15 : add dword ptr [rax + 1], ecx ; ret
0x00000000004658d3 : add dword ptr [rax + 1], edi ; ret
0x00000000004a9646 : add dword ptr [rax + 3], edi ; ret
0x00000000004c7084 : add dword ptr [rax + 9], ecx ; ret 0xffb8
0x000000000050dbd9 : add dword ptr [rax + rcx*8 + 0x23], edx ; ret 0x52a2
0x000000000048f49d : add dword ptr [rax + rdx*8 - 0x7d], esi ; ret
0x000000000046b534 : add dword ptr [rax - 0x198a00b1], ecx ; ret
0x00000000004c7513 : add dword ptr [rax - 0x3f], ecx ; call 0xffffffffc24dc12a
0x00000000004c771f : add dword ptr [rax - 0x3f], ecx ; call 0xffffffffc24dc336
0x0000000000408174 : add dword ptr [rax - 0x73], ecx ; jg 0x408182 ; jne 0x408177 ; ret
0x000000000041f3dc : add dword ptr [rax - 0x77], ecx ; clc ; jne 0x41f3ee ; ret
0x00000000004048c1 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000045ba28 : add dword ptr [rax - 0x77], ecx ; ret 0xdfe8
0x0000000000479845 : add dword ptr [rax - 0x78], eax ; xor cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x0000000000448acf : add dword ptr [rax - 0x7cb7f8f4], ecx ; rol byte ptr [rcx], 0x39 ; ret 0xdd7f
0x000000000044e2fd : add dword ptr [rax - 0x7d], ecx ; clc ; pcmpeqw mm5, mm4 ; xor eax, eax ; ret
0x0000000000404dd3 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000436927 : add dword ptr [rax - 0x7d], ecx ; ret 0x3901
0x00000000004483e3 : add dword ptr [rax - 0x7d], ecx ; ret 0x3902
0x00000000004a2e47 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000040df96 : add dword ptr [rax - 0x7d], ecx ; ret 0x4401
0x0000000000452538 : add dword ptr [rax - 0x7d], ecx ; ret 0x4460
0x00000000004a8422 : add dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x00000000004526ec : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004a0c07 : add dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], 0x39 ; ret 0xf075
0x00000000004b7d26 : add dword ptr [rax - 0x7f], ecx ; ret
0x00000000004571ba : add dword ptr [rax - 0x7f], ecx ; ret 0xd8
0x0000000000424b84 : add dword ptr [rax - 2], edi ; je 0x424b99 ; pop rbx ; ret
0x000000000043fbfd : add dword ptr [rax - 9], esi ; ret 0x306
0x0000000000528345 : add dword ptr [rax], 0 ; mov ah, 0xe1 ; in eax, dx ; call rsp
0x000000000047ae22 : add dword ptr [rax], 0x67b90000 ; ret 0x51
0x000000000043781b : add dword ptr [rax], 0xb8410000 ; ret 0
0x000000000052be86 : add dword ptr [rax], eax ; adc al, 0x21 ; cmc ; inc esp ; ret
0x000000000052b43e : add dword ptr [rax], eax ; adc al, 0x33 ; hlt ; call rsp
0x000000000052c08e : add dword ptr [rax], eax ; adc al, 0x35 ; cmc ; jmp rsp
0x000000000052b47e : add dword ptr [rax], eax ; adc al, 0x3a ; hlt ; call rsp
0x0000000000529cbe : add dword ptr [rax], eax ; adc al, 0x95 ; int1 ; jmp rsp
0x0000000000529f86 : add dword ptr [rax], eax ; adc al, 0xb2 ; int1 ; jmp rsp
0x000000000052a216 : add dword ptr [rax], eax ; adc al, 0xea ; int1 ; call rsp
0x000000000052a38e : add dword ptr [rax], eax ; adc al, 0xfa ; int1 ; call rsp
0x00000000005427fe : add dword ptr [rax], eax ; adc al, bh ; call qword ptr [rbx]
0x000000000054c67e : add dword ptr [rax], eax ; adc al, bh ; hlt ; jmp qword ptr [rax]
0x0000000000547bfe : add dword ptr [rax], eax ; adc bh, al ; call qword ptr [rdx]
0x000000000054926e : add dword ptr [rax], eax ; adc byte ptr [rax], cl ; hlt ; call rsp
0x000000000054ec8e : add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000054a7be : add dword ptr [rax], eax ; adc byte ptr [rcx], ch ; hlt ; jmp rdx
0x000000000054e9be : add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; call rsp
0x00000000005450ee : add dword ptr [rax], eax ; adc byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x000000000052bd76 : add dword ptr [rax], eax ; adc ch, dh ; jmp rsp
0x000000000052b2de : add dword ptr [rax], eax ; add al, 0x28 ; hlt ; jmp rsp
0x000000000052b306 : add dword ptr [rax], eax ; add al, 0x2c ; hlt ; call rsp
0x000000000052ad4e : add dword ptr [rax], eax ; add al, 0x85 ; jmp rsp
0x000000000052ab06 : add dword ptr [rax], eax ; add al, 0xa6 ; call rsp
0x000000000052c8fe : add dword ptr [rax], eax ; add al, 0xb3 ; cmc ; jmp rsp
0x000000000052f18d : add dword ptr [rax], eax ; add al, ah ; xor ch, ch ; jmp qword ptr [rax]
0x0000000000457556 : add dword ptr [rax], eax ; add al, ch ; ret 0xfff5
0x0000000000475f29 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; sar dword ptr [rsi + 2], -0x77 ; ret 0x8b48
0x0000000000480a03 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000452df3 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004a537b : add dword ptr [rax], eax ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000046be39 : add dword ptr [rax], eax ; add byte ptr [rax + 1], bh ; ret
0x00000000004ae86c : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [r8 - 0x7d] ; ret 0x4402
0x0000000000477b6b : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000408047 : add dword ptr [rax], eax ; add byte ptr [rax - 0x76beb38e], al ; ret 0x1b8
0x000000000046fc4c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x0000000000404817 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043543a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004891ef : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004347a1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; ret
0x000000000045b5e1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048fed8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xbe08
0x000000000040456c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004aa5b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add qword ptr [rsi], 1 ; ret
0x00000000004aa5d1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add qword ptr [rsi], 2 ; ret
0x00000000004aa605 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add qword ptr [rsi], 4 ; ret
0x0000000000480883 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004222c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000405dbe : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004b3e04 : add dword ptr [rax], eax ; add byte ptr [rax], al ; and qword ptr [rdi + 0x18], rsi ; ret
0x000000000046a5ce : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x406846
0x0000000000404a46 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [rax]
0x000000000043fa1b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x00000000004473a6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004a9685 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x4a9657 ; ret
0x0000000000421bd7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x421c06 ; ret
0x0000000000465503 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x465516 ; ret
0x000000000046558c : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x4655b7 ; pop rbx ; ret
0x0000000000484b8b : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x484b9e ; ret
0x000000000049fdac : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x49fdd7 ; pop rbx ; ret
0x000000000049fedc : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x49ff07 ; pop rbx ; ret
0x00000000004197f0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jle 0x419809 ; mov eax, edx ; pop rbx ; ret
0x0000000000421b13 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x421b31 ; ret
0x0000000000423b69 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000419851 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000423f00 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000404258 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000486b33 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x000000000048562a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x401859
0x0000000000419817 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000425183 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x000000000048be1d : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000402a39 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000041970b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004026b0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000405ea8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000402b14 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000043e734 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rdx, rdx ; je 0x43e74c ; call rdx
0x000000000043e8c4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rdx, rdx ; je 0x43e8dc ; call rdx
0x000000000046c634 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rdx, rdx ; je 0x46c64c ; call rdx
0x000000000046c7d4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rdx, rdx ; je 0x46c7ec ; call rdx
0x000000000046c8d4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rdx, rdx ; je 0x46c8ec ; call rdx
0x000000000046ca7a : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rdx, rdx ; je 0x46ca92 ; call rdx
0x000000000046cc2a : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rdx, rdx ; je 0x46cc42 ; call rdx
0x000000000046cdda : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rdx, rdx ; je 0x46cdf2 ; call rdx
0x0000000000406d5b : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor edi, edi ; jmp rax
0x000000000049d5ae : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x8348
0x000000000047ddec : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7c], al ; in al, 0xf ; xchg eax, ebp ; ret 0xc284
0x000000000045bfec : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004521f1 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004149b7 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x158afe12], al ; ret
0x00000000004cc2dd : add dword ptr [rax], eax ; add byte ptr [rcx - 0x48], al ; ret 0
0x000000000054e85e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], ch ; jmp qword ptr [rbx]
0x000000000054ec5e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000043eb3f : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x000000000043cfcc : add dword ptr [rax], eax ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x000000000054511e : add dword ptr [rax], eax ; add byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x00000000004526b0 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xe73d
0x0000000000411d84 : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x411d53
0x0000000000412424 : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x4123f3
0x0000000000413904 : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; jmp 0x4138d3
0x0000000000444b0d : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000425dae : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000005479ee : add dword ptr [rax], eax ; add dl, 0xf3 ; jmp qword ptr [rdx]
0x0000000000529ce6 : add dword ptr [rax], eax ; and al, 0xac ; int1 ; call rsp
0x0000000000529fee : add dword ptr [rax], eax ; and al, 0xb9 ; int1 ; jmp rsp
0x000000000054ecbe : add dword ptr [rax], eax ; and byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x00000000005450be : add dword ptr [rax], eax ; and byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x000000000052be96 : add dword ptr [rax], eax ; and ebp, esi ; push rsp ; ret
0x0000000000545166 : add dword ptr [rax], eax ; call 0x115444d8
0x0000000000545666 : add dword ptr [rax], eax ; call 0x115449d8
0x0000000000545696 : add dword ptr [rax], eax ; call 0x11544a08
0x000000000054ec16 : add dword ptr [rax], eax ; call 0x1754e192
0x000000000053f2f6 : add dword ptr [rax], eax ; call 0x2753e567
0x0000000000541646 : add dword ptr [rax], eax ; call 0xffffffffd7540926
0x0000000000545046 : add dword ptr [rax], eax ; call qword ptr [eax]
0x000000000054514e : add dword ptr [rax], eax ; call qword ptr [rax]
0x0000000000544dde : add dword ptr [rax], eax ; call qword ptr gs:[rbx]
0x0000000000545136 : add dword ptr [rax], eax ; clc ; call qword ptr [rax]
0x00000000005471a6 : add dword ptr [rax], eax ; clc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rbx
0x0000000000545756 : add dword ptr [rax], eax ; clc ; jmp qword ptr [edi]
0x000000000054ec46 : add dword ptr [rax], eax ; clc ; jo 0x54ec45 ; call qword ptr [rsi]
0x0000000000546ee6 : add dword ptr [rax], eax ; clc ; popfq ; call rbx
0x0000000000547fe6 : add dword ptr [rax], eax ; cmp ah, cl ; call rbx
0x000000000054c536 : add dword ptr [rax], eax ; cmp ah, dh ; hlt ; jmp qword ptr [rax]
0x000000000054d3d6 : add dword ptr [rax], eax ; cmp byte ptr [rcx], dh ; cmc ; call qword ptr [rdx]
0x0000000000545076 : add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x0000000000544786 : add dword ptr [rax], eax ; cmp byte ptr [rdx - 0xd], ah ; call qword ptr [rbx]
0x00000000005444a6 : add dword ptr [rax], eax ; cmp byte ptr [rsi - 0xd], bl ; call rsi
0x0000000000549e06 : add dword ptr [rax], eax ; cmp byte ptr [rsp + rsi*8], dl ; call qword ptr [rbx]
0x000000000054efc6 : add dword ptr [rax], eax ; cwde ; jbe 0x54efc5 ; call qword ptr [rbx]
0x000000000054eb26 : add dword ptr [rax], eax ; cwde ; jo 0x54eb25 ; call qword ptr [rsi]
0x000000000054ebe6 : add dword ptr [rax], eax ; fdiv dword ptr [rax - 0xb] ; call qword ptr [rsi]
0x000000000054d8c6 : add dword ptr [rax], eax ; fdiv dword ptr [rdi] ; cmc ; call qword ptr [rbx]
0x0000000000544dc6 : add dword ptr [rax], eax ; fsub dword ptr [rbp - 0xd] ; jmp qword ptr [rcx]
0x0000000000545196 : add dword ptr [rax], eax ; fsub dword ptr [rsi - 0xd] ; call qword ptr [rax]
0x000000000052b146 : add dword ptr [rax], eax ; hlt ; add ah, dh ; jmp rsp
0x000000000052b50e : add dword ptr [rax], eax ; hlt ; hlt ; jmp rsp
0x000000000052c986 : add dword ptr [rax], eax ; hlt ; ret 0xfff5
0x000000000052ab86 : add dword ptr [rax], eax ; hlt ; sal dl, 1 ; jmp rsp
0x000000000052c79e : add dword ptr [rax], eax ; hlt ; xchg eax, esi ; cmc ; jmp rsp
0x000000000052b8c6 : add dword ptr [rax], eax ; in al, -0x6e ; hlt ; jmp rsp
0x000000000052c15e : add dword ptr [rax], eax ; in al, 0x38 ; cmc ; jmp rsp
0x000000000052c3d6 : add dword ptr [rax], eax ; in al, 0x51 ; cmc ; jmp rsp
0x000000000052a9be : add dword ptr [rax], eax ; in al, 0x71 ; jmp rsp
0x000000000052c596 : add dword ptr [rax], eax ; in al, 0x75 ; cmc ; call rsp
0x000000000052a6de : add dword ptr [rax], eax ; je 0x52a714 ; jmp rsp
0x000000000052b976 : add dword ptr [rax], eax ; je 0x52b917 ; hlt ; jmp rsp
0x0000000000529c56 : add dword ptr [rax], eax ; jge 0x529c51 ; call rsp
0x000000000052c546 : add dword ptr [rax], eax ; jne 0x52c545 ; jmp rsp
0x000000000053f44e : add dword ptr [rax], eax ; jo 0x53f4c5 ; jmp qword ptr [rsi]
0x000000000054312e : add dword ptr [rax], eax ; jo 0x54314a ; jmp rsp
0x0000000000543e1e : add dword ptr [rax], eax ; jo 0x543e78 ; call qword ptr [rbx]
0x000000000054a85e : add dword ptr [rax], eax ; jo 0x54a894 ; hlt ; call rbx
0x000000000054b00e : add dword ptr [rax], eax ; jo 0x54b073 ; hlt ; call qword ptr [rcx]
0x000000000054dcde : add dword ptr [rax], eax ; jo 0x54dd2b ; cmc ; call qword ptr [rax]
0x000000000054dd6e : add dword ptr [rax], eax ; jo 0x54ddbc ; cmc ; jmp qword ptr [rdi]
0x000000000054eaae : add dword ptr [rax], eax ; jo 0x54eb27 ; cmc ; call qword ptr [rsi]
0x000000000052afde : add dword ptr [rax], eax ; jrcxz 0x52afdb ; jmp rsp
0x0000000000540446 : add dword ptr [rax], eax ; js 0x5403f6 ; call qword ptr [rsi]
0x0000000000543e36 : add dword ptr [rax], eax ; js 0x543e90 ; call qword ptr [rbx]
0x0000000000549216 : add dword ptr [rax], eax ; js 0x549226 ; hlt ; jmp rsi
0x000000000054b026 : add dword ptr [rax], eax ; js 0x54b08b ; hlt ; jmp rsp
0x000000000054b146 : add dword ptr [rax], eax ; js 0x54b1af ; hlt ; call qword ptr [rdi]
0x000000000054d796 : add dword ptr [rax], eax ; js 0x54d7d6 ; cmc ; jmp qword ptr [rdi]
0x000000000054eac6 : add dword ptr [rax], eax ; js 0x54eb3f ; cmc ; call qword ptr [rsi]
0x0000000000529d2e : add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; int1 ; call rsp
0x000000000054109e : add dword ptr [rax], eax ; loopne 0x54106b ; call qword ptr [rsi]
0x000000000054517e : add dword ptr [rax], eax ; loopne 0x5451ed ; call qword ptr [rax]
0x000000000054561e : add dword ptr [rax], eax ; loopne 0x54568d ; call qword ptr [rax]
0x000000000054ebfe : add dword ptr [rax], eax ; loopne 0x54ec77 ; cmc ; call qword ptr [rsi]
0x000000000052acbe : add dword ptr [rax], eax ; mov ah, 0x26 ; jmp rsp
0x000000000052b4d6 : add dword ptr [rax], eax ; mov ah, 0x3f ; hlt ; call rsp
0x000000000052c6c6 : add dword ptr [rax], eax ; mov ah, 0x86 ; cmc ; call rsp
0x000000000052a0be : add dword ptr [rax], eax ; mov ah, 0xc9 ; int1 ; call rsp
0x000000000052a106 : add dword ptr [rax], eax ; mov ah, 0xd2 ; int1 ; call rsp
0x000000000054da1e : add dword ptr [rax], eax ; mov al, 0x3d ; cmc ; call qword ptr [rcx]
0x000000000054db7e : add dword ptr [rax], eax ; mov al, 0x3f ; cmc ; call qword ptr [rax]
0x000000000054523e : add dword ptr [rax], eax ; mov al, 0x66 ; call qword ptr [rax]
0x000000000054549e : add dword ptr [rax], eax ; mov al, 0x66 ; call qword ptr [rbx]
0x000000000054eb6e : add dword ptr [rax], eax ; mov al, 0x70 ; cmc ; call qword ptr [rsi]
0x00000000005489fe : add dword ptr [rax], eax ; mov al, 0xe3 ; jmp qword ptr [rsi]
0x00000000005417d6 : add dword ptr [rax], eax ; mov bh, bl ; call qword ptr [rax]
0x000000000054eaf6 : add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; call qword ptr [rsi]
0x0000000000529f2e : add dword ptr [rax], eax ; mov cl, 0xf1 ; call rsp
0x0000000000540bee : add dword ptr [rax], eax ; mov dl, 0xf2 ; jmp qword ptr [rsi]
0x000000000053fbf6 : add dword ptr [rax], eax ; mov dl, sil ; jmp qword ptr [rsi]
0x00000000004a39fe : add dword ptr [rax], eax ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043d443 : add dword ptr [rax], eax ; mov rax, qword ptr [rbx + 0x20] ; pop rbx ; ret
0x000000000052a516 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; adc dh, dl ; jmp rsp
0x0000000000529ede : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 0xf1 ; jmp rsp
0x000000000052bcf6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, 0xf5 ; call rsp
0x000000000052a096 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000052a056 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff1
0x0000000000529dde : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; scasb al, byte ptr [rdi] ; int1 ; jmp rsp
0x000000000052b3ee : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor esp, esi ; call rsp
0x00000000005425ae : add dword ptr [rax], eax ; nop ; call qword ptr [rcx]
0x000000000054eb0e : add dword ptr [rax], eax ; nop ; jo 0x54eb0d ; call qword ptr [rsi]
0x000000000042030d : add dword ptr [rax], eax ; nop ; mov rax, qword ptr [rdi + 0x38] ; ret
0x0000000000547a0e : add dword ptr [rax], eax ; nop ; ret 0xfff3
0x0000000000547be6 : add dword ptr [rax], eax ; or bh, al ; call qword ptr [rdx]
0x000000000054ec76 : add dword ptr [rax], eax ; or byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000053f386 : add dword ptr [rax], eax ; or byte ptr [rcx - 0xe], ch ; jmp rdi
0x0000000000545106 : add dword ptr [rax], eax ; or byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x000000000054e576 : add dword ptr [rax], eax ; or byte ptr [rdx - 0xb], bl ; jmp qword ptr [rdi]
0x0000000000541d3e : add dword ptr [rax], eax ; out 0xf2, al ; call qword ptr [rdi]
0x0000000000545016 : add dword ptr [rax], eax ; pop rax ; call qword ptr [eax]
0x0000000000548df6 : add dword ptr [rax], eax ; pop rax ; clc ; jmp rdi
0x0000000000547156 : add dword ptr [rax], eax ; pop rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rdi
0x000000000054ea66 : add dword ptr [rax], eax ; pop rax ; jo 0x54ea65 ; call qword ptr [rsi]
0x0000000000541026 : add dword ptr [rax], eax ; pop rax ; ret
0x0000000000540846 : add dword ptr [rax], eax ; pop rax ; stosb byte ptr [rdi], al ; call qword ptr [rdi]
0x000000000054502e : add dword ptr [rax], eax ; push rax ; call qword ptr [eax]
0x000000000054ae1e : add dword ptr [rax], eax ; push rax ; hlt ; jmp qword ptr [rdx]
0x000000000054ea4e : add dword ptr [rax], eax ; push rax ; jo 0x54ea4d ; call qword ptr [rsi]
0x000000000054671e : add dword ptr [rax], eax ; push rax ; nop ; jmp rsp
0x000000000054432e : add dword ptr [rax], eax ; push rax ; pop rbp ; jmp qword ptr [rbx]
0x000000000054103e : add dword ptr [rax], eax ; push rax ; ret
0x000000000054bc8e : add dword ptr [rax], eax ; push rax ; sal ah, 1 ; call qword ptr [rbx]
0x000000000054815e : add dword ptr [rax], eax ; push rax ; sal bl, cl ; jmp qword ptr [rbx]
0x000000000054d39e : add dword ptr [rax], eax ; push rax ; xor ch, dh ; call qword ptr [rdx]
0x000000000052a356 : add dword ptr [rax], eax ; push rsp ; clc ; int1 ; jmp rsp
0x000000000052a856 : add dword ptr [rax], eax ; push rsp ; jmp rsp
0x000000000052c406 : add dword ptr [rax], eax ; push rsp ; pop rbx ; cmc ; call rsp
0x000000000052a06e : add dword ptr [rax], eax ; push rsp ; ret
0x000000000052c97e : add dword ptr [rax], eax ; push rsp ; ret 0xfff5
0x000000000054bf1e : add dword ptr [rax], eax ; rcl ah, 0xf4 ; call qword ptr [rcx]
0x0000000000543cfe : add dword ptr [rax], eax ; rcl byte ptr [rax - 0xd], 1 ; call qword ptr [rdx]
0x00000000005481ae : add dword ptr [rax], eax ; rcl dl, 0xf3 ; call rax
0x000000000054a4fe : add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; hlt ; call qword ptr [rdi]
0x000000000052a066 : add dword ptr [rax], eax ; ret
0x000000000054ebce : add dword ptr [rax], eax ; sal byte ptr [rax - 0xb], 1 ; call qword ptr [rsi]
0x000000000054352e : add dword ptr [rax], eax ; sal byte ptr [rcx], 1 ; call qword ptr [rax]
0x000000000054d87e : add dword ptr [rax], eax ; sal byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rbx]
0x0000000000542a3e : add dword ptr [rax], eax ; sar bl, 0xf2 ; jmp rbx
0x000000000054c4f6 : add dword ptr [rax], eax ; sbb ah, dh ; hlt ; jmp qword ptr [rsi]
0x000000000052bdfe : add dword ptr [rax], eax ; sbb al, 0xf5 ; call rsp
0x00000000005417ee : add dword ptr [rax], eax ; sbb bh, 0xf2 ; call qword ptr [rax]
0x0000000000542bd6 : add dword ptr [rax], eax ; sbb byte ptr [rbx + rsi*8], al ; jmp qword ptr [rcx]
0x000000000054eca6 : add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x00000000005450d6 : add dword ptr [rax], eax ; sbb byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x000000000054a8e6 : add dword ptr [rax], eax ; sbb byte ptr [rsi], ch ; hlt ; call qword ptr [rcx]
0x000000000052a5ae : add dword ptr [rax], eax ; sbb esi, edx ; jmp rsp
0x000000000054b6c6 : add dword ptr [rax], eax ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rax]
0x0000000000529e2e : add dword ptr [rax], eax ; scasd eax, dword ptr [rdi] ; int1 ; call rsp
0x00000000005451ae : add dword ptr [rax], eax ; shl byte ptr [rsi - 0xd], 1 ; call qword ptr [rax]
0x000000000054ceae : add dword ptr [rax], eax ; shr byte ptr [rax], 1 ; cmc ; call rcx
0x000000000054cf7e : add dword ptr [rax], eax ; shr byte ptr [rdx], 1 ; cmc ; jmp rcx
0x000000000054c516 : add dword ptr [rax], eax ; sub ah, dh ; hlt ; jmp qword ptr [rsi]
0x000000000054ecd6 : add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x00000000005450a6 : add dword ptr [rax], eax ; sub byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x0000000000548cb6 : add dword ptr [rax], eax ; sub cl, ch ; call qword ptr [rcx]
0x000000000052a696 : add dword ptr [rax], eax ; sub esi, edx ; jmp rsp
0x000000000054db66 : add dword ptr [rax], eax ; test al, 0x3f ; cmc ; call qword ptr [rsi]
0x000000000054ded6 : add dword ptr [rax], eax ; test al, 0x4b ; cmc ; call qword ptr [rsi]
0x0000000000545256 : add dword ptr [rax], eax ; test al, 0x66 ; call qword ptr [rax]
0x0000000000545486 : add dword ptr [rax], eax ; test al, 0x66 ; call qword ptr [rbx]
0x000000000054eb56 : add dword ptr [rax], eax ; test al, 0x70 ; cmc ; call qword ptr [rsi]
0x000000000054b4de : add dword ptr [rax], eax ; test al, 0xf4 ; jmp qword ptr [rax]
0x000000000054b4fe : add dword ptr [rax], eax ; test al, 0xf4 ; jmp qword ptr [rsi]
0x000000000052c38e : add dword ptr [rax], eax ; test byte ptr [rbp - 0xb], al ; call rsp
0x0000000000529bae : add dword ptr [rax], eax ; test byte ptr [rbp - 0xf], dh ; jmp rsp
0x000000000052c25e : add dword ptr [rax], eax ; test byte ptr [rbx], bh ; cmc ; jmp rsp
0x000000000052c3c6 : add dword ptr [rax], eax ; test byte ptr [rdi - 0xb], cl ; jmp rsp
0x000000000052b756 : add dword ptr [rax], eax ; test byte ptr [rdi - 0xc], bh ; call rsp
0x000000000052bdb6 : add dword ptr [rax], eax ; test byte ptr [rdx], dl ; cmc ; jmp rsp
0x0000000000529bf6 : add dword ptr [rax], eax ; test byte ptr [rsi - 0xf], dh ; call rsp
0x000000000052c7fe : add dword ptr [rax], eax ; wait ; cmc ; call rsp
0x000000000052c1ae : add dword ptr [rax], eax ; xchg eax, esp ; cmp ebp, esi ; call rsp
0x000000000052a8be : add dword ptr [rax], eax ; xchg eax, esp ; movsxd rsi, edx ; jmp rsp
0x000000000052a89e : add dword ptr [rax], eax ; xchg eax, esp ; pop rax ; call rsp
0x0000000000529ad6 : add dword ptr [rax], eax ; xchg eax, esp ; pop rbx ; int1 ; jmp rsp
0x000000000052a08e : add dword ptr [rax], eax ; xchg eax, esp ; ret
0x000000000052be36 : add dword ptr [rax], eax ; xor al, 0x20 ; cmc ; call rsp
0x000000000052b58e : add dword ptr [rax], eax ; xor al, 0x54 ; hlt ; call rsp
0x000000000052c4ae : add dword ptr [rax], eax ; xor al, 0x64 ; cmc ; call rsp
0x000000000052bc3e : add dword ptr [rax], eax ; xor al, 0xec ; hlt ; jmp rsp
0x000000000052b176 : add dword ptr [rax], eax ; xor al, 5 ; hlt ; call rsp
0x000000000054ecee : add dword ptr [rax], eax ; xor byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x00000000005434ae : add dword ptr [rax], eax ; xor byte ptr [rcx], dh ; jmp qword ptr [rdx]
0x000000000054508e : add dword ptr [rax], eax ; xor byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x00000000005434ce : add dword ptr [rax], eax ; xor ebx, esi ; jmp qword ptr [rdx]
0x0000000000418e55 : add dword ptr [rax], ecx ; add byte ptr [rdi], cl ; ret 0xe083
0x00000000004c1cb4 : add dword ptr [rax], esp ; pshufb xmm6, xmm7 ; sub r10, rax ; jmp 0x4c1cc9
0x00000000004c205f : add dword ptr [rax], esp ; sub r10, rax ; jmp 0x4c2074
0x000000000052a855 : add dword ptr [rax], r8d ; push rsp ; jmp rsp
0x00000000005434ad : add dword ptr [rax], r8d ; xor byte ptr [rcx], dh ; jmp qword ptr [rdx]
0x00000000005434cd : add dword ptr [rax], r8d ; xor ebx, esi ; jmp qword ptr [rdx]
0x0000000000407135 : add dword ptr [rbp + 0x304789c0], eax ; jle 0x407149 ; ret
0x00000000004b0057 : add dword ptr [rbp + 0x31], eax ; in al, -0x73 ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000047bdc3 : add dword ptr [rbp + 0xa], esi ; ret
0x0000000000423212 : add dword ptr [rbp + 0xb], esi ; pop rbx ; ret
0x0000000000472122 : add dword ptr [rbp + 0xb], esi ; ret
0x0000000000418fda : add dword ptr [rbp + 3], esi ; pop rbx ; ret
0x0000000000422278 : add dword ptr [rbp + 5], esi ; ret
0x0000000000404297 : add dword ptr [rbp + 6], esi ; pop rbx ; ret
0x0000000000407846 : add dword ptr [rbp + 7], esi ; xor eax, eax ; ret
0x00000000004ae494 : add dword ptr [rbp + 9], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f703 : add dword ptr [rbp - 0x11], esi ; mov rax, qword ptr [rsi + 0x28] ; mov dword ptr [rdi], eax ; ret
0x000000000042425f : add dword ptr [rbp - 0x14138a2e], eax ; ret 0x2e66
0x000000000046b509 : add dword ptr [rbp - 0x14], esi ; ret
0x00000000004149bc : add dword ptr [rbp - 0x16], esi ; ret
0x000000000044bc17 : add dword ptr [rbp - 0x32], esi ; add rsp, 8 ; jmp r9
0x0000000000424245 : add dword ptr [rbp - 0x76098a0a], eax ; sal bl, 1 ; ret
0x0000000000408178 : add dword ptr [rbp - 0xc], esi ; ret
0x000000000040224b : add dword ptr [rbp], ecx ; add eax, 0x10 ; ret
0x00000000004021db : add dword ptr [rbp], ecx ; add eax, 0x18 ; ret
0x0000000000402238 : add dword ptr [rbp], ecx ; add eax, 0x20 ; ret
0x0000000000402217 : add dword ptr [rbp], ecx ; add eax, 0x28 ; ret
0x0000000000402228 : add dword ptr [rbp], ecx ; add eax, 0x30 ; ret
0x00000000004021b5 : add dword ptr [rbp], ecx ; add eax, 0x38 ; ret
0x0000000000402263 : add dword ptr [rbp], ecx ; add eax, 8 ; ret
0x00000000004021f7 : add dword ptr [rbp], ecx ; ret
0x0000000000424175 : add dword ptr [rbx + 0x48], ebx ; mov dword ptr [rdi], eax ; ret
0x00000000004b7849 : add dword ptr [rbx + 0x97701f8], eax ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000004b7869 : add dword ptr [rbx + 0x97701f8], eax ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000050a195 : add dword ptr [rbx + 6], esp ; jno 0x50a19c ; xchg eax, edi ; ret
0x0000000000534496 : add dword ptr [rbx + rbx*2], 0xa ; ret
0x00000000004aae12 : add dword ptr [rbx + rcx - 0x48], esi ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000483e23 : add dword ptr [rbx - 0x7cb6d413], eax ; ret
0x00000000004a841f : add dword ptr [rbx - 0x7cb7fe3d], eax ; ret 0x8d01
0x000000000053f07b : add dword ptr [rbx], -0x7a ; add al, byte ptr [rsi + rcx + 0x18] ; ret
0x000000000053b5cc : add dword ptr [rbx], -0x7a ; add bl, byte ptr [rsi + rcx + 0x18] ; ret
0x000000000052f1cc : add dword ptr [rbx], -0x7a ; add dl, byte ptr [rsi + rcx + 0x18] ; ret
0x00000000004aa627 : add dword ptr [rbx], eax ; mov eax, 1 ; pop rbx ; ret
0x0000000000518ea1 : add dword ptr [rbx], edx ; adc ecx, ecx ; ret 0x15a3
0x000000000047953b : add dword ptr [rbx], esi ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000040909b : add dword ptr [rcx + 0x21], eax ; ret 0xf741
0x00000000004420ec : add dword ptr [rcx + 0x29], ecx ; ret
0x0000000000408e78 : add dword ptr [rcx + 0x39], eax ; ret
0x0000000000484f07 : add dword ptr [rcx + 0x39], eax ; ret 0x2b74
0x00000000004858d1 : add dword ptr [rcx + 0x39], eax ; ret 0x8941
0x00000000004613cd : add dword ptr [rcx + 0x39], eax ; ret 0xed7f
0x00000000004fb794 : add dword ptr [rcx + 0x54], ebp ; mov word ptr [rsi + 0x44], ss ; ret 0x7461
0x0000000000471094 : add dword ptr [rcx + rcx - 0x48], esi ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041c97f : add dword ptr [rcx + rcx*4 - 0xa], ecx ; mov rdi, qword ptr [rbx] ; call r15
0x0000000000545b9e : add dword ptr [rcx + rdi*2], 0xa ; ret
0x00000000004241f4 : add dword ptr [rcx - 0x3a], eax ; add eax, dword ptr [rax + 0x789485b] ; ret
0x00000000005086de : add dword ptr [rcx - 0x5432cd69], eax ; leave ; rcl byte ptr [rcx - 0x3e], 1 ; jmp 0x5086fb
0x00000000004cd557 : add dword ptr [rcx - 0x73], ecx ; push rax ; add dword ptr [rax + 0xf], ecx ; ret 0x3948
0x00000000004ab605 : add dword ptr [rcx - 0x76b3ffaf], edi ; out -0x18, eax ; jmp rsp
0x000000000044922a : add dword ptr [rcx - 0x76b7fbb2], ecx ; cmp al, 0xc2 ; ret
0x00000000004851a9 : add dword ptr [rcx - 0x77], ecx ; ret
0x000000000042412e : add dword ptr [rcx - 0x78], eax ; adc ebx, dword ptr [rbx + 0x48] ; mov dword ptr [rdi], eax ; ret
0x0000000000453a83 : add dword ptr [rcx - 0x7d], eax ; out dx, eax ; add ecx, ebp ; ret
0x000000000049f673 : add dword ptr [rcx - 0x7d], ecx ; rol byte ptr [rcx], 0x39 ; ret 0xec75
0x00000000004b84bb : add dword ptr [rcx - 0x7f], eax ; ret 0x5180
0x000000000049fb73 : add dword ptr [rcx - 0x80], eax ; js 0x49fb80 ; add byte ptr [rbp + rdi*2 - 0x7d], dh ; ret 0x3901
0x000000000048587d : add dword ptr [rcx - 0xa], eax ; ret 0xf80
0x000000000049f957 : add dword ptr [rcx - 9], eax ; rol byte ptr [rcx + 0x21], cl ; rol byte ptr [rcx + 0x21], cl ; ret 0xc141
0x0000000000451c2d : add dword ptr [rcx - 9], ecx ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000052b2dd : add dword ptr [rcx], 0 ; add al, 0x28 ; hlt ; jmp rsp
0x0000000000547155 : add dword ptr [rcx], 0xf3a75800 ; jmp rdi
0x00000000005471a5 : add dword ptr [rcx], 0xf3a7f800 ; jmp rbx
0x000000000040a4d0 : add dword ptr [rcx], eax ; ret
0x00000000004c5338 : add dword ptr [rcx], eax ; ret 0x6eb
0x000000000045b799 : add dword ptr [rcx], eax ; ret 0xdfe8
0x0000000000402934 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000004a8b7c : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7c0220], 0x16 ; ret
0x00000000004b3390 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 1 ; ret
0x00000000004806ac : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00000000004804d1 : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 5 ; ret
0x0000000000409e2b : add dword ptr [rcx], edi ; ret
0x0000000000448ab3 : add dword ptr [rcx], edi ; ret 0x237e
0x0000000000448ad6 : add dword ptr [rcx], edi ; ret 0xdd7f
0x0000000000461b70 : add dword ptr [rcx], edi ; ret 0xe375
0x000000000049f677 : add dword ptr [rcx], edi ; ret 0xec75
0x000000000049fb7d : add dword ptr [rcx], edi ; ret 0xee75
0x00000000004a0c0b : add dword ptr [rcx], edi ; ret 0xf075
0x0000000000406259 : add dword ptr [rcx], esi ; rol byte ptr [rax - 0x6bf08105], cl ; ret 0xf631
0x00000000004550d3 : add dword ptr [rdi + 0x40], eax ; ret
0x00000000004b784c : add dword ptr [rdi + 9], esi ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000004b786c : add dword ptr [rdi + 9], esi ; mov eax, dword ptr [rdi + 0x24] ; ret
0x00000000004b780c : add dword ptr [rdi + 9], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000553a66 : add dword ptr [rdi + rsi*2], 0xa ; ret
0x000000000044614b : add dword ptr [rdi], ecx ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000450309 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x548d
0x0000000000552c36 : add dword ptr [rdx + rax], -0x76 ; ret
0x000000000054085e : add dword ptr [rdx + rax], -0x79 ; ret
0x0000000000532f9e : add dword ptr [rdx + rax], 0x4c ; ret
0x000000000053505e : add dword ptr [rdx + rax], 0x58 ; ret
0x000000000048c41b : add dword ptr [rdx - 0x3fce0009], edx ; pop rbx ; ret
0x00000000005118b5 : add dword ptr [rdx - 0xd], 0x16 ; ret
0x000000000052e22d : add dword ptr [rdx], 0 ; clc ; call rsp
0x0000000000535b0d : add dword ptr [rdx], 0x43 ; ret
0x000000000052f84d : add dword ptr [rdx], 0x44 ; ret
0x000000000052f9a5 : add dword ptr [rdx], 0x48 ; ret
0x0000000000546c4c : add dword ptr [rdx], 0x49 ; ret
0x0000000000534284 : add dword ptr [rdx], 0x4c ; ret
0x0000000000551c2d : add dword ptr [rdx], 0x4d ; ret
0x00000000005321bc : add dword ptr [rdx], 0x4f ; ret
0x000000000052f1fd : add dword ptr [rdx], 0x50 ; ret
0x000000000053d77d : add dword ptr [rdx], 0x51 ; ret
0x000000000053e295 : add dword ptr [rdx], 0x52 ; ret
0x00000000005479fc : add dword ptr [rdx], 0x54 ; ret
0x000000000053095c : add dword ptr [rdx], 0x55 ; ret
0x0000000000546c55 : add dword ptr [rdx], 0x56 ; ret
0x0000000000532044 : add dword ptr [rdx], 0x58 ; ret
0x0000000000532d7c : add dword ptr [rdx], 0x59 ; ret
0x0000000000542364 : add dword ptr [rdx], 0x5a ; ret
0x0000000000551714 : add dword ptr [rdx], 0x5b ; ret
0x0000000000532ecc : add dword ptr [rdx], 0x5c ; ret
0x000000000053266c : add dword ptr [rdx], 0x5d ; ret
0x000000000053818d : add dword ptr [rdx], 0x5f ; ret
0x0000000000547fb4 : add dword ptr [rdx], 0x60 ; ret
0x000000000053f0ad : add dword ptr [rdx], 0x62 ; ret
0x000000000052f1f4 : add dword ptr [rdx], 0x64 ; ret
0x000000000052f844 : add dword ptr [rdx], 0x65 ; ret
0x0000000000538184 : add dword ptr [rdx], 0x66 ; ret
0x000000000052f99c : add dword ptr [rdx], 0x67 ; ret
0x000000000054ee64 : add dword ptr [rdx], 0x68 ; ret
0x000000000053312c : add dword ptr [rdx], 0x69 ; ret
0x0000000000547fd4 : add dword ptr [rdx], 0x6e ; ret
0x0000000000539f34 : add dword ptr [rdx], 0x70 ; ret
0x000000000053eb84 : add dword ptr [rdx], 0x74 ; ret
0x000000000053b1ac : add dword ptr [rdx], 0x75 ; ret
0x0000000000546cd5 : add dword ptr [rdx], 0x79 ; ret
0x000000000053bc3c : add dword ptr [rdx], 0x7e ; ret
0x000000000053c25c : add dword ptr [rdx], 2 ; jo 0x53c270 ; ret
0x000000000053487c : add dword ptr [rdx], 2 ; ret
0x000000000053fadd : add dword ptr [rdx], 2 ; stosd dword ptr [rdi], eax ; ret
0x000000000054f1ad : add dword ptr [rdx], eax ; add byte ptr [rax - 0x7c], dl ; cmc ; call qword ptr [rbx]
0x000000000054f16d : add dword ptr [rdx], eax ; add byte ptr [rax - 0x7c], dl ; cmc ; jmp qword ptr [rdi]
0x000000000053598c : add dword ptr [rdx], ecx ; ret
0x00000000004b726c : add dword ptr [rsi + 0x11], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004bd80b : add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c457d : add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret 0xff3
0x0000000000480387 : add dword ptr [rsi + rax - 0x48], esi ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000040b9fb : add dword ptr [rsi - 0x6d140001], esi ; ret
0x0000000000530538 : add dword ptr [rsi], 0x72 ; ret
0x0000000000530668 : add dword ptr [rsi], 0x77 ; ret
0x0000000000546efe : add dword ptr [rsi], 0xa ; ret
0x0000000000500bc3 : add dword ptr [rsi], 0xe ; jge 0x500c1b ; in al, dx ; call rsp
0x00000000004aa5a0 : add dword ptr [rsi], 1 ; mov eax, 1 ; ret
0x00000000004aa5bc : add dword ptr [rsi], 1 ; ret
0x00000000005444c8 : add dword ptr [rsi], 2 ; mov cs, word ptr [rdx] ; ret
0x00000000004aa5d6 : add dword ptr [rsi], 2 ; ret
0x0000000000545968 : add dword ptr [rsi], 2 ; ret 0xec3
0x00000000004aa60a : add dword ptr [rsi], 4 ; ret
0x000000000049fbeb : add dword ptr [rsi], ebx ; idiv bh ; mov eax, ebx ; pop rbx ; ret
0x000000000052a38d : add dword ptr cs:[rax], eax ; adc al, 0xfa ; int1 ; call rsp
0x000000000052a695 : add dword ptr ds:[rax], eax ; sub esi, edx ; jmp rsp
0x0000000000541645 : add dword ptr es:[rax], eax ; call 0xffffffffd7540927
0x000000000054549d : add dword ptr fs:[rax], eax ; mov al, 0x66 ; call qword ptr [rbx]
0x0000000000545485 : add dword ptr fs:[rax], eax ; test al, 0x66 ; call qword ptr [rbx]
0x000000000052ad4d : add dword ptr gs:[rax], eax ; add al, 0x85 ; jmp rsp
0x00000000004526af : add dword ptr gs:[rax], eax ; add byte ptr [rdi], cl ; ret 0xe73d
0x00000000005455a5 : add dword ptr gs:[rax], eax ; fsub dword ptr [rsi - 0xd] ; call qword ptr [rax]
0x00000000005454fd : add dword ptr gs:[rax], eax ; shl byte ptr [rsi - 0xd], 1 ; call qword ptr [rax]
0x000000000052a515 : add dword ptr ss:[rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; adc dh, dl ; jmp rsp
0x0000000000518ea0 : add dword ptr ss:[rbx], edx ; adc ecx, ecx ; ret 0x15a3
0x000000000040224e : add eax, 0x10 ; ret
0x0000000000518e9e : add eax, 0x13013695 ; adc ecx, ecx ; ret 0x15a3
0x00000000004a8b82 : add eax, 0x16 ; ret
0x00000000004021de : add eax, 0x18 ; ret
0x0000000000419e81 : add eax, 0x18c48348 ; ret
0x00000000004c6a29 : add eax, 0x1f0ffff4 ; add bl, sil ; ret
0x000000000040223b : add eax, 0x20 ; ret
0x00000000004b66da : add eax, 0x20478b48 ; ret
0x0000000000505284 : add eax, 0x23f2b8c4 ; stosb byte ptr [rdi], al ; ret 0x426d
0x000000000040221a : add eax, 0x28 ; ret
0x000000000043bd0e : add eax, 0x28c48348 ; ret
0x00000000004b752b : add eax, 0x2a2bc8 ; add rsp, 8 ; ret
0x00000000004b46a2 : add eax, 0x2a59f5 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004adef2 : add eax, 0x2a99d9 ; ret
0x0000000000479d72 : add eax, 0x2dce71 ; ret
0x000000000046a2e2 : add eax, 0x2efcd9 ; ret
0x0000000000469d4b : add eax, 0x2f0268 ; add rsp, 8 ; ret
0x0000000000467c4b : add eax, 0x2f2360 ; add rsp, 8 ; ret
0x0000000000464fbb : add eax, 0x2f4fe8 ; add rsp, 8 ; ret
0x0000000000480684 : add eax, 0x2f74d089 ; ret
0x000000000045fffb : add eax, 0x2f9fa0 ; add rsp, 8 ; ret
0x000000000040222b : add eax, 0x30 ; ret
0x000000000043509c : add eax, 0x315bfffd ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000043b8b1 : add eax, 0x31e622 ; ret
0x000000000043a5ca : add eax, 0x31f8f1 ; jne 0x43a596 ; pop rbx ; ret
0x000000000043a56a : add eax, 0x31f951 ; jne 0x43a536 ; pop rbx ; ret
0x0000000000437d9b : add eax, 0x322110 ; add rsp, 8 ; ret
0x000000000051200d : add eax, 0x3398db0f ; ret
0x000000000041e331 : add eax, 0x33b5e6 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000041d7db : add eax, 0x33c138 ; add rsp, 8 ; ret
0x0000000000406c15 : add eax, 0x34fb96 ; mov qword ptr [rsi], rax ; ret
0x0000000000406bd7 : add eax, 0x34fbd4 ; mov qword ptr [rsi], rax ; ret
0x0000000000406ba3 : add eax, 0x34fc20 ; mov qword ptr [rdx], rax ; ret
0x0000000000406b47 : add eax, 0x34fc7c ; mov qword ptr [rdx], rax ; ret
0x0000000000406aa1 : add eax, 0x34fd4a ; test eax, eax ; jne 0x406ab9 ; ret
0x00000000004068a2 : add eax, 0x351419 ; ret
0x0000000000407872 : add eax, 0x352061 ; ret
0x0000000000406c63 : add eax, 0x352c28 ; mov qword ptr [r8], rax ; ret
0x00000000004060f2 : add eax, 0x353771 ; ret
0x0000000000406072 : add eax, 0x3537e9 ; ret
0x0000000000405ff2 : add eax, 0x353879 ; ret
0x0000000000405fe2 : add eax, 0x353891 ; ret
0x0000000000405fa2 : add eax, 0x3538a1 ; ret
0x0000000000405f92 : add eax, 0x3538b9 ; ret
0x0000000000405f82 : add eax, 0x3538d1 ; ret
0x000000000040549f : add eax, 0x354394 ; jmp 0x405463
0x0000000000404c3b : add eax, 0x354bf8 ; add rsp, 8 ; ret
0x0000000000402161 : add eax, 0x355b6e ; ret
0x0000000000402151 : add eax, 0x355b7a ; ret
0x0000000000402138 : add eax, 0x355b8f ; ret
0x0000000000402141 : add eax, 0x355b92 ; ret
0x0000000000401cc4 : add eax, 0x355ffe ; add ebx, esi ; ret
0x00000000004fbdfa : add eax, 0x36d53d32 ; adc al, 0x62 ; ret
0x000000000052f4fd : add eax, 0x37000000 ; in eax, dx ; jmp qword ptr [rax]
0x00000000004021b8 : add eax, 0x38 ; ret
0x000000000046a854 : add eax, 0x38478b48 ; ret
0x00000000004234e9 : add eax, 0x38c48348 ; ret
0x000000000052f5c5 : add eax, 0x3ae80000 ; in eax, dx ; call qword ptr [rcx]
0x000000000050fcf5 : add eax, 0x3f168143 ; hlt ; and al, 0x68 ; xchg eax, edi ; ret
0x000000000046ace4 : add eax, 0x40478b48 ; ret
0x0000000000442260 : add eax, 0x48000000 ; mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000004b7067 : add eax, 0x48fffffa ; add esp, 0x20 ; pop rbx ; ret
0x0000000000448878 : add eax, 0x58c48348 ; ret
0x0000000000421cbe : add eax, 0x5b000000 ; ret
0x000000000050581d : add eax, 0x64b0408d ; ret
0x00000000004b244a : add eax, 0x66c3c031 ; nop ; jmp rax
0x00000000004804ed : add eax, 0x674c289 ; mov eax, edx ; ret
0x00000000004a00e7 : add eax, 0x68c48348 ; ret
0x0000000000427faf : add eax, 0x6f0f4466 ; ret
0x0000000000427a3c : add eax, 0x6f0f4466 ; ret 0xfd01
0x00000000004b5ad7 : add eax, 0x750800f6 ; add esi, ebx ; ret
0x0000000000480915 : add eax, 0x756e80 ; ret
0x00000000004bdb5b : add eax, 0x83480000 ; ret 0x4820
0x00000000005134c4 : add eax, 0x857d2e5c ; ret
0x00000000004c7d72 : add eax, 0x88d3094c ; ret 0xc148
0x00000000004f93b8 : add eax, 0x9f51d50e ; ret 0xe1a9
0x000000000043e40f : add eax, 0xb9000001 ; ret
0x0000000000423512 : add eax, 0xba ; add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000443189 : add eax, 0xc ; ret
0x00000000004b6699 : add eax, 0xc3070348 ; nop ; xor eax, eax ; ret
0x00000000005040a4 : add eax, 0xd04ee144 ; ret
0x0000000000426b92 : add eax, 0xd1c30141 ; ret 0x2144
0x0000000000426a3d : add eax, 0xd1c40141 ; ret 0xf321
0x0000000000426c3e : add eax, 0xd1c50141 ; ret 0xfb21
0x000000000052cbad : add eax, 0xe2440002 ; cmc ; jmp rsp
0x0000000000505283 : add eax, 0xf2b8c405 ; and ecx, dword ptr [rax - 0x56] ; ret 0x426d
0x00000000004148d7 : add eax, 0xf3fffffd ; ret
0x00000000004a429b : add eax, 0xf48004c ; ret 0x8948
0x000000000044383a : add eax, 0xfff8f0e9 ; push rbx ; ret
0x000000000040ba1e : add eax, 1 ; mov dword ptr [rdi + 0x34], eax ; ret
0x00000000004b3396 : add eax, 1 ; ret
0x000000000042425d : add eax, 1 ; test edx, edx ; jne 0x424258 ; jmp 0x424230
0x0000000000424270 : add eax, 3 ; ret
0x00000000004b4599 : add eax, 5 ; ret
0x0000000000402266 : add eax, 8 ; ret
0x00000000004808e9 : add eax, 9 ; ret
0x00000000004ed374 : add eax, dword ptr [rax + 0x34] ; add eax, dword ptr [rax + 0x34] ; add esp, dword ptr [rbx] ; ret
0x00000000004ed377 : add eax, dword ptr [rax + 0x34] ; add esp, dword ptr [rbx] ; ret
0x00000000004241f7 : add eax, dword ptr [rax + 0x789485b] ; ret
0x00000000004878a6 : add eax, dword ptr [rax] ; add al, ch ; ret 0x204
0x00000000004622bd : add eax, dword ptr [rax] ; add al, ch ; wait ; ret 0xfffb
0x0000000000458260 : add eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x000000000046de17 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004398f2 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x98be
0x00000000004ec2e1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000473b68 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041c5a0 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000004093a6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x405626
0x000000000043d6bb : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000004b3342 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000004a9648 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000040ab7e : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rdi]
0x0000000000477887 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x11], 0x41 ; call rsp
0x0000000000472a03 : add eax, dword ptr [rax] ; add dh, dh ; ret
0x000000000047436a : add eax, dword ptr [rax] ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a26fe : add eax, dword ptr [rbx + 0x94c03c0] ; ret 0x948
0x0000000000409089 : add eax, dword ptr [rbx - 0x76befd0f] ; ret 0xe883
0x000000000053508a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa630204], al ; ret
0x000000000053f2f5 : add eax, dword ptr [rcx] ; add al, ch ; jmp qword ptr gs:[rsi]
0x0000000000470310 : add eax, dword ptr [rcx] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000052f1ba : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rsi + rcx + 0x18], dh ; ret
0x000000000052f2ba : add eax, dword ptr [rdi + 0xe] ; xor byte ptr [rsi + rcx + 0x18], ah ; ret
0x00000000004b669b : add eax, dword ptr [rdi] ; ret
0x000000000052cafd : add eax, dword ptr [rdx] ; add ah, ah ; loopne 0x52cafe ; call rsp
0x000000000053f07c : add eax, dword ptr [rsi + 0x180e4402] ; ret
0x000000000054212d : add eax, dword ptr [rsi + 0x180e4f02] ; ret
0x000000000052f1cd : add eax, dword ptr [rsi + 0x180e5402] ; ret
0x000000000053b5cd : add eax, dword ptr [rsi + 0x180e5c02] ; ret
0x00000000005321f5 : add eax, dword ptr [rsi + 0x180e6302] ; ret
0x0000000000534492 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rbx + rbx*2], 0xa ; ret
0x0000000000545b9a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rcx + rdi*2], 0xa ; ret
0x0000000000553a62 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdi + rsi*2], 0xa ; ret
0x000000000054085a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0x79 ; ret
0x0000000000532f9a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x4c ; ret
0x000000000047060c : add eax, eax ; ret
0x0000000000415565 : add eax, ebp ; cmc ; adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000000000507576 : add eax, ebp ; loopne 0x5075c9 ; ret 0xe976
0x000000000040a57c : add eax, ebp ; mov esi, 0x1ffff85 ; ret
0x00000000004b0201 : add eax, ebp ; pop rcx ; ret
0x00000000004826fd : add eax, ebp ; sub eax, 0x39fff9a1 ; ret
0x000000000050c33b : add eax, ebx ; lodsd eax, dword ptr [rsi] ; ret 0x8362
0x0000000000470311 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041961a : add eax, ebx ; pop rbx ; ret
0x00000000004bc19f : add eax, ecx ; enter -0x76fd, 0x17 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004f7ccf : add eax, edi ; out dx, eax ; ret
0x00000000004704e6 : add eax, edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004070f0 : add eax, edi ; ret
0x00000000004071a3 : add eax, edx ; add rax, rsi ; ret
0x000000000040228c : add eax, edx ; ret
0x00000000004071a6 : add eax, esi ; ret
0x00000000005013e7 : add eax, esp ; ret
0x00000000004a8e15 : add ebp, 1 ; call r12
0x0000000000449800 : add ebp, 8 ; call r12
0x00000000005049d1 : add ebp, dword ptr [rcx - 0x21] ; jmp 0x504a4b
0x00000000004ed32c : add ebp, dword ptr [rcx - 0x5da07291] ; ret 0x7455
0x000000000041fc95 : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004734f9 : add ebp, dword ptr [rcx] ; ret 0xd089
0x000000000047139a : add ebp, eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000517c2b : add ebx, dword ptr [rbx + 0xaa02382] ; mov edi, dword ptr [rbx] ; push rax ; ret
0x0000000000418fdc : add ebx, dword ptr [rbx - 0xd] ; ret
0x000000000053598a : add ebx, dword ptr [rcx] ; add dword ptr [rdx], ecx ; ret
0x00000000004655a3 : add ebx, dword ptr [rcx] ; sal bh, 0xd0 ; and eax, 2 ; pop rbx ; ret
0x000000000045a3c3 : add ebx, dword ptr [rsp] ; mov rdi, rbx ; call rax
0x00000000004b670e : add ebx, eax ; mov eax, ebx ; pop rbx ; ret
0x0000000000484d6e : add ebx, eax ; movsx eax, sil ; sub eax, 0x30 ; ret
0x000000000040bb8a : add ebx, ebp ; ret
0x0000000000401cc9 : add ebx, esi ; ret
0x000000000042115f : add ecx, 0x30 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000004b8b00 : add ecx, dword ptr [rax + 0x29] ; ret 0xf74
0x00000000004b8578 : add ecx, dword ptr [rax + 0xf] ; ret 0xba48
0x0000000000494cdb : add ecx, dword ptr [rax - 0x3f] ; clc ; and byte ptr [rax + 1], cl ; ret 0x438b
0x000000000046e8d6 : add ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040cc55 : add ecx, dword ptr [rax - 0x77] ; ret 0x294c
0x0000000000452b00 : add ecx, dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000004b85b7 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret 0xba48
0x000000000047308f : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004bc1a2 : add ecx, dword ptr [rcx + 0x4478917] ; ret
0x000000000043eba4 : add ecx, dword ptr [rcx - 0x3b7cb718] ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000453c04 : add ecx, dword ptr [rcx] ; ret 0x34e8
0x0000000000453ac5 : add ecx, dword ptr [rcx] ; ret 0x73e8
0x000000000050ed55 : add ecx, dword ptr [rdi] ; mov eax, 0x7a2186b ; ret 0x55d0
0x000000000040c9f0 : add ecx, dword ptr [rdi] ; xchg eax, edi ; ret 0x8348
0x000000000053b5ba : add ecx, dword ptr [rdx + 0xe] ; and byte ptr [rsi + rcx + 0x18], ah ; ret
0x000000000041e176 : add ecx, eax ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000453a87 : add ecx, ebp ; ret
0x0000000000517dab : add ecx, ebx ; push rdx ; ror bl, cl ; ror dword ptr [rbx], cl ; ret 0xd5b3
0x00000000004ece86 : add ecx, ecx ; ret
0x000000000048c0ae : add edi, 0x18 ; call 0x406849
0x000000000048bfde : add edi, 0x1c ; call 0x406849
0x00000000004aa628 : add edi, dword ptr [rax + 1] ; pop rbx ; ret
0x000000000046553e : add edi, dword ptr [rax + 2] ; pop rbx ; ret
0x00000000004a96ef : add edi, dword ptr [rax + 5] ; ret
0x0000000000518573 : add edi, dword ptr [rbp - 0x46c11d42] ; nop ; leave ; ret 0x9a60
0x000000000041e86f : add edi, dword ptr [rsp + 8] ; mov rsi, r15 ; call r12
0x000000000041e346 : add edi, eax ; mov dword ptr [rip + 0x338562], edi ; ret
0x000000000050e745 : add edi, eax ; push -0x7067e997 ; js 0x50e7cd ; ret
0x000000000052ec49 : add edi, ecx ; jmp rsp
0x0000000000509cbf : add edi, edi ; insd dword ptr [rdi], dx ; xchg eax, edx ; mov edi, 0xba1700f6 ; ret 0xbf6b
0x000000000047201c : add edi, edi ; loopne 0x471fb6 ; xor eax, eax ; ret
0x000000000050f6a4 : add edi, edx ; and eax, 0xe3f9eec3 ; ret
0x000000000048b57a : add edx, 0x10 ; mov rax, rdx ; ret
0x000000000045253a : add edx, 0x60 ; cmp esi, r10d ; ja 0x4524f9 ; ret
0x000000000041c4ea : add edx, 1 ; cmp edx, ecx ; jne 0x41c4e9 ; xor eax, eax ; ret
0x000000000048b51c : add edx, 8 ; mov rax, rdx ; pop rbx ; ret
0x000000000048b562 : add edx, 8 ; mov rax, rdx ; ret
0x00000000004f1d37 : add edx, dword ptr [rbp + 0x21] ; ret 0xfa94
0x0000000000423b25 : add edx, dword ptr [rdi] ; mov eax, dword ptr [rdx] ; mov dword ptr [rdx], esi ; ret
0x0000000000423d81 : add edx, dword ptr [rdi] ; mov rax, rdx ; ret
0x0000000000506b46 : add edx, dword ptr [rsi] ; ret 0x1437
0x00000000004c5339 : add edx, eax ; jmp 0x4c5344
0x000000000045a407 : add edx, ecx ; mov byte ptr [rsi], dl ; ret
0x000000000040ff9f : add edx, esp ; out dx, al ; sbb rax, rax ; and eax, 1 ; ret
0x00000000004c4aab : add esi, 0x10 ; call r15
0x000000000041e21e : add esi, dword ptr [rbp + 0x67] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rcx + 0x10] ; ret
0x00000000004b77de : add esi, dword ptr [rbp + 0xf] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000514656 : add esi, dword ptr [rbx + 0x56] ; and byte ptr [rbp + 9], dh ; ret
0x00000000004485d2 : add esi, dword ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004f9347 : add esi, dword ptr [rdi] ; sbb ebx, edx ; ret 0x254
0x00000000004f8d2b : add esi, dword ptr [rsi - 0xe] ; ret
0x00000000004b52bc : add esi, ebp ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000040266c : add esi, ebx ; ret
0x0000000000421164 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000004eec28 : add esi, ecx ; xchg eax, esp ; xor edx, dword ptr [rsi + 7] ; ret
0x0000000000485435 : add esi, esi ; ret 0x7520
0x000000000050ed49 : add esi, esp ; cli ; ret
0x00000000004fc4a5 : add esi, esp ; ret 0xc6d7
0x000000000041c2b2 : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004235b8 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000499038 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043d039 : add esp, 0x10 ; mov rdi, rbx ; pop rbx ; jmp rax
0x000000000046d0e2 : add esp, 0x10 ; mov rdi, rbx ; pop rbx ; jmp rcx
0x0000000000422730 : add esp, 0x10 ; pop rbp ; ret
0x000000000040259c : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040490b : add esp, 0x10 ; pop rbx ; ret
0x0000000000402aa6 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405f19 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000040504f : add esp, 0x18 ; jmp rax
0x00000000004792ed : add esp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040e9d3 : add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004703c9 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004a63e1 : add esp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000486515 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004ab29c : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rdx
0x0000000000405bb1 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040e449 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040252f : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004030a0 : add esp, 0x18 ; ret
0x0000000000443716 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000479028 : add esp, 0x20 ; mov rax, rdx ; pop rbx ; ret
0x000000000046c6fd : add esp, 0x20 ; mov rdi, rbx ; pop rbx ; jmp r9
0x0000000000424ce9 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407640 : add esp, 0x20 ; pop rbx ; ret
0x0000000000405474 : add esp, 0x260 ; pop rbx ; ret
0x000000000041d979 : add esp, 0x28 ; jmp rax
0x000000000041f0f5 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000407700 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000043bd10 : add esp, 0x28 ; ret
0x000000000040552f : add esp, 0x288 ; pop rbx ; pop rbp ; ret
0x000000000043bc48 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004051ba : add esp, 0x30 ; pop rbx ; ret
0x000000000041d927 : add esp, 0x38 ; jmp rax
0x000000000041e4a5 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004494b2 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004050ad : add esp, 0x38 ; ret
0x0000000000442bfd : add esp, 0x40 ; pop rbx ; ret
0x0000000000407234 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041e5f6 : add esp, 0x48 ; ret
0x0000000000407cdb : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407c2b : add esp, 0x50 ; pop rbx ; ret
0x00000000004a8653 : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000452772 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000041eef3 : add esp, 0x58 ; ret
0x00000000004ae80a : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449fb6 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047dc16 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000004a00e9 : add esp, 0x68 ; ret
0x00000000004a7ec5 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b593a : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004a2134 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000004cefaf : add esp, 0x88 ; ret
0x0000000000455f55 : add esp, 0xa0 ; pop rbx ; ret
0x0000000000457139 : add esp, 0xa8 ; ret
0x00000000004c66d1 : add esp, 0xc00 ; call r14
0x00000000004c6431 : add esp, 0xc00 ; call rax
0x0000000000401eca : add esp, 0xc8 ; pop rbx ; pop rbp ; ret
0x0000000000405d8a : add esp, 0xd8 ; ret
0x0000000000421fd8 : add esp, 0xf8 ; ret
0x0000000000443186 : add esp, 8 ; add eax, 0xc ; ret
0x00000000004b4596 : add esp, 8 ; add eax, 5 ; ret
0x00000000004b35c6 : add esp, 8 ; add eax, 8 ; ret
0x00000000004808e6 : add esp, 8 ; add eax, 9 ; ret
0x00000000004b7454 : add esp, 8 ; and eax, 1 ; ret
0x000000000040612a : add esp, 8 ; cdqe ; ret
0x000000000044b911 : add esp, 8 ; jmp r10
0x000000000044bc96 : add esp, 8 ; jmp r8
0x000000000044ba11 : add esp, 8 ; jmp r9
0x0000000000404f95 : add esp, 8 ; jmp rax
0x000000000044bd11 : add esp, 8 ; jmp rcx
0x000000000044b466 : add esp, 8 ; jmp rdx
0x000000000040475e : add esp, 8 ; lea rax, qword ptr [rax + rdx*4] ; ret
0x000000000041a77c : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000404c98 : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041902b : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004b8164 : add esp, 8 ; mov eax, edx ; ret
0x000000000041a080 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040432d : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000419778 : add esp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; ret
0x0000000000422135 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040d844 : add esp, 8 ; mov rdx, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000470606 : add esp, 8 ; movzx eax, al ; add eax, eax ; ret
0x0000000000424df3 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000424d87 : add esp, 8 ; movzx eax, al ; ret
0x000000000043f815 : add esp, 8 ; movzx eax, dl ; pop rbx ; pop rbp ; ret
0x000000000048491b : add esp, 8 ; neg eax ; pop rbx ; pop rbp ; ret
0x000000000043f792 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044a3cf : add esp, 8 ; pop rbx ; pop rbp ; mov rax, rdx ; ret
0x0000000000438fd5 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004024b0 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401fd1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040171b : add esp, 8 ; ret
0x0000000000437227 : add esp, 8 ; sar eax, 3 ; ret
0x000000000049bdbe : add esp, 8 ; sub eax, 1 ; ret
0x0000000000406620 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000490954 : add esp, 8 ; xor eax, eax ; ret
0x00000000004ae613 : add esp, 8 ; xor edi, edi ; pop rbx ; pop rbp ; jmp rax
0x00000000004a3d7a : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000484952 : add esp, 8 ; xor rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000005051ce : add esp, dword ptr [rbp - 0x47] ; pushfq ; outsd dx, dword ptr [rsi] ; ret 0x53a0
0x00000000004ed37a : add esp, dword ptr [rbx] ; ret
0x00000000004f4b56 : add esp, dword ptr [rcx - 0x5bd6ce24] ; ret
0x0000000000429129 : add esp, eax ; ret
0x0000000000432f46 : add esp, eax ; ret 0x55
0x0000000000432f39 : add esp, eax ; ret 0x5d
0x0000000000432f2c : add esp, eax ; ret 0x65
0x0000000000432f1f : add esp, eax ; ret 0x6d
0x0000000000432f12 : add esp, eax ; ret 0x75
0x0000000000432f05 : add esp, eax ; ret 0x7d
0x00000000004a1e28 : add esp, edi ; call rax
0x000000000050dbd8 : add qword ptr [r8 + rcx*8 + 0x23], rdx ; ret 0x52a2
0x0000000000543cfd : add qword ptr [r8], r8 ; rcl byte ptr [rax - 0xd], 1 ; call qword ptr [rdx]
0x000000000052a8bd : add qword ptr [r8], rax ; xchg eax, esp ; movsxd rsi, edx ; jmp rsp
0x0000000000408d86 : add qword ptr [rax + 0x63], rcx ; ret 0x8b48
0x00000000004c205e : add qword ptr [rax], r12 ; sub r10, rax ; jmp 0x4c2075
0x000000000052a9bd : add qword ptr [rax], r8 ; in al, 0x71 ; jmp rsp
0x0000000000543e1d : add qword ptr [rax], r8 ; jo 0x543e79 ; call qword ptr [rbx]
0x0000000000543e1c : add qword ptr [rax], r8 ; jo 0x543e7a ; call qword ptr [rbx]
0x0000000000543e35 : add qword ptr [rax], r8 ; js 0x543e91 ; call qword ptr [rbx]
0x0000000000452df2 : add qword ptr [rax], rax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x000000000052a89d : add qword ptr [rax], rax ; xchg eax, esp ; pop rax ; call rsp
0x00000000004aa626 : add qword ptr [rbx], rax ; mov eax, 1 ; pop rbx ; ret
0x0000000000449229 : add qword ptr [rcx - 0x76b7fbb2], rcx ; cmp al, 0xc2 ; ret
0x00000000004550d2 : add qword ptr [rdi + 0x40], rax ; ret
0x00000000004aa5bb : add qword ptr [rsi], 1 ; ret
0x00000000004aa5d5 : add qword ptr [rsi], 2 ; ret
0x00000000004aa609 : add qword ptr [rsi], 4 ; ret
0x00000000004c66d0 : add r12, 0xc00 ; call r14
0x00000000004c6430 : add r12, 0xc00 ; call rax
0x00000000004a1e27 : add r12d, r15d ; call rax
0x00000000004c4aaa : add r14, 0x10 ; call r15
0x00000000004729c0 : add r14b, r14b ; ret
0x000000000041e86e : add r15, qword ptr [rsp + 8] ; mov rsi, r15 ; call r12
0x00000000004a960b : add r15b, byte ptr [r8 + 4] ; ret
0x00000000004f827a : add r15b, r10b ; ret
0x00000000004a96ee : add r15d, dword ptr [r8 + 5] ; ret
0x0000000000553d45 : add r8b, byte ptr [r8] ; clc ; or esi, edi ; call rsi
0x000000000052d875 : add r8b, byte ptr [rax] ; jbe 0x52d878 ; call rsp
0x0000000000553bed : add r8b, byte ptr [rax] ; nop ; jl 0x553bef ; jmp qword ptr [rbx]
0x00000000004ae871 : add r9b, byte ptr [r8 - 0x7d] ; ret 0x4402
0x00000000005134c3 : add rax, -0x7a82d1a4 ; ret
0x000000000048b40d : add rax, 0x18 ; ret
0x000000000048b475 : add rax, 0x20 ; ret
0x0000000000490c8b : add rax, 0x30 ; ret
0x0000000000480914 : add rax, 0x756e80 ; ret
0x000000000048b43f : add rax, 8 ; ret
0x00000000004b669a : add rax, qword ptr [rdi] ; ret
0x0000000000419619 : add rax, rbx ; pop rbx ; ret
0x00000000004070ef : add rax, rdi ; ret
0x00000000004071a2 : add rax, rdx ; add rax, rsi ; ret
0x00000000004071a5 : add rax, rsi ; ret
0x00000000004497ff : add rbp, 8 ; call r12
0x000000000045a3c2 : add rbx, qword ptr [rsp] ; mov rdi, rbx ; call rax
0x000000000048b579 : add rdx, 0x10 ; mov rax, rdx ; ret
0x000000000048b51b : add rdx, 8 ; mov rax, rdx ; pop rbx ; ret
0x000000000048b561 : add rdx, 8 ; mov rax, rdx ; ret
0x0000000000423b24 : add rdx, qword ptr [rdi] ; mov eax, dword ptr [rdx] ; mov dword ptr [rdx], esi ; ret
0x0000000000423d80 : add rdx, qword ptr [rdi] ; mov rax, rdx ; ret
0x000000000043d038 : add rsp, 0x10 ; mov rdi, rbx ; pop rbx ; jmp rax
0x000000000046d0e1 : add rsp, 0x10 ; mov rdi, rbx ; pop rbx ; jmp rcx
0x000000000042272f : add rsp, 0x10 ; pop rbp ; ret
0x000000000040259b : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040490a : add rsp, 0x10 ; pop rbx ; ret
0x0000000000405f18 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000040504e : add rsp, 0x18 ; jmp rax
0x00000000004792ec : add rsp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040e9d2 : add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004703c8 : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004a63e0 : add rsp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000486514 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000004ab29b : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rdx
0x000000000040252e : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040309f : add rsp, 0x18 ; ret
0x0000000000443715 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000479027 : add rsp, 0x20 ; mov rax, rdx ; pop rbx ; ret
0x000000000046c6fc : add rsp, 0x20 ; mov rdi, rbx ; pop rbx ; jmp r9
0x0000000000424ce8 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040763f : add rsp, 0x20 ; pop rbx ; ret
0x0000000000405473 : add rsp, 0x260 ; pop rbx ; ret
0x000000000041d978 : add rsp, 0x28 ; jmp rax
0x00000000004076ff : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000043bd0f : add rsp, 0x28 ; ret
0x000000000040552e : add rsp, 0x288 ; pop rbx ; pop rbp ; ret
0x000000000043bc47 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004051b9 : add rsp, 0x30 ; pop rbx ; ret
0x000000000041d926 : add rsp, 0x38 ; jmp rax
0x00000000004494b1 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004050ac : add rsp, 0x38 ; ret
0x0000000000442bfc : add rsp, 0x40 ; pop rbx ; ret
0x0000000000407233 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041e5f5 : add rsp, 0x48 ; ret
0x0000000000407cda : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407c2a : add rsp, 0x50 ; pop rbx ; ret
0x0000000000452771 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000041eef2 : add rsp, 0x58 ; ret
0x00000000004ae809 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047dc15 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000004a00e8 : add rsp, 0x68 ; ret
0x00000000004a7ec4 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b5939 : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004a2133 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000004cefae : add rsp, 0x88 ; ret
0x0000000000455f54 : add rsp, 0xa0 ; pop rbx ; ret
0x0000000000457138 : add rsp, 0xa8 ; ret
0x0000000000401ec9 : add rsp, 0xc8 ; pop rbx ; pop rbp ; ret
0x0000000000405d89 : add rsp, 0xd8 ; ret
0x0000000000421fd7 : add rsp, 0xf8 ; ret
0x0000000000443185 : add rsp, 8 ; add eax, 0xc ; ret
0x00000000004b4595 : add rsp, 8 ; add eax, 5 ; ret
0x00000000004b35c5 : add rsp, 8 ; add eax, 8 ; ret
0x00000000004808e5 : add rsp, 8 ; add eax, 9 ; ret
0x00000000004b7453 : add rsp, 8 ; and eax, 1 ; ret
0x0000000000406129 : add rsp, 8 ; cdqe ; ret
0x000000000044b910 : add rsp, 8 ; jmp r10
0x000000000044bc95 : add rsp, 8 ; jmp r8
0x000000000044ba10 : add rsp, 8 ; jmp r9
0x0000000000404f94 : add rsp, 8 ; jmp rax
0x000000000044bd10 : add rsp, 8 ; jmp rcx
0x000000000044b465 : add rsp, 8 ; jmp rdx
0x000000000040475d : add rsp, 8 ; lea rax, qword ptr [rax + rdx*4] ; ret
0x000000000041a77b : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000404c97 : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041902a : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004b8163 : add rsp, 8 ; mov eax, edx ; ret
0x000000000041a07f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040432c : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000419777 : add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; ret
0x0000000000422134 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040d843 : add rsp, 8 ; mov rdx, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000470605 : add rsp, 8 ; movzx eax, al ; add eax, eax ; ret
0x0000000000424df2 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000424d86 : add rsp, 8 ; movzx eax, al ; ret
0x000000000043f814 : add rsp, 8 ; movzx eax, dl ; pop rbx ; pop rbp ; ret
0x000000000048491a : add rsp, 8 ; neg eax ; pop rbx ; pop rbp ; ret
0x000000000043f791 : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044a3ce : add rsp, 8 ; pop rbx ; pop rbp ; mov rax, rdx ; ret
0x0000000000401fd0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040171a : add rsp, 8 ; ret
0x0000000000437226 : add rsp, 8 ; sar eax, 3 ; ret
0x000000000049bdbd : add rsp, 8 ; sub eax, 1 ; ret
0x000000000040661f : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000490953 : add rsp, 8 ; xor eax, eax ; ret
0x00000000004ae612 : add rsp, 8 ; xor edi, edi ; pop rbx ; pop rbp ; jmp rax
0x0000000000484951 : add rsp, 8 ; xor rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000501ec1 : add sil, bpl ; and eax, 0xd937d55a ; ret 0x69e4
0x000000000044139e : add sil, sil ; ret
0x00000000004a269e : add sil, sil ; ret 0xf03
0x0000000000545665 : add word ptr [rax], ax ; call 0x115449d9
0x0000000000545695 : add word ptr [rax], ax ; call 0x11544a09
0x000000000054561d : add word ptr [rax], ax ; loopne 0x54568e ; call qword ptr [rax]
0x000000000054561c : add word ptr [rax], ax ; loopne 0x54568f ; call qword ptr [rax]
0x00000000004c1132 : aesdeclast xmm3, xmm0 ; ret
0x00000000004c1219 : aesdeclast xmm4, xmm0 ; ret
0x00000000004c1333 : aesdeclast xmm5, xmm0 ; ret
0x00000000004c14f2 : aesdeclast xmm7, xmm0 ; ret
0x00000000004c1711 : aesdeclast xmm9, xmm0 ; ret
0x00000000004c10d2 : aesenclast xmm3, xmm0 ; ret
0x00000000004c11a9 : aesenclast xmm4, xmm0 ; ret
0x00000000004c12a3 : aesenclast xmm5, xmm0 ; ret
0x00000000004c1412 : aesenclast xmm7, xmm0 ; ret
0x00000000004c1601 : aesenclast xmm9, xmm0 ; ret
0x00000000004fc2a2 : and ah, al ; pushfq ; call 0x7f126cd5
0x0000000000430d8c : and ah, al ; ret 0x79
0x00000000004f7c14 : and ah, bh ; ret 0xa5d9
0x0000000000406ba4 : and ah, bh ; xor al, 0 ; mov qword ptr [rdx], rax ; ret
0x000000000049f6ca : and ah, byte ptr [rbx] ; idiv bh ; mov eax, ebx ; pop rbx ; ret
0x00000000004b670a : and ah, byte ptr [rcx - 0xa] ; inc dword ptr [rcx] ; ret
0x00000000004f5ada : and ah, byte ptr [rsi + rdi*4 - 0x15] ; ret
0x000000000043b8b2 : and ah, dh ; xor dword ptr [rax], eax ; ret
0x000000000053e250 : and al, 0 ; add byte ptr [rax], al ; jl 0x53e251 ; add byte ptr [rax], al ; clc ; ret
0x0000000000432f03 : and al, 0x10 ; add esp, eax ; ret 0x7d
0x0000000000466053 : and al, 0x10 ; call 0x402294
0x00000000004360e4 : and al, 0x10 ; call 0x402304
0x000000000046dcc7 : and al, 0x10 ; call r12
0x00000000004a90f7 : and al, 0x10 ; call r14
0x00000000004a9f8d : and al, 0x10 ; call r15
0x000000000043c22b : and al, 0x10 ; call rax
0x00000000004148d3 : and al, 0x10 ; jb 0x4145e9 ; ret
0x0000000000464a41 : and al, 0x10 ; jmp 0x46420e
0x0000000000464a40 : and al, 0x10 ; jmp 0x46420f
0x00000000004c6727 : and al, 0x10 ; lea rdi, qword ptr [rdi + 0x40] ; call rax
0x0000000000466188 : and al, 0x10 ; lea rdi, qword ptr [rsp + 0x30] ; call 0x402409
0x00000000004c6766 : and al, 0x10 ; lea rsi, qword ptr [rbx + 0x60] ; call rax
0x00000000004c7c3c : and al, 0x10 ; lea rsp, qword ptr [rsp + 0x18] ; ret
0x0000000000425180 : and al, 0x10 ; mov eax, 1 ; pop r12 ; ret
0x00000000004622b9 : and al, 0x10 ; mov edi, 0x38f ; call 0x41e569
0x00000000004c66b5 : and al, 0x10 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004cc1d2 : and al, 0x10 ; mov rdi, r12 ; call rax
0x00000000004a8e10 : and al, 0x10 ; mov rdi, rax ; add ebp, 1 ; call r12
0x00000000004a8d68 : and al, 0x10 ; mov rdi, rax ; call r12
0x00000000004969d0 : and al, 0x10 ; mov rdi, rbp ; call r15
0x000000000046ec21 : and al, 0x10 ; mov rdi, rbp ; call rbx
0x0000000000497efe : and al, 0x10 ; mov rdx, rsi ; call rax
0x000000000045a2aa : and al, 0x10 ; mov rsi, rbx ; mov rdi, rbx ; call r15
0x0000000000476833 : and al, 0x10 ; movsxd rdx, dword ptr [rdi] ; xor edi, edi ; call rax
0x000000000046e1ba : and al, 0x10 ; movsxd rdx, eax ; call rbx
0x0000000000440163 : and al, 0x10 ; xor r13d, r13d ; call rax
0x000000000040c4b8 : and al, 0x14 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8444
0x000000000046f0e7 : and al, 0x17 ; add byte ptr [rsp + rsi*2 - 0x7d], dh ; ret
0x00000000004cae7e : and al, 0x18 ; adc byte ptr [rbx + 0x39142444], cl ; ret 0x8f0f
0x000000000045834e : and al, 0x18 ; add al, 0 ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000438c7f : and al, 0x18 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x00000000004aa149 : and al, 0x18 ; call r12
0x000000000049788b : and al, 0x18 ; call rax
0x0000000000497e5a : and al, 0x18 ; mov rdi, rbp ; call r15
0x000000000049674b : and al, 0x18 ; mov rdi, rbp ; call rax
0x000000000043c645 : and al, 0x18 ; mov rdi, rbp ; call rbx
0x000000000049748f : and al, 0x18 ; mov rdi, rbx ; call r15
0x00000000004c6eeb : and al, 0x18 ; mov rdx, rbp ; mov rsi, rdi ; call r12
0x00000000004c7245 : and al, 0x18 ; mov rsi, rdi ; call rax
0x00000000004c7c41 : and al, 0x18 ; ret
0x00000000004c9eb4 : and al, 0x18 ; vpxor xmm8, xmm8, xmm4 ; ret
0x0000000000462677 : and al, 0x18 ; xor eax, eax ; call 0x41e966
0x0000000000462676 : and al, 0x18 ; xor eax, eax ; call 0x41e967
0x00000000004a9f60 : and al, 0x18 ; xor eax, eax ; call r15
0x0000000000528878 : and al, 0x1e ; out dx, eax ; call rsp
0x00000000004fbc70 : and al, 0x1e ; sbb dword ptr [rdx + 9], edi ; int1 ; lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x0000000000494433 : and al, 0x20 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xca09
0x000000000045b5df : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045825e : and al, 0x20 ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000432f10 : and al, 0x20 ; add esp, eax ; ret 0x75
0x00000000004b949c : and al, 0x20 ; add rsp, 0x28 ; ret
0x00000000004975da : and al, 0x20 ; call r10
0x00000000004c7758 : and al, 0x20 ; call r11
0x000000000045a2cf : and al, 0x20 ; call r15
0x0000000000497538 : and al, 0x20 ; call rax
0x0000000000465390 : and al, 0x20 ; dec dword ptr [rdi] ; ret 0xf631
0x0000000000465be9 : and al, 0x20 ; lea rsi, qword ptr [rsp + 0x60] ; call r10
0x00000000004b4e59 : and al, 0x20 ; mov rdi, r8 ; call qword ptr [rbx]
0x0000000000497dbd : and al, 0x20 ; mov rdx, rax ; call r15
0x0000000000497512 : and al, 0x20 ; mov rdx, rsi ; call rax
0x00000000004974bc : and al, 0x20 ; mov rsi, r15 ; call rax
0x000000000046f5c9 : and al, 0x24 ; mov edx, eax ; mov rdi, rbp ; call rbx
0x0000000000458376 : and al, 0x28 ; add al, 0 ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x00000000004b056c : and al, 0x28 ; call 0x41c874
0x00000000004a98bf : and al, 0x28 ; call r15
0x0000000000496b55 : and al, 0x28 ; call rax
0x00000000004c61df : and al, 0x28 ; mov r14d, ebx ; mov rdx, r13 ; call rax
0x000000000045a393 : and al, 0x28 ; mov rax, qword ptr [rsp + 0x38] ; call rax
0x0000000000496c40 : and al, 0x28 ; mov rcx, rsi ; call rax
0x00000000004a2ed0 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x000000000049411f : and al, 0x28 ; mov rdx, rbp ; call r12
0x0000000000496aa9 : and al, 0x28 ; mov rdx, rsi ; call rax
0x00000000004a199f : and al, 0x29 ; ret 0xc601
0x000000000044c7ca : and al, 0x2c ; and edx, ebx ; jmp 0x44c798
0x0000000000432f1d : and al, 0x30 ; add esp, eax ; ret 0x6d
0x0000000000491ccb : and al, 0x30 ; add rsp, 0x38 ; ret
0x000000000046605d : and al, 0x30 ; call 0x402294
0x000000000046618d : and al, 0x30 ; call 0x402404
0x000000000045a2a2 : and al, 0x30 ; call r15
0x00000000004978aa : and al, 0x30 ; call rax
0x0000000000437ed7 : and al, 0x30 ; dec dword ptr [rdi] ; ret 0xf631
0x00000000004a90f2 : and al, 0x30 ; lea rsi, qword ptr [rsp + 0x10] ; call r14
0x0000000000497bb6 : and al, 0x30 ; mov rcx, rsi ; call rax
0x000000000049798d : and al, 0x30 ; mov rdx, rsi ; call rax
0x00000000004a1e22 : and al, 0x30 ; sub rsi, rbx ; add r12d, r15d ; call rax
0x00000000004a1ec2 : and al, 0x30 ; sub rsi, rbx ; call rax
0x000000000052d444 : and al, 0x32 ; add al, byte ptr [rax] ; push rsp ; ret 0xfff6
0x00000000004420e7 : and al, 0x37 ; add dword ptr [rax + 0x2b], ecx ; add dword ptr [rcx + 0x29], ecx ; ret
0x000000000045839e : and al, 0x38 ; add al, 0 ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x00000000005427fc : and al, 0x38 ; add dword ptr [rax], eax ; adc al, bh ; call qword ptr [rbx]
0x000000000045a2fe : and al, 0x38 ; call rax
0x000000000045a16c : and al, 0x38 ; mov qword ptr [rsp + 8], r9 ; call r9
0x00000000004778c3 : and al, 0x38 ; mov rdi, r13 ; call r12
0x0000000000496a23 : and al, 0x38 ; mov rdx, rax ; call r15
0x00000000004942dd : and al, 0x38 ; mov rdx, rbp ; call r12
0x0000000000457554 : and al, 0x40 ; add dword ptr [rax], eax ; add al, ch ; ret 0xfff5
0x0000000000432f2a : and al, 0x40 ; add esp, eax ; ret 0x65
0x00000000004a6062 : and al, 0x40 ; mov edi, dword ptr [rdi] ; call rax
0x0000000000475472 : and al, 0x40 ; mov esi, 2 ; call rax
0x000000000046f4ed : and al, 0x40 ; mov rdi, rbp ; mov edx, r12d ; call rbx
0x00000000004fb03b : and al, 0x43 ; inc ebp ; jmp rsi
0x0000000000452df1 : and al, 0x48 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004c7241 : and al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; mov rsi, rdi ; call rax
0x000000000045a354 : and al, 0x48 ; mov eax, dword ptr [rsp + 8] ; mov rdi, rbx ; call rax
0x000000000049b61f : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a3c5 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000045a1e3 : and al, 0x48 ; mov edi, ebx ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004c66cf : and al, 0x49 ; add esp, 0xc00 ; call r14
0x00000000004c68db : and al, 0x4c ; mov edi, ebp ; call rdx
0x00000000004c7279 : and al, 0x4c ; mov edi, edi ; mov qword ptr [rsp + 8], rsi ; call rax
0x00000000004c7192 : and al, 0x4c ; mov edi, edi ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000004c4aa6 : and al, 0x4c ; mov edi, esi ; add r14, 0x10 ; call r15
0x00000000004c4a24 : and al, 0x4c ; mov edi, esp ; mov rsi, rbp ; call r15
0x0000000000440221 : and al, 0x4c ; mov esi, esp ; mov rdi, qword ptr [rbx] ; call rax
0x00000000004c6779 : and al, 0x4c ; mov esi, esp ; mov rdi, r15 ; call r14
0x0000000000543cfc : and al, 0x4d ; add dword ptr [rax], eax ; rcl byte ptr [rax - 0xd], 1 ; call qword ptr [rdx]
0x0000000000529990 : and al, 0x4d ; int1 ; call rsp
0x00000000004f0b38 : and al, 0x4f ; ret
0x0000000000432f37 : and al, 0x50 ; add esp, eax ; ret 0x5d
0x000000000046f3fc : and al, 0x50 ; mov rdi, rbp ; mov edx, r12d ; call rbx
0x00000000005128e2 : and al, 0x52 ; xchg eax, edi ; sahf ; or eax, 0xeb00e968 ; ret
0x000000000050bddf : and al, 0x56 ; ret
0x0000000000452e1a : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000492fe6 : and al, 0x5c ; ret 0xacd3
0x0000000000432f44 : and al, 0x60 ; add esp, eax ; ret 0x55
0x0000000000465bee : and al, 0x60 ; call r10
0x000000000046f450 : and al, 0x60 ; mov rdi, rbp ; mov edx, r12d ; call rbx
0x000000000052e328 : and al, 0x62 ; clc ; jmp rsp
0x000000000052e350 : and al, 0x64 ; clc ; call rsp
0x00000000004fc3c2 : and al, 0x64 ; jns 0x4fc364 ; outsd dx, dword ptr [rsi] ; leave ; ret 0xe867
0x00000000005454fc : and al, 0x65 ; add dword ptr [rax], eax ; shl byte ptr [rsi - 0xd], 1 ; call qword ptr [rax]
0x00000000005357fc : and al, 0x68 ; add byte ptr [rax], al ; push rax ; std ; out dx, al ; jmp qword ptr [rbx]
0x0000000000452e43 : and al, 0x68 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x000000000050fcfb : and al, 0x68 ; xchg eax, edi ; ret
0x0000000000500bd7 : and al, 0x6d ; ret 0xb37c
0x00000000004f7573 : and al, 0x75 ; rol dword ptr [rax + rax*4], -0x49 ; ret
0x0000000000452e6c : and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004bfa45 : and al, 0x78 ; mov rbp, rax ; ret
0x0000000000416ffe : and al, 0x80 ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004b1a9d : and al, 0x83 ; ret
0x0000000000528760 : and al, 0x87 ; out dx, al ; call rsp
0x0000000000457ad7 : and al, 0x88 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004cf110 : and al, 0x88 ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000416b6b : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x62c4
0x0000000000452e95 : and al, 0x88 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x000000000048d59e : and al, 0x89 ; ret
0x000000000046f5ca : and al, 0x89 ; ret 0x8948
0x000000000040627e : and al, 0x89 ; ret 0xc148
0x0000000000547bfc : and al, 0x8c ; add dword ptr [rax], eax ; adc bh, al ; call qword ptr [rdx]
0x000000000041e8f7 : and al, 0x8d ; imul edi, edi, 0x41 ; call rsp
0x00000000004638d3 : and al, 0x90 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000457b00 : and al, 0x98 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000452ebe : and al, 0x98 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000005489fc : and al, 0x9a ; add dword ptr [rax], eax ; mov al, 0xe3 ; jmp qword ptr [rsi]
0x000000000050a534 : and al, 0x9c ; ret 0xba5c
0x000000000044cbdf : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000528f80 : and al, 0xa3 ; out dx, eax ; jmp rsp
0x0000000000527fe0 : and al, 0xa4 ; in eax, dx ; call rsp
0x0000000000504fe5 : and al, 0xa5 ; ret 0x33c5
0x0000000000457b29 : and al, 0xa8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000452ee7 : and al, 0xa8 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000529ce8 : and al, 0xac ; int1 ; call rsp
0x0000000000452bf4 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000508e59 : and al, 0xb2 ; in al, dx ; ret
0x000000000052e678 : and al, 0xb3 ; clc ; jmp rsp
0x000000000054a4fc : and al, 0xb5 ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; hlt ; call qword ptr [rdi]
0x0000000000457b52 : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000529ff0 : and al, 0xb9 ; int1 ; jmp rsp
0x0000000000458b6a : and al, 0xbe ; add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x69e8
0x000000000042275d : and al, 0xc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004201f9 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000044373e : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040309d : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000004a6225 : and al, 0xc ; lea rsi, qword ptr [rsp + 0x40] ; mov edi, dword ptr [rdi] ; call rax
0x00000000004b8a9b : and al, 0xc ; mov eax, 1 ; pop r12 ; ret
0x0000000000403093 : and al, 0xc ; mov edi, r8d ; call r9
0x00000000004280b7 : and al, 0xc1 ; ret
0x00000000005280e0 : and al, 0xc3 ; in eax, dx ; jmp rsp
0x000000000054b4fc : and al, 0xc5 ; add dword ptr [rax], eax ; test al, 0xf4 ; jmp qword ptr [rsi]
0x0000000000457b7b : and al, 0xc8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000458286 : and al, 0xc8 ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x000000000053b9fc : and al, 0xca ; add byte ptr [rax], al ; in eax, -0x10 ; call qword ptr [rbx]
0x000000000050be4d : and al, 0xcb ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x0000000000457ba4 : and al, 0xd8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004582ae : and al, 0xd8 ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x00000000004f7aa2 : and al, 0xd8 ; xor al, 0x38 ; ret 0xa070
0x0000000000457aae : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000457bcd : and al, 0xe8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004582d6 : and al, 0xe8 ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x00000000004ab150 : and al, 0xe8 ; mov bh, byte ptr [rdi - 7] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000407d08 : and al, 0xe8 ; ret 0x150
0x00000000004cdf38 : and al, 0xe8 ; ret 0xf4e5
0x000000000045abb8 : and al, 0xe8 ; ret 0xfb0d
0x0000000000434e38 : and al, 0xe8 ; ret 0xfd21
0x0000000000497920 : and al, 0xe9 ; ret
0x000000000046ebac : and al, 0xf ; mov rdi, rbp ; call rbx
0x0000000000450fff : and al, 0xf ; ret 0xf8c1
0x0000000000477ef1 : and al, 0xf ; xchg eax, esp ; ret 0x854d
0x000000000052cea1 : and al, 0xf6 ; call rsp
0x0000000000425dc3 : and al, 0xf6 ; ret 0x8802
0x0000000000457bf6 : and al, 0xf8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004582fe : and al, 0xf8 ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000509183 : and al, 0xf9 ; adc byte ptr [rsi + 0x55], dh ; stc ; ret
0x000000000054ebfc : and al, 0xfc ; add dword ptr [rax], eax ; loopne 0x54ec79 ; cmc ; call qword ptr [rsi]
0x000000000046ea76 : and al, 1 ; call r12
0x000000000046f0e2 : and al, 1 ; ret
0x00000000004a605d : and al, 4 ; lea rsi, qword ptr [rsp + 0x40] ; mov edi, dword ptr [rdi] ; call rax
0x000000000048f561 : and al, 4 ; mov esi, 8 ; call rax
0x000000000052f4fc : and al, 5 ; add byte ptr [rax], al ; add byte ptr [rdi], dh ; in eax, dx ; jmp qword ptr [rax]
0x0000000000458326 : and al, 8 ; add al, 0 ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x000000000040a9b1 : and al, 8 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004c642e : and al, 8 ; add r12, 0xc00 ; call rax
0x000000000043e7e5 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047e0ce : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000047be45 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000004961df : and al, 8 ; call 0x402404
0x00000000004961de : and al, 8 ; call 0x402405
0x00000000004b4e2b : and al, 8 ; call qword ptr [rbx]
0x00000000004c6e2b : and al, 8 ; call r12
0x0000000000447a45 : and al, 8 ; call r14
0x00000000004a9860 : and al, 8 ; call r15
0x000000000045a171 : and al, 8 ; call r9
0x0000000000419f73 : and al, 8 ; call rax
0x000000000043d016 : and al, 8 ; call rdx
0x0000000000461d5f : and al, 8 ; jmp 0x461d28
0x0000000000461d5e : and al, 8 ; jmp 0x461d29
0x00000000004b3ea6 : and al, 8 ; jmp 0x4b3e70
0x000000000044c327 : and al, 8 ; jmp rax
0x000000000043c79c : and al, 8 ; jne 0x43c7af ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000419f2f : and al, 8 ; mov esi, 6 ; call r12
0x00000000004a98ba : and al, 8 ; mov qword ptr [rsp + 0x28], r12 ; call r15
0x00000000004c68d6 : and al, 8 ; mov qword ptr [rsp], rdx ; mov rdi, r13 ; call rdx
0x000000000046a24c : and al, 8 ; mov rdi, r13 ; call rax
0x00000000004c70d7 : and al, 8 ; mov rdi, r15 ; call r14
0x0000000000447a0c : and al, 8 ; mov rdi, r15 ; lea esi, dword ptr [rbx + 1] ; call r14
0x0000000000496be1 : and al, 8 ; mov rdi, rbp ; call r15
0x00000000004986f4 : and al, 8 ; mov rdi, rbp ; call rax
0x000000000045a358 : and al, 8 ; mov rdi, rbx ; call rax
0x00000000004af6d6 : and al, 8 ; mov rdi, rbx ; xor ebp, ebp ; call rax
0x00000000004c6e36 : and al, 8 ; mov rsi, qword ptr [rsp + 0x10] ; call r12
0x000000000041e871 : and al, 8 ; mov rsi, r15 ; call r12
0x00000000004c6f44 : and al, 8 ; mov rsi, r15 ; mov rdi, rbx ; call r12
0x00000000004c7621 : and al, 8 ; mov rsi, r8 ; mov rdi, rbx ; call r11
0x00000000004c7411 : and al, 8 ; mov rsi, r8 ; mov rdi, rbx ; call r15
0x00000000004c779d : and al, 8 ; mov rsi, rdi ; call r11
0x0000000000408223 : and al, 8 ; ret
0x00000000004f537c : and al, byte ptr [rax - 0x3e] ; int1 ; or al, byte ptr [rsp + rsi*2] ; pop rdi ; ret
0x00000000004045eb : and al, byte ptr [rax] ; add byte ptr [rbp + 0x5b067ec0], al ; ret
0x000000000046d7ca : and al, byte ptr [rdx - 7] ; dec dword ptr [rax + 1] ; ret
0x00000000005108d2 : and al, byte ptr [rsi + 0x65] ; jle 0x5108d8 ; ret
0x000000000040b9f9 : and al, ch ; add dword ptr [rsi - 0x6d140001], esi ; ret
0x0000000000534e40 : and al, ch ; out dx, al ; call rcx
0x000000000044848e : and bh, bh ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004f09d2 : and bh, byte ptr [rsi - 0x26] ; xchg eax, ebx ; ret
0x00000000005100e3 : and bh, dh ; ret
0x000000000043fbff : and bh, dh ; ret 0x306
0x00000000004c7b6f : and bl, 0xf0 ; mov rdx, r8 ; jmp 0x4c7b85
0x00000000004b66de : and bl, al ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004b1eb7 : and bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045d50a : and bl, dh ; movq qword ptr [rdi + 0x30], mm5 ; ret
0x0000000000415fa5 : and bl, dh ; ret
0x0000000000501a44 : and bl, dl ; mov esi, 0x525d329b ; ret
0x00000000004ee9fc : and byte ptr [r10 + 0x509b04db], spl ; ret
0x00000000004380e1 : and byte ptr [r10], r8b ; jne 0x4380f6 ; ret
0x0000000000486d8e : and byte ptr [r11 + 0x48], bl ; mov eax, dword ptr [rax + 0x20] ; ret
0x000000000044b01e : and byte ptr [r13 - 0x1a], r14b ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000042c01b : and byte ptr [r14 + 0xf], 0xfe ; ret
0x000000000041c931 : and byte ptr [r8 + 0x39], r9b ; ret 0xb73
0x0000000000471120 : and byte ptr [r8 + 1], dil ; pop rbx ; ret
0x0000000000486dcf : and byte ptr [r8 - 0x77], r9b ; add ebx, esi ; ret
0x000000000040ff59 : and byte ptr [r8 - 0x77], r9b ; push rdi ; sub bl, dh ; ret
0x00000000004b557a : and byte ptr [r8 - 0x77], r9b ; sbb byte ptr [r9 + r9*4 + 0xf], r8b ; ret
0x00000000004b1417 : and byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rax + 0xf], 0x44 ; ret 0xba
0x000000000048c94b : and byte ptr [r9 - 0x77], r9b ; add bl, dh ; ret
0x00000000004adec1 : and byte ptr [r9], r8b ; jne 0x4aded6 ; ret
0x000000000041f3da : and byte ptr [r9], r8b ; mov rax, rdi ; jne 0x41f3f0 ; ret
0x000000000041c932 : and byte ptr [rax + 0x39], cl ; ret 0xb73
0x0000000000423ef4 : and byte ptr [rax + 0x7500017a], al ; sbb cl, byte ptr [rax - 0x7d] ; ret 0xb802
0x0000000000425b2b : and byte ptr [rax + 0xc395], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000425ac9 : and byte ptr [rax + 0xcb95], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004a2a8d : and byte ptr [rax + 0xf480075], ah ; ret 0x66c3
0x0000000000471121 : and byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000046b0f3 : and byte ptr [rax + 1], bh ; ret
0x000000000045519b : and byte ptr [rax + 1], cl ; push rdi ; and byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000423c00 : and byte ptr [rax + 1], cl ; ret
0x00000000004958a2 : and byte ptr [rax + 1], cl ; ret 0x14c
0x0000000000494cdf : and byte ptr [rax + 1], cl ; ret 0x438b
0x00000000004957c1 : and byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000407fd5 : and byte ptr [rax + 9], cl ; sal bl, 1 ; ret
0x00000000004f5800 : and byte ptr [rax - 0x20d39572], ch ; rcl dword ptr [rdi], 1 ; push rsp ; ret 0xf22c
0x00000000004b4e55 : and byte ptr [rax - 0x73], cl ; je 0x4b4e87 ; and byte ptr [rcx + rcx*4 - 0x39], cl ; call qword ptr [rbx]
0x0000000000468b76 : and byte ptr [rax - 0x75], cl ; jg 0x468b91 ; jmp 0x468b46
0x0000000000439a6c : and byte ptr [rax - 0x75], cl ; or ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000425bb0 : and byte ptr [rax - 0x76b704ad], cl ; ret 0xc148
0x0000000000486dd0 : and byte ptr [rax - 0x77], cl ; add ebx, esi ; ret
0x0000000000497513 : and byte ptr [rax - 0x77], cl ; call rax
0x000000000048a9b7 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000046c6ff : and byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x41] ; jmp rcx
0x0000000000496b4e : and byte ptr [rax - 0x77], cl ; out dx, eax ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040ff5a : and byte ptr [rax - 0x77], cl ; push rdi ; sub bl, dh ; ret
0x000000000044ff75 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000455212 : and byte ptr [rax - 0x77], cl ; ret 0x114c
0x000000000045519f : and byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000437b4c : and byte ptr [rax - 0x77], cl ; ret 0x74be
0x000000000041dddb : and byte ptr [rax - 0x77], cl ; ret 0x854d
0x0000000000497dbe : and byte ptr [rax - 0x77], cl ; ret 0xff41
0x00000000004b557b : and byte ptr [rax - 0x77], cl ; sbb byte ptr [r9 + r9*4 + 0xf], r8b ; ret
0x00000000004490e3 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rdi + rax - 0x17] ; ret 0xfffa
0x00000000004b1418 : and byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0xba
0x00000000004b2619 : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000004bdb61 : and byte ptr [rax - 0x7d], cl ; ret 0x66f0
0x00000000004ae893 : and byte ptr [rax - 0x7d], cl ; ret 0x830a
0x00000000004ae81f : and byte ptr [rax - 0x7d], cl ; ret 0x830c
0x000000000041088f : and byte ptr [rax - 9], cl ; sbb byte ptr [rcx + 1], cl ; ret 0x1148
0x000000000041088e : and byte ptr [rax - 9], r9b ; sbb byte ptr [rcx + 1], cl ; ret 0x1148
0x00000000004f8278 : and byte ptr [rax], 0x45 ; add bh, dl ; ret
0x000000000051f0e8 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51eb
0x0000000000425543 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000475a86 : and byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046c83c : and byte ptr [rax], dl ; jne 0x46c858 ; add rsp, 8 ; jmp rax
0x0000000000491b2a : and byte ptr [rbp + 0x31], cl ; ret 0xc0c1
0x00000000004b8f82 : and byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x0000000000514659 : and byte ptr [rbp + 9], dh ; ret
0x00000000004b5654 : and byte ptr [rbp + rsi*2], bh ; mov qword ptr [rdi + 0x30], rsi ; ret
0x000000000052fa30 : and byte ptr [rbp - 0x13], cl ; call qword ptr [rsi]
0x000000000044b01f : and byte ptr [rbp - 0x1a], dh ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000051644c : and byte ptr [rbp - 0x46], ch ; xchg eax, edx ; ret 0x9784
0x0000000000410770 : and byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x00000000004f8279 : and byte ptr [rbp], al ; xlatb ; ret
0x00000000004cd244 : and byte ptr [rbx + 0x480f07c0], al ; ret 0xf8c1
0x0000000000486d8f : and byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rax + 0x20] ; ret
0x0000000000437a85 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000424ceb : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000005430b5 : and byte ptr [rbx + 0xa470204], al ; ret
0x0000000000541a45 : and byte ptr [rbx + 0xa540204], al ; ret
0x0000000000532c85 : and byte ptr [rbx + 0xa5e0204], al ; ret
0x000000000053116d : and byte ptr [rbx + 0xa5f0204], al ; ret
0x000000000053508d : and byte ptr [rbx + 0xa630204], al ; ret
0x00000000004786b2 : and byte ptr [rbx + rbx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000514d1f : and byte ptr [rbx - 0x5f], bl ; ret
0x000000000054086f : and byte ptr [rbx - 0x73fc79fc], al ; add bl, byte ptr [rbx + 0xa] ; ret
0x0000000000553370 : and byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x0000000000416e4e : and byte ptr [rcx + 0x11], cl ; ret 0x62c4
0x00000000004c2060 : and byte ptr [rcx + 0x29], cl ; ret 0xaeb
0x0000000000509bf2 : and byte ptr [rcx + 0x7a], ah ; xchg byte ptr [rdi], dh ; lahf ; ret
0x000000000041003c : and byte ptr [rcx + 1], cl ; ret
0x00000000004100c4 : and byte ptr [rcx + 1], cl ; ret 0x1149
0x00000000004cab4f : and byte ptr [rcx + 9], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000004979fa : and byte ptr [rcx + rcx*4 - 0x11], cl ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000004c9feb : and byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x00000000004b4e5a : and byte ptr [rcx + rcx*4 - 0x39], cl ; call qword ptr [rbx]
0x00000000004974bd : and byte ptr [rcx + rcx*4 - 2], cl ; call rax
0x0000000000512bbd : and byte ptr [rcx - 0x3d], al ; hlt ; ret 0x64d9
0x000000000048c94c : and byte ptr [rcx - 0x77], cl ; add bl, dh ; ret
0x00000000004c1dce : and byte ptr [rcx - 0x77], cl ; ret 0xceb
0x000000000045a0d5 : and byte ptr [rcx - 0x7f], cl ; call rax
0x000000000054ecc0 : and byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x00000000004100d9 : and byte ptr [rcx - 9], cl ; and byte ptr [rcx + 1], cl ; ret
0x00000000004100d8 : and byte ptr [rcx - 9], r9b ; and byte ptr [rcx + 1], cl ; ret
0x00000000004adec2 : and byte ptr [rcx], al ; jne 0x4aded5 ; ret
0x000000000041f3db : and byte ptr [rcx], al ; mov rax, rdi ; jne 0x41f3ef ; ret
0x000000000042060a : and byte ptr [rcx], al ; ret 0xfac1
0x00000000005450c0 : and byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x00000000004729f6 : and byte ptr [rdi], cl ; test byte ptr [rbx - 0x9fffffe], bh ; ret
0x0000000000438a47 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8548
0x00000000004685f1 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf6e9
0x0000000000511a22 : and byte ptr [rdx + 0x44], dl ; outsb dx, byte ptr [rsi] ; xchg eax, ebp ; ret
0x00000000004ee9fd : and byte ptr [rdx + 0x509b04db], ah ; ret
0x00000000004f5e0c : and byte ptr [rdx + 0x5f], 0x83 ; or eax, 0x471cc98e ; ret
0x000000000048de48 : and byte ptr [rdx - 0x76b7ffb2], dl ; ret
0x00000000005510a5 : and byte ptr [rdx], al ; add al, cl ; add dh, dh ; jmp qword ptr [rdx]
0x00000000004380e2 : and byte ptr [rdx], al ; jne 0x4380f5 ; ret
0x00000000004805cf : and byte ptr [rdx], bh ; cmove eax, edx ; ret
0x00000000004b0546 : and byte ptr [rdx], dl ; add byte ptr [r9 + r9*4 - 1], r9b ; call 0x41c7d9
0x0000000000407843 : and byte ptr [rip + 0x7750100], dh ; xor eax, eax ; ret
0x000000000042c01c : and byte ptr [rsi + 0xf], 0xfe ; ret
0x000000000053b5bd : and byte ptr [rsi + rcx + 0x18], ah ; ret
0x000000000052f1bd : and byte ptr [rsi + rcx + 0x18], dh ; ret
0x0000000000537c10 : and byte ptr [rsi - 0x10], cl ; jmp qword ptr [rax]
0x000000000045d6df : and ch, al ; clc ; ja 0x45d6dc ; ret
0x000000000050a905 : and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x00000000004fa97f : and ch, byte ptr [rbp - 0x43] ; ret
0x0000000000516430 : and ch, byte ptr [rbx] ; ret 0xc604
0x00000000004f4ceb : and ch, byte ptr [rsi - 0x61dc46d2] ; ret
0x000000000052be39 : and ch, dh ; call rsp
0x0000000000428181 : and cl, al ; ret 0x105
0x00000000004876c4 : and cl, bh ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004ec854 : and cl, bh ; ret 0x5ca4
0x0000000000472714 : and cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x0000000000418a0a : and cl, byte ptr [rcx + 0x21] ; ret 0x894c
0x0000000000410524 : and cl, byte ptr [rcx + 1] ; ret
0x0000000000410014 : and cl, byte ptr [rcx + 1] ; ret 0x1149
0x0000000000414c5d : and dh, bl ; ret
0x000000000046eb0a : and dh, byte ptr [rax] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000053cd61 : and dh, cl ; call qword ptr [rbx]
0x000000000053cd49 : and dh, cl ; call qword ptr [rdx]
0x0000000000552339 : and dh, dh ; jmp qword ptr [rdi]
0x0000000000552321 : and dh, dh ; jmp qword ptr [rsi]
0x000000000043fbfa : and dh, dh ; ret 0x7401
0x000000000044848d : and dil, r15b ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004f0b49 : and dl, bh ; ret
0x00000000004f07c9 : and dl, byte ptr [rcx] ; ret 0xd356
0x00000000004f8a74 : and dl, ch ; push r12 ; sti ; ret 0x4e7d
0x00000000004f0b48 : and dl, r15b ; ret
0x00000000004030ee : and dword ptr [rax - 0x75], ecx ; adc ecx, dword ptr [rax - 0x75] ; adc dh, dh ; ret 0x7501
0x000000000048933e : and dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x405626
0x0000000000518122 : and dword ptr [rbp + rbx*2 + 0x23], eax ; je 0x51818f ; cmp eax, dword ptr [rdi + 0x63] ; ret
0x00000000004f90d8 : and dword ptr [rbx + 0x68], 0xc3a8e9a7 ; ret
0x0000000000513a0f : and dword ptr [rbx], edi ; jns 0x513a47 ; ret 0x958e
0x0000000000418aad : and dword ptr [rcx + 0x21], ecx ; ret
0x0000000000425dbe : and dword ptr [rcx + 0xf], eax ; mov dh, 0xc ; and al, 0xf6 ; ret 0x8802
0x000000000043a4fb : and dword ptr [rcx - 0x3fce0004], esi ; pop rbx ; ret
0x000000000045b9ca : and dword ptr [rcx], eax ; rol byte ptr [rbx - 0x3976c020], 0x89 ; ret 0x3fb8
0x00000000004f4c07 : and dword ptr [rcx], ecx ; imul ebx, esp, 0xe7048453 ; jmp qword ptr [rdi]
0x0000000000421ef6 : and dword ptr [rdi + 0x10], esi ; ret
0x00000000004b3e09 : and dword ptr [rdi + 0x18], esi ; ret
0x0000000000419882 : and dword ptr [rdi + 0x20], esi ; ret
0x000000000044efb2 : and dword ptr [rdi + 0x2c], esi ; ret
0x0000000000421f26 : and dword ptr [rdi + 0x70], esi ; ret
0x000000000048b3fb : and dword ptr [rdx - 0x3fce0009], esp ; pop rbx ; ret
0x000000000050f0c0 : and dword ptr [rdx], ebx ; ret
0x000000000050aa55 : and dword ptr [rsi + 0x2d], 0x6d38f5e ; ret
0x00000000004fa1a8 : and dword ptr [rsi + 0x51], edx ; test eax, 0x8965bf ; jmp qword ptr [rax]
0x00000000005071f2 : and dword ptr [rsi + 0x7d], 0xffffffce ; ret
0x00000000004f6876 : and dword ptr [rsi], esp ; not dword ptr [rdi] ; jmp 0xffffffff9dc42b2e
0x0000000000404b56 : and eax, 0x10c48348 ; pop rbx ; ret
0x00000000004f7aaa : and eax, 0x14b58fab ; lahf ; ret 0x61c0
0x0000000000414993 : and eax, 0x1f ; ret
0x0000000000418e5b : and eax, 0x20 ; shr eax, 5 ; ret
0x00000000004fe901 : and eax, 0x2a73ddc9 ; ret
0x00000000004bdda0 : and eax, 0x30 ; movdqu xmmword ptr [rdx], xmm3 ; ret
0x000000000050c55d : and eax, 0x3bcb0a9e ; popfq ; ret
0x00000000005060c0 : and eax, 0x44bfe209 ; ret 0x62a8
0x0000000000421d26 : and eax, 0x5b000000 ; ret
0x000000000044ace3 : and eax, 0x7fffffff ; ret
0x0000000000405ef7 : and eax, 0x89000166 ; ret 0x408d
0x00000000004347aa : and eax, 0x8948fffd ; ret
0x0000000000517a8f : and eax, 0xa88e31fc ; ret 0x8326
0x00000000004fa688 : and eax, 0xa9ff5259 ; sbb al, 0x34 ; ret
0x00000000005070e5 : and eax, 0xb0a61ee3 ; ret 0xb9c9
0x0000000000512ce1 : and eax, 0xc9590a5f ; std ; ret
0x000000000047a275 : and eax, 0xd8890000 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005063f9 : and eax, 0xd89c9c97 ; adc al, 5 ; ret
0x0000000000501ec5 : and eax, 0xd937d55a ; ret 0x69e4
0x000000000050f6a6 : and eax, 0xe3f9eec3 ; ret
0x00000000004feae9 : and eax, 0xe862bc33 ; int1 ; ret
0x00000000004372b3 : and eax, 0xfffffff7 ; or al, 0x80 ; mov dword ptr [rbx + 0x74], eax ; pop rbx ; ret
0x00000000004a8b7f : and eax, 0xfffffffd ; add eax, 0x16 ; ret
0x0000000000402b5f : and eax, 1 ; ret
0x00000000004b3393 : and eax, 2 ; add eax, 1 ; ret
0x00000000004655a8 : and eax, 2 ; pop rbx ; ret
0x00000000004806b1 : and eax, 2 ; ret
0x000000000043eb4b : and eax, 2 ; sub eax, 1 ; pop rbx ; ret
0x000000000040290d : and eax, 2 ; sub eax, 1 ; ret
0x00000000004804d6 : and eax, 5 ; ret
0x00000000004bdfc9 : and eax, dword ptr [rdx - 0x5e9c3755] ; ret 0xc700
0x0000000000419893 : and eax, esi ; ret
0x000000000050940e : and eax, esi ; xchg eax, edi ; ret 0x27ba
0x00000000004fff53 : and eax, esp ; ret 0xbd61
0x00000000005013d1 : and ebp, 0xffffffb9 ; ret 0xae59
0x000000000051583c : and ebp, dword ptr [rbx + 0x18] ; ret
0x000000000050549f : and ebp, edi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; ret 0x779c
0x000000000050610f : and ebp, edi ; pop rdi ; xchg eax, ecx ; loop 0x506126 ; jbe 0x5060e2 ; ret
0x000000000050610f : and ebp, edi ; pop rdi ; xchg eax, ecx ; loop 0x506127 ; jbe 0x5060e3 ; ret
0x000000000052be89 : and ebp, esi ; inc esp ; ret
0x000000000052be99 : and ebp, esi ; push rsp ; ret
0x000000000048079f : and ecx, 0xc0 ; jne 0x480786 ; ret
0x0000000000505288 : and ecx, dword ptr [rax - 0x56] ; ret 0x426d
0x000000000043470c : and ecx, dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x57be
0x00000000004703ec : and ecx, dword ptr [rax - 0x77] ; ret 0x748b
0x00000000005136d6 : and ecx, dword ptr [rcx + 0xd61a436] ; cmc ; mov bl, 0xce ; ret
0x00000000005032fb : and ecx, dword ptr [rdi + rdi*8 + 0x1a265aa7] ; jns 0x5032c6 ; ret
0x000000000050c533 : and edi, dword ptr [rax + 0x502b7c77] ; jmp qword ptr [rdi]
0x00000000005008c3 : and edi, dword ptr [rbx - 0x5f9755c0] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000493ba6 : and edi, dword ptr [rip + 0xb954cee] ; cli ; ret
0x00000000004ca4d1 : and edi, ebp ; fadd st(4), st(0) ; ret
0x0000000000432094 : and edi, ebp ; ret 0x3149
0x0000000000431e17 : and edi, ebp ; ret 0x314d
0x0000000000508a86 : and edi, edx ; wait ; call rsp
0x000000000045a402 : and edx, 1 ; shr cl, 1 ; add edx, ecx ; mov byte ptr [rsi], dl ; ret
0x0000000000480507 : and edx, 5 ; mov eax, edx ; ret
0x0000000000513493 : and edx, dword ptr [rax] ; mov cl, 0xc9 ; jp 0x513516 ; ret 0x12c9
0x000000000049ccc2 : and edx, dword ptr [rdx] ; ret
0x000000000044c7cc : and edx, ebx ; jmp 0x44c796
0x0000000000418e38 : and esi, ebx ; ret
0x0000000000552209 : and esi, esi ; call qword ptr [rcx]
0x00000000004c693c : and esi, esi ; ret 0x7504
0x0000000000517c2e : and esp, dword ptr [rax + 0x503b8b0a] ; ret
0x00000000004928d2 : and esp, dword ptr [rbp + 0x46] ; and esp, dword ptr [rbx] ; popfq ; ret
0x00000000004928d6 : and esp, dword ptr [rbp - 0x63] ; ret
0x00000000004928d1 : and esp, dword ptr [rbx] ; and r12d, dword ptr gs:[rbx] ; popfq ; ret
0x00000000004928d5 : and esp, dword ptr [rbx] ; popfq ; ret
0x0000000000421ef5 : and qword ptr [rdi + 0x10], rsi ; ret
0x00000000004b3e08 : and qword ptr [rdi + 0x18], rsi ; ret
0x0000000000421f25 : and qword ptr [rdi + 0x70], rsi ; ret
0x00000000004b66dd : and r11b, r8b ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004928d0 : and r12d, dword ptr [rbx] ; and r12d, dword ptr gs:[rbx] ; popfq ; ret
0x00000000004928d4 : and r12d, dword ptr [rbx] ; popfq ; ret
0x00000000004928d3 : and r12d, dword ptr gs:[rbx] ; popfq ; ret
0x00000000004ca4d0 : and r15d, ebp ; fadd st(4), st(0) ; ret
0x0000000000432093 : and r15d, ebp ; ret 0x3149
0x0000000000431e16 : and r15d, ebp ; ret 0x314d
0x00000000004bdd9f : and r8, 0x30 ; movdqu xmmword ptr [rdx], xmm3 ; ret
0x00000000004bdfc8 : and rax, qword ptr [rdx - 0x5e9c3755] ; ret 0xc700
0x000000000043fbf9 : and sil, r14b ; ret 0x7401
0x00000000004c205a : bswap ebx ; lea rcx, qword ptr [rcx + rax + 0x20] ; sub r10, rax ; jmp 0x4c2079
0x00000000004ffaf3 : bswap edi ; xor eax, 0x85c16712 ; ret 0x349e
0x00000000004c64e8 : bswap edx ; mov dword ptr [r15 + 0xc], edx ; mov rdx, r12 ; call rax
0x00000000004f7dce : bt dword ptr [rax - 9], -0x75 ; ret
0x000000000048242c : call 0x100a5d7c
0x000000000050eb2e : call 0x114ffd6c
0x0000000000545168 : call 0x115444d6
0x0000000000545668 : call 0x115449d6
0x0000000000545698 : call 0x11544a06
0x000000000052f5c8 : call 0x1252e30a
0x000000000054ec18 : call 0x1754e190
0x000000000042a6f9 : call 0x1876931
0x000000000053f2f8 : call 0x2753e565
0x0000000000500de6 : call 0x2f3ad6f9
0x00000000004405f9 : call 0x3e37ed
0x0000000000485631 : call 0x401852
0x0000000000405613 : call 0x401862
0x00000000004b4a9d : call 0x401ba7
0x0000000000466042 : call 0x402292
0x000000000040b9b9 : call 0x402297
0x00000000004360e6 : call 0x402302
0x000000000046618f : call 0x402402
0x000000000040b881 : call 0x402637
0x00000000004093aa : call 0x405622
0x000000000046aaf2 : call 0x405626
0x00000000004a712f : call 0x406406
0x000000000046a5d2 : call 0x406842
0x000000000048bfe1 : call 0x406846
0x000000000041aa84 : call 0x406d72
0x000000000044d384 : call 0x406d77
0x000000000044ad26 : call 0x407002
0x000000000041bf93 : call 0x407006
0x000000000041e47a : call 0x407007
0x000000000040a15e : call 0x4149e6
0x000000000047f629 : call 0x419b17
0x0000000000487ddf : call 0x419d76
0x0000000000474fdb : call 0x419fe6
0x000000000044fda6 : call 0x41bff2
0x000000000047d6e4 : call 0x41c526
0x00000000004b054d : call 0x41c7d2
0x0000000000474e78 : call 0x41c7d7
0x000000000043db70 : call 0x41c7d9
0x00000000004a0537 : call 0x41c832
0x00000000004a0543 : call 0x41c842
0x00000000004b056e : call 0x41c872
0x000000000041d611 : call 0x41cb89
0x00000000004622c0 : call 0x41e562
0x000000000046267b : call 0x41e962
0x00000000004217ac : call 0x421ee6
0x0000000000463344 : call 0x43f572
0x000000000040ad72 : call 0x44cdf582
0x0000000000454f67 : call 0x452f67
0x000000000047eacd : call 0x47e866
0x0000000000412c43 : call 0x49032d94
0x00000000004c54d7 : call 0x493dde2e
0x00000000004179df : call 0x4a04032f
0x00000000004f79f7 : call 0x64e5792d
0x000000000051456e : call 0x6613c8d1
0x0000000000507577 : call 0x7712c15f
0x00000000004bdf75 : call 0x7854a22e
0x00000000004fc2a5 : call 0x7f126cd2
0x00000000004ada43 : call 0x86f1ed8
0x000000000043be83 : call 0xffffffff838be906
0x000000000043c073 : call 0xffffffff838beaf6
0x000000000043bf33 : call 0xffffffff838becb6
0x000000000043c3d3 : call 0xffffffff838bee56
0x000000000043c123 : call 0xffffffff838beea6
0x000000000043c483 : call 0xffffffff838bf206
0x000000000047b619 : call 0xffffffff838fb627
0x00000000004841fc : call 0xffffffff8390767f
0x00000000004a0943 : call 0xffffffff839233c6
0x00000000004a09f3 : call 0xffffffff83923776
0x00000000004f64ba : call 0xffffffff847726e3
0x000000000045b8ac : call 0xffffffff8985993b
0x00000000004cb1f0 : call 0xffffffffc20f3af9
0x00000000004c7516 : call 0xffffffffc24dc127
0x00000000004c7722 : call 0xffffffffc24dc333
0x00000000004bad38 : call 0xffffffffc27cf15b
0x0000000000480d07 : call 0xffffffffc2d20d0b
0x00000000004b977c : call 0xffffffffc2d4dc9a
0x00000000004bd6d7 : call 0xffffffffc2d517f0
0x00000000004c2cde : call 0xffffffffc2d56deb
0x00000000004c347e : call 0xffffffffc2d5758b
0x00000000004c49ec : call 0xffffffffc2d591f9
0x00000000004c7c81 : call 0xffffffffc2d5c98e
0x00000000004c7cce : call 0xffffffffc2d5c9db
0x00000000004c7d24 : call 0xffffffffc2d5ca31
0x00000000004c7d7a : call 0xffffffffc2d5ca87
0x00000000004c7dcf : call 0xffffffffc2d5cadc
0x00000000004c7e25 : call 0xffffffffc2d5cb32
0x00000000004c7e7b : call 0xffffffffc2d5cb88
0x00000000004c7ed1 : call 0xffffffffc2d5cbde
0x000000000050b46b : call 0xffffffffc2e0a029
0x0000000000402b5e : call 0xffffffffc3420bea
0x0000000000456bf6 : call 0xffffffffc346b439
0x00000000004cdfa2 : call 0xffffffffc386df9f
0x000000000052ede9 : call 0xffffffffc3c7edeb
0x000000000050b145 : call 0xffffffffc3d04024
0x00000000004bd6cc : call 0xffffffffc3d517dd
0x000000000051870e : call 0xffffffffc41910de
0x0000000000511a05 : call 0xffffffffc44d1890
0x0000000000536f58 : call 0xffffffffc4535f95
0x0000000000510eb1 : call 0xffffffffd4f7b4f4
0x0000000000533838 : call 0xffffffffd55326ee
0x0000000000541648 : call 0xffffffffd7540924
0x0000000000506f39 : call 0xffffffffda3a39e1
0x000000000050dc9a : call 0xffffffffdce9bd37
0x0000000000538408 : call 0xffffffffe453746a
0x00000000004b615e : call 0xfffffffff6b22e52
0x0000000000451c22 : call 0xfffffffff9066430
0x0000000000475bd8 : call 0xfffffffffb2aaece
0x0000000000545019 : call qword ptr [eax]
0x000000000041dfca : call qword ptr [r10 + 0x10]
0x000000000041dc42 : call qword ptr [r10 + 0x18]
0x00000000004cf1a9 : call qword ptr [r12 + rbx*8]
0x000000000050fead : call qword ptr [r14]
0x000000000047cd6e : call qword ptr [rax + 0x24548d48]
0x000000000041e1ee : call qword ptr [rax - 0x3c0c2f77]
0x00000000004047e7 : call qword ptr [rax]
0x00000000004f79f9 : call qword ptr [rbp - 0x46eeb69c]
0x000000000041b517 : call qword ptr [rbx]
0x00000000004acfda : call qword ptr [rcx]
0x00000000005293e3 : call qword ptr [rdi + rbx*8 - 0x220c0000]
0x000000000040ab83 : call qword ptr [rdi]
0x000000000041dfcb : call qword ptr [rdx + 0x10]
0x000000000041dc43 : call qword ptr [rdx + 0x18]
0x000000000052944b : call qword ptr [rdx - 0xdec0000]
0x0000000000403850 : call qword ptr [rdx]
0x00000000004f85ea : call qword ptr [rsi - 0x1f1a046d]
0x00000000004ef1e9 : call qword ptr [rsi]
0x00000000004cf1aa : call qword ptr [rsp + rbx*8]
0x000000000052c99b : call qword ptr [rsp + rdi*8 - 0x3c3bffff]
0x000000000053e6f9 : call qword ptr es:[rdx]
0x0000000000544de1 : call qword ptr gs:[rbx]
0x0000000000406ee3 : call r10
0x0000000000422727 : call r11
0x0000000000419f36 : call r12
0x000000000041c7fe : call r13
0x000000000043f9ea : call r14
0x000000000041c986 : call r15
0x00000000004b28be : call r8
0x0000000000403098 : call r9
0x0000000000401cee : call rax
0x000000000041c7ff : call rbp
0x0000000000422728 : call rbx
0x0000000000403099 : call rcx
0x000000000041c987 : call rdi
0x0000000000406ee4 : call rdx
0x000000000043f9eb : call rsi
0x000000000052a09b : call rsp
0x00000000004fd354 : cdq ; adc al, 0xdd ; ret 0x8c0e
0x00000000004a7fb4 : cdq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000546c11 : cdq ; call qword ptr [rsi]
0x00000000005014c7 : cdq ; cld ; stosb byte ptr [rdi], al ; sub esp, ebx ; or ebx, dword ptr [rbx] ; ret
0x00000000004f1b2a : cdq ; cwde ; ret
0x00000000005180aa : cdq ; fnstsw dword ptr [rsi - 0x35] ; ret 0x5f2d
0x0000000000508c8d : cdq ; jmp 0x508c55
0x000000000041ffac : cdq ; jne 0x41ffb2 ; ret
0x000000000041ffe1 : cdq ; jne 0x41ffeb ; add rsp, 8 ; ret
0x00000000004f4363 : cdq ; mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x000000000050acd7 : cdq ; mov cl, 0x67 ; ret
0x00000000005091c7 : cdq ; mov ebx, 0x88335561 ; ret
0x0000000000506729 : cdq ; out dx, al ; jbe 0x50673f ; ret 0x6dd1
0x0000000000506728 : cdq ; out dx, al ; jbe 0x506740 ; ret 0x6dd1
0x0000000000532e91 : cdq ; out dx, al ; jmp qword ptr [rbx]
0x0000000000528dc9 : cdq ; out dx, eax ; call rsp
0x0000000000528dd1 : cdq ; out dx, eax ; jmp qword ptr [rbx + rax*8]
0x00000000004ef992 : cdq ; pop rdx ; pop rsi ; out 0x6b, eax ; push rbp ; stc ; ret 0x98f0
0x0000000000516a1d : cdq ; rcr byte ptr [rdi], 0xfd ; sub ch, cl ; in al, dx ; ret
0x000000000050ba40 : cdq ; ret
0x00000000004f8c27 : cdq ; ret 0x66eb
0x00000000004f813d : cdq ; ret 0xef10
0x000000000044d386 : cdq ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004adee4 : cdq ; sub al, byte ptr [rax] ; ret
0x00000000005097e8 : cdq ; sub esi, dword ptr [rbx - 0x50] ; mov ah, 0xac ; ret
0x000000000040612d : cdqe ; ret
0x000000000041fcaa : clc ; adc ecx, dword ptr [rdi] ; ret 0x3145
0x0000000000551a08 : clc ; adc esi, esi ; call qword ptr [rcx]
0x0000000000457bf7 : clc ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004a3bb5 : clc ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xd775
0x0000000000444c78 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000529875 : clc ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call rsp
0x0000000000480742 : clc ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000044636a : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000052c8fd : clc ; add dword ptr [rax], eax ; add al, 0xb3 ; cmc ; jmp rsp
0x00000000004a3bc8 : clc ; add dword ptr [rax], eax ; add byte ptr [rax + 1], bh ; ret
0x000000000054e85d : clc ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], ch ; jmp qword ptr [rbx]
0x0000000000444b0c : clc ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000004804d0 : clc ; add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 5 ; ret
0x00000000004b784b : clc ; add dword ptr [rdi + 9], esi ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000004b786b : clc ; add dword ptr [rdi + 9], esi ; mov eax, dword ptr [rdi + 0x24] ; ret
0x00000000004b780b : clc ; add dword ptr [rdi + 9], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000450308 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x548d
0x00000000004804ec : clc ; add eax, 0x674c289 ; mov eax, edx ; ret
0x0000000000423511 : clc ; add eax, 0xba ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000004582ff : clc ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x000000000047030f : clc ; add eax, dword ptr [rcx] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b77dd : clc ; add esi, dword ptr [rbp + 0xf] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000494cde : clc ; and byte ptr [rax + 1], cl ; ret 0x438b
0x000000000045264f : clc ; and eax, 1 ; ret
0x0000000000545138 : clc ; call qword ptr [rax]
0x0000000000542801 : clc ; call qword ptr [rbx]
0x000000000052e12a : clc ; call rsp
0x00000000005372d8 : clc ; cmp eax, esi ; jmp qword ptr [rdi]
0x00000000005471a8 : clc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rbx
0x000000000048cc58 : clc ; dec dword ptr [rax - 0x73] ; jl 0x48cc8b ; and byte ptr [rax - 0x77], cl ; ret
0x000000000048bc66 : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000478106 : clc ; dec dword ptr [rcx - 0x75] ; push rbp ; or byte ptr [rax + 0x63], cl ; ret
0x000000000052df62 : clc ; dec esp ; jne 0x52df72 ; add byte ptr [rdx + rax], dl ; clc ; jmp rsp
0x000000000052e9f2 : clc ; dec esp ; lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; add al, 0xe8 ; clc ; jmp rsp
0x000000000052e71a : clc ; dec esp ; sahf ; add al, byte ptr [rax] ; mov ah, 0xb9 ; clc ; jmp rsp
0x000000000052e672 : clc ; dec esp ; wait ; add al, byte ptr [rax] ; and al, 0xb3 ; clc ; jmp rsp
0x000000000054c681 : clc ; hlt ; jmp qword ptr [rax]
0x0000000000477640 : clc ; inc dword ptr [rbp - 0x76c78140] ; ret 0x894c
0x000000000048c65e : clc ; inc dword ptr [rbp - 0x7cb78b40] ; ret
0x0000000000480956 : clc ; inc dword ptr [rbp - 0x7cbb8b40] ; ret
0x000000000052a359 : clc ; int1 ; jmp rsp
0x0000000000418bfd : clc ; ja 0x418bf6 ; ret
0x0000000000418e34 : clc ; ja 0x418e86 ; lea esp, dword ptr [rbx] ; ret
0x000000000045d5df : clc ; ja 0x45d5d8 ; ret
0x000000000045d6e1 : clc ; ja 0x45d6da ; ret
0x00000000004c8f7c : clc ; ja 0x4c8f75 ; ret
0x00000000004c9636 : clc ; ja 0x4c962f ; ret
0x0000000000545758 : clc ; jmp qword ptr [edi]
0x0000000000483280 : clc ; jmp qword ptr [rsi + 0xf]
0x0000000000548df9 : clc ; jmp rdi
0x000000000052df6a : clc ; jmp rsp
0x000000000041f3df : clc ; jne 0x41f3eb ; ret
0x00000000004466f8 : clc ; jne 0x44671d ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000044e2ce : clc ; jne 0x44e2c0 ; mov eax, 0x51 ; ret
0x00000000005040e1 : clc ; jnp 0x504100 ; ret
0x000000000054ec48 : clc ; jo 0x54ec43 ; call qword ptr [rsi]
0x00000000005327b8 : clc ; jp 0x5327ac ; call qword ptr [rsi]
0x0000000000532818 : clc ; jp 0x53280c ; call qword ptr [rbx]
0x00000000004f6760 : clc ; jrcxz 0x4f6734 ; mov byte ptr [rdi - 0x22], ch ; outsd dx, dword ptr [rsi] ; ret
0x000000000051848d : clc ; js 0x518481 ; push rbx ; in al, dx ; jp 0x51849d ; ret 0x2076
0x000000000051848c : clc ; js 0x518482 ; push rbx ; in al, dx ; jp 0x51849e ; ret 0x2076
0x000000000047e63d : clc ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000052e22a : clc ; lcall ptr [rbx + rax*4 + 0x44640002] ; clc ; call rsp
0x000000000052e322 : clc ; lcall ptr [rcx + rcx*4 + 0x62240002] ; clc ; jmp rsp
0x000000000052e522 : clc ; lcall ptr [rsp + rdx*4 - 0x62fbfffe] ; clc ; call rsp
0x00000000004c9fe8 : clc ; lea rsp, qword ptr [rax] ; mov rax, r10 ; ret
0x0000000000415fa2 : clc ; lea rsp, qword ptr [rax] ; ret
0x000000000041151e : clc ; lea rsp, qword ptr [rsi] ; ret
0x0000000000401de4 : clc ; leave ; ret
0x00000000004f7b01 : clc ; lodsd eax, dword ptr [rsi] ; pop rdi ; ret 0xd710
0x00000000004720bb : clc ; mov qword ptr [rip + 0x2e4add], rdi ; ret
0x0000000000553d48 : clc ; or esi, edi ; call rsi
0x00000000004f7cd0 : clc ; out dx, eax ; ret
0x000000000044e300 : clc ; pcmpeqw mm5, mm4 ; xor eax, eax ; ret
0x0000000000530208 : clc ; pop rbp ; in eax, dx ; call qword ptr [rdx]
0x000000000044422d : clc ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004704e7 : clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041977d : clc ; pop rbx ; pop rbp ; ret
0x000000000052fee8 : clc ; pop rdx ; in eax, dx ; call qword ptr [rsi]
0x0000000000546ee8 : clc ; popfq ; call rbx
0x000000000052e5aa : clc ; push qword ptr [rdi + rdx*4 - 0x5babfffe] ; clc ; call rsp
0x000000000052e34a : clc ; push qword ptr [rdx + rcx*4 + 0x64240002] ; clc ; call rsp
0x000000000052e292 : clc ; push qword ptr [rsi + rax*4 + 0x4c740002] ; clc ; call rsp
0x000000000046be78 : clc ; push qword ptr [rsp + rcx + 0x48] ; add esp, 8 ; ret
0x000000000052fbb8 : clc ; push rax ; in eax, dx ; jmp qword ptr [rax]
0x00000000004fe700 : clc ; push rcx ; ret 0x2a40
0x00000000004023e7 : clc ; ret
0x00000000004faacb : clc ; ret 0x6dc0
0x00000000005158f5 : clc ; ret 0x9f2e
0x00000000004fbffa : clc ; ret 0xa3b3
0x000000000050b829 : clc ; ret 0xc375
0x0000000000518ed5 : clc ; ret 0xe28e
0x00000000004a0544 : clc ; ret 0xfff7
0x0000000000430a22 : clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x00000000004feab8 : clc ; sbb edx, dword ptr [rax + rdx*4] ; ret
0x000000000053e768 : clc ; sub edx, esi ; call qword ptr [rdi]
0x000000000043a5cc : clc ; xor dword ptr [rax], eax ; jne 0x43a594 ; pop rbx ; ret
0x00000000004cd9d4 : clc ; xor dword ptr [rdi], ecx ; ret 0x4789
0x000000000047283e : clc ; xor dword ptr [rdi], ecx ; ret 0xbe0f
0x00000000004c7136 : clc ; xor qword ptr [r15 + 0x18], rax ; call r14
0x00000000005339d4 : cld ; add byte ptr [r8], al ; js 0x533998 ; out dx, al ; jmp rcx
0x000000000054ec8d : cld ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000054ec5d : cld ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000054ecbd : cld ; add dword ptr [rax], eax ; and byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000054ec15 : cld ; add dword ptr [rax], eax ; call 0x1754e193
0x000000000054ec45 : cld ; add dword ptr [rax], eax ; clc ; jo 0x54ec46 ; call qword ptr [rsi]
0x000000000054ebe5 : cld ; add dword ptr [rax], eax ; fdiv dword ptr [rax - 0xb] ; call qword ptr [rsi]
0x000000000052c985 : cld ; add dword ptr [rax], eax ; hlt ; ret 0xfff5
0x000000000054ebfd : cld ; add dword ptr [rax], eax ; loopne 0x54ec78 ; cmc ; call qword ptr [rsi]
0x000000000052c995 : cld ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000054ec75 : cld ; add dword ptr [rax], eax ; or byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000052c98d : cld ; add dword ptr [rax], eax ; ret
0x000000000054eca5 : cld ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000054ecd5 : cld ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x00000000005455d4 : cld ; add dword ptr gs:[rax], eax ; fsub dword ptr [rsi - 0xd] ; call qword ptr [rax]
0x00000000004fe900 : cld ; and eax, 0x2a73ddc9 ; ret
0x00000000004a1e29 : cld ; call rax
0x000000000052b101 : cld ; call rsp
0x000000000054ecd4 : cld ; cld ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x0000000000532bd4 : cld ; cmp eax, dword ptr [rax] ; add byte ptr [rax], bl ; xchg eax, esi ; out dx, al ; call rax
0x0000000000542bd4 : cld ; cmp eax, dword ptr [rcx] ; add byte ptr [rax], bl ; add al, 0xf3 ; jmp qword ptr [rcx]
0x0000000000437543 : cld ; dec dword ptr [rax - 0x75] ; jl 0x437576 ; or byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004510bc : cld ; dec dword ptr [rax - 0x75] ; jl 0x4510ef ; sbb byte ptr [rax - 0x77], cl ; ret 0x57be
0x000000000043c1de : cld ; dec dword ptr [rax - 0x75] ; pop r8 ; ret
0x000000000043bfee : cld ; dec dword ptr [rax - 0x75] ; push r8 ; ret
0x000000000043ad82 : cld ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004385e8 : cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000046ae64 : cld ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rbx + 0x48], 0x89 ; ret
0x00000000004509ce : cld ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi + 0x48], 0x89 ; ret
0x0000000000450ab5 : cld ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000043aa7c : cld ; dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x0000000000450ae4 : cld ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000004b042d : cld ; dec dword ptr [rcx + rcx*4 - 0x11] ; mov rsi, rax ; call r12
0x00000000004c9e62 : cld ; fimul dword ptr [rcx - 0x7d] ; ret 0x4860
0x000000000043d5d5 : cld ; inc dword ptr [rbp + 0x5b057ec0] ; ret
0x000000000047d536 : cld ; inc dword ptr [rbp - 0x41c38b40] ; salc ; ret 0x51
0x00000000004ae38a : cld ; inc dword ptr [rbp - 0x76d78740] ; ret 0xde89
0x00000000004b2d5d : cld ; inc dword ptr [rbp - 0x7ca28b40] ; ret
0x0000000000481dbe : cld ; inc dword ptr [rbp - 0x7cbb8b40] ; ret
0x0000000000490759 : cld ; jmp 0x4906f1
0x000000000054d3d4 : cld ; jrcxz 0x54d3df ; add byte ptr [rax], bh ; xor ebp, esi ; call qword ptr [rdx]
0x000000000043aaa5 : cld ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004fccbc : cld ; mov bl, byte ptr [rip - 0x4ba54db4] ; sahf ; std ; ret
0x0000000000490754 : cld ; mov dword ptr [r12 + rax - 4], edx ; jmp 0x4906f6
0x00000000004c7868 : cld ; mov dword ptr [rsi + rax - 4], edx ; ret
0x00000000004f878d : cld ; mov eax, 0x32142f94 ; ret
0x00000000004f171c : cld ; mov edi, 0x3a9203bc ; jg 0x4f1790 ; ret
0x00000000004faffa : cld ; out 0x65, al ; push 0xa8 ; outsb dx, byte ptr [rsi] ; int1 ; ret
0x000000000054ded4 : cld ; out dx, al ; add dword ptr [rax], eax ; test al, 0x4b ; cmc ; call qword ptr [rsi]
0x00000000004c786c : cld ; ret
0x0000000000516608 : cld ; ret 0x8421
0x00000000004c9e24 : cld ; ret 0x894c
0x0000000000500f5f : cld ; ret 0xeb49
0x0000000000469ee0 : cld ; sbb edx, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000511107 : cld ; shr edx, cl ; ret
0x000000000052c97c : cld ; sti ; add dword ptr [rax], eax ; push rsp ; ret 0xfff5
0x00000000005014c8 : cld ; stosb byte ptr [rdi], al ; sub esp, ebx ; or ebx, dword ptr [rbx] ; ret
0x0000000000406b49 : cld ; xor al, 0 ; mov qword ptr [rdx], rax ; ret
0x0000000000472632 : cli ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000005298ed : cli ; add byte ptr [rax], al ; int1 ; call rsp
0x000000000041e178 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000041b4f6 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000054eaad : cli ; add dword ptr [rax], eax ; jo 0x54eb28 ; cmc ; call qword ptr [rsi]
0x000000000054eac5 : cli ; add dword ptr [rax], eax ; js 0x54eb40 ; cmc ; call qword ptr [rsi]
0x000000000054ea65 : cli ; add dword ptr [rax], eax ; pop rax ; jo 0x54ea66 ; call qword ptr [rsi]
0x000000000054ea4d : cli ; add dword ptr [rax], eax ; push rax ; jo 0x54ea4e ; call qword ptr [rsi]
0x00000000004806ab : cli ; add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x0000000000480683 : cli ; add eax, 0x2f74d089 ; ret
0x000000000041fc94 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004734f8 : cli ; add ebp, dword ptr [rcx] ; ret 0xd089
0x00000000004cefad : cli ; add rsp, 0x88 ; ret
0x00000000004958a1 : cli ; and byte ptr [rax + 1], cl ; ret 0x14c
0x00000000004957c0 : cli ; and byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000050f6a5 : cli ; and eax, 0xe3f9eec3 ; ret
0x000000000052eeaa : cli ; call rsp
0x000000000050553a : cli ; cmpsb byte ptr [rsi], byte ptr [rdi] ; int 0xc2
0x000000000043cfca : cli ; cwde ; add dword ptr [rax], eax ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000465e99 : cli ; dec dword ptr [rax - 0x73] ; jl 0x465ecc ; adc al, ch ; jmp 0x465e6f
0x0000000000461d5a : cli ; dec dword ptr [rax - 0x75] ; and al, 8 ; jmp 0x461d2d
0x0000000000474a81 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000469ee2 : cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000046e34e : cli ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rax*2 + 0x48], 0x89 ; ret
0x000000000046e4be : cli ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi + 0x48], 0x89 ; ret
0x0000000000477e08 : cli ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rcx*2 + 0x48], 0x89 ; ret
0x000000000046e21f : cli ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rax*2 + 0x48], 0x89 ; ret
0x000000000046834c : cli ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rdi + 0x48], 0x89 ; ret
0x000000000047a845 : cli ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000460e8f : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000046f732 : cli ; dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x000000000040ff78 : cli ; div rcx ; ret
0x00000000004f435f : cli ; imul ebx, dword ptr [rax + 0x5d], -0x67 ; mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x000000000045a675 : cli ; inc dword ptr [rbp + 0x5b057ec0] ; ret
0x0000000000457228 : cli ; inc dword ptr [rbp + 0x5b0a7ec0] ; ret
0x000000000047e3af : cli ; inc dword ptr [rbp - 0x7cdc8b40] ; ret
0x0000000000472ad5 : cli ; inc dword ptr [rbp - 0x95a8140] ; ret
0x000000000052eea2 : cli ; inc dword ptr [rcx + rcx*8 + 0x3c040002] ; cli ; call rsp
0x0000000000474e7b : cli ; inc dword ptr [rcx - 0x48] ; ret
0x00000000004f9e3e : cli ; int1 ; adc ch, dh ; ret
0x000000000052a391 : cli ; int1 ; call rsp
0x0000000000513515 : cli ; jbe 0x513577 ; mov eax, dword ptr [rdx - 0x2d] ; jge 0x51355e ; ret 0xf356
0x00000000004fe2ca : cli ; jge 0x4fe2e0 ; or dword ptr [rax], eax ; pushfq ; ret 0x51d8
0x000000000052ee8a : cli ; jmp rsp
0x0000000000504fe0 : cli ; jne 0x504f8e ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebx ; and al, 0xa5 ; ret 0x33c5
0x000000000045768d : cli ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000052ef32 : cli ; lcall ptr [rdi + rcx*8 + 0x5cf40002] ; cli ; call rsp
0x000000000052ef9a : cli ; lcall ptr [rdx + rdx*8 + 0x72840002] ; cli ; jmp rsp
0x00000000004c5e87 : cli ; lea rdi, qword ptr [r15 + 0x40] ; call rax
0x0000000000516718 : cli ; lodsb al, byte ptr [rsi] ; ret 0x1c5b
0x00000000004fa899 : cli ; mov bl, 0xe0 ; test dword ptr [rax], ecx ; ret
0x000000000040306b : cli ; mov edi, ecx ; jmp rax
0x0000000000402e62 : cli ; mov qword ptr [rsi], rdx ; xor qword ptr [rax], rdi ; ret
0x0000000000503d26 : cli ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000430d93 : cli ; outsd dx, dword ptr [rsi] ; pop rsi ; xor ah, al ; ret 0x71
0x0000000000430d89 : cli ; outsd dx, dword ptr [rsi] ; push rsi ; and ah, al ; ret 0x79
0x00000000004fea3a : cli ; pop rdi ; xchg eax, esi ; pop rbp ; adc eax, 0xa72d001e ; ret
0x000000000040288c : cli ; push qword ptr [rbp - 0x40] ; ret
0x0000000000489de0 : cli ; push rcx ; add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x0000000000474fde : cli ; push rsi ; ret
0x0000000000493bad : cli ; ret
0x0000000000511811 : cli ; ret 0x3c61
0x000000000050f878 : cli ; ret 0x4c6b
0x00000000005084ce : cli ; ret 0x9cc7
0x00000000004fe56a : cli ; ret 0xb1a8
0x0000000000504151 : cli ; ret 0xeca0
0x0000000000510ccc : cli ; sbb byte ptr [rcx + 0x7f62a6fd], dh ; ret 0x8b90
0x000000000050a1ea : cli ; sbb cl, dh ; clc ; ret
0x0000000000505d87 : cli ; test al, 0xda ; jg 0x505da0 ; sbb bh, al ; ret
0x000000000050a19a : cli ; xchg eax, edi ; ret
0x0000000000415567 : cmc ; adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000000005297bd : cmc ; add byte ptr [rax], al ; xor al, 0x39 ; int1 ; jmp rsp
0x000000000054e575 : cmc ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xb], bl ; jmp qword ptr [rdi]
0x00000000004f7572 : cmc ; and al, 0x75 ; rol dword ptr [rax + rax*4], -0x49 ; ret
0x0000000000501ec3 : cmc ; and eax, 0xd937d55a ; ret 0x69e4
0x000000000054db82 : cmc ; call qword ptr [rax]
0x000000000054d8ca : cmc ; call qword ptr [rbx]
0x000000000054da22 : cmc ; call qword ptr [rcx]
0x000000000054f982 : cmc ; call qword ptr [rdi]
0x000000000054cd62 : cmc ; call qword ptr [rdx]
0x000000000054db6a : cmc ; call qword ptr [rsi]
0x000000000052c99a : cmc ; call qword ptr [rsp + rdi*8 - 0x3c3bffff]
0x000000000055073a : cmc ; call rbx
0x000000000054ceb2 : cmc ; call rcx
0x000000000052bcfa : cmc ; call rsp
0x000000000052eae1 : cmc ; clc ; jmp rsp
0x00000000004a769b : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b24d3 : cmc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004aaa92 : cmc ; dec dword ptr [rbx + rcx*4 + 0xc] ; and al, 0x89 ; ret
0x000000000052cbaa : cmc ; dec esp ; add eax, 0xe2440002 ; cmc ; jmp rsp
0x000000000052c8fa : cmc ; dec esp ; clc ; add dword ptr [rax], eax ; add al, 0xb3 ; cmc ; jmp rsp
0x000000000052c542 : cmc ; dec esp ; in eax, 1 ; add byte ptr [rbp + rsi*2 - 0xb], al ; jmp rsp
0x000000000052c79a : cmc ; dec esp ; lock add dword ptr [rax], eax ; hlt ; xchg eax, esi ; cmc ; jmp rsp
0x000000000052bd72 : cmc ; dec esp ; mov esi, 0x10640001 ; cmc ; jmp rsp
0x000000000052c15a : cmc ; dec esp ; rol dword ptr [rcx], 1 ; add ah, ah ; cmp ch, dh ; jmp rsp
0x00000000004ce14c : cmc ; inc dword ptr [rbp - 0x7ce18b40] ; ret
0x000000000052bdfa : cmc ; inc dword ptr [rcx + rax*8 + 0x1c440001] ; cmc ; call rsp
0x00000000004acb56 : cmc ; inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000052c402 : cmc ; inc dword ptr [rsi + rbx*8 + 0x5b540001] ; cmc ; call rsp
0x000000000052be8a : cmc ; inc esp ; ret
0x000000000054fbf2 : cmc ; jmp qword ptr [rax]
0x000000000054d882 : cmc ; jmp qword ptr [rbx]
0x000000000054d79a : cmc ; jmp qword ptr [rdi]
0x000000000052be2a : cmc ; jmp qword ptr [rdx + rax*8 + 1]
0x00000000004b2198 : cmc ; jmp qword ptr [rsi + 0xf]
0x000000000054d272 : cmc ; jmp rax
0x000000000054fafa : cmc ; jmp rbx
0x000000000054cf82 : cmc ; jmp rcx
0x000000000054cf02 : cmc ; jmp rdi
0x000000000055048a : cmc ; jmp rsi
0x000000000052bd7a : cmc ; jmp rsp
0x00000000004f4bf5 : cmc ; jne 0x4f4ba3 ; ret 0x325c
0x00000000004b52bd : cmc ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000052c3c2 : cmc ; lcall ptr [rbx + rbx*8 + 0x4f840001] ; cmc ; jmp rsp
0x000000000052c982 : cmc ; lcall ptr [rsp + rdi*8] ; add dword ptr [rax], eax ; hlt ; ret 0xfff5
0x000000000052bdb2 : cmc ; ljmp ptr [rdi + rdi*4 + 0x12840001] ; cmc ; jmp rsp
0x000000000052caba : cmc ; ljmp ptr [rdx + rax - 0x206bfffe] ; cmc ; jmp rsp
0x00000000005136dc : cmc ; mov bl, 0xce ; ret
0x0000000000407fbc : cmc ; mov eax, r8d ; cdqe ; ret
0x00000000004b46a3 : cmc ; pop rcx ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000050e64b : cmc ; push 0x41 ; std ; ret
0x000000000052c3d2 : cmc ; push qword ptr [rsp + rbx*8] ; add dword ptr [rax], eax ; in al, 0x51 ; cmc ; jmp rsp
0x00000000004b3a0e : cmc ; push rbx ; ret
0x00000000004f8e49 : cmc ; push rcx ; ret 0xfe1a
0x000000000052be9a : cmc ; push rsp ; ret
0x00000000004f9e41 : cmc ; ret
0x000000000050ac76 : cmc ; ret 0x1d0d
0x000000000050fd6a : cmc ; ret 0x2d31
0x00000000004fdd6f : cmc ; ret 0x75dd
0x0000000000506db0 : cmc ; ret 0xe329
0x000000000045e95e : cmovb eax, ecx ; cmovb r9, r10 ; ret
0x000000000045e962 : cmovb ecx, edx ; ret
0x000000000045e95d : cmovb r8, rcx ; cmovb r9, r10 ; ret
0x000000000045e961 : cmovb r9, r10 ; ret
0x0000000000402136 : cmove eax, dword ptr [rip + 0x355b8f] ; ret
0x000000000043fcd5 : cmove eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004cec98 : cmove eax, ecx ; call rax
0x0000000000408242 : cmove eax, ecx ; ret
0x00000000004805d5 : cmove eax, edx ; ret
0x0000000000448af8 : cmove eax, edx ; xor byte ptr [rdi + rcx - 1], al ; ret
0x0000000000499e40 : cmove edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000048aa09 : cmove esi, eax ; mov qword ptr [rdi + 0x30], rsi ; ret
0x00000000004cec97 : cmove rax, rcx ; call rax
0x0000000000408241 : cmove rax, rcx ; ret
0x00000000004a2a91 : cmove rax, rdx ; ret
0x000000000048aa08 : cmove rsi, rax ; mov qword ptr [rdi + 0x30], rsi ; ret
0x000000000045d7f5 : cmovne eax, ecx ; cmovne r9, r10 ; ret
0x00000000004742e6 : cmovne eax, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000446612 : cmovne eax, edx ; jmp 0x4465c4
0x000000000043eb63 : cmovne eax, edx ; pop rbx ; ret
0x0000000000423518 : cmovne eax, edx ; ret
0x000000000045d7f9 : cmovne ecx, edx ; ret
0x000000000045d7f4 : cmovne r8, rcx ; cmovne r9, r10 ; ret
0x000000000045d7f8 : cmovne r9, r10 ; ret
0x000000000043f35c : cmovne rax, rdx ; ret
0x00000000004c707f : cmovno eax, esi ; sidt ptr [r8 + 9] ; ret 0xffb8
0x00000000004b9295 : cmovno esi, dword ptr [rcx] ; ret
0x0000000000418b07 : cmovns esp, dword ptr [rcx] ; ret
0x000000000043f790 : cmovs eax, dword ptr [rbx + 0x5d5b08c4] ; jmp rax
0x000000000040d960 : cmovs eax, dword ptr [rbx + 0x5d5b08c4] ; ret
0x00000000004b4418 : cmovs eax, dword ptr [rbx + 0x97410fa] ; xor eax, eax ; ret
0x000000000046a488 : cmovs eax, dword ptr [rbx - 0x1776f73c] ; pop rbx ; pop rbp ; ret
0x00000000004c49e9 : cmovs eax, ecx ; call 0xffffffffc2d591fc
0x000000000047c238 : cmovs ebx, eax ; xor r13d, r13d ; jmp 0x47c24c
0x0000000000475a3f : cmovs ecx, dword ptr [rbp - 0x76efdb8c] ; ret 0x8948
0x0000000000408807 : cmovs ecx, dword ptr [rbx + 0x7c834812] ; ret 0xf8
0x0000000000437dd0 : cmovs ecx, dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x000000000043d524 : cmp ah, 0xff ; xor eax, eax ; pop rbx ; ret
0x00000000004f0b35 : cmp ah, al ; add byte ptr [rdi + rcx*2], ah ; ret
0x00000000005080c4 : cmp ah, byte ptr [rbp + 0x22] ; ret 0xb805
0x0000000000503922 : cmp ah, byte ptr [rdi - 0x628aee00] ; jb 0x503933 ; ret 0x4a9d
0x0000000000547fe8 : cmp ah, cl ; call rbx
0x000000000054c538 : cmp ah, dh ; hlt ; jmp qword ptr [rax]
0x000000000050c55a : cmp ah, dl ; and eax, 0x3bcb0a9e ; popfq ; ret
0x0000000000533d58 : cmp al, 0 ; add byte ptr [rax], al ; test byte ptr [rbp], cl ; add al, dl ; ret 0xffee
0x000000000050d017 : cmp al, 0 ; push rbp ; adc edx, dword ptr [rbp + 7] ; ret 0xa3cf
0x000000000041e8f6 : cmp al, 0x24 ; lea ebp, dword ptr [rbx - 1] ; call r12
0x00000000004fd8c9 : cmp al, 0x26 ; ret 0x6f8
0x00000000004497fd : cmp al, 0x28 ; add rbp, 8 ; call r12
0x00000000004bbd29 : cmp al, 0x31 ; ret 0xc131
0x0000000000506727 : cmp al, 0x36 ; cdq ; out dx, al ; jbe 0x506741 ; ret 0x6dd1
0x0000000000532814 : cmp al, 0x38 ; add byte ptr [rax], al ; clc ; jp 0x532810 ; call qword ptr [rbx]
0x00000000004fa1d3 : cmp al, 0x3f ; mov ebx, 0xfa39ef18 ; ret
0x0000000000449a6a : cmp al, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x00000000004a59f3 : cmp al, 0x48 ; add esp, 8 ; ret
0x00000000004a5d0e : cmp al, 0x52 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004fd8e7 : cmp al, 0x52 ; insd dword ptr [rdi], dx ; stosb byte ptr [rdi], al ; ret 0xa39d
0x00000000004f0e3b : cmp al, 0x55 ; ret
0x0000000000545014 : cmp al, 0x60 ; add dword ptr [rax], eax ; pop rax ; call qword ptr [eax]
0x000000000050ccf8 : cmp al, 0x64 ; xor cl, byte ptr [rbx - 0x2ed41f02] ; ret
0x0000000000518b1c : cmp al, 0x8b ; ret
0x00000000004fdb95 : cmp al, 0x8c ; xchg eax, ebp ; ret 0x45da
0x00000000004ff20c : cmp al, 0x9e ; ret 0x64d4
0x0000000000549214 : cmp al, 0xa2 ; add dword ptr [rax], eax ; js 0x549228 ; hlt ; jmp rsi
0x000000000048a4d0 : cmp al, 0xa3 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000516c0e : cmp al, 0xae ; leave ; add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x000000000047d53b : cmp al, 0xbe ; salc ; ret 0x51
0x000000000051705d : cmp al, 0xc1 ; imul dh ; ret
0x000000000050a743 : cmp al, 0xc1 ; ret
0x0000000000449230 : cmp al, 0xc2 ; ret
0x00000000004f8762 : cmp al, 0xc3 ; adc al, 0x1c ; ret
0x0000000000500cf2 : cmp al, 0xc8 ; push rcx ; scasb al, byte ptr [rdi] ; jl 0x500cfb ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x000000000054c514 : cmp al, 0xd5 ; add dword ptr [rax], eax ; sub ah, dh ; hlt ; jmp qword ptr [rsi]
0x000000000050fe2c : cmp al, 0xdc ; pop r14 ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x000000000052eea9 : cmp al, 0xfa ; call rsp
0x000000000054ec14 : cmp al, 0xfc ; add dword ptr [rax], eax ; call 0x1754e194
0x0000000000552ccd : cmp al, 2 ; add al, ah ; cmp esi, esi ; call qword ptr [rbx]
0x0000000000552c9d : cmp al, 2 ; add al, al ; cmp esi, esi ; call qword ptr [rbx]
0x0000000000552cb5 : cmp al, 2 ; add al, cl ; cmp esi, esi ; jmp qword ptr [rbx]
0x0000000000424e30 : cmp al, 2 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052d5bd : cmp al, 2 ; add byte ptr [rsp + rcx - 9], dh ; call rsp
0x0000000000542a3d : cmp al, byte ptr [rcx] ; add al, al ; sti ; jmp rbx
0x0000000000516996 : cmp al, byte ptr [rdx] ; xor al, 0x5c ; ret
0x0000000000542a3c : cmp al, byte ptr fs:[rcx] ; add al, al ; sti ; jmp rbx
0x000000000048cf98 : cmp al, ch ; ret 0xf919
0x0000000000462f98 : cmp al, ch ; ret 0xfbb9
0x00000000004c14f4 : cmp bh, bl ; clc ; ret
0x00000000004c1134 : cmp bh, bl ; fdiv st(3) ; ret
0x00000000004c1216 : cmp bh, bl ; fsub dword ptr [rsi + 0xf] ; cmp bh, bl ; loopne 0x4c121b ; ret
0x00000000004c121b : cmp bh, bl ; loopne 0x4c1216 ; ret
0x000000000050a900 : cmp bh, bl ; scasb al, byte ptr [rdi] ; ja 0x50a97b ; and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x00000000004c112f : cmp bh, bl ; shl byte ptr [rsi + 0xf], 1 ; cmp bh, bl ; fdiv st(3) ; ret
0x0000000000421cad : cmp bh, byte ptr [rax + 0x1a5] ; pop rbx ; ret
0x00000000005129d4 : cmp bh, byte ptr [rdi + 0x494e787a] ; push 0x6f ; ret 0x2167
0x00000000004f1721 : cmp bh, byte ptr [rdi + 0x64] ; ret
0x00000000004f0b32 : cmp bh, dh ; mov ecx, 0x2400e03a ; ret
0x00000000005143c1 : cmp bl, byte ptr [rip + 0x7e2c2e42] ; ret
0x0000000000416c6c : cmp bl, dh ; ret
0x00000000004f6146 : cmp bl, dl ; sbb byte ptr [rbp + rcx*8 - 0x45], ch ; ret
0x0000000000432f41 : cmp byte ptr [r12 + 0x60], r14b ; add esp, eax ; ret 0x55
0x0000000000425951 : cmp byte ptr [r8 + 1], r15b ; ret
0x00000000004fedc7 : cmp byte ptr [r9 + rdi*8 - 0x19], dl ; mov ah, 0x2d ; ret
0x0000000000418fd8 : cmp byte ptr [r9], al ; jne 0x418fe7 ; pop rbx ; ret
0x00000000004551c0 : cmp byte ptr [rax + 0x2b], cl ; add qword ptr [rdi + 0x40], rax ; ret
0x00000000004055c5 : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004ffa47 : cmp byte ptr [rax + 0x41], bh ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x00000000004acb61 : cmp byte ptr [rax + 0x75], 0 ; ret
0x0000000000420323 : cmp byte ptr [rax + 1], bh ; ret
0x000000000045839f : cmp byte ptr [rax + rax], al ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000503950 : cmp byte ptr [rax - 0x2b], bh ; push rdi ; ret 0xb9d9
0x00000000004550cd : cmp byte ptr [rax - 0x75], cl ; add qword ptr [rdi + 0x40], rax ; ret
0x000000000045507d : cmp byte ptr [rax - 0x75], cl ; mov qword ptr [rdi + 0x40], rax ; ret
0x0000000000425b92 : cmp byte ptr [rax - 0x76b707ad], cl ; ret 0xc148
0x000000000045513e : cmp byte ptr [rax - 0x77], cl ; ja 0x45518c ; mov qword ptr [rdi + 0x38], rax ; ret
0x000000000044cd61 : cmp byte ptr [rax - 0x77], cl ; ret
0x000000000045fb03 : cmp byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000496a24 : cmp byte ptr [rax - 0x77], cl ; ret 0xff41
0x00000000004214d3 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rdx + 0x48], cl ; mov edi, ebx ; call rdx
0x00000000004aa67c : cmp byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000532815 : cmp byte ptr [rax], al ; add al, bh ; jp 0x53280f ; call qword ptr [rbx]
0x00000000005327fd : cmp byte ptr [rax], al ; add al, dh ; jp 0x5327f7 ; call qword ptr [rbx]
0x0000000000532885 : cmp byte ptr [rax], al ; add byte ptr [rax + 0x7b], cl ; out dx, al ; jmp qword ptr [rbx]
0x00000000004b3cf6 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053282d : cmp byte ptr [rax], al ; add byte ptr [rax], al ; jnp 0x532827 ; jmp qword ptr [rbx]
0x00000000004bdd85 : cmp byte ptr [rax], al ; fldenv dword ptr [rsi + 0xf] ; out dx, eax ; fimul dword ptr [rax - 0x7d] ; ret 0x66f0
0x00000000004bd7f4 : cmp byte ptr [rax], al ; fmul qword ptr [rcx - 0x7d] ; ret
0x0000000000402d1b : cmp byte ptr [rax], al ; je 0x402d19 ; mov eax, 0xffffffff ; ret
0x00000000004bd7b1 : cmp byte ptr [rax], al ; ret
0x00000000004c89d0 : cmp byte ptr [rax], al ; ret 0x4166
0x00000000004c8864 : cmp byte ptr [rax], al ; ret 0x4566
0x00000000004c8799 : cmp byte ptr [rax], al ; ret 0x8348
0x00000000004bda31 : cmp byte ptr [rax], al ; ret 0xc3f3
0x00000000004c8dbd : cmp byte ptr [rax], al ; ret 0xff3
0x00000000004bdca5 : cmp byte ptr [rax], al ; shl dword ptr [rsi + 0xf], -0x11 ; ret 0xc3f3
0x0000000000429ebc : cmp byte ptr [rbp + 0x10], cl ; add esp, eax ; ret
0x0000000000429ec3 : cmp byte ptr [rbp + 0x20], dl ; add esp, eax ; ret
0x00000000005134ee : cmp byte ptr [rbp + rbp + 0x57e9c835], ah ; ret
0x00000000005039a5 : cmp byte ptr [rbp - 0x74e6c8d7], bh ; outsd dx, dword ptr fs:[rsi] ; ret 0xf479
0x00000000004108ab : cmp byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x0000000000410a54 : cmp byte ptr [rbp - 0x77], cl ; ret 0xf748
0x000000000041091e : cmp byte ptr [rbp - 0x77], cl ; ror dword ptr [rbp - 0x77], 1 ; ret 0xf748
0x0000000000410a53 : cmp byte ptr [rbp - 0x77], r9b ; ret 0xf748
0x000000000041091d : cmp byte ptr [rbp - 0x77], r9b ; ror dword ptr [rbp - 0x77], 1 ; ret 0xf748
0x0000000000429126 : cmp byte ptr [rbp], al ; add esp, eax ; ret
0x0000000000438af9 : cmp byte ptr [rbx + 0x490f07c2], al ; ret 0x8b48
0x000000000041e4a7 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004494b4 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000513d10 : cmp byte ptr [rbx - 0x78c73efc], dh ; in eax, dx ; ret
0x000000000041e4c4 : cmp byte ptr [rbx - 0x7cb70002], cl ; ret
0x00000000005533b8 : cmp byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x0000000000418ad7 : cmp byte ptr [rcx + 0x21], cl ; ret 0x894c
0x000000000045171d : cmp byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000041022f : cmp byte ptr [rcx + 1], cl ; ret
0x00000000004104f0 : cmp byte ptr [rcx + 1], cl ; ret 0x1149
0x000000000045a16d : cmp byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 8 ; call r9
0x0000000000443864 : cmp byte ptr [rcx + rcx*4 + 0x4f], cl ; pop rax ; mov qword ptr [rdi + 0x60], rax ; ret
0x00000000004778c4 : cmp byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x0000000000497af0 : cmp byte ptr [rcx + rcx*4 - 0x11], cl ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004979ad : cmp byte ptr [rcx + rcx*4 - 0x11], cl ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000497433 : cmp byte ptr [rcx + rcx*4 - 0x1f], cl ; mov rdi, rbx ; call r15
0x00000000004fedc8 : cmp byte ptr [rcx + rdi*8 - 0x19], dl ; mov ah, 0x2d ; ret
0x00000000004369fc : cmp byte ptr [rcx - 0x77], al ; ret 0x8548
0x00000000004519be : cmp byte ptr [rcx - 0x77], cl ; ret
0x00000000004cabba : cmp byte ptr [rcx - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000004102a9 : cmp byte ptr [rcx - 9], cl ; and byte ptr [rcx + 1], cl ; ret
0x00000000004102a8 : cmp byte ptr [rcx - 9], r9b ; and byte ptr [rcx + 1], cl ; ret
0x00000000005427fd : cmp byte ptr [rcx], al ; add byte ptr [rax], dl ; clc ; call qword ptr [rbx]
0x0000000000418fd9 : cmp byte ptr [rcx], al ; jne 0x418fe6 ; pop rbx ; ret
0x000000000050182b : cmp byte ptr [rcx], bh ; pop rbx ; ret 0x958e
0x000000000054d3d8 : cmp byte ptr [rcx], dh ; cmc ; call qword ptr [rdx]
0x00000000004baa68 : cmp byte ptr [rcx], dh ; ret 0x8944
0x00000000004baa67 : cmp byte ptr [rcx], r14b ; ret 0x8944
0x00000000004755bb : cmp byte ptr [rdi + 0xc], bh ; mov rdx, r14 ; call rax
0x00000000004fa1d2 : cmp byte ptr [rdi + rdi], 0xbb ; sbb bh, ch ; cmp edx, edi ; ret
0x0000000000545078 : cmp byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x0000000000505538 : cmp byte ptr [rdi], bl ; cli ; cmpsb byte ptr [rsi], byte ptr [rdi] ; int 0xc2
0x000000000040b012 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8548
0x0000000000514f0c : cmp byte ptr [rdi], dh ; ret
0x0000000000544788 : cmp byte ptr [rdx - 0xd], ah ; call qword ptr [rbx]
0x00000000004a5d6d : cmp byte ptr [rdx], 0x52 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a5dce : cmp byte ptr [rdx], dl ; cmove rax, rdx ; ret
0x0000000000406056 : cmp byte ptr [rip + 0x4740000], dh ; ret
0x00000000004a5ced : cmp byte ptr [rip + 0xf480052], 0x44 ; ret 0x66c3
0x00000000005444a8 : cmp byte ptr [rsi - 0xd], bl ; call rsi
0x0000000000448adb : cmp byte ptr [rsi], 0 ; js 0x448aee ; ret
0x0000000000432f01 : cmp byte ptr [rsp + 0x10], cl ; add esp, eax ; ret 0x7d
0x0000000000432f0e : cmp byte ptr [rsp + 0x20], dl ; add esp, eax ; ret 0x75
0x0000000000432f1b : cmp byte ptr [rsp + 0x30], bl ; add esp, eax ; ret 0x6d
0x0000000000432f28 : cmp byte ptr [rsp + 0x40], ah ; add esp, eax ; ret 0x65
0x0000000000432f35 : cmp byte ptr [rsp + 0x50], ch ; add esp, eax ; ret 0x5d
0x0000000000432f42 : cmp byte ptr [rsp + 0x60], dh ; add esp, eax ; ret 0x55
0x0000000000549e08 : cmp byte ptr [rsp + rsi*8], dl ; call qword ptr [rbx]
0x000000000042e15f : cmp byte ptr [rsp], al ; add esp, eax ; ret
0x0000000000432f1a : cmp byte ptr gs:[rsp + 0x30], bl ; add esp, eax ; ret 0x6d
0x00000000004f4d1e : cmp ch, ah ; mov dl, 0x1c ; ret
0x00000000004c1414 : cmp ch, bl ; clc ; ret
0x00000000004c10d4 : cmp ch, bl ; fdiv st(3) ; ret
0x00000000004c11a6 : cmp ch, bl ; fsub dword ptr [rsi + 0xf] ; cmp ch, bl ; loopne 0x4c11ab ; ret
0x00000000004c11ab : cmp ch, bl ; loopne 0x4c11a6 ; ret
0x00000000004c10cf : cmp ch, bl ; shl byte ptr [rsi + 0xf], 1 ; cmp ch, bl ; fdiv st(3) ; ret
0x00000000004fe8f7 : cmp ch, byte ptr [rdi + rsi - 0x2001a244] ; ret
0x000000000052f5c9 : cmp ch, ch ; call qword ptr [rcx]
0x000000000052c161 : cmp ch, dh ; jmp rsp
0x0000000000423b3a : cmp cl, 6 ; je 0x423b4e ; ret
0x00000000004274a2 : cmp cl, ah ; ret 0x4103
0x00000000004272e6 : cmp cl, ah ; ret 0xf00
0x000000000042734a : cmp cl, ah ; ret 0xf01
0x00000000004273e0 : cmp cl, ah ; ret 0xf02
0x0000000000427444 : cmp cl, ah ; ret 0xf03
0x000000000041d7dc : cmp cl, al ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000503b31 : cmp cl, bl ; ret 0xa99c
0x0000000000456bf7 : cmp cl, byte ptr [rax + 1] ; ret
0x0000000000465695 : cmp cl, byte ptr [rax - 0x73] ; je 0x4656c6 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000448efd : cmp cl, byte ptr [rax - 0x77] ; ret
0x00000000005158ef : cmp cl, byte ptr [rbx - 0x6d94d81b] ; clc ; ret 0x9f2e
0x000000000050fb8d : cmp cl, byte ptr [rcx] ; cmp eax, 0x206348b8 ; push rbx ; ret 0x6202
0x000000000041b770 : cmp cl, byte ptr [rdi] ; mov word ptr [rsi + 0xf000002], gs ; lahf ; ret 0x854d
0x00000000004ad902 : cmp cl, byte ptr [rdi] ; test byte ptr [rdi], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000053d2b1 : cmp cl, dh ; call qword ptr [rdi]
0x0000000000515e64 : cmp cl, dh ; ret 0x898
0x000000000052b481 : cmp dh, ah ; call rsp
0x00000000004fa100 : cmp dh, al ; or al, 0xc0 ; pop rbx ; in eax, dx ; jl 0x4fa0ed ; ret 0x278f
0x000000000052d739 : cmp dh, bh ; jmp rsp
0x00000000004c39d6 : cmp dh, bl ; rol dword ptr [rcx + 0xf], -0x6d ; ret
0x000000000051789b : cmp dh, cl ; ret
0x0000000000552d39 : cmp dh, dh ; call qword ptr [rbx]
0x000000000045d0cf : cmp dh, dh ; in eax, -0x3c ; ret 0xf6f3
0x0000000000415c0f : cmp dh, dh ; jmp 0x415bdc
0x000000000045cf76 : cmp dh, dh ; jmp 0xfffffffff7cf9245
0x0000000000415d49 : cmp dh, dh ; jmp qword ptr [rsi + 0x4d]
0x000000000045cee9 : cmp dh, dh ; loope 0x45ceb5 ; ret 0xf789
0x000000000041462c : cmp dh, dh ; ret
0x00000000004140a9 : cmp dh, dh ; ret 0x4cf3
0x000000000044c797 : cmp dh, dh ; ret 0x7401
0x00000000004144ce : cmp dh, dh ; ret 0x8b48
0x0000000000415d4f : cmp dh, dh ; ret 0xe2c4
0x0000000000415cd6 : cmp dh, dh ; rol esp, 0x62 ; ret
0x0000000000414213 : cmp dh, dh ; rol esp, cl ; ret 0xf6a3
0x0000000000550c98 : cmp dl, ah ; cmc ; jmp qword ptr [rbx]
0x0000000000461d59 : cmp dl, bh ; dec dword ptr [rax - 0x75] ; and al, 8 ; jmp 0x461d2e
0x000000000050ce54 : cmp dl, byte ptr [rdx + rcx*2 + 0x26] ; ret 0x5ec7
0x00000000004a5d6e : cmp dl, byte ptr [rdx] ; cmove rax, rdx ; ret
0x0000000000513f7f : cmp dword ptr [edx + 0x42], esi ; ret
0x0000000000500f5a : cmp dword ptr [rax - 0x3c0d3a6], ecx ; ret 0xeb49
0x0000000000478c4e : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004f7a9f : cmp dword ptr [rax], eax ; lahf ; and al, 0xd8 ; xor al, 0x38 ; ret 0xa070
0x00000000004efa5e : cmp dword ptr [rbp - 0x28], eax ; cwde ; ret 0x4f96
0x0000000000511b12 : cmp dword ptr [rbp - 0x2c312c3a], esi ; ret 0x1203
0x00000000004f875e : cmp dword ptr [rbp - 0x31], esp ; jg 0x4f87a4 ; ret
0x0000000000513b18 : cmp dword ptr [rbp - 0x59], edi ; ret
0x0000000000425e36 : cmp dword ptr [rbp], 0 ; add dh, dh ; ret
0x000000000051172b : cmp dword ptr [rbx + rax*4], edx ; ret
0x00000000004fe224 : cmp dword ptr [rbx], 0xd0e58bdc ; ret
0x00000000004f1b28 : cmp dword ptr [rbx], edi ; cdq ; cwde ; ret
0x000000000050bc3c : cmp dword ptr [rcx + 0x27199025], eax ; ret 0xcac0
0x00000000004ef991 : cmp dword ptr [rcx + 0x6be75e5a], ebx ; push rbp ; stc ; ret 0x98f0
0x000000000052a5ad : cmp dword ptr [rcx], eax ; add byte ptr [rbx + rbx - 0xe], ah ; jmp rsp
0x000000000050a779 : cmp dword ptr [rcx], edi ; ret
0x0000000000437d73 : cmp dword ptr [rcx], esp ; xor al, byte ptr [rax] ; ret
0x000000000047b3aa : cmp dword ptr [rdi + 0x10], 0 ; setne al ; ret
0x000000000045a4e2 : cmp dword ptr [rdi + 0x10], 4 ; je 0x45a4f7 ; ret
0x000000000044b01d : cmp dword ptr [rdi + 0x20], ecx ; jne 0x44b011 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004023e0 : cmp dword ptr [rdi + 0xc], esi ; jl 0x4023f8 ; mov rax, rdi ; ret
0x00000000004cdb80 : cmp dword ptr [rdi + 4], 0x17 ; je 0x4cdb98 ; xor eax, eax ; ret
0x00000000004a8490 : cmp dword ptr [rdi + 4], 0x18 ; je 0x4a84a8 ; xor eax, eax ; ret
0x00000000004a8ba2 : cmp dword ptr [rdi + 4], 0x1c ; je 0x4a8bb7 ; ret
0x0000000000484811 : cmp dword ptr [rdi + 8], 0 ; je 0x484827 ; ret
0x0000000000423501 : cmp dword ptr [rdi + 8], 0 ; mov eax, dword ptr [rdi] ; je 0x423519 ; ret
0x00000000004b7825 : cmp dword ptr [rdi], 2 ; jne 0x4b7839 ; mov rax, qword ptr [rdi + 0x28] ; ret
0x00000000004491f2 : cmp dword ptr [rdi], eax ; je 0x449205 ; ret
0x0000000000449212 : cmp dword ptr [rdi], eax ; je 0x449225 ; ret
0x00000000004cec93 : cmp dword ptr [rdx + 0x10], 0 ; cmove rax, rcx ; call rax
0x00000000004feab4 : cmp dword ptr [rdx + 0x1bf8d7e5], edi ; adc al, 0x90 ; ret
0x0000000000513f80 : cmp dword ptr [rdx + 0x42], esi ; ret
0x00000000004a5d8e : cmp dword ptr [rdx], edx ; cmove rax, rdx ; ret
0x00000000004f5eec : cmp dword ptr [rip - 0x1e3d596c], edi ; rcr byte ptr [rdi], 1 ; ret 0x2a90
0x0000000000480785 : cmp dword ptr [rsi + 0x58], 0x40 ; je 0x4807c6 ; ret
0x00000000004ecf94 : cmp dword ptr [rsi + 0x64], edi ; mov edx, 0xc2ac05eb ; jmp qword ptr gs:[rbx]
0x00000000004cdb60 : cmp dword ptr [rsi + 4], 0x17 ; je 0x4cdb78 ; xor eax, eax ; ret
0x00000000004a8470 : cmp dword ptr [rsi + 4], 0x18 ; je 0x4a8488 ; xor eax, eax ; ret
0x000000000043bfe3 : cmp dword ptr [rsi - 0x3fce0004], edx ; jmp 0x43bfb5
0x000000000047bfe3 : cmp dword ptr [rsi - 0x3fce0008], edx ; pop rbx ; ret
0x000000000050cdc0 : cmp dword ptr [rsi - 0x76], 0x61f28b63 ; xchg eax, ebp ; ret
0x000000000051172a : cmp dword ptr ds:[rbx + rax*4], edx ; ret
0x000000000040823e : cmp eax, 0 ; cmove rax, rcx ; ret
0x00000000004a88a8 : cmp eax, 0x17 ; je 0x4a88b7 ; xor eax, eax ; ret
0x000000000050fb8f : cmp eax, 0x206348b8 ; push rbx ; ret 0x6202
0x0000000000515c92 : cmp eax, 0x25c65510 ; ret 0xf7ea
0x00000000004b7a81 : cmp eax, 0x2a267e ; ret
0x00000000004b7502 : cmp eax, 0x2a2bf1 ; ret
0x00000000004b34b9 : cmp eax, 0x2a4562 ; ret
0x00000000004adee2 : cmp eax, 0x2a99e9 ; ret
0x0000000000479d82 : cmp eax, 0x2dce61 ; ret
0x00000000004720be : cmp eax, 0x2e4add ; ret
0x000000000046a2d2 : cmp eax, 0x2efce9 ; ret
0x0000000000469d22 : cmp eax, 0x2f0291 ; ret
0x0000000000467c22 : cmp eax, 0x2f2389 ; ret
0x0000000000464f92 : cmp eax, 0x2f5011 ; ret
0x000000000045ffd2 : cmp eax, 0x2f9fc9 ; ret
0x000000000043b8c1 : cmp eax, 0x31e612 ; ret
0x0000000000437d72 : cmp eax, 0x322139 ; ret
0x000000000041e349 : cmp eax, 0x338562 ; ret
0x0000000000407862 : cmp eax, 0x352071 ; ret
0x0000000000406102 : cmp eax, 0x353761 ; ret
0x0000000000406054 : cmp eax, 0x353806 ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000406022 : cmp eax, 0x353849 ; ret
0x0000000000405fd2 : cmp eax, 0x353871 ; ret
0x0000000000405fc2 : cmp eax, 0x353889 ; ret
0x0000000000405fb2 : cmp eax, 0x3538a1 ; ret
0x00000000004048bc : cmp eax, 0x354f5e ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000004242d7 : cmp eax, 0x5b000000 ; pop rbp ; pop r12 ; ret
0x00000000004fbdfc : cmp eax, 0x621436d5 ; ret
0x0000000000513f7d : cmp eax, 0x72396781 ; ret
0x000000000044c792 : cmp eax, 0x7ed53941 ; cmp dh, dh ; ret 0x7401
0x0000000000417f69 : cmp eax, 0x8948c4d4 ; ret 0xf48
0x0000000000478c92 : cmp eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000532d8d : cmp eax, 0x98200000 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000504e92 : cmp eax, 0xa3f23e83 ; ret 0x3017
0x0000000000493ba7 : cmp eax, 0xb954cee ; cli ; ret
0x000000000050be44 : cmp eax, 0xdd6d2a48 ; ret 0xea0d
0x00000000004f5eed : cmp eax, 0xe1c2a694 ; rcr byte ptr [rdi], 1 ; ret 0x2a90
0x000000000044e2ff : cmp eax, 0xf ; jne 0x44e2f7 ; xor eax, eax ; ret
0x000000000047958f : cmp eax, 0xf000000 ; ret 0x43e9
0x00000000004a5cee : cmp eax, 0xf480052 ; ret 0x66c3
0x00000000004f72eb : cmp eax, 0xfdd781d8 ; lea esp, dword ptr [rax] ; sub al, 0x5d ; ret
0x000000000046be77 : cmp eax, 0xff ; je 0x46be91 ; add rsp, 8 ; ret
0x00000000004b780a : cmp eax, 1 ; ja 0x4b7821 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004b784a : cmp eax, 1 ; ja 0x4b7860 ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000004b786a : cmp eax, 1 ; ja 0x4b7880 ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000048c590 : cmp eax, 1 ; je 0x48c5a7 ; xor eax, eax ; ret
0x000000000048c76a : cmp eax, 1 ; je 0x48c77f ; xor eax, eax ; ret
0x0000000000490b68 : cmp eax, 1 ; je 0x490b77 ; xor eax, eax ; ret
0x0000000000480741 : cmp eax, 2 ; cmove eax, edx ; ret
0x00000000004b77dc : cmp eax, 3 ; jne 0x4b77f9 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004804eb : cmp eax, 5 ; mov edx, eax ; je 0x480501 ; mov eax, edx ; ret
0x00000000004a536c : cmp eax, 6 ; jbe 0x4a5380 ; xor eax, eax ; pop rbx ; ret
0x0000000000532bd5 : cmp eax, dword ptr [rax] ; add byte ptr [rax], bl ; xchg eax, esi ; out dx, al ; call rax
0x0000000000542bd5 : cmp eax, dword ptr [rcx] ; add byte ptr [rax], bl ; add al, 0xf3 ; jmp qword ptr [rcx]
0x000000000044bc16 : cmp eax, dword ptr [rcx] ; jne 0x44bbf1 ; add rsp, 8 ; jmp r9
0x0000000000518128 : cmp eax, dword ptr [rdi + 0x63] ; ret
0x000000000052d595 : cmp eax, dword ptr [rdx] ; add ah, ah ; or bh, dh ; jmp rsp
0x000000000044bc91 : cmp eax, dword ptr [rdx] ; jne 0x44bc71 ; add rsp, 8 ; jmp r8
0x000000000044be69 : cmp eax, dword ptr [rdx] ; jne 0x44be81 ; add rsp, 8 ; jmp r8
0x0000000000518168 : cmp eax, dword ptr [rdx] ; xchg eax, esi ; xor dword ptr [rcx], 0x58 ; ret
0x00000000004fd4e9 : cmp eax, ebx ; xor eax, 0xfd90d0ad ; ret 0x9661
0x00000000004a5a68 : cmp eax, ecx ; jbe 0x4a5a81 ; mov eax, 1 ; ret
0x000000000044e2cd : cmp eax, edi ; jne 0x44e2c1 ; mov eax, 0x51 ; ret
0x00000000004028fb : cmp eax, edx ; jne 0x4028ef ; xor eax, eax ; ret
0x0000000000402c93 : cmp eax, edx ; jne 0x402c86 ; xor eax, eax ; ret
0x0000000000419446 : cmp eax, edx ; jne 0x41943f ; sub rax, rdi ; ret
0x00000000004496d1 : cmp eax, esi ; je 0x4496e5 ; ret
0x00000000005372d9 : cmp eax, esi ; jmp qword ptr [rdi]
0x00000000004029e5 : cmp eax, esi ; jne 0x4029ce ; xor eax, eax ; ret
0x000000000043bdfb : cmp ebp, 0x4890ffff ; mov eax, dword ptr [rdi + 0x30] ; ret
0x0000000000424759 : cmp ebp, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000004f5d23 : cmp ebp, dword ptr [rdx - 0x1f383af5] ; pop rbp ; nop ; ret 0x40fb
0x00000000004f507f : cmp ebp, ecx ; xchg eax, ebx ; ret 0x6d6e
0x000000000052c1b1 : cmp ebp, esi ; call rsp
0x000000000046eacd : cmp ebx, eax ; sete al ; movzx eax, al ; pop rbx ; ret
0x000000000040615f : cmp ebx, edx ; jle 0x40616d ; pop rbx ; ret
0x000000000048741d : cmp ecx, 0x74c085ff ; sbb al, 0x83 ; ret
0x000000000046e806 : cmp ecx, 8 ; jle 0x46e816 ; ret
0x00000000004509d4 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x00000000004bd294 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004dc879 : cmp ecx, dword ptr [rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4d3b
0x000000000040e72f : cmp ecx, eax ; jne 0x40e707 ; mov rax, rdx ; ret
0x0000000000485e74 : cmp ecx, edi ; dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x000000000050ca5c : cmp ecx, edi ; in eax, 0x4e ; ret
0x000000000044482c : cmp ecx, esi ; je 0x444885 ; ret
0x000000000044486e : cmp ecx, esi ; je 0x444886 ; xor eax, eax ; ret
0x0000000000444a13 : cmp ecx, esi ; je 0x444a73 ; add rsp, 8 ; ret
0x00000000005297c1 : cmp ecx, esi ; jmp rsp
0x000000000046b505 : cmp ecx, esi ; mov byte ptr [rax + 1], dl ; jne 0x46b500 ; ret
0x00000000004c7831 : cmp ecx, esi ; mov qword ptr [rdi + r8], r9 ; jb 0x4c7830 ; ret
0x0000000000476d2d : cmp edi, 0x10 ; je 0x476d3e ; ret
0x0000000000513a10 : cmp edi, dword ptr [rcx + 0x30] ; ret 0x958e
0x00000000005138ee : cmp edi, dword ptr [rdx] ; ret
0x00000000004b382e : cmp edi, eax ; add al, 1 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004284b0 : cmp edi, ebp ; ret
0x0000000000430eb9 : cmp edi, ebp ; ret 0x3148
0x0000000000430fc1 : cmp edi, ebp ; ret 0x314c
0x00000000004ca584 : cmp edi, ebp ; ret 0x42c4
0x00000000004283fd : cmp edi, ebp ; ret 0xac0f
0x00000000004ca570 : cmp edi, ebp ; ret 0xc3c4
0x00000000004b9578 : cmp edi, ecx ; jne 0x4b9571 ; mov eax, 1 ; ret
0x00000000004f5021 : cmp edi, edi ; ret 0x8087
0x0000000000413341 : cmp edi, edx ; jb 0x413049 ; ret
0x00000000004068d5 : cmp edi, edx ; jne 0x4068c7 ; movzx eax, al ; ret
0x00000000004b955a : cmp edi, edx ; jne 0x4b954d ; ret
0x000000000044b461 : cmp edi, esi ; je 0x44b478 ; add rsp, 8 ; jmp rdx
0x00000000004b441a : cmp edx, 0x10 ; je 0x4b442f ; xor eax, eax ; ret
0x000000000043cfc9 : cmp edx, 0x198 ; je 0x43cfe1 ; ret
0x000000000040288b : cmp edx, 0xff ; jne 0x402856 ; ret
0x0000000000490a27 : cmp edx, 2 ; je 0x490a67 ; xor eax, eax ; ret
0x0000000000480682 : cmp edx, 5 ; mov eax, edx ; je 0x4806c0 ; ret
0x00000000005006cb : cmp edx, dword ptr [rax] ; ret
0x00000000004fb58f : cmp edx, dword ptr [rbp - 0x59e6c243] ; ret
0x000000000050b731 : cmp edx, dword ptr [rbx] ; mov bh, 4 ; ret
0x00000000004a5d4e : cmp edx, dword ptr [rdx] ; cmove rax, rdx ; ret
0x00000000004a3b91 : cmp edx, eax ; je 0x4a3ba6 ; xor eax, eax ; ret
0x000000000041c4ed : cmp edx, ecx ; jne 0x41c4e6 ; xor eax, eax ; ret
0x00000000004fa1d8 : cmp edx, edi ; ret
0x00000000004081aa : cmp esi, 0 ; jne 0x408175 ; ret
0x000000000050558e : cmp esi, dword ptr [rsi] ; or byte ptr [rsi + 0x48], ch ; ret
0x00000000005070e1 : cmp esi, dword ptr [rsi] ; test al, 0x83 ; and eax, 0xb0a61ee3 ; ret 0xb9c9
0x000000000041a10b : cmp esi, eax ; jne 0x41a0fb ; mov rax, rdi ; ret
0x000000000044c2b6 : cmp esi, eax ; jne 0x44c2b1 ; add rsp, 8 ; jmp r10
0x00000000005285a9 : cmp esi, ebp ; jmp rsp
0x00000000004489d1 : cmp esi, ebx ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000000000445321 : cmp esi, ecx ; je 0x445336 ; xor eax, eax ; ret
0x00000000004a8cfc : cmp esi, edi ; push qword ptr [rcx] ; test byte ptr [rax - 0x77], 0xc7 ; call r12
0x000000000045253e : cmp esi, edx ; ja 0x4524f5 ; ret
0x00000000004571c3 : cmp esi, edx ; ja 0x457175 ; ret
0x000000000047b408 : cmp esi, edx ; jge 0x47b454 ; ret
0x0000000000552ca1 : cmp esi, esi ; call qword ptr [rbx]
0x000000000052d179 : cmp esi, esi ; call rsp
0x0000000000552cb9 : cmp esi, esi ; jmp qword ptr [rbx]
0x000000000045253d : cmp esi, r10d ; ja 0x4524f6 ; ret
0x00000000004571c2 : cmp esi, r10d ; ja 0x457176 ; ret
0x000000000043d46c : cmp esp, 0x5bc031ff ; ret
0x000000000043d30c : cmp esp, 0xff ; xor eax, eax ; pop rbx ; ret
0x0000000000515992 : cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x0000000000510f10 : cmp esp, ebx ; push rax ; mov dh, 0x92 ; ret 0x54c
0x000000000047b3a9 : cmp qword ptr [rdi + 0x10], 0 ; setne al ; ret
0x0000000000484810 : cmp qword ptr [rdi + 8], 0 ; je 0x484828 ; ret
0x0000000000480784 : cmp qword ptr [rsi + 0x58], 0x40 ; je 0x4807c7 ; ret
0x0000000000490a26 : cmp r10d, 2 ; je 0x490a68 ; xor eax, eax ; ret
0x00000000005080c3 : cmp r12b, byte ptr [r13 + 0x22] ; ret 0xb805
0x0000000000430eb8 : cmp r15d, ebp ; ret 0x3148
0x0000000000430fc0 : cmp r15d, ebp ; ret 0x314c
0x000000000040e72e : cmp r9, r8 ; jne 0x40e708 ; mov rax, rdx ; ret
0x000000000040823d : cmp rax, 0 ; cmove rax, rcx ; ret
0x000000000044e2fe : cmp rax, 0xf ; jne 0x44e2f8 ; xor eax, eax ; ret
0x00000000004028fa : cmp rax, rdx ; jne 0x4028f0 ; xor eax, eax ; ret
0x0000000000402c92 : cmp rax, rdx ; jne 0x402c87 ; xor eax, eax ; ret
0x0000000000419445 : cmp rax, rdx ; jne 0x419440 ; sub rax, rdi ; ret
0x00000000004029e4 : cmp rax, rsi ; jne 0x4029cf ; xor eax, eax ; ret
0x000000000044482b : cmp rcx, rsi ; je 0x444886 ; ret
0x000000000044486d : cmp rcx, rsi ; je 0x444887 ; xor eax, eax ; ret
0x0000000000444a12 : cmp rcx, rsi ; je 0x444a74 ; add rsp, 8 ; ret
0x000000000046b504 : cmp rcx, rsi ; mov byte ptr [rax + 1], dl ; jne 0x46b501 ; ret
0x00000000004068d4 : cmp rdi, rdx ; jne 0x4068c8 ; movzx eax, al ; ret
0x00000000004b9559 : cmp rdi, rdx ; jne 0x4b954e ; ret
0x000000000044b460 : cmp rdi, rsi ; je 0x44b479 ; add rsp, 8 ; jmp rdx
0x00000000004b4419 : cmp rdx, 0x10 ; je 0x4b4430 ; xor eax, eax ; ret
0x00000000004a3b90 : cmp rdx, rax ; je 0x4a3ba7 ; xor eax, eax ; ret
0x00000000004081a9 : cmp rsi, 0 ; jne 0x408176 ; ret
0x0000000000445320 : cmp rsi, rcx ; je 0x445337 ; xor eax, eax ; ret
0x00000000004ec2e0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000511a04 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call 0xffffffffc44d1891
0x000000000052ab09 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call rsp
0x0000000000511810 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; ret 0x3c61
0x0000000000506daf : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; ret 0xe329
0x000000000050553b : cmpsb byte ptr [rsi], byte ptr [rdi] ; int 0xc2
0x00000000004ee181 : cmpsb byte ptr [rsi], byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; sub dword ptr [rdx - 3], ecx ; sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x0000000000482699 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004fa007 : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rax ; jrcxz 0x4fa053 ; push 0x42 ; sub eax, dword ptr [rdi] ; ret 0xecf9
0x000000000046fde8 : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rcx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fb594 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000493ba4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x3d23
0x00000000004f5eef : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xd0e1
0x00000000004442d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000500438 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb eax, 0x474c9580 ; ret 0xb611
0x00000000004471f2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 2
0x000000000050414a : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, 0x4d286d4 ; xchg eax, esp ; cli ; ret 0xeca0
0x00000000005103dc : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], ebp ; xchg eax, ebx ; call qword ptr [rcx]
0x000000000052e8cd : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; xchg eax, esp ; sar al, cl ; call rsp
0x0000000000503923 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rdx], dl ; jne 0x5038cc ; jb 0x503932 ; ret 0x4a9d
0x00000000004f58b2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add cl, al ; xchg eax, edi ; sti ; sub al, 0xf1 ; ret 0x7130
0x0000000000500bc2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rsi], 0xe ; jge 0x500c1c ; in al, dx ; call rsp
0x0000000000540449 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rsi]
0x00000000004f0a0b : cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; sbb edx, ecx ; add byte ptr [rbx + rcx*4 - 0x37], bh ; ret 0x8d33
0x0000000000512dc5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jbe 0x512d5b ; ret 0x62b7
0x00000000005471a9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rbx
0x0000000000547159 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rdi
0x0000000000516ae8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jne 0x516aac ; or al, 0x43 ; ret 0x1595
0x000000000050a684 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bh, ch ; push rbp ; xchg eax, edi ; jrcxz 0x50a63c ; pop rdx ; ret 0xd69
0x0000000000414968 : cmpsd dword ptr [rsi], dword ptr [rdi] ; neg r9 ; ret
0x0000000000430949 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dl, byte ptr [rbx - 0x2a586eb9] ; ret 0xa88f
0x000000000050e3e0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out 0xdc, al ; test byte ptr [rbx - 0x18], 0x27 ; fcmovbe st(0), st(1) ; ret 0x13e6
0x00000000005032fe : cmpsd dword ptr [rsi], dword ptr [rdi] ; pop rdx ; sbb bh, byte ptr es:[rcx - 0x47] ; ret
0x00000000004b0485 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000506d7f : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xaed4
0x00000000004f0899 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xccd8
0x0000000000479375 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff8
0x00000000005054a1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; ret 0x779c
0x00000000004f0898 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0xccd8
0x00000000004feac9 : comiss xmm7, xmmword ptr [rax + 0x760883fd] ; out dx, eax ; ret
0x00000000005014c6 : cqo ; cld ; stosb byte ptr [rdi], al ; sub esp, ebx ; or ebx, dword ptr [rbx] ; ret
0x00000000005091c6 : cqo ; mov ebx, 0x88335561 ; ret
0x000000000047fbf0 : cvtdq2ps xmm3, xmmword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000406d58 : cvtdq2ps xmm7, xmmword ptr [rsi + 1] ; xor edi, edi ; jmp rax
0x0000000000457b01 : cwde ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x000000000046ef94 : cwde ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000452ebf : cwde ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000435439 : cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043cfcb : cwde ; add dword ptr [rax], eax ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000004bdf74 : cwde ; call 0x7854a22f
0x0000000000478105 : cwde ; clc ; dec dword ptr [rcx - 0x75] ; push rbp ; or byte ptr [rax + 0x63], cl ; ret
0x000000000052b979 : cwde ; hlt ; jmp rsp
0x0000000000535b68 : cwde ; in al, dx ; out dx, eax ; call rsp
0x000000000053d6c8 : cwde ; int1 ; jmp qword ptr [rdi]
0x00000000004faa04 : cwde ; ja 0x4faa53 ; popfq ; out -9, eax ; xchg eax, esi ; ret
0x000000000054efc8 : cwde ; jbe 0x54efc3 ; call qword ptr [rbx]
0x00000000004f5aa2 : cwde ; jmp qword ptr [rbx]
0x0000000000507422 : cwde ; jno 0x5073bb ; jmp 0xffffffffc41cff89
0x000000000054eb28 : cwde ; jo 0x54eb23 ; call qword ptr [rsi]
0x0000000000530d38 : cwde ; js 0x530d2b ; call rsp
0x0000000000515621 : cwde ; lodsb al, byte ptr [rsi] ; ret 0x5624
0x00000000005092e4 : cwde ; loope 0x509322 ; je 0x50932e ; ret
0x00000000004b8b9c : cwde ; mov dword ptr [rdx + 0xc], 0x10325476 ; ret
0x00000000004a08cd : cwde ; nop ; mov eax, 0x757580 ; ret
0x0000000000551638 : cwde ; or dh, dh ; call qword ptr [rbx]
0x0000000000532d91 : cwde ; out dx, al ; jmp qword ptr [rdx]
0x000000000040612e : cwde ; ret
0x00000000005129c2 : cwde ; ret 0x1955
0x00000000004efa61 : cwde ; ret 0x4f96
0x00000000004f6f6d : cwde ; ret 0x978
0x0000000000502a41 : cwde ; ret 0x98e5
0x000000000053e208 : cwde ; ret 0xfff1
0x0000000000550738 : cwde ; sal ch, 1 ; call rbx
0x00000000004c6e27 : dec byte ptr [rax - 0x75] ; push rsp ; and al, 8 ; call r12
0x00000000004152f3 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rdi] ; mov dh, 0x40 ; jg 0x41528e ; ret 0x4488
0x00000000004965cc : dec byte ptr [rax - 0x77] ; out dx, eax ; call rax
0x000000000049c6bb : dec byte ptr [rax - 0x77] ; out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a64f : dec byte ptr [rax - 0x77] ; ret 0x38e9
0x00000000004965fc : dec byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000463f57 : dec byte ptr [rax - 0x77] ; ret 0x894c
0x000000000050ce50 : dec byte ptr [rcx + 0x543a2a6f] ; ret 0x5ec7
0x000000000041d41e : dec byte ptr [rdi - 0x27760002] ; pop rbx ; ret
0x000000000047980e : dec byte ptr [rdi] ; mov dh, 0xb7 ; ret 0x51
0x00000000004b9557 : dec dword ptr [r8 + 0x39] ; xlatb ; jne 0x4b9550 ; ret
0x000000000046eb0d : dec dword ptr [rax + 0x39] ; ret
0x00000000004b9558 : dec dword ptr [rax + 0x39] ; xlatb ; jne 0x4b954f ; ret
0x00000000004491b3 : dec dword ptr [rax + 0x63] ; adc ebx, dword ptr [rbx + 0x48] ; xor eax, edx ; ret
0x0000000000409a12 : dec dword ptr [rax + 0x63] ; ret
0x00000000004a56b4 : dec dword ptr [rax + 0x63] ; shr al, cl ; ret
0x000000000046d703 : dec dword ptr [rax + 1] ; ret
0x0000000000454dc2 : dec dword ptr [rax + 1] ; ret 0x8948
0x000000000045bdd9 : dec dword ptr [rax + 9] ; ror byte ptr [rax - 0x77], 1 ; ret 0xf748
0x00000000004eee43 : dec dword ptr [rax - 0x56] ; mov dh, 0x89 ; ret 0xa79c
0x00000000004c2826 : dec dword ptr [rax - 0x73] ; add byte ptr gs:[rbp - 0xd], bl ; ret
0x00000000004b716a : dec dword ptr [rax - 0x73] ; je 0x4b719b ; and byte ptr [rax - 0x77], cl ; ret
0x00000000004b71d6 : dec dword ptr [rax - 0x73] ; je 0x4b7207 ; and byte ptr [rax - 0x77], cl ; ret
0x0000000000465e9a : dec dword ptr [rax - 0x73] ; jl 0x465ecb ; adc al, ch ; jmp 0x465e6e
0x0000000000465fd7 : dec dword ptr [rax - 0x73] ; jl 0x466008 ; xor al, ch ; outsb dx, byte ptr [rsi] ; ret
0x00000000004663e5 : dec dword ptr [rax - 0x73] ; jl 0x466415 ; add al, 0x89 ; ret 0x8944
0x000000000048cc59 : dec dword ptr [rax - 0x73] ; jl 0x48cc8a ; and byte ptr [rax - 0x77], cl ; ret
0x00000000004b58f4 : dec dword ptr [rax - 0x73] ; jl 0x4b5925 ; adc byte ptr [rax - 0x77], cl ; ret 0x50be
0x000000000040613b : dec dword ptr [rax - 0x75] ; add al, 0xfd ; sbb dword ptr [rbp], ecx ; ret
0x00000000004431ab : dec dword ptr [rax - 0x75] ; add al, 0xfd ; shr byte ptr [rcx + 0x75], 0 ; ret
0x00000000004c71e5 : dec dword ptr [rax - 0x75] ; and al, 0x18 ; call rax
0x00000000004c5d88 : dec dword ptr [rax - 0x75] ; and al, 0x28 ; call rax
0x0000000000461d5b : dec dword ptr [rax - 0x75] ; and al, 8 ; jmp 0x461d2c
0x0000000000401de0 : dec dword ptr [rax - 0x75] ; clc ; leave ; ret
0x000000000047e8a2 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000437544 : dec dword ptr [rax - 0x75] ; jl 0x437575 ; or byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004510bd : dec dword ptr [rax - 0x75] ; jl 0x4510ee ; sbb byte ptr [rax - 0x77], cl ; ret 0x57be
0x000000000046dd86 : dec dword ptr [rax - 0x75] ; jl 0x46ddb7 ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004ad218 : dec dword ptr [rax - 0x75] ; jl 0x4ad249 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000004491cb : dec dword ptr [rax - 0x75] ; jnp 0x4491dd ; call qword ptr [rax]
0x000000000043c1df : dec dword ptr [rax - 0x75] ; pop r8 ; ret
0x000000000043bfef : dec dword ptr [rax - 0x75] ; push r8 ; ret
0x0000000000447a41 : dec dword ptr [rax - 0x75] ; push rsp ; and al, 8 ; call r14
0x00000000004a0aaf : dec dword ptr [rax - 0x75] ; ret
0x000000000047f95e : dec dword ptr [rax - 0x75] ; xor byte ptr [rax - 0x77], cl ; ret
0x000000000044b831 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000041a8bb : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045ba22 : dec dword ptr [rax - 0x77] ; fild word ptr [rbx - 0x76b7fe20] ; ret 0xdfe8
0x000000000043f9e3 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; call r14
0x000000000043f99c : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x0000000000489cce : dec dword ptr [rax - 0x77] ; fucompi st(0) ; pop rcx ; ret
0x000000000049c5d5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xf6f5
0x00000000004387a5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc9a
0x0000000000471caf : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x000000000046603c : dec dword ptr [rax - 0x77] ; out dx, eax ; xor ebp, ebp ; call 0x402298
0x000000000046dcc3 : dec dword ptr [rax - 0x77] ; pop rsp ; and al, 0x10 ; call r12
0x0000000000405de5 : dec dword ptr [rax - 0x77] ; ret
0x0000000000487642 : dec dword ptr [rax - 0x77] ; ret 0x1b8
0x0000000000424a22 : dec dword ptr [rax - 0x77] ; ret 0x2b48
0x0000000000482341 : dec dword ptr [rax - 0x77] ; ret 0x35b8
0x0000000000406e62 : dec dword ptr [rax - 0x77] ; ret 0x485b
0x0000000000407168 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000458920 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x00000000004bd708 : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x00000000004bd6f8 : dec dword ptr [rax - 0x77] ; ret 0xebe9
0x00000000004bd700 : dec dword ptr [rax - 0x77] ; ret 0xfde9
0x0000000000453f03 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004471f4 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 2
0x000000000041fdb7 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000040e0a0 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x000000000043f829 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0x7d80
0x00000000004847b2 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret
0x000000000043bd85 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rbx + 0x48], 0x89 ; ret
0x0000000000489a8d : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rcx*2 + 0x48], 0x89 ; ret
0x00000000004895cd : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rdi + 0x48], 0x89 ; ret 0xc031
0x000000000046e34f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rax*2 + 0x48], 0x89 ; ret
0x00000000004235cf : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x89 ; ret 0x8948
0x00000000004509cf : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi + 0x48], 0x89 ; ret
0x000000000041c5f2 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rbx*2 + 0x48], 0x89 ; ret
0x0000000000477e09 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rcx*2 + 0x48], 0x89 ; ret
0x00000000004843c3 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000048b28b : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rdi*2 + 0x48], 0x89 ; ret
0x000000000046e220 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rax*2 + 0x48], 0x89 ; ret
0x000000000048ab80 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rsi*2 + 0x48], 0x89 ; ret
0x00000000004a0114 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + 0x48], 0x89 ; ret
0x000000000046834d : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rdi + 0x48], 0x89 ; ret
0x0000000000450ab6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000446367 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000047ebe4 : dec dword ptr [rax - 0x7d] ; js 0x47ec01 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000481bb9 : dec dword ptr [rax - 0x7d] ; js 0x481bd6 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048892c : dec dword ptr [rax - 0x7d] ; js 0x488971 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040b885 : dec dword ptr [rax - 0x7d] ; ret
0x000000000040becc : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x0000000000477439 : dec dword ptr [rax - 0x7d] ; ret 0x8301
0x00000000004c21af : dec dword ptr [rax - 0x7d] ; ret 0xf06
0x00000000004c25eb : dec dword ptr [rax - 0x7d] ; ret 0xf08
0x0000000000454f6b : dec dword ptr [rax - 0x7f] ; ret
0x000000000041214f : dec dword ptr [rbp + 0x29] ; ror dword ptr [rcx - 0x39], cl ; ret 0
0x0000000000460e90 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ab416 : dec dword ptr [rbp - 0x7b] ; in al, 0xf ; xchg eax, esp ; ret 0x93eb
0x000000000047be42 : dec dword ptr [rbx + 0x48082444] ; add esp, 0x18 ; ret
0x0000000000420645 : dec dword ptr [rbx + 0xf14247c] ; lahf ; ret 0xb60f
0x00000000004aaa93 : dec dword ptr [rbx + rcx*4 + 0xc] ; and al, 0x89 ; ret
0x000000000043ff35 : dec dword ptr [rbx - 0x76ebdbac] ; ret
0x000000000040e9f9 : dec dword ptr [rbx - 0x76f3dbbc] ; ret
0x0000000000499cfa : dec dword ptr [rbx - 0x7cf7dbac] ; ret 0x3901
0x000000000040dca1 : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x0000000000450a8b : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000004b042e : dec dword ptr [rcx + rcx*4 - 0x11] ; mov rsi, rax ; call r12
0x00000000004b028d : dec dword ptr [rcx + rcx*4 - 0x12] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000041c667 : dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b26b9 : dec dword ptr [rcx + rdi + 0x68] ; or byte ptr [rcx + rdi - 0x7d], dh ; ret
0x000000000052ecbb : dec dword ptr [rcx + rdi*4 + 0xa840002] ; stc ; jmp rsp
0x000000000052bb83 : dec dword ptr [rcx + rsi*4] ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004ab2d2 : dec dword ptr [rcx - 0x3b7cb728] ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000414c5a : dec dword ptr [rcx - 0x73] ; and dh, bl ; ret
0x000000000044e503 : dec dword ptr [rcx - 0x75] ; jl 0x44e534 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000489449 : dec dword ptr [rcx - 0x75] ; jl 0x48947a ; sbb byte ptr [rax - 0x77], cl ; ret 0xde89
0x00000000004894d9 : dec dword ptr [rcx - 0x75] ; jl 0x48950a ; xor byte ptr [rax - 0x77], cl ; ret 0xde89
0x0000000000478107 : dec dword ptr [rcx - 0x75] ; push rbp ; or byte ptr [rax + 0x63], cl ; ret
0x00000000004530ec : dec dword ptr [rcx - 0x77] ; ret
0x000000000043eb5c : dec dword ptr [rcx - 0x7a25083e] ; fisttp dword ptr [rdi] ; ret 0xc35b
0x00000000004a47bf : dec dword ptr [rdi] ; mov dh, 0x57 ; cmp dh, dh ; ret
0x0000000000453908 : dec dword ptr [rdi] ; mov esi, 0x9c001c0 ; ret 0xc031
0x00000000004c1c73 : dec dword ptr [rdi] ; push rdi ; shl byte ptr [rsi + 0xf], 0xef ; leave ; ret
0x0000000000448af7 : dec dword ptr [rdi] ; ret 0x4430
0x0000000000437ed9 : dec dword ptr [rdi] ; ret 0xf631
0x000000000049a33c : dec dword ptr [rdi] ; ret 0xf8c1
0x000000000052b303 : dec dword ptr [rsp + rax*4 + 0x2c040001] ; hlt ; call rsp
0x0000000000418bf8 : dec eax ; jne 0x418be8 ; vzeroupper ; ret
0x0000000000416ac8 : dec ecx ; jne 0x416a09 ; ret
0x0000000000416bb5 : dec ecx ; jne 0x416b09 ; ret
0x0000000000417032 : dec ecx ; jne 0x417025 ; ret
0x0000000000417156 : dec ecx ; jne 0x4170c9 ; ret
0x0000000000401dc0 : dec ecx ; ret
0x000000000052d6bb : dec esp ; add al, byte ptr [rax] ; xchg eax, esp ; sub al, 0xf7 ; jmp rsp
0x000000000052d39b : dec esp ; add al, byte ptr cs:[rax] ; push rsp ; jge 0x52d3a1 ; jmp rsp
0x000000000052a693 : dec esp ; add dword ptr ds:[rax], eax ; sub esi, edx ; jmp rsp
0x000000000052ad4b : dec esp ; add dword ptr gs:[rax], eax ; add al, 0x85 ; jmp rsp
0x000000000052a513 : dec esp ; add dword ptr ss:[rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; adc dh, dl ; jmp rsp
0x000000000052cbab : dec esp ; add eax, 0xe2440002 ; cmc ; jmp rsp
0x000000000052a8bb : dec esp ; add qword ptr [r8], rax ; xchg eax, esp ; movsxd rsi, edx ; jmp rsp
0x000000000052c8fb : dec esp ; clc ; add dword ptr [rax], eax ; add al, 0xb3 ; cmc ; jmp rsp
0x000000000052c543 : dec esp ; in eax, 1 ; add byte ptr [rbp + rsi*2 - 0xb], al ; jmp rsp
0x0000000000528033 : dec esp ; je 0x52803f ; add byte ptr [rcx + rbp*4 - 0x13], dl ; jmp rsp
0x000000000052df63 : dec esp ; jne 0x52df71 ; add byte ptr [rdx + rax], dl ; clc ; jmp rsp
0x000000000052b143 : dec esp ; jnp 0x52b150 ; add ah, dh ; add ah, dh ; jmp rsp
0x00000000005296ab : dec esp ; lock add byte ptr [rax], al ; adc al, 0x27 ; int1 ; jmp rsp
0x000000000052c79b : dec esp ; lock add dword ptr [rax], eax ; hlt ; xchg eax, esi ; cmc ; jmp rsp
0x000000000052e9f3 : dec esp ; lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; add al, 0xe8 ; clc ; jmp rsp
0x000000000052ec43 : dec esp ; mov bh, 2 ; add byte ptr [rbx + rax - 7], ah ; jmp rsp
0x000000000052848b : dec esp ; mov dword ptr [rax], eax ; add ah, dl ; int1 ; in eax, dx ; jmp rsp
0x0000000000528cc3 : dec esp ; mov ebp, 0x80a40000 ; out dx, eax ; jmp rsp
0x000000000052bd73 : dec esp ; mov esi, 0x10640001 ; cmc ; jmp rsp
0x0000000000528cfb : dec esp ; mov esi, 0x83440000 ; out dx, eax ; jmp rsp
0x000000000052ab83 : dec esp ; pop rdx ; add dword ptr [rax], eax ; hlt ; sal dl, 1 ; jmp rsp
0x000000000052db6b : dec esp ; pop rsi ; add al, byte ptr [rax] ; test al, 0xf7 ; jmp rsp
0x0000000000529043 : dec esp ; retf ; add byte ptr [rax], al ; xchg eax, esp ; stosb byte ptr [rdi], al ; out dx, eax ; jmp rsp
0x0000000000528d9b : dec esp ; rol dword ptr [rax], 0 ; push rsp ; xchg eax, ebp ; out dx, eax ; jmp rsp
0x000000000052c15b : dec esp ; rol dword ptr [rcx], 1 ; add ah, ah ; cmp ch, dh ; jmp rsp
0x000000000052e71b : dec esp ; sahf ; add al, byte ptr [rax] ; mov ah, 0xb9 ; clc ; jmp rsp
0x0000000000529feb : dec esp ; sbb eax, dword ptr [rcx] ; add byte ptr [rcx + rdi*4], ah ; int1 ; jmp rsp
0x000000000052d35b : dec esp ; sub al, 2 ; add byte ptr [rbx + rbp*2 - 0xa], ah ; jmp rsp
0x000000000052a353 : dec esp ; sub eax, 0xf8540001 ; int1 ; jmp rsp
0x000000000052e673 : dec esp ; wait ; add al, byte ptr [rax] ; and al, 0xb3 ; clc ; jmp rsp
0x0000000000417031 : dec r9d ; jne 0x417026 ; ret
0x0000000000401dbf : dec r9d ; ret
0x00000000004c1d55 : div bl ; ret
0x0000000000420054 : div byte ptr [rbp + 0x69] ; call rax
0x00000000004456f1 : div byte ptr [rbp + 0xc] ; mov eax, 1 ; ret
0x0000000000420981 : div byte ptr [rbp + 0xc] ; ret
0x000000000041e25d : div byte ptr [rbp - 0x16] ; ret
0x0000000000424247 : div byte ptr [rbp - 0xa] ; mov eax, edx ; ret
0x0000000000480d02 : div byte ptr [rbx + rbx - 0x18] ; push rsi ; call 0xffffffffc2d20d10
0x0000000000447a3f : div byte ptr [rcx] ; dec dword ptr [rax - 0x75] ; push rsp ; and al, 8 ; call r14
0x000000000046e56a : div byte ptr [rdi + rbx*2 - 0x77] ; ret
0x000000000047d8e8 : div byte ptr [rdx + rdx - 0x41] ; stosb byte ptr [rdi], al ; ret
0x000000000050209f : div byte ptr [rsi - 0x65] ; leave ; ret 0xbe97
0x000000000050e0f3 : div byte ptr [rsp + rax*2 + 0x17] ; in al, 0x34 ; add al, ah ; ret
0x000000000047d721 : div byte ptr [rsp + rbx*4 - 0x41] ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004a769a : div ch ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b4130 : div dh ; ret 0xf02
0x000000000040db35 : div dword ptr [rax + rdx - 0x18] ; ret
0x000000000044b462 : div dword ptr [rbx + rcx + 0x48] ; add esp, 8 ; jmp rdx
0x0000000000511a1f : div eax ; push rbp ; and byte ptr [rdx + 0x44], dl ; outsb dx, byte ptr [rsi] ; xchg eax, ebp ; ret
0x000000000040ff7a : div ecx ; ret
0x00000000004f5566 : div ecx ; ret 0xa995
0x0000000000485eab : div edi ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000052d559 : div esi ; call rsp
0x000000000040ff79 : div rcx ; ret
0x00000000004ca3ad : enter -0x163b, -0x11 ; rol esp, 1 ; ret
0x0000000000418bf9 : enter -0x1b8b, -0x3b ; clc ; ja 0x418bfa ; ret
0x000000000042a6a0 : enter -0x2a3b, -0x11 ; jmp 0xffffffffc431e476
0x000000000042791e : enter -0x3acf, -0x3f ; ret 0x6605
0x0000000000402c38 : enter -0x3fe7, -0x7d ; loopne 0x402c49 ; sub eax, 1 ; ret
0x0000000000402ca2 : enter -0x3fe7, -0x7d ; loopne 0x402cb3 ; sub eax, 1 ; ret
0x0000000000500cf3 : enter -0x51af, 0x7c ; sti ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x0000000000516720 : enter -0x5811, -0x15 ; fcomp qword ptr [rbx - 0x61] ; ret 0xbf2e
0x00000000004fc435 : enter -0x6afb, -0x7c ; ret 0x1b6e
0x00000000005070f1 : enter -0x6f25, -0x2e ; ret
0x00000000004bcbb5 : enter -0x76bf, 0x13 ; mov dword ptr [r11 + 4], eax ; ret
0x00000000004bc1a1 : enter -0x76fd, 0x17 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004c564f : enter -0x77bf, 0x14 ; sbb al, 0x89 ; ret
0x000000000040fd72 : enter -0x8b8, 0x66 ; or byte ptr [rcx + 1], cl ; ret 0x8348
0x000000000050209d : enter -0x9f9, 0x76 ; wait ; leave ; ret 0xbe97
0x000000000049fbde : enter -0xfc7, -0x77 ; ret
0x00000000004710f3 : enter -6, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000045220b : enter 0, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000401ecc : enter 0, 0 ; pop rbx ; pop rbp ; ret
0x0000000000422260 : enter 0, 0 ; ret
0x000000000053b88d : enter 0, 0x60 ; loopne 0x53b889 ; call qword ptr [rsi]
0x0000000000503350 : enter 0x19a2, -0x7c ; ret
0x00000000004b752c : enter 0x2a2b, 0 ; add rsp, 8 ; ret
0x00000000005001de : enter 0x2d87, -0xf ; out dx, al ; ret 0x89e3
0x000000000041d0e4 : enter 0x33, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041d0f4 : enter 0x33, 0x48 ; test eax, eax ; je 0x41d108 ; ret
0x00000000004068d3 : enter 0x3948, -0x29 ; jne 0x4068c9 ; movzx eax, al ; ret
0x00000000004274a0 : enter 0x3a0f, -0x34 ; ret 0x4103
0x00000000004272e4 : enter 0x3a0f, -0x34 ; ret 0xf00
0x0000000000427348 : enter 0x3a0f, -0x34 ; ret 0xf01
0x00000000004273de : enter 0x3a0f, -0x34 ; ret 0xf02
0x0000000000427442 : enter 0x3a0f, -0x34 ; ret 0xf03
0x00000000004fe23e : enter 0x405a, -0xc ; insb byte ptr [rdi], dx ; ret
0x000000000047a384 : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004ca514 : enter 0x41c4, 0x29 ; out dx, eax ; rol esp, cl ; ret
0x0000000000425684 : enter 0x4489, 0x15 ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004eb918 : enter 0x4eae, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000005134f2 : enter 0x57e9, 0x4c ; ret
0x0000000000518ed2 : enter 0x5ece, -8 ; ret 0xe28e
0x00000000004f6763 : enter 0x6f88, -0x22 ; outsd dx, dword ptr [rsi] ; ret
0x000000000049347e : enter 0x7544, -0x3e ; mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x00000000004f0b42 : enter 0x7df0, 0x4a ; jbe 0x4f0b51 ; and dl, r15b ; ret
0x00000000004a5a69 : enter 0xc76, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000420d84 : enter 0xf66, 0x28 ; sal edx, 0xf ; ret 0x7e05
0x00000000004987c7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000405d8c : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000047c23a : fadd dword ptr [rbp + 0x31] ; in eax, dx ; jmp 0x47c24a
0x000000000047c239 : fadd dword ptr [rbp + 0x31] ; in eax, dx ; jmp 0x47c24b
0x00000000004f72ec : fadd dword ptr [rcx + 0x208dfdd7] ; sub al, 0x5d ; ret
0x0000000000515e62 : fadd dword ptr [rsi] ; cmp cl, dh ; ret 0x898
0x0000000000517de4 : fadd qword ptr [rax + rbp - 0x3677a4a0] ; ret 0x90cf
0x00000000004b8e55 : fadd qword ptr [rcx - 0x77] ; ret
0x000000000052c3d5 : fadd qword ptr [rcx] ; add ah, ah ; push rcx ; cmc ; jmp rsp
0x0000000000550488 : fadd st(1) ; cmc ; jmp rsi
0x00000000004b8e39 : fadd st(1), st(0) ; ret 0x109
0x000000000052be94 : fadd st(3), st(0) ; add dword ptr [rax], eax ; and ebp, esi ; push rsp ; ret
0x000000000042ec8f : fadd st(4), st(0) ; jnp 0x42ec8c ; jmp 0x42ecb7
0x000000000042efa2 : fadd st(4), st(0) ; jnp 0x42ef9f ; jmp 0x42efca
0x000000000042f310 : fadd st(4), st(0) ; jnp 0x42f30d ; jmp 0x42f338
0x00000000004ca4d3 : fadd st(4), st(0) ; ret
0x0000000000417609 : fadd st(4), st(0) ; sub eax, 0xc44071f4 ; ret 0x597d
0x00000000004284ae : fadd st(5) ; cmp edi, ebp ; ret
0x0000000000427968 : faddp st(1) ; ret
0x0000000000515e20 : fbld dword ptr [rsi] ; ret 0x4d11
0x000000000047c7f8 : fbstp dword ptr [rcx] ; in eax, dx ; call rax
0x00000000004b9089 : fcmovb st(0), st(1) ; ret 0x410b
0x00000000004b8c21 : fcmovb st(0), st(1) ; ret 0x410c
0x0000000000432f31 : fcmovb st(0), st(4) ; ret
0x0000000000503b66 : fcmovb st(0), st(7) ; mov dr0, word ptr [rcx - 0x13] ; stc ; ret
0x000000000050e3e7 : fcmovbe st(0), st(1) ; ret 0x13e6
0x000000000050ff2a : fcmovbe st(0), st(3) ; std ; ret 0x488a
0x00000000004b8c61 : fcmovnb st(0), st(1) ; ret
0x00000000005064fd : fcmovu st(0), st(2) ; adc al, 0xd1 ; mov al, 0xf6 ; jle 0x50652e ; ret
0x0000000000551a48 : fcom dword ptr [rsi + rsi*8] ; call qword ptr [rcx]
0x0000000000510f11 : fcom qword ptr [rax - 0x4a] ; xchg eax, edx ; ret 0x54c
0x00000000004f8b21 : fcom qword ptr [rbp - 0x47] ; ret
0x00000000004f4c0a : fcom qword ptr [rbx - 0x7c] ; add al, 0xe7 ; jmp qword ptr [rdi]
0x000000000053b5e9 : fcomi st(0) ; call qword ptr [rbx]
0x000000000053b591 : fcomi st(0) ; call qword ptr [rdx]
0x000000000053b561 : fcomi st(0) ; jmp qword ptr [rbx]
0x000000000052dd29 : fcomi st(7) ; jmp rsp
0x000000000051685d : fcomp dword ptr [r9] ; lahf ; xor al, 0x4d ; sbb al, 0xc5 ; ret
0x0000000000406890 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042243d : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004020ab : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000404332 : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041a01b : fcomp dword ptr [rbx - 0x3d] ; nop ; mov rax, rsi ; ret
0x0000000000439bdd : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004f92fb : fcomp dword ptr [rcx + 0x3b079b54] ; ret 0x2c1
0x000000000051685e : fcomp dword ptr [rcx] ; lahf ; xor al, 0x4d ; sbb al, 0xc5 ; ret
0x00000000005129bb : fcomp dword ptr [rdx] ; xchg r8b, sil ; je 0x512983 ; cwde ; ret 0x1955
0x000000000051685c : fcomp dword ptr cs:[r9] ; lahf ; xor al, 0x4d ; sbb al, 0xc5 ; ret
0x0000000000516724 : fcomp qword ptr [rbx - 0x61] ; ret 0xbf2e
0x0000000000548cb4 : fcomp qword ptr [rcx + rax - 0xc16d800] ; call qword ptr [rcx]
0x00000000004b7d20 : fcomp qword ptr [rdx - 0x3a7c000c] ; add dword ptr [rax - 0x7f], ecx ; ret
0x00000000005160fc : fcomp st(0), st(1) ; ret
0x0000000000515a5a : fcomp st(0), st(4) ; sub byte ptr [rcx + 0x64], 0x4c ; ret
0x00000000004fead5 : fcomp st(0), st(7) ; mov dword ptr [rax - 0x55], eax ; ret 0x435d
0x00000000004c14f0 : fcompi st(0) ; aesdeclast xmm7, xmm0 ; ret
0x00000000005417d9 : fcompi st(2) ; call qword ptr [rax]
0x000000000052cac1 : fcompi st(5) ; jmp rsp
0x000000000052de29 : fcompi st(7) ; jmp rsp
0x000000000048768c : fcompi st(7) ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000051192b : fcompp ; salc ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x00000000004f7aa3 : fdiv dword ptr [rax + rdi] ; ret 0xa070
0x000000000054ebe8 : fdiv dword ptr [rax - 0xb] ; call qword ptr [rsi]
0x000000000046e309 : fdiv dword ptr [rbp + 0x10] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000048f580 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040763c : fdiv dword ptr [rbp + 0x1f] ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004790c4 : fdiv dword ptr [rbp + 0x39] ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004ae04d : fdiv dword ptr [rbp + 0x3b] ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000407230 : fdiv dword ptr [rbp + 0x51] ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000478d64 : fdiv dword ptr [rbp + 0x5e] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000043d573 : fdiv dword ptr [rbp + 0xe] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046e1e3 : fdiv dword ptr [rbp + 0xe] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000042581a : fdiv dword ptr [rbp + 6] ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000054d8c8 : fdiv dword ptr [rdi] ; cmc ; call qword ptr [rbx]
0x00000000004fb036 : fdiv dword ptr [rsi + 0x2d] ; test dword ptr [rsi + 0x24], eax ; inc r13d ; jmp rsi
0x00000000004be104 : fdiv qword ptr [rbp + 0x1e775f36] ; popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x00000000004f7182 : fdiv qword ptr [rbx + rax*2 - 0x6e] ; ret
0x00000000005327b4 : fdiv qword ptr [rdi] ; add byte ptr [rax], al ; clc ; jp 0x5327b0 ; call qword ptr [rsi]
0x000000000041895b : fdiv st(3) ; ret
0x00000000004aa6b4 : fdiv st(6) ; ret
0x0000000000502a3f : fdivp st(7) ; cwde ; ret 0x98e5
0x0000000000503b98 : fdivr dword ptr [rcx] ; ret 0xafd3
0x0000000000552cb4 : fdivr qword ptr [rdx + rax] ; add al, cl ; cmp esi, esi ; jmp qword ptr [rbx]
0x000000000053b681 : fdivr st(0), st(0) ; call qword ptr [rdx]
0x00000000004bded3 : fdivr st(3), st(0) ; movq qword ptr [r8], mm6 ; ret
0x0000000000550b79 : fdivr st(5), st(0) ; jmp rsi
0x000000000050ce4f : fdivr st(6) ; mov dword ptr [rdi + 0x2a], ebp ; cmp dl, byte ptr [rdx + rcx*2 + 0x26] ; ret 0x5ec7
0x00000000005105e1 : fdivr st(6) ; ret
0x00000000004c4661 : fdivr st(7) ; pxor xmm2, xmm3 ; ret
0x000000000052dd79 : fdivr st(7), st(0) ; call rsp
0x0000000000500fcf : fdivrp st(2) ; ret 0xa5e5
0x00000000005487e9 : fdivrp st(3) ; jmp qword ptr [rdi]
0x0000000000487776 : fdivrp st(7) ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004c15ff : ffree st(0) ; aesenclast xmm9, xmm0 ; ret
0x000000000050be48 : ffree st(2) ; or eax, 0xcb2412ea ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x00000000004fa644 : ffree st(7) ; ret 0x4823
0x000000000043eb60 : fiadd dword ptr [rbp - 0x3dbaf025] ; pop rbx ; ret
0x000000000043f358 : fiadd dword ptr [rbp - 0x7b] ; ror byte ptr [rax + 0xf], 0x45 ; ret 0xfc3
0x00000000004a7a7c : fiadd dword ptr [rcx + 0x39] ; fmul qword ptr [rdi] ; ret 0x8348
0x00000000004a1e26 : fiadd word ptr [rbp + 1] ; cld ; call rax
0x000000000050e85f : fiadd word ptr [rbx - 0x74125028] ; ret 0x5f1
0x000000000054cead : fiadd word ptr [rcx] ; add al, dl ; sub ch, dh ; call rcx
0x000000000052c405 : fiadd word ptr [rcx] ; add byte ptr [rbx + rbx*2 - 0xb], dl ; call rsp
0x0000000000515685 : ficom dword ptr [rbp + 0x7ad03ee0] ; ret
0x00000000005064fe : ficom dword ptr [rcx + rdx*8] ; mov al, 0xf6 ; jle 0x50652d ; ret
0x00000000005115b6 : ficom dword ptr [rip - 0x28f829be] ; sub bl, bh ; ret
0x0000000000508be4 : ficomp dword ptr [rbp - 0x72c48314] ; in al, dx ; ret
0x0000000000515e1c : fidiv word ptr [rbx + 0x26df5e2a] ; ret 0x4d11
0x000000000042ac69 : fidiv word ptr [rcx] ; mov dword ptr [rcx - 0x3f], 0x894106cd ; ret 0x2141
0x0000000000504fdb : fidiv word ptr [rsp + rsi*8] ; ret 0xfa73
0x0000000000407469 : fidivr dword ptr [rcx] ; ret 0x8c0f
0x0000000000505d8a : fidivr dword ptr [rdi + 0xb] ; sbb bh, al ; ret
0x0000000000517301 : fidivr dword ptr [rdi] ; jmp 0xffffffff9b70359e
0x0000000000501a45 : fidivr dword ptr [rsi + 0x525d329b] ; ret
0x00000000005013e0 : fidivr dword ptr [rsp + rcx*8 - 0x1ea1953e] ; add eax, esp ; ret
0x00000000004aebfc : fidivr word ptr [rdi + 1] ; call r14
0x00000000004400d9 : fidivr word ptr [rdi + 7] ; call rax
0x0000000000515c91 : fidivr word ptr [rip + 0x25c65510] ; ret 0xf7ea
0x00000000004ece83 : fidivr word ptr [rsp + rcx*8 + 1] ; leave ; ret
0x00000000004ee9ff : fild dword ptr [rbx + rbx*4] ; push rax ; ret
0x00000000004913da : fild dword ptr [rcx + rsi - 0x1f] ; xor edx, r8d ; ret
0x00000000004b8c27 : fild dword ptr [rcx] ; ret 0x3141
0x00000000004b9275 : fild dword ptr [rcx] ; ret 0x8d42
0x00000000004fbdf8 : fild dword ptr [rdi - 0x2ac2cdfb] ; adc al, 0x62 ; ret
0x00000000004fef2e : fild word ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x4fef6f ; ret 0xc109
0x000000000045ba25 : fild word ptr [rbx - 0x76b7fe20] ; ret 0xdfe8
0x000000000054cf7d : fild word ptr [rcx] ; add al, dl ; sub dh, ch ; jmp rcx
0x000000000054cefd : fild word ptr [rcx] ; add byte ptr [rax + 0x29], ah ; cmc ; jmp rdi
0x00000000004f7cce : fild word ptr [rcx] ; clc ; out dx, eax ; ret
0x0000000000441623 : fimul dword ptr [rax + 1] ; ret 0x148
0x00000000004ab7f2 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov rdi, r12 ; call rax
0x000000000040e670 : fimul dword ptr [rax - 0x7d] ; ret
0x00000000004bdd8b : fimul dword ptr [rax - 0x7d] ; ret 0x66f0
0x00000000004f95c7 : fimul dword ptr [rbx - 0x64917cf1] ; call qword ptr [rdi]
0x00000000004f9e3c : fimul dword ptr [rbx] ; cli ; int1 ; adc ch, dh ; ret
0x000000000043f9e6 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; call r14
0x000000000045a272 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rcx ; call r15
0x00000000004960c0 : fimul dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call rcx
0x00000000004ecca5 : fimul dword ptr [rcx - 0x3f37810b] ; call rdi
0x00000000004c9e63 : fimul dword ptr [rcx - 0x7d] ; ret 0x4860
0x00000000004afe96 : fimul word ptr [rax - 0x75] ; and al, 0x20 ; call rax
0x000000000043c269 : fimul word ptr [rax - 0x75] ; jl 0x43c29a ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000043c5c9 : fimul word ptr [rax - 0x75] ; jl 0x43c5fa ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004954bd : fimul word ptr [rax - 0x77] ; out dx, eax ; call r14
0x000000000046fafd : fimul word ptr [rax - 0x77] ; out dx, eax ; call rax
0x0000000000421710 : fimul word ptr [rax - 0x77] ; out dx, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000045b2db : fimul word ptr [rax - 0x7f] ; ret
0x000000000051391a : fimul word ptr [rbp + 0x2b] ; jrcxz 0x513902 ; shr dword ptr [rcx + 0x41], 1 ; ret
0x0000000000504ee4 : fimul word ptr [rcx + 0x2e] ; ret 0xeccc
0x00000000004c61e3 : fimul word ptr [rcx + rcx*4 - 0x16] ; call rax
0x000000000043f99f : fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x00000000004f1138 : fimul word ptr [rcx] ; pop rsp ; js 0x4f1167 ; ret 0xc4
0x00000000004fc43d : fistp dword ptr [rax + 0x47d44d99] ; ret 0x89e5
0x0000000000479be1 : fistp dword ptr [rdi - 1] ; dec dword ptr [rax - 0x77] ; ret
0x000000000046c702 : fistp word ptr [rbx + 0x41] ; jmp rcx
0x000000000041d245 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000419ca3 : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; jmp rax
0x000000000049b8b0 : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044b289 : fistp word ptr [rbx - 0x17] ; jo 0x44b253 ; sti ; push rbx ; ret
0x0000000000460e8d : fistp word ptr [rsi - 6] ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000005027a2 : fistp word ptr [rsi] ; out dx, al ; push rax ; ret
0x000000000040821f : fisttp dword ptr [rax - 0x73] ; and al, 8 ; ret
0x000000000040247e : fisttp dword ptr [rax - 0x7d] ; ret
0x000000000049906c : fisttp dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x000000000043eb62 : fisttp dword ptr [rdi] ; ret 0xc35b
0x000000000044067a : fisttp dword ptr [rdi] ; test byte ptr [rdi], ch ; add al, 0 ; add dh, dh ; ret 0xf02
0x000000000049d5b3 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x8348
0x0000000000498ff0 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x000000000040692e : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x854d
0x000000000045a3c1 : fisttp qword ptr [rax + 3] ; sbb al, 0x24 ; mov rdi, rbx ; call rax
0x000000000040b0b3 : fisttp qword ptr [rax - 0x77] ; ret
0x0000000000413005 : fisttp word ptr [rax + 0x11] ; ret
0x00000000004a03c5 : fisttp word ptr [rax - 0x39] ; ret 0xffff
0x0000000000497534 : fisttp word ptr [rax - 0x75] ; and al, 0x20 ; call rax
0x000000000049750e : fisttp word ptr [rax - 0x75] ; and al, 0x20 ; mov rdx, rsi ; call rax
0x00000000004974b8 : fisttp word ptr [rax - 0x75] ; and al, 0x20 ; mov rsi, r15 ; call rax
0x00000000004a1ebe : fisttp word ptr [rax - 0x75] ; and al, 0x30 ; sub rsi, rbx ; call rax
0x000000000045a2fa : fisttp word ptr [rax - 0x75] ; and al, 0x38 ; call rax
0x000000000045a1e6 : fisttp word ptr [rax - 0x75] ; and al, 8 ; call rax
0x00000000004c73ac : fisttp word ptr [rax - 0x75] ; push rsp ; and al, 8 ; call r15
0x00000000004691db : fisttp word ptr [rax - 0x77] ; ret 0x318b
0x000000000043470f : fisttp word ptr [rax - 0x77] ; ret 0x57be
0x0000000000462dc5 : fisttp word ptr [rax - 0x77] ; ret 0x6be
0x00000000004672a5 : fisttp word ptr [rax - 0x77] ; ret 0x74be
0x0000000000450465 : fisttp word ptr [rax - 0x77] ; ret 0x98be
0x0000000000411942 : fisttp word ptr [rax - 0x77] ; ret 0xc148
0x000000000041de28 : fisttp word ptr [rax - 0x7b] ; leave ; jne 0x41dde0 ; mov rdx, rax ; jmp 0x41de05
0x0000000000404ce1 : fisttp word ptr [rax - 0x7d] ; ret
0x0000000000512309 : fisttp word ptr [rbp - 0x6c] ; sahf ; ret 0x667b
0x00000000004c54d4 : fisttp word ptr [rbp - 0x77] ; call 0x493dde31
0x00000000004975d6 : fisttp word ptr [rbx + rcx*4 + 0x54] ; and al, 0x20 ; call r10
0x0000000000412f18 : fisttp word ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rax + 0x11], cl ; ret
0x0000000000412e84 : fisttp word ptr [rbx + rcx*4 + 0x5f] ; sub byte ptr [rax + 0x11], cl ; ret
0x00000000004ff8dc : fisttp word ptr [rbx] ; ret 0x1bbc
0x00000000005160f9 : fisttp word ptr [rcx] ; sub esi, ebx ; sar dword ptr [rsi], 1 ; ret
0x00000000004152f6 : fisttp word ptr [rdi] ; mov dh, 0x40 ; jg 0x41528b ; ret 0x4488
0x00000000004f1d42 : fisub dword ptr [rax + rdx*8 - 0x7cfda89d] ; ret 0x2d4f
0x000000000050431e : fisub word ptr [rax + 0x4c] ; ret
0x00000000004ff560 : fisub word ptr [rbp + 0x402093b8] ; ret 0xa6f2
0x00000000004280b2 : fisub word ptr [rsi + 0xf] ; jg 0x4280c2 ; and al, 0xc1 ; ret
0x0000000000500a93 : fisubr dword ptr [r9 - 0x39] ; test al, 0xdf ; insb byte ptr [rdi], dx ; ret
0x00000000005013cf : fisubr dword ptr [rbp - 0x7d] ; in eax, -0x47 ; ret 0xae59
0x00000000004ffa45 : fisubr dword ptr [rbx + 0x38] ; js 0x4ffa92 ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x0000000000500a94 : fisubr dword ptr [rcx - 0x39] ; test al, 0xdf ; insb byte ptr [rdi], dx ; ret
0x000000000049ea60 : fisubr dword ptr [rcx] ; ret 0xd285
0x0000000000511755 : fisubr dword ptr [rdi - 0x5f] ; pop rax ; sbb edi, ecx ; jmp qword ptr [rsi]
0x00000000005145c0 : fisubr dword ptr [rdx + rbp*8 + 0x40b6de34] ; ret 0xf1de
0x00000000004ff207 : fisubr dword ptr [rsi - 0x39] ; rcl eax, cl ; cmp al, 0x9e ; ret 0x64d4
0x0000000000512bb9 : fisubr dword ptr [rsi - 0x3d] ; push rdi ; and byte ptr [rcx - 0x3d], al ; hlt ; ret 0x64d9
0x00000000004fbc1f : fisubr word ptr [rsi - 0x4d] ; ret 0xaed3
0x00000000004fd684 : fld dword ptr [rbp - 0x40] ; mov ds, word ptr [rax - 0x2e6d2bf2] ; ret
0x000000000051192c : fld dword ptr [rbx - 0x2a] ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x0000000000491b72 : fld dword ptr [rcx - 0x3f] ; ret 0x4d18
0x000000000054c915 : fld dword ptr [rcx] ; add byte ptr [rax - 2], bl ; hlt ; call rsp
0x00000000004fa1d1 : fld qword ptr [rax + 0x18bb3f3c] ; out dx, eax ; cmp edx, edi ; ret
0x0000000000448ada : fld qword ptr [rax + 0x878003e] ; ret
0x000000000053cd45 : fld qword ptr [rax] ; add byte ptr [rax], cl ; and dh, cl ; call qword ptr [rdx]
0x000000000053cd5d : fld qword ptr [rax] ; add byte ptr [rax], dl ; and dh, cl ; call qword ptr [rbx]
0x00000000004f09ce : fld qword ptr [rax] ; jg 0x4f0a04 ; and bh, byte ptr [rsi - 0x26] ; xchg eax, ebx ; ret
0x0000000000491b60 : fld qword ptr [rcx - 0x3f] ; ret
0x00000000004c2cdc : fld st(1) ; call 0xffffffffc2d56ded
0x00000000004c347c : fld st(1) ; call 0xffffffffc2d5758d
0x0000000000515cba : fld xword ptr [rax - 0x536b70ed] ; ret
0x00000000004efcf1 : fld xword ptr [rdi] ; mov dl, 0x7d ; sbb eax, 0x85617937 ; ret 0x2c94
0x00000000004fe6fa : fldcw word ptr [rcx - 0x2d704751] ; clc ; push rcx ; ret 0x2a40
0x000000000050b052 : fldcw word ptr [rdx] ; pop rbp ; sbb rax, 0x7a233fff ; ret
0x0000000000511929 : fldenv dword ptr [rbp - 0x22] ; fld dword ptr [rbx - 0x2a] ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x00000000004bdd87 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; fimul dword ptr [rax - 0x7d] ; ret 0x66f0
0x00000000004c443b : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; ret 0xf66
0x00000000004519dc : fmul dword ptr [rax + 0xf] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4828
0x000000000041800d : fmul dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; mov byte ptr [rcx + 1], r9b ; ret
0x0000000000454dd8 : fmul dword ptr [rax + 1] ; ret 0x8948
0x000000000049908e : fmul dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041784d : fmul dword ptr [rax - 0x77] ; ret 0xf49
0x00000000004c348c : fmul dword ptr [rax - 0x7d] ; ret 0xf60
0x00000000004f776e : fmul dword ptr [rbp + 0x58] ; ret 0x2297
0x00000000004aa6a7 : fmul dword ptr [rdi] ; xchg eax, edi ; ret 0x8348
0x0000000000502737 : fmul qword ptr [rax + 0xf138c19] ; ret 0x3453
0x00000000004cf1ac : fmul qword ptr [rax - 0x7d] ; ret
0x000000000052fbb4 : fmul qword ptr [rbx] ; add byte ptr [rax], al ; clc ; push rax ; in eax, dx ; jmp qword ptr [rax]
0x00000000005014cb : fmul qword ptr [rbx] ; sbb eax, ebx ; ret
0x00000000004bd7f6 : fmul qword ptr [rcx - 0x7d] ; ret
0x000000000050fe2d : fmul qword ptr [rdi + 0x5e] ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x00000000004a7a7f : fmul qword ptr [rdi] ; ret 0x8348
0x0000000000511acf : fmul qword ptr [rdx - 0x10] ; jo 0x511b0d ; jnp 0x511b49 ; ret
0x000000000050262b : fmul st(4), st(0) ; ret
0x000000000050d542 : fmul st(7), st(0) ; ret
0x00000000004fe903 : fnsave dword ptr [rbx + 0x2a] ; ret
0x0000000000486b31 : fnstcw word ptr [rsi + 1] ; mov rdi, r12 ; call rax
0x0000000000486f00 : fnstcw word ptr [rsi + 2] ; mov rdi, r12 ; call rax
0x00000000004c8e9c : fnstenv dword ptr [rbx - 0x24] ; or ch, al ; stc ; out dx, eax ; ret
0x0000000000406083 : fnstenv dword ptr [rdi] ; xor eax, 0xc0854800 ; je 0x406099 ; jmp rax
0x0000000000502cc5 : fnstenv dword ptr [rdx] ; ret 0x12a4
0x00000000004c1331 : fnstsw ax ; aesdeclast xmm5, xmm0 ; ret
0x00000000004c121c : fnstsw ax ; ret
0x00000000004ffb23 : fnstsw dword ptr [rcx] ; mov byte ptr [rdx + 0x31], 0xa9 ; ret
0x0000000000516992 : fnstsw dword ptr [rsi + 0x23a4270] ; xor al, 0x5c ; ret
0x00000000005180ab : fnstsw dword ptr [rsi - 0x35] ; ret 0x5f2d
0x0000000000409a0f : fnstsw dword ptr [rsi - 1] ; dec dword ptr [rax + 0x63] ; ret
0x00000000004133f2 : fpatan ; ret
0x0000000000517567 : frstor dword ptr [rdi + 0x7e55ea46] ; ret 0xc2c2
0x0000000000476d7d : frstor dword ptr [rsi - 0x70] ; mov eax, 1 ; ret
0x00000000005123d1 : fst dword ptr [rcx - 0x79a63c10] ; ret
0x00000000004c10d0 : fst st(0) ; aesenclast xmm3, xmm0 ; ret
0x000000000050f21b : fstp dword ptr [r10 - 0x785bbf3b] ; ret
0x0000000000505f7f : fstp dword ptr [rbx - 0x5e] ; ret 0xb5f8
0x000000000050ca58 : fstp dword ptr [rdi - 0x30c43414] ; in eax, 0x4e ; ret
0x000000000050f21c : fstp dword ptr [rdx - 0x785bbf3b] ; ret
0x00000000005084e2 : fstp dword ptr [rip - 0x25b0384b] ; push rbp ; ret 0xcea5
0x0000000000404e8a : fstp qword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004c11a7 : fstp st(0) ; aesenclast xmm4, xmm0 ; ret
0x00000000004c10d5 : fstp st(0) ; ret
0x00000000004c1130 : fstp st(0), st(0) ; aesdeclast xmm3, xmm0 ; ret
0x00000000004c1217 : fstp st(0), st(0) ; aesdeclast xmm4, xmm0 ; ret
0x00000000004c1135 : fstp st(0), st(0) ; ret
0x000000000050ede8 : fstp st(3), st(0) ; xchg eax, esi ; ret
0x00000000004f6fe7 : fstp st(4), st(0) ; ret 0x4b5
0x000000000050c966 : fstp st(7), st(0) ; add ah, cl ; jbe 0x50c950 ; rcr eax, 1 ; ret
0x0000000000513583 : fstp xword ptr [rdx] ; ret
0x0000000000501a42 : fsub dword ptr [r10] ; fidivr dword ptr [rsi + 0x525d329b] ; ret
0x000000000053ef58 : fsub dword ptr [rax - 0xe] ; call qword ptr [rsi]
0x0000000000544dc8 : fsub dword ptr [rbp - 0xd] ; jmp qword ptr [rcx]
0x0000000000508a85 : fsub dword ptr [rcx] ; xlatb ; wait ; call rsp
0x0000000000501a43 : fsub dword ptr [rdx] ; fidivr dword ptr [rsi + 0x525d329b] ; ret
0x00000000004c1218 : fsub dword ptr [rsi + 0xf] ; cmp bh, bl ; loopne 0x4c1219 ; ret
0x00000000004c11a8 : fsub dword ptr [rsi + 0xf] ; cmp ch, bl ; loopne 0x4c11a9 ; ret
0x00000000004c84e3 : fsub dword ptr [rsi + 0xf] ; jae 0x4c84e1 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c859e : fsub dword ptr [rsi + 0xf] ; jae 0x4c859c ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c8637 : fsub dword ptr [rsi + 0xf] ; jae 0x4c8635 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c8717 : fsub dword ptr [rsi + 0xf] ; jae 0x4c8715 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c8aa0 : fsub dword ptr [rsi + 0xf] ; jae 0x4c8a9e ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c8cc4 : fsub dword ptr [rsi + 0xf] ; jae 0x4c8cc2 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c8d72 : fsub dword ptr [rsi + 0xf] ; jae 0x4c8d70 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x0000000000545198 : fsub dword ptr [rsi - 0xd] ; call qword ptr [rax]
0x00000000004a18db : fsub st(3), st(0) ; stosd dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000004f67ef : fsub st(4), st(0) ; je 0x4f67b8 ; or byte ptr [rdx], dl ; pop rdx ; ret
0x00000000004f67ee : fsub st(4), st(0) ; je 0x4f67b9 ; or byte ptr [rdx], dl ; pop rdx ; ret
0x000000000048763d : fsubp st(0) ; popfq ; sub ecx, edi ; dec dword ptr [rax - 0x77] ; ret 0x1b8
0x0000000000407b28 : fsubp st(0) ; ret 0x150
0x000000000049e628 : fsubp st(0) ; ret 0xfc34
0x00000000004b05ef : fsubp st(0) ; ret 0xfff6
0x0000000000534971 : fsubp st(6) ; jmp rsi
0x00000000004f69b1 : fsubr dword ptr [r8] ; out 0x10, eax ; ret
0x00000000004f69b2 : fsubr dword ptr [rax] ; out 0x10, eax ; ret
0x00000000004ada41 : fsubr dword ptr [rcx] ; call 0x86f1eda
0x0000000000515e1a : fsubr qword ptr [rsi + rbx*8 - 0x4d] ; sub bl, byte ptr [rsi - 0x21] ; ret 0x4d11
0x000000000045bc55 : fsubr st(1) ; ret
0x00000000005072b1 : fsubrp st(3) ; ret 0x3593
0x00000000004c12a1 : fucom st(0) ; aesenclast xmm5, xmm0 ; ret
0x00000000004c11ac : fucom st(0) ; ret
0x000000000046eb08 : fucomi st(0) ; and dh, byte ptr [rax] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000435957 : fucomi st(0) ; ret
0x000000000046d4b8 : fucomi st(0) ; ret 0xfff1
0x0000000000448361 : fucomi st(3) ; ret 0x1f0f
0x000000000050a532 : fucomi st(7) ; and al, 0x9c ; ret 0xba5c
0x00000000004c12a6 : fucomp st(0) ; ret
0x000000000042e4b3 : fucomp st(7) ; in eax, -0x3c ; ret
0x0000000000439bea : fucompi st(0) ; adc bl, ah ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000489cd1 : fucompi st(0) ; pop rcx ; ret
0x0000000000474e77 : fucompi st(0) ; push rbx ; jns 0x474e7e ; inc dword ptr [rcx - 0x48] ; ret
0x00000000004052c7 : fucompi st(0) ; ret
0x000000000049c5d8 : fucompi st(0) ; ret 0xf6f5
0x00000000004387a8 : fucompi st(0) ; ret 0xfc9a
0x000000000048fdd8 : fucompi st(0) ; ret 0xfdc5
0x000000000040b9b8 : fucompi st(0) ; shr byte ptr [rax - 1], cl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000439cca : fucompi st(0) ; xor dl, ah ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000004c1605 : fxch st(0), st(0) ; ret
0x00000000004c44c6 : fxch st(0), st(2) ; or al, ch ; ret 1
0x000000000052b148 : hlt ; add ah, dh ; jmp rsp
0x000000000052dcbc : hlt ; add al, byte ptr [rax] ; hlt ; ret 0xfff7
0x00000000005434cc : hlt ; add dword ptr [rax], r8d ; xor ebx, esi ; jmp qword ptr [rdx]
0x00000000004c457c : hlt ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret 0xff3
0x000000000050f6a3 : hlt ; add edi, edx ; and eax, 0xe3f9eec3 ; ret
0x000000000050fcfa : hlt ; and al, 0x68 ; xchg eax, edi ; ret
0x000000000054a172 : hlt ; call qword ptr [rax]
0x0000000000549e0a : hlt ; call qword ptr [rbx]
0x0000000000549c82 : hlt ; call qword ptr [rcx]
0x000000000054a502 : hlt ; call qword ptr [rdi]
0x000000000054b64a : hlt ; call qword ptr [rdx]
0x00000000005491aa : hlt ; call rax
0x000000000054a862 : hlt ; call rbx
0x000000000052b17a : hlt ; call rsp
0x000000000050a742 : hlt ; cmp al, 0xc1 ; ret
0x0000000000552ccc : hlt ; cmp al, 2 ; add al, ah ; cmp esi, esi ; call qword ptr [rbx]
0x00000000004b7169 : hlt ; dec dword ptr [rax - 0x73] ; je 0x4b719c ; and byte ptr [rax - 0x77], cl ; ret
0x00000000004b71d5 : hlt ; dec dword ptr [rax - 0x73] ; je 0x4b7208 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000004b3aa1 : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b4aa0 : hlt ; dec dword ptr [rax - 0x7d] ; ret
0x000000000052bb82 : hlt ; dec dword ptr [rcx + rsi*4] ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000052b302 : hlt ; dec dword ptr [rsp + rax*4 + 0x2c040001] ; hlt ; call rsp
0x000000000052b142 : hlt ; dec esp ; jnp 0x52b151 ; add ah, dh ; add ah, dh ; jmp rsp
0x000000000054c539 : hlt ; hlt ; jmp qword ptr [rax]
0x000000000054c4f9 : hlt ; hlt ; jmp qword ptr [rsi]
0x000000000052b510 : hlt ; hlt ; jmp rsp
0x0000000000510eae : hlt ; imul esp ; call 0xffffffffd4f7b4f7
0x00000000004b7d22 : hlt ; inc dword ptr [rbx - 0x7eb7fe3b] ; ret
0x000000000052bad2 : hlt ; inc dword ptr [rsp + rbp*4 - 0x4e2bffff] ; hlt ; jmp rsp
0x000000000052b2da : hlt ; inc esp ; add dword ptr [rcx], 0 ; add al, 0x28 ; hlt ; jmp rsp
0x000000000052bc3a : hlt ; inc esp ; mov dh, 1 ; add byte ptr [rsp + rbp*8], dh ; hlt ; jmp rsp
0x000000000052b972 : hlt ; inc esp ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; je 0x52b91b ; hlt ; jmp rsp
0x00000000004fe241 : hlt ; insb byte ptr [rdi], dx ; ret
0x000000000053e1cc : hlt ; int1 ; add byte ptr [rax], al ; ret 0xfff1
0x00000000004ed20d : hlt ; int1 ; in al, dx ; ret 0xe63
0x0000000000528c70 : hlt ; jb 0x528c65 ; call rsp
0x000000000054b4e2 : hlt ; jmp qword ptr [rax]
0x000000000054bafa : hlt ; jmp qword ptr [rcx]
0x0000000000511a5e : hlt ; jmp qword ptr [rdi]
0x000000000054ae22 : hlt ; jmp qword ptr [rdx]
0x000000000054b4c2 : hlt ; jmp qword ptr [rsi]
0x000000000054a7c2 : hlt ; jmp rdx
0x000000000054921a : hlt ; jmp rsi
0x000000000052b14a : hlt ; jmp rsp
0x000000000052b752 : hlt ; ljmp ptr [rbx + rbx*4 + 0x7f840001] ; hlt ; call rsp
0x00000000005001dc : hlt ; mov ebp, 0xf12d87c8 ; out dx, al ; ret 0x89e3
0x000000000052cd28 : hlt ; or dh, dh ; call rsp
0x00000000005084cc : hlt ; out 0xfa, al ; ret 0x9cc7
0x00000000004b9309 : hlt ; out dx, eax ; inc dword ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x0000000000528638 : hlt ; pop rcx ; out dx, al ; jmp rsp
0x000000000052ef38 : hlt ; pop rsp ; cli ; call rsp
0x0000000000502735 : hlt ; popfq ; fmul qword ptr [rax + 0xf138c19] ; ret 0x3453
0x000000000052b43a : hlt ; push qword ptr [rax + rcx*4 + 0x33140001] ; hlt ; call rsp
0x000000000052b50a : hlt ; push qword ptr [rbp + rcx*4 + 0x44f40001] ; hlt ; jmp rsp
0x000000000052b682 : hlt ; push qword ptr [rdi + rdx*4 + 1] ; add ah, dl ; jb 0x52b688 ; jmp rsp
0x000000000052b47a : hlt ; push qword ptr [rdx + rcx*4 + 1] ; add byte ptr [rdx + rdi], dl ; hlt ; call rsp
0x000000000052b662 : hlt ; push qword ptr [rsi + rdx*4 + 0x6ba40001] ; hlt ; call rsp
0x000000000052b4d2 : hlt ; push qword ptr [rsp + rcx*4 + 0x3fb40001] ; hlt ; call rsp
0x000000000040817a : hlt ; ret
0x00000000004173b1 : hlt ; ret 0x62c4
0x0000000000512bc0 : hlt ; ret 0x64d9
0x00000000005037a0 : hlt ; ret 0x77fc
0x000000000041819f : hlt ; ret 0x79c5
0x0000000000418064 : hlt ; ret 0x7ec5
0x000000000051573f : hlt ; ret 0x82f4
0x0000000000511047 : hlt ; ret 0xd057
0x0000000000504fdd : hlt ; ret 0xfa73
0x000000000052c988 : hlt ; ret 0xfff5
0x00000000004a0538 : hlt ; ret 0xfff7
0x000000000052d440 : hlt ; sal dh, 0xff ; and al, 0x32 ; add al, byte ptr [rax] ; push rsp ; ret 0xfff6
0x000000000052ab88 : hlt ; sal dl, 1 ; jmp rsp
0x000000000050e649 : hlt ; sbb ch, dh ; push 0x41 ; std ; ret
0x00000000004f5561 : hlt ; sbb dword ptr [rcx + rax*4 + 0x5d], esi ; div ecx ; ret 0xa995
0x0000000000540bcc : hlt ; sbb eax, dword ptr [rcx] ; add byte ptr [rax], dh ; mov dl, 0xf2 ; jmp qword ptr [rdx]
0x000000000054ebcc : hlt ; sti ; add dword ptr [rax], eax ; sal byte ptr [rax - 0xb], 1 ; call qword ptr [rsi]
0x000000000044c419 : hlt ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004fd2fc : hlt ; stosb byte ptr [rdi], al ; mov esi, 0x76a27f2 ; ret
0x00000000004be10b : hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x000000000052d090 : hlt ; sub esi, esi ; jmp rsp
0x000000000052c7a0 : hlt ; xchg eax, esi ; cmc ; jmp rsp
0x0000000000511045 : hlt ; xor esp, esi ; ret 0xd057
0x000000000052eb29 : idiv al ; call rsp
0x00000000004b670c : idiv bh ; add ebx, eax ; mov eax, ebx ; pop rbx ; ret
0x00000000004b4593 : idiv bh ; add rsp, 8 ; add eax, 5 ; ret
0x00000000004b35c3 : idiv bh ; add rsp, 8 ; add eax, 8 ; ret
0x00000000004a105f : idiv bh ; add rsp, 8 ; ret
0x000000000049bdbb : idiv bh ; add rsp, 8 ; sub eax, 1 ; ret
0x000000000052d442 : idiv bh ; and al, 0x32 ; add al, byte ptr [rax] ; push rsp ; ret 0xfff6
0x0000000000405de3 : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000049f699 : idiv bh ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000049b903 : idiv bh ; mov eax, 1 ; pop rbx ; ret
0x000000000049f6cc : idiv bh ; mov eax, ebx ; pop rbx ; ret
0x00000000004a11ef : idiv bh ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b542a : idiv bh ; mov edx, ebx ; jmp 0x4b53f8
0x000000000052d032 : idiv bh ; mov esp, 0x2400021b ; sub esi, esi ; call rsp
0x000000000052ce9a : idiv bh ; mov esp, 0x84000216 ; and al, 0xf6 ; call rsp
0x00000000004a0aae : idiv bh ; mov rax, qword ptr [rdi + 0x48] ; ret
0x00000000004b7332 : idiv bh ; mov rdi, rbx ; mov rsi, rax ; call r12
0x00000000004ac48c : idiv bh ; nop ; xor eax, eax ; ret
0x000000000049c0ad : idiv bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000498b61 : idiv bh ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004a0aa5 : idiv bh ; xor eax, eax ; jmp 0x4a0a73
0x0000000000506502 : idiv byte ptr [rsi + 0x21] ; ret
0x0000000000457227 : idiv dl ; inc dword ptr [rbp + 0x5b0a7ec0] ; ret
0x000000000050d6f7 : idiv dword ptr [rbp - 0xc2895ab] ; cmc ; ret
0x00000000004f0b33 : idiv dword ptr [rcx + 0x2400e03a] ; ret
0x00000000004f6083 : idiv dword ptr [rdx] ; ret
0x00000000004f6082 : idiv dword ptr cs:[rdx] ; ret
0x0000000000490951 : idiv edi ; add rsp, 8 ; xor eax, eax ; ret
0x0000000000499a08 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000052dcba : idiv edi ; hlt ; add al, byte ptr [rax] ; hlt ; ret 0xfff7
0x0000000000485dd6 : idiv edi ; inc dword ptr [rcx - 0x77] ; ret
0x000000000048e808 : idiv edi ; jmp 0x48e7d1
0x000000000052dcb2 : idiv edi ; mov ah, 0x66 ; add al, byte ptr [rax] ; ret 0xfff7
0x000000000048bf74 : idiv edi ; mov eax, 1 ; pop rbx ; ret
0x000000000052dd22 : idiv edi ; mov esp, 0x1400026a ; fcomi st(7) ; jmp rsp
0x000000000052d8ea : idiv edi ; mov esp, 0x4000251 ; jg 0x52d8f3 ; call rsp
0x000000000052d872 : idiv edi ; mov esp, 0x4400024e ; jbe 0x52d87b ; call rsp
0x000000000052d5ba : idiv edi ; mov esp, 0x7400023c ; or al, 0xf7 ; call rsp
0x000000000052dd72 : idiv edi ; mov esp, 0x7400026b ; fdivr st(7), st(0) ; call rsp
0x000000000052d93a : idiv edi ; mov esp, 0xe4000252 ; jg 0x52d943 ; call rsp
0x00000000004862f1 : idiv edi ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a10ac : idiv edi ; nop ; xor eax, eax ; ret
0x0000000000485eac : idiv edi ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000554c82 : idiv edi ; ret 3
0x000000000052d6e2 : idiv edi ; xchg eax, esp ; add al, byte ptr [r8] ; push rsp ; xor edi, esi ; call rsp
0x000000000048c39d : idiv edi ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004897cc : idiv edi ; xor eax, eax ; pop rbx ; ret
0x00000000004a8cfd : idiv edi ; xor esi, esi ; mov rdi, rax ; call r12
0x00000000004a0aa4 : idiv r15b ; xor eax, eax ; jmp 0x4a0a74
0x0000000000490990 : idiv rdi ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000500ee3 : imul byte ptr [rbp + 0x37] ; stosb byte ptr [rdi], al ; xor byte ptr [rsi - 0x17], bl ; mov bl, 0xeb ; ret 0xfe88
0x00000000005049ef : imul byte ptr [rcx + 0x1d] ; xchg eax, esi ; pop rcx ; or al, bl ; ret 0x1878
0x000000000051705f : imul dh ; ret
0x000000000051288c : imul dword ptr [rdx - 0x6c] ; ret 0x983e
0x0000000000453f1b : imul eax ; jmp rdx
0x0000000000477ad7 : imul eax ; ret
0x000000000049c4b8 : imul eax ; ret 0xf6f4
0x00000000004f7768 : imul eax, dword ptr [rax + 0x63], 0xd8f0d5ac ; pop r8 ; ret 0x2297
0x0000000000535b65 : imul eax, dword ptr [rax], 0 ; cwde ; in al, dx ; out dx, eax ; call rsp
0x0000000000535add : imul eax, dword ptr [rax], 0 ; loopne 0x535ad3 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000515c8f : imul eax, dword ptr [rdi], -0x22 ; cmp eax, 0x25c65510 ; ret 0xf7ea
0x0000000000500a95 : imul eax, edi, 0x6cdfa82e ; ret
0x00000000004b18ec : imul ebp, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000504fd6 : imul ebp, dword ptr [rdi], 0xde6af11b ; xor al, 0xf4 ; ret 0xfa73
0x00000000004f4360 : imul ebx, dword ptr [rax + 0x5d], -0x67 ; mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x0000000000509197 : imul ebx, dword ptr [rax], -0x47 ; out dx, al ; pop rcx ; ret
0x00000000004f537a : imul ebx, dword ptr [rax], 0x22 ; ret 0xaf1
0x00000000005133e4 : imul ebx, dword ptr [rbx], 0x38 ; ret 0x78f3
0x000000000050454b : imul ebx, ecx, 0x446915c7 ; ret 0x5815
0x00000000004f4c09 : imul ebx, esp, 0xe7048453 ; jmp qword ptr [rdi]
0x00000000004020a7 : imul ecx, dword ptr [rax + rcx*2], -0x77 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040802a : imul ecx, dword ptr [rdi], 0x941c095 ; ret 0xf981
0x00000000004f8135 : imul ecx, edx, -0x79 ; pop rax ; xchg eax, ecx ; mov dword ptr [rax + rbp*2 - 0x67], eax ; ret 0xef10
0x000000000048c749 : imul edi, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004ffa46 : imul edi, dword ptr [rax], 0x78 ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x00000000005149d2 : imul edi, dword ptr [rbx + 0x1f7a4afe], 0x18 ; ret
0x000000000048062a : imul edi, eax, 0x1f0fff ; ret
0x000000000041e8f9 : imul edi, edi, 0x41 ; call rsp
0x000000000050a9ca : imul edi, esi, 0x35d2f706 ; jle 0x50aa20 ; push rdi ; ret 0xefcf
0x0000000000462fbd : imul edi, esi, 0x89c085ff ; ret
0x0000000000483fd0 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046fbf9 : imul edx, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000511d8a : imul edx, dword ptr [rbp - 0x7a], -0x31 ; ret
0x00000000004fd8c3 : imul edx, dword ptr [rdi + 0x14], -0x29 ; sahf ; cmp al, 0x26 ; ret 0x6f8
0x0000000000505a39 : imul edx, dword ptr [rsi + 0x59], 0x6eef4c32 ; ret
0x000000000050e748 : imul edx, dword ptr [rsi], 0x76788f98 ; ret
0x00000000005355f1 : imul esi ; jmp qword ptr [rax]
0x00000000004fcf00 : imul esi, dword ptr [rcx], 0x42 ; ret 0xdc5a
0x00000000004fbb76 : imul esi, dword ptr [rsi - 0x48], -0x2d ; push rbp ; std ; std ; ret 0x3148
0x000000000048ea20 : imul esi, edi, -1 ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004b5bb8 : imul esi, esi, 0x85d231ff ; ror byte ptr [rdi], 0x95 ; ret 0x8348
0x0000000000510eaf : imul esp ; call 0xffffffffd4f7b4f6
0x000000000050e94b : imul esp, dword ptr [rax], 0xa8cc8a79 ; jne 0x50e90e ; ret
0x000000000050ea8a : imul esp, dword ptr [rcx + 9], 0x18 ; mov edx, 0x31be70df ; ret
0x00000000004eda87 : imul esp, dword ptr [rsi], -0x73 ; in al, 0x69 ; ret
0x00000000004f84ee : imul esp, eax, 0x6c ; ret 0xda27
0x0000000000502de2 : imul esp, esp, 0xeb911ecf ; ret 0x2d3e
0x0000000000529419 : in al, -0x10 ; jmp rsp
0x000000000053d8bc : in al, -0x18 ; add byte ptr [rax], al ; adc byte ptr [rbp - 0xf], ah ; jmp rax
0x0000000000409ed8 : in al, -0x18 ; ret 0xaa
0x000000000045927c : in al, -0x18 ; sahf ; ret
0x000000000052cc00 : in al, -0x1e ; cmc ; call rsp
0x000000000052cb00 : in al, -0x20 ; cmc ; call rsp
0x0000000000503b85 : in al, -0x2f ; mov bl, 0xdf ; pop rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000418bfb : in al, -0x3b ; clc ; ja 0x418bf8 ; ret
0x000000000042a5e9 : in al, -0x3c ; jrcxz 0x42a670 ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x000000000053acbc : in al, -0x44 ; add byte ptr [rax], al ; or dl, 0xf0 ; call qword ptr [rdi]
0x0000000000492c7b : in al, -0x48 ; pop rsp ; pop rsp ; in al, -0x61 ; ret 0x5dc2
0x000000000054a7bc : in al, -0x49 ; add dword ptr [rax], eax ; adc byte ptr [rcx], ch ; hlt ; jmp rdx
0x0000000000516bba : in al, -0x4b ; ret 0xf99f
0x0000000000492c7f : in al, -0x61 ; ret 0x5dc2
0x000000000052b8c8 : in al, -0x6e ; hlt ; jmp rsp
0x000000000052e410 : in al, -0x72 ; clc ; call rsp
0x00000000004b005a : in al, -0x73 ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000005027d2 : in al, -0x77 ; ret
0x0000000000508e51 : in al, -0x7e ; je 0x508eaa ; je 0x508e93 ; lahf ; ret 0xb224
0x000000000052eb28 : in al, -0xa ; clc ; call rsp
0x000000000050ff27 : in al, -0xd ; fcmovbe st(0), st(3) ; std ; ret 0x488a
0x00000000004fe1ab : in al, -0xf ; sbb al, 0xdc ; push rbp ; mov dl, 0xe1 ; ret
0x000000000054ecbc : in al, -4 ; add dword ptr [rax], eax ; and byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x00000000004fc524 : in al, -5 ; xchg eax, ecx ; lodsb al, byte ptr [rsi] ; neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x000000000054e9bc : in al, -7 ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; call rsp
0x0000000000462488 : in al, -7 ; sti ; ljmp ptr [rcx] ; ret
0x000000000048bc65 : in al, -8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a2c4a : in al, -9 ; dec dword ptr [rax + 0x63] ; ret
0x0000000000513a0e : in al, 0x21 ; cmp edi, dword ptr [rcx + 0x30] ; ret 0x958e
0x0000000000531bbc : in al, 0x2b ; add byte ptr [rax], al ; or ah, 0xed ; jmp qword ptr [rcx]
0x00000000004299dd : in al, 0x31 ; ret 0xf5c5
0x000000000042a44e : in al, 0x31 ; ret 0xf789
0x000000000050e0f7 : in al, 0x34 ; add al, ah ; ret
0x000000000052e1a0 : in al, 0x34 ; clc ; jmp rsp
0x000000000052c160 : in al, 0x38 ; cmc ; jmp rsp
0x000000000041a822 : in al, 0x44 ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005289f8 : in al, 0x45 ; out dx, eax ; call rsp
0x00000000004b13da : in al, 0x4a ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x40ba
0x000000000052c3d8 : in al, 0x51 ; cmc ; jmp rsp
0x00000000005450bc : in al, 0x60 ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x00000000004eda8a : in al, 0x69 ; ret
0x000000000052a9c0 : in al, 0x71 ; jmp rsp
0x000000000052c598 : in al, 0x75 ; cmc ; call rsp
0x00000000005280e4 : in al, 0x78 ; add byte ptr [rax], al ; ret
0x00000000004f48d6 : in al, 0xa ; ret
0x00000000004fd713 : in al, 0xa ; shl dword ptr [rdi + rcx*2], cl ; ret
0x0000000000430938 : in al, 0xe ; out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004b0105 : in al, 0xf ; lahf ; ret 0x894c
0x00000000004c8a5c : in al, 0xf ; push rdi ; ret
0x000000000047ddf1 : in al, 0xf ; xchg eax, ebp ; ret 0xc284
0x00000000004ab419 : in al, 0xf ; xchg eax, esp ; ret 0x93eb
0x00000000004704e5 : in al, 1 ; clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004795b5 : in al, dx ; adc bh, dh ; ret 0
0x0000000000498fec : in al, dx ; adc byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x00000000004ffe84 : in al, dx ; add al, 0xb4 ; pop rax ; xchg eax, ebx ; xor al, 0xcc ; ret
0x000000000053dc2d : in al, dx ; add byte ptr [rax], al ; mov al, 0x8d ; int1 ; jmp qword ptr [rcx]
0x000000000052c6c5 : in al, dx ; add dword ptr [rax], eax ; mov ah, 0x86 ; cmc ; call rsp
0x0000000000453a82 : in al, dx ; add dword ptr [rcx - 0x7d], eax ; out dx, eax ; add ecx, ebp ; ret
0x000000000052f5c4 : in al, dx ; add eax, 0x3ae80000 ; in eax, dx ; call qword ptr [rcx]
0x0000000000510eb0 : in al, dx ; call 0xffffffffd4f7b4f5
0x0000000000500bca : in al, dx ; call rsp
0x000000000054eac4 : in al, dx ; cli ; add dword ptr [rax], eax ; js 0x54eb41 ; cmc ; call qword ptr [rsi]
0x00000000004081a8 : in al, dx ; cmp rsi, 0 ; jne 0x408177 ; ret
0x00000000004f7181 : in al, dx ; fdiv qword ptr [rbx + rax*2 - 0x6e] ; ret
0x000000000052bc41 : in al, dx ; hlt ; jmp rsp
0x0000000000502265 : in al, dx ; jae 0x5021f8 ; ret
0x0000000000502265 : in al, dx ; jae 0x5021fa ; ret
0x00000000004f67f0 : in al, dx ; je 0x4f67b7 ; or byte ptr [rdx], dl ; pop rdx ; ret
0x0000000000508be6 : in al, dx ; jl 0x508c2a ; lea edi, dword ptr [rsi] ; in al, dx ; ret
0x0000000000424263 : in al, dx ; jmp 0x42422a
0x0000000000536bc4 : in al, dx ; jnp 0x536bce ; add byte ptr [rax], cl ; sub dh, al ; jmp rsp
0x0000000000518491 : in al, dx ; jp 0x518499 ; ret 0x2076
0x00000000004fb998 : in al, dx ; leave ; or al, 0x6b ; ret 0x1320
0x00000000004f58b0 : in al, dx ; mov bl, 0xa7 ; add cl, al ; xchg eax, edi ; sti ; sub al, 0xf1 ; ret 0x7130
0x000000000054b6c4 : in al, dx ; mov byte ptr [rcx], 0 ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rax]
0x00000000005127f7 : in al, dx ; mov cl, 0x83 ; ret 0x467e
0x00000000004f4d1f : in al, dx ; mov dl, 0x1c ; ret
0x0000000000517bf4 : in al, dx ; mov dl, byte ptr [rbp - 1] ; sahf ; ret
0x00000000004b957b : in al, dx ; mov eax, 1 ; ret
0x000000000053fac4 : in al, dx ; or al, byte ptr [rcx] ; add byte ptr [rax], bh ; test dh, dl ; jmp rax
0x00000000004897f1 : in al, dx ; or al, ch ; or byte ptr [rbp - 0x76b70005], dl ; ret
0x00000000004347a6 : in al, dx ; or al, ch ; ret
0x0000000000469227 : in al, dx ; or al, ch ; ret 0xffec
0x00000000004a7696 : in al, dx ; or al, ch ; sal esi, cl ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000040db31 : in al, dx ; or byte ptr [rax + 0x39], cl ; div dword ptr [rax + rdx - 0x18] ; ret
0x000000000047e3ff : in al, dx ; or byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0x854d
0x00000000004cbeff : in al, dx ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000535b69 : in al, dx ; out dx, eax ; call rsp
0x0000000000544dc4 : in al, dx ; pop rbp ; add dword ptr [rax], eax ; fsub dword ptr [rbp - 0xd] ; jmp qword ptr [rcx]
0x000000000046b50b : in al, dx ; ret
0x0000000000510114 : in al, dx ; ret 0x203c
0x000000000041d624 : in al, dx ; ret 0x33
0x00000000004ed211 : in al, dx ; ret 0xe63
0x0000000000504ee9 : in al, dx ; ret 0xfffc
0x000000000052be44 : in al, dx ; ret 1
0x0000000000424756 : in al, dx ; sbb al, ch ; cmp ebp, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a8ab4 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000540dc4 : in al, dx ; sbb eax, 0xb8b80001 ; jmp qword ptr [rsi]
0x00000000004f0a0c : in al, dx ; sbb edx, ecx ; add byte ptr [rbx + rcx*4 - 0x37], bh ; ret 0x8d33
0x000000000046d700 : in al, dx ; stc ; dec dword ptr [rax + 1] ; ret
0x00000000005137d2 : in al, dx ; xchg eax, ecx ; push 0xe7 ; jo 0x5137bd ; ret 0x7553
0x000000000044e303 : in al, dx ; xor eax, eax ; ret
0x000000000053ba01 : in eax, -0x10 ; call qword ptr [rbx]
0x000000000041a707 : in eax, -0x18 ; ret
0x000000000051821e : in eax, -0x20 ; push rbp ; int1 ; leave ; leave ; ret
0x00000000004feab6 : in eax, -0x29 ; clc ; sbb edx, dword ptr [rax + rdx*4] ; ret
0x00000000004ed205 : in eax, -0x2b ; ret 0x7870
0x00000000004fe228 : in eax, -0x30 ; ret
0x000000000042e4b5 : in eax, -0x3c ; ret
0x000000000045d0d1 : in eax, -0x3c ; ret 0xf6f3
0x0000000000491b3f : in eax, -0x3f ; ret 0x4408
0x000000000050e738 : in eax, -0x42 ; ret
0x00000000005013d2 : in eax, -0x47 ; ret 0xae59
0x00000000004ece81 : in eax, -0x4d ; fidivr word ptr [rsp + rcx*8 + 1] ; leave ; ret
0x000000000050ba39 : in eax, -0x52 ; adc ecx, dword ptr [rbp - 0x66aec903] ; ret
0x000000000043d4f7 : in eax, -0x56 ; add al, byte ptr [rax] ; mov rax, qword ptr [rbx + 0x20] ; pop rbx ; ret
0x000000000043a219 : in eax, -0x7d ; ret
0x00000000004b7481 : in eax, -2 ; mov dword ptr [rdi + 0x28], ecx ; add rsp, 8 ; ret
0x00000000005294c5 : in eax, 0 ; add byte ptr [rbx + rdi*8 - 0x10], ah ; call rsp
0x00000000004fc510 : in eax, 0x28 ; ret 0x8a49
0x0000000000512718 : in eax, 0x29 ; ret
0x00000000004fcd1f : in eax, 0x40 ; ret
0x000000000041a10e : in eax, 0x48 ; mov eax, edi ; ret
0x000000000050ca5e : in eax, 0x4e ; ret
0x000000000050c7db : in eax, 0x58 ; jb 0x50c816 ; mov al, 0xc4 ; ret 0xc5cc
0x0000000000507bb7 : in eax, 0x5c ; jmp rsp
0x00000000004fd8c2 : in eax, 0x6b ; push rdi ; adc al, 0xd7 ; sahf ; cmp al, 0x26 ; ret 0x6f8
0x0000000000518185 : in eax, 0x70 ; ret
0x00000000004f6144 : in eax, 0x77 ; cmp bl, dl ; sbb byte ptr [rbp + rcx*8 - 0x45], ch ; ret
0x000000000052c545 : in eax, 1 ; add byte ptr [rbp + rsi*2 - 0xb], al ; jmp rsp
0x0000000000529615 : in eax, dx ; add byte ptr [rax], al ; xchg eax, esp ; sbb esi, ecx ; call rsp
0x000000000054dcdd : in eax, dx ; add dword ptr [rax], eax ; jo 0x54dd2c ; cmc ; call qword ptr [rax]
0x000000000054dd6d : in eax, dx ; add dword ptr [rax], eax ; jo 0x54ddbd ; cmc ; jmp qword ptr [rdi]
0x000000000040a4cf : in eax, dx ; add dword ptr [rcx], eax ; ret
0x000000000041a789 : in eax, dx ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004c45fe : in eax, dx ; add rsp, 8 ; ret
0x0000000000466041 : in eax, dx ; call 0x402293
0x000000000047933d : in eax, dx ; call 0x405623
0x000000000047f628 : in eax, dx ; call 0x419b18
0x0000000000530382 : in eax, dx ; call qword ptr [rax]
0x000000000052ff32 : in eax, dx ; call qword ptr [rbx]
0x000000000052f5ca : in eax, dx ; call qword ptr [rcx]
0x000000000053020a : in eax, dx ; call qword ptr [rdx]
0x000000000052fa32 : in eax, dx ; call qword ptr [rsi]
0x0000000000440167 : in eax, dx ; call rax
0x000000000052fd12 : in eax, dx ; call rbx
0x0000000000527fe2 : in eax, dx ; call rsp
0x0000000000528032 : in eax, dx ; dec esp ; je 0x528040 ; add byte ptr [rcx + rbp*4 - 0x13], dl ; jmp rsp
0x000000000052848a : in eax, dx ; dec esp ; mov dword ptr [rax], eax ; add ah, dl ; int1 ; in eax, dx ; jmp rsp
0x00000000005280da : in eax, dx ; inc esp ; js 0x5280e8 ; add byte ptr [rbx + rax*8], ah ; in eax, dx ; jmp rsp
0x00000000004ef906 : in eax, dx ; je 0x4ef908 ; ret
0x000000000050b339 : in eax, dx ; jge 0x50b35a ; in eax, dx ; push rbp ; ret 0x89e7
0x00000000004fa105 : in eax, dx ; jl 0x4fa0e8 ; ret 0x278f
0x000000000047c23d : in eax, dx ; jmp 0x47c247
0x0000000000518868 : in eax, dx ; jmp 0xfffffffffa544a73
0x00000000005280ca : in eax, dx ; jmp qword ptr [rax + rdi*2]
0x000000000052f192 : in eax, dx ; jmp qword ptr [rax]
0x0000000000531bc2 : in eax, dx ; jmp qword ptr [rcx]
0x000000000052fd72 : in eax, dx ; jmp qword ptr [rdx]
0x0000000000531f42 : in eax, dx ; jmp qword ptr [rsi]
0x0000000000531cc2 : in eax, dx ; jmp rcx
0x000000000052803a : in eax, dx ; jmp rsp
0x00000000004309e2 : in eax, dx ; leave ; ret 0x3b81
0x000000000046fcb0 : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004fedfe : in eax, dx ; or eax, 0x6d4caed ; sbb cl, byte ptr [rdi] ; ret 0x22b3
0x0000000000421ad5 : in eax, dx ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000005282f2 : in eax, dx ; push qword ptr [rdx + rax*4 - 0x1f2c0000] ; in eax, dx ; call rsp
0x000000000050b33c : in eax, dx ; push rbp ; ret 0x89e7
0x0000000000507a3f : in eax, dx ; ret
0x000000000047cc66 : in eax, dx ; ret 0x51
0x000000000050d78f : in eax, dx ; ret 0xa9bd
0x00000000004f5ad7 : in eax, dx ; sbb al, 0x70 ; and ah, byte ptr [rsi + rdi*4 - 0x15] ; ret
0x0000000000503b6a : in eax, dx ; stc ; ret
0x00000000004fda9e : in eax, dx ; sub ebx, ebp ; ret 0x4683
0x0000000000483e25 : in eax, dx ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000050954a : in eax, dx ; xchg eax, ecx ; ret
0x00000000004ca562 : inc ah ; ret
0x00000000005299c5 : inc byte ptr [rax] ; add byte ptr [rax + rdx*2], dl ; int1 ; jmp rsp
0x00000000004081ab : inc byte ptr [rax] ; jne 0x408174 ; ret
0x00000000004fc361 : inc byte ptr [rbp + 0x2b62a352] ; ret
0x0000000000514d70 : inc byte ptr [rbx + 0x72576480] ; jns 0x514d81 ; ret
0x00000000004a536b : inc byte ptr [rbx + 0x77606f8] ; xor eax, eax ; pop rbx ; ret
0x00000000004b9374 : inc byte ptr [rcx + 9] ; ret
0x000000000054ee3d : inc byte ptr [rcx] ; add byte ptr [rax], dh ; je 0x54ee3e ; call qword ptr [rbx]
0x00000000004ec72f : inc byte ptr [rsi - 0x6c] ; or byte ptr [rax + 0x4d], bl ; ret 0x91b2
0x000000000054ee3c : inc byte ptr fs:[rcx] ; add byte ptr [rax], dh ; je 0x54ee3f ; call qword ptr [rbx]
0x000000000052a89b : inc dword ptr [rax + rcx*2 + 0x58940001] ; call rsp
0x0000000000445ec7 : inc dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044848f : inc dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046edf6 : inc dword ptr [rbp + 0x11d78c0] ; ret
0x0000000000477b3b : inc dword ptr [rbp + 0x244489c0] ; xor byte ptr [rdi], cl ; lahf ; ret
0x00000000004aa79c : inc dword ptr [rbp + 0x292778c0] ; ret
0x000000000043d5d6 : inc dword ptr [rbp + 0x5b057ec0] ; ret
0x00000000004525a9 : inc dword ptr [rbp + 0x5b0a7ec0] ; ret
0x000000000047c010 : inc dword ptr [rbp + 0x5beb75c0] ; ret
0x0000000000528543 : inc dword ptr [rbp + rcx*4 + 0x6840000] ; out dx, al ; jmp rsp
0x0000000000528b8b : inc dword ptr [rbp + rsi*4 + 0x5bb40000] ; out dx, eax ; call rsp
0x00000000004a18d7 : inc dword ptr [rbp - 0x14238040] ; stosd dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000047d537 : inc dword ptr [rbp - 0x41c38b40] ; salc ; ret 0x51
0x0000000000477641 : inc dword ptr [rbp - 0x76c78140] ; ret 0x894c
0x00000000004ae38b : inc dword ptr [rbp - 0x76d78740] ; ret 0xde89
0x000000000043ca39 : inc dword ptr [rbp - 0x76f38140] ; ret
0x000000000048f354 : inc dword ptr [rbp - 0x7c988140] ; ret
0x00000000004b2d5e : inc dword ptr [rbp - 0x7ca28b40] ; ret
0x000000000048c65f : inc dword ptr [rbp - 0x7cb78b40] ; ret
0x0000000000480957 : inc dword ptr [rbp - 0x7cbb8b40] ; ret
0x000000000048c851 : inc dword ptr [rbp - 0x7cbd8b40] ; ret
0x00000000004b4736 : inc dword ptr [rbp - 0x7cc08b40] ; ret
0x00000000004b3f35 : inc dword ptr [rbp - 0x7cc18b40] ; ret
0x0000000000479189 : inc dword ptr [rbp - 0x7ccd8b40] ; ret
0x000000000047e696 : inc dword ptr [rbp - 0x7cd28b40] ; ret
0x000000000048c8d0 : inc dword ptr [rbp - 0x7cd88b40] ; ret
0x000000000047e3b0 : inc dword ptr [rbp - 0x7cdc8b40] ; ret
0x0000000000479203 : inc dword ptr [rbp - 0x7cdf8b40] ; ret
0x00000000004a2d2a : inc dword ptr [rbp - 0x7ce08b40] ; ret
0x00000000004ce14d : inc dword ptr [rbp - 0x7ce18b40] ; ret
0x000000000048741f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x0000000000482850 : inc dword ptr [rbp - 0x7cea8a40] ; ret
0x0000000000472ad6 : inc dword ptr [rbp - 0x95a8140] ; ret
0x000000000046e805 : inc dword ptr [rbx + 0x57e08f9] ; ret
0x000000000040288a : inc dword ptr [rbx - 0x3f8a0006] ; ret
0x00000000004a2e44 : inc dword ptr [rbx - 0x7cb7fe40] ; ret 0x4101
0x00000000004b7d23 : inc dword ptr [rbx - 0x7eb7fe3b] ; ret
0x00000000004b84b8 : inc dword ptr [rbx - 0x7ebefe12] ; ret 0x5180
0x00000000004485d1 : inc dword ptr [rbx] ; je 0x4485e9 ; mov eax, 1 ; ret
0x0000000000448721 : inc dword ptr [rbx] ; je 0x448739 ; mov eax, 1 ; ret
0x000000000046fa51 : inc dword ptr [rbx] ; je 0x46fa69 ; mov eax, 1 ; ret
0x0000000000485fa1 : inc dword ptr [rbx] ; je 0x485fb9 ; mov eax, 1 ; ret
0x0000000000485fd1 : inc dword ptr [rbx] ; je 0x485fe9 ; mov eax, 1 ; ret
0x00000000004b930b : inc dword ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x000000000052bdfb : inc dword ptr [rcx + rax*8 + 0x1c440001] ; cmc ; call rsp
0x00000000004214fc : inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000052eea3 : inc dword ptr [rcx + rcx*8 + 0x3c040002] ; cli ; call rsp
0x00000000004f7024 : inc dword ptr [rcx - 0x3a57b3eb] ; ret
0x000000000047d45a : inc dword ptr [rcx - 0x48] ; mov esi, 0xb9000001 ; lodsd eax, dword ptr [rsi] ; ret 0x51
0x0000000000441430 : inc dword ptr [rcx - 0x48] ; ret
0x000000000047b146 : inc dword ptr [rcx - 0x48] ; test dword ptr [rax], 0x67b90000 ; ret 0x51
0x000000000047d86b : inc dword ptr [rcx - 0x48] ; test dword ptr [rax], 0xadb90000 ; ret 0x51
0x0000000000485dd8 : inc dword ptr [rcx - 0x77] ; ret
0x000000000040a4cc : inc dword ptr [rcx - 0x7d] ; in eax, dx ; add dword ptr [rcx], eax ; ret
0x00000000004aa642 : inc dword ptr [rcx] ; add edi, dword ptr [rax + 1] ; pop rbx ; ret
0x00000000004aae11 : inc dword ptr [rcx] ; je 0x4aae29 ; mov eax, 1 ; ret
0x0000000000405c2b : inc dword ptr [rcx] ; ret
0x0000000000528c6b : inc dword ptr [rdx + rdi*4 + 0x72f40000] ; out dx, eax ; call rsp
0x0000000000476b81 : inc dword ptr [rdx] ; je 0x476b99 ; mov eax, 1 ; ret
0x000000000052c403 : inc dword ptr [rsi + rbx*8 + 0x5b540001] ; cmc ; call rsp
0x000000000052bad3 : inc dword ptr [rsp + rbp*4 - 0x4e2bffff] ; hlt ; jmp rsp
0x000000000052afdb : inc dword ptr [rsp + rsi*2 - 0x1c9bffff] ; jmp rsp
0x000000000050db32 : inc eax ; pop rdi ; cmc ; ret
0x00000000004fb03d : inc ebp ; jmp rsi
0x0000000000461c6e : inc ebx ; mov eax, 0x34 ; ret
0x000000000043d164 : inc ebx ; mov eax, 0xfffffffe ; ret
0x00000000004a3bdc : inc ebx ; mov eax, 1 ; ret
0x00000000004a9774 : inc ebx ; mov eax, 4 ; ret
0x000000000048c5dc : inc ebx ; nop ; mov rax, qword ptr [rdi + 0x78] ; ret
0x00000000004c6bac : inc ebx ; nop ; test rdx, rdx ; jne 0x4c6bc9 ; ret
0x0000000000414965 : inc ecx ; jne 0x414918 ; neg r9 ; ret
0x0000000000402288 : inc ecx ; loop 0x402299 ; add eax, edx ; ret
0x00000000004b92b5 : inc ecx ; ret
0x00000000004b926f : inc ecx ; ret 0x410a
0x000000000041c59e : inc edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000495d8e : inc edi ; push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004f5c5d : inc edx ; jmp 0x4f5c07
0x000000000050f041 : inc esi ; ret 0x728d
0x000000000052b2db : inc esp ; add dword ptr [rcx], 0 ; add al, 0x28 ; hlt ; jmp rsp
0x000000000052d593 : inc esp ; cmp eax, dword ptr [rdx] ; add ah, ah ; or bh, dh ; jmp rsp
0x00000000005280db : inc esp ; js 0x5280e7 ; add byte ptr [rbx + rax*8], ah ; in eax, dx ; jmp rsp
0x000000000052bc3b : inc esp ; mov dh, 1 ; add byte ptr [rsp + rbp*8], dh ; hlt ; jmp rsp
0x0000000000528c1b : inc esp ; mov eax, 0x67d40000 ; out dx, eax ; jmp rsp
0x000000000052b973 : inc esp ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; je 0x52b91a ; hlt ; jmp rsp
0x000000000052be8b : inc esp ; ret
0x000000000052d08b : inc esp ; sbb al, 2 ; add ah, dh ; sub esi, esi ; jmp rsp
0x0000000000529f83 : inc esp ; sbb dword ptr [rcx], eax ; add byte ptr [rdx + rsi*4], dl ; int1 ; jmp rsp
0x00000000004a2e43 : inc qword ptr [rbx - 0x7cb7fe40] ; ret 0x4101
0x00000000004fb03c : inc r13d ; jmp rsi
0x000000000050db31 : inc r8 ; pop rdi ; cmc ; ret
0x0000000000414964 : inc rcx ; jne 0x414919 ; neg r9 ; ret
0x000000000050b825 : insb byte ptr [edi], dx ; xor al, 0xa8 ; clc ; ret 0xc375
0x0000000000540444 : insb byte ptr [rdi], dx ; adc al, 1 ; add byte ptr [rax - 0x59], bh ; call qword ptr [rsi]
0x00000000004410bf : insb byte ptr [rdi], dx ; add bl, r14b ; ret
0x0000000000533f44 : insb byte ptr [rdi], dx ; add byte ptr [r8], r8b ; sbb dl, cl ; out dx, al ; call qword ptr [rdx]
0x0000000000535c35 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; sub bh, ch ; out dx, eax ; jmp qword ptr [rdi]
0x00000000004fb793 : insb byte ptr [rdi], dx ; add dword ptr [rcx + 0x54], ebp ; mov word ptr [rsi + 0x44], ss ; ret 0x7461
0x0000000000541644 : insb byte ptr [rdi], dx ; add dword ptr es:[rax], eax ; call 0xffffffffd7540928
0x0000000000553d44 : insb byte ptr [rdi], dx ; add r8b, byte ptr [r8] ; clc ; or esi, edi ; call rsi
0x00000000004b949b : insb byte ptr [rdi], dx ; and al, 0x20 ; add rsp, 0x28 ; ret
0x0000000000432f36 : insb byte ptr [rdi], dx ; and al, 0x50 ; add esp, eax ; ret 0x5d
0x0000000000425542 : insb byte ptr [rdi], dx ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000054ec44 : insb byte ptr [rdi], dx ; cld ; add dword ptr [rax], eax ; clc ; jo 0x54ec47 ; call qword ptr [rsi]
0x0000000000515e1b : insb byte ptr [rdi], dx ; fidiv word ptr [rbx + 0x26df5e2a] ; ret 0x4d11
0x00000000005160f8 : insb byte ptr [rdi], dx ; fisttp word ptr [rcx] ; sub esi, ebx ; sar dword ptr [rsi], 1 ; ret
0x000000000053cd44 : insb byte ptr [rdi], dx ; fld qword ptr [rax] ; add byte ptr [rax], cl ; and dh, cl ; call qword ptr [rdx]
0x0000000000530a49 : insb byte ptr [rdi], dx ; in eax, dx ; call rax
0x0000000000500dd9 : insb byte ptr [rdi], dx ; mov ah, 0xf2 ; xlatb ; xor byte ptr [rbp - 0x30], ah ; ret 0x3ef2
0x000000000051068a : insb byte ptr [rdi], dx ; or ch, byte ptr [rbp - 0xab5d86d] ; ret
0x00000000005070ed : insb byte ptr [rdi], dx ; or ebx, dword ptr [rdx] ; pop rsp ; enter -0x6f25, -0x2e ; ret
0x0000000000518b19 : insb byte ptr [rdi], dx ; out 0xee, al ; cmp al, 0x8b ; ret
0x00000000005160a4 : insb byte ptr [rdi], dx ; pop rdi ; jmp 0x51606d
0x00000000004f5d8c : insb byte ptr [rdi], dx ; ret
0x00000000005135b7 : insb byte ptr [rdi], dx ; ret 0x3118
0x000000000050b086 : insb byte ptr [rdi], dx ; ret 0x8371
0x0000000000427f82 : insb byte ptr [rdi], dx ; ret 0xc789
0x00000000004f84f0 : insb byte ptr [rdi], dx ; ret 0xda27
0x0000000000517328 : insb byte ptr [rdi], dx ; ret 0xeeb6
0x0000000000466190 : insb byte ptr [rdi], dx ; ret 0xfff9
0x0000000000529184 : insb byte ptr [rdi], dx ; rol byte ptr [rax], cl ; add ah, dl ; ret 0xffef
0x000000000054b144 : insb byte ptr [rdi], dx ; rol dword ptr [rcx], 0 ; js 0x54b1b1 ; hlt ; call qword ptr [rdi]
0x0000000000507187 : insb byte ptr [rdi], dx ; salc ; jle 0x50712f ; ret 0x54c5
0x00000000004254d2 : insb byte ptr [rdi], dx ; sbb al, 0 ; add byte ptr [rax], al ; ret
0x000000000050d7fe : insb byte ptr [rdi], dx ; sbb al, 0x1e ; add ah, byte ptr [rcx + rbp*8 - 0x74] ; lodsd eax, dword ptr [rsi] ; ret 0x82b3
0x0000000000530a44 : insb byte ptr [rdi], dx ; sbb al, byte ptr [rax] ; add byte ptr [rax], ch ; insb byte ptr [rdi], dx ; in eax, dx ; call rax
0x0000000000540844 : insb byte ptr [rdi], dx ; sbb byte ptr [rcx], al ; add byte ptr [rax - 0x56], bl ; call qword ptr [rdi]
0x00000000004ffbe6 : insb byte ptr [rdi], dx ; sbb byte ptr [rdi - 0x5130111d], dl ; pop rdi ; ret
0x00000000005100ff : insb byte ptr [rdi], dx ; std ; jbe 0x510114 ; pop qword ptr [rbx - 0x72] ; ret
0x0000000000551a44 : insb byte ptr [rdi], dx ; sub al, byte ptr [rdx] ; add al, bl ; adc al, 0xf6 ; call qword ptr [rcx]
0x0000000000507ce2 : insb byte ptr [rdi], dx ; sub cl, dh ; ret 0x861c
0x000000000050b826 : insb byte ptr [rdi], dx ; xor al, 0xa8 ; clc ; ret 0xc375
0x0000000000445ec0 : insd dword ptr [rdi], dx ; add byte ptr [rax + 1], cl ; ret 0x42c6
0x0000000000434861 : insd dword ptr [rdi], dx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000050a904 : insd dword ptr [rdi], dx ; and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x00000000005013d0 : insd dword ptr [rdi], dx ; and ebp, 0xffffffb9 ; ret 0xae59
0x00000000004aaa91 : insd dword ptr [rdi], dx ; cmc ; dec dword ptr [rbx + rcx*4 + 0xc] ; and al, 0x89 ; ret
0x0000000000429ec2 : insd dword ptr [rdi], dx ; cmp byte ptr [rbp + 0x20], dl ; add esp, eax ; ret
0x0000000000432f0d : insd dword ptr [rdi], dx ; cmp byte ptr [rsp + 0x20], dl ; add esp, eax ; ret 0x75
0x00000000004f5020 : insd dword ptr [rdi], dx ; cmp edi, edi ; ret 0x8087
0x00000000005092e3 : insd dword ptr [rdi], dx ; cwde ; loope 0x509323 ; je 0x50932f ; ret
0x00000000004fe23d : insd dword ptr [rdi], dx ; enter 0x405a, -0xc ; insb byte ptr [rdi], dx ; ret
0x000000000050be47 : insd dword ptr [rdi], dx ; ffree st(2) ; or eax, 0xcb2412ea ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x0000000000505f7e : insd dword ptr [rdi], dx ; fstp dword ptr [rbx - 0x5e] ; ret 0xb5f8
0x0000000000511a3e : insd dword ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xcec9
0x000000000050fb57 : insd dword ptr [rdi], dx ; or byte ptr [rdi], cl ; ret
0x00000000004c6952 : insd dword ptr [rdi], dx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004f74cb : insd dword ptr [rdi], dx ; ret
0x0000000000500bd8 : insd dword ptr [rdi], dx ; ret 0xb37c
0x00000000004f85e0 : insd dword ptr [rdi], dx ; ret 0xfa3d
0x0000000000507bb4 : insd dword ptr [rdi], dx ; retfq 0x5ce5 ; jmp rsp
0x00000000004fd1ed : insd dword ptr [rdi], dx ; sbb dh, cl ; ret 0x4c24
0x00000000004fd8e9 : insd dword ptr [rdi], dx ; stosb byte ptr [rdi], al ; ret 0xa39d
0x0000000000509cc1 : insd dword ptr [rdi], dx ; xchg eax, edx ; mov edi, 0xba1700f6 ; ret 0xbf6b
0x00000000004fd169 : int 0
0x0000000000504c3d : int 0x22
0x00000000004ac9f1 : int 0x29
0x000000000050760f : int 0x4a
0x00000000004c7fe6 : int 0x80
0x0000000000517b77 : int 0xb8
0x00000000004fb6b0 : int 0xc
0x0000000000426627 : int 0xc1
0x000000000050553c : int 0xc2
0x00000000005167fe : int 0xc3
0x0000000000418227 : int 0xc5
0x00000000004f54a9 : int 0xc7
0x00000000005049ee : int 0xf6
0x0000000000450470 : int 0xfe
0x0000000000508371 : int 7
0x00000000004f9e3f : int1 ; adc ch, dh ; ret
0x000000000051180d : int1 ; adc ebx, ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; ret 0x3c61
0x000000000040908b : int1 ; add al, byte ptr [rcx - 0x77] ; ret 0xe883
0x00000000005296fd : int1 ; add byte ptr [rax], al ; adc al, 0x28 ; int1 ; call rsp
0x000000000053e1cd : int1 ; add byte ptr [rax], al ; ret 0xfff1
0x000000000053cd62 : int1 ; call qword ptr [rbx]
0x000000000053d2b2 : int1 ; call qword ptr [rdi]
0x000000000053cd4a : int1 ; call qword ptr [rdx]
0x0000000000496c44 : int1 ; call rax
0x000000000052a09a : int1 ; call rsp
0x000000000043a5cb : int1 ; clc ; xor dword ptr [rax], eax ; jne 0x43a595 ; pop rbx ; ret
0x00000000004c9e23 : int1 ; cld ; ret 0x894c
0x00000000004576c7 : int1 ; cli ; inc dword ptr [rbp + 0x5b0a7ec0] ; ret
0x00000000005296aa : int1 ; dec esp ; lock add byte ptr [rax], al ; adc al, 0x27 ; int1 ; jmp rsp
0x0000000000529fea : int1 ; dec esp ; sbb eax, dword ptr [rcx] ; add byte ptr [rcx + rdi*4], ah ; int1 ; jmp rsp
0x000000000052a352 : int1 ; dec esp ; sub eax, 0xf8540001 ; int1 ; jmp rsp
0x00000000004ed210 : int1 ; in al, dx ; ret 0xe63
0x0000000000528491 : int1 ; in eax, dx ; jmp rsp
0x0000000000529f82 : int1 ; inc esp ; sbb dword ptr [rcx], eax ; add byte ptr [rdx + rsi*4], dl ; int1 ; jmp rsp
0x00000000005160a3 : int1 ; insb byte ptr [rdi], dx ; pop rdi ; jmp 0x51606e
0x00000000005088b1 : int1 ; insb byte ptr [rdi], dx ; ret
0x00000000004f1274 : int1 ; jae 0x4f12d5 ; add dl, ch ; ret
0x000000000044482d : int1 ; je 0x444884 ; ret
0x000000000044486f : int1 ; je 0x444885 ; xor eax, eax ; ret
0x0000000000444a14 : int1 ; je 0x444a72 ; add rsp, 8 ; ret
0x0000000000444a5f : int1 ; je 0x444a74 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000050f799 : int1 ; jl 0x50f774 ; stosb byte ptr [rdi], al ; mov word ptr [rdi - 0x69], fs ; ret
0x000000000053d352 : int1 ; jmp qword ptr [rax]
0x000000000053dc32 : int1 ; jmp qword ptr [rcx]
0x000000000053d6ca : int1 ; jmp qword ptr [rdi]
0x000000000052a08a : int1 ; jmp qword ptr [rsi + rbx - 0x3c6bffff]
0x000000000053d8c2 : int1 ; jmp rax
0x000000000053e332 : int1 ; jmp rbx
0x00000000005296b2 : int1 ; jmp rsp
0x0000000000518221 : int1 ; leave ; leave ; ret
0x00000000005297ba : int1 ; ljmp ptr [rbp + rsi*8 + 0x39340000] ; int1 ; jmp rsp
0x0000000000529ce2 : int1 ; ljmp ptr [rcx + rdx - 0x53dbffff] ; int1 ; call rsp
0x000000000052a102 : int1 ; ljmp ptr [rcx - 0x2d4bffff] ; int1 ; call rsp
0x000000000052a062 : int1 ; ljmp ptr [rsi + rbx] ; add dword ptr [rax], eax ; ret
0x00000000004fbc75 : int1 ; lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x000000000046b506 : int1 ; mov byte ptr [rax + 1], dl ; jne 0x46b4ff ; ret
0x0000000000402d1e : int1 ; mov eax, 0xffffffff ; ret
0x0000000000406fb8 : int1 ; mov edx, ebp ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000406ea7 : int1 ; mov edx, ebp ; xor esi, esi ; call rax
0x00000000004c7832 : int1 ; mov qword ptr [rdi + r8], r9 ; jb 0x4c782f ; ret
0x00000000004f537f : int1 ; or al, byte ptr [rsp + rsi*2] ; pop rdi ; ret
0x00000000005001e1 : int1 ; out dx, al ; ret 0x89e3
0x0000000000504fd9 : int1 ; push 0xde ; xor al, 0xf4 ; ret 0xfa73
0x0000000000529baa : int1 ; push qword ptr [rax + rcx + 0x75840001] ; int1 ; jmp rsp
0x0000000000529872 : int1 ; push qword ptr [rax + rdi*8 + 0x40a40000] ; int1 ; call rsp
0x000000000052998a : int1 ; push qword ptr [rbp + rdi*8 + 0x4d240000] ; int1 ; call rsp
0x00000000005299c2 : int1 ; push qword ptr [rsi + rdi*8 + 0x50140000] ; int1 ; jmp rsp
0x0000000000401ce9 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x000000000040ff7b : int1 ; ret
0x00000000005184ca : int1 ; ret 0x250d
0x00000000004fd1ef : int1 ; ret 0x4c24
0x00000000004f58b8 : int1 ; ret 0x7130
0x00000000004f5567 : int1 ; ret 0xa995
0x00000000004fe1ac : int1 ; sbb al, 0xdc ; push rbp ; mov dl, 0xe1 ; ret
0x0000000000500685 : int1 ; stosb byte ptr [rdi], al ; ret
0x00000000004f9f25 : int1 ; sub al, 0x88 ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; outsb dx, byte ptr [rsi] ; mov ah, 0x19 ; jmp rcx
0x000000000051573a : int1 ; xchg eax, esi ; adc dh, byte ptr [rax + rbp*4 - 0xc] ; ret 0x82f4
0x000000000043d6b7 : int1 ; xor edx, edx ; mov esi, 3 ; jmp rax
0x000000000043bf9e : int1 ; xor edx, edx ; mov rsi, rsp ; call rax
0x000000000052ef35 : iretd ; add al, byte ptr [rax] ; hlt ; pop rsp ; cli ; call rsp
0x000000000054bf1d : iretd ; add dword ptr [rax], eax ; rcl ah, 0xf4 ; call qword ptr [rcx]
0x000000000045a278 : iretd ; call r15
0x000000000051175b : iretd ; jmp qword ptr [rsi]
0x000000000040306d : iretd ; jmp rax
0x00000000004f5aa0 : iretd ; jne 0x4f5a3e ; jmp qword ptr [rbx]
0x000000000045a29e : iretd ; mov qword ptr [rsp + 0x30], rcx ; call r15
0x00000000004c5e84 : iretd ; mov rdx, rdi ; lea rdi, qword ptr [r15 + 0x40] ; call rax
0x000000000052ed89 : iretd ; stc ; jmp rsp
0x00000000004023e1 : ja 0x4023f6 ; jl 0x4023f7 ; mov rax, rdi ; ret
0x0000000000406039 : ja 0x406045 ; ret
0x0000000000406045 : ja 0x406051 ; ret
0x0000000000416c67 : ja 0x416ca0 ; mov qword ptr [rdi + 0x38], r15 ; ret
0x0000000000416e08 : ja 0x416e41 ; mov qword ptr [rdi + 0x38], r15 ; ret
0x0000000000418bfe : ja 0x418bf5 ; ret
0x0000000000418e35 : ja 0x418e85 ; lea esp, dword ptr [rbx] ; ret
0x0000000000419883 : ja 0x4198a7 ; ret
0x00000000004198a1 : ja 0x4198c5 ; ret
0x00000000004198c2 : ja 0x4198ce ; ret
0x00000000004198d2 : ja 0x4198e6 ; ret
0x000000000041c2d2 : ja 0x41c2ee ; ret
0x0000000000420322 : ja 0x420363 ; mov eax, 1 ; ret
0x0000000000421dd2 : ja 0x421e36 ; ret
0x0000000000421ee5 : ja 0x421ef9 ; ret
0x0000000000421ef7 : ja 0x421f0b ; ret
0x0000000000421f15 : ja 0x421f89 ; ret
0x0000000000421f27 : ja 0x421f9b ; ret
0x0000000000422902 : ja 0x42292e ; ret
0x00000000004228f2 : ja 0x422939 ; mov dword ptr [rdi + 0x48], edx ; ret
0x0000000000422962 : ja 0x42296e ; ret
0x0000000000422942 : ja 0x422976 ; ret
0x0000000000422972 : ja 0x422986 ; ret
0x0000000000422982 : ja 0x42299e ; ret
0x0000000000422992 : ja 0x4229ba ; mov qword ptr [rdi + 0x28], rdx ; ret
0x00000000004229a2 : ja 0x4229da ; mov qword ptr [rdi + 0x38], rdx ; ret
0x00000000004229b2 : ja 0x4229fa ; mov qword ptr [rdi + 0x48], rdx ; ret
0x00000000004229c2 : ja 0x422a1a ; mov qword ptr [rdi + 0x58], rdx ; ret
0x00000000004229d2 : ja 0x422a3a ; mov qword ptr [rdi + 0x68], rdx ; ret
0x00000000004229e2 : ja 0x422a5a ; mov qword ptr [rdi + 0x78], rdx ; ret
0x0000000000438092 : ja 0x43809e ; ret
0x00000000004380a2 : ja 0x4380b6 ; ret
0x00000000004380b2 : ja 0x4380ce ; ret
0x00000000004380c4 : ja 0x4380e8 ; ret
0x0000000000438102 : ja 0x43812e ; ret
0x000000000043a6a7 : ja 0x43a6b8 ; mov eax, 1 ; ret
0x000000000043a6e2 : ja 0x43a753 ; mov eax, 1 ; ret
0x000000000043a6f2 : ja 0x43a76b ; mov eax, 1 ; ret
0x000000000043a702 : ja 0x43a783 ; mov eax, 1 ; ret
0x000000000043b80d : ja 0x43b81b ; mov edi, dword ptr [rdi] ; jmp rax
0x000000000043be12 : ja 0x43be4b ; mov eax, 1 ; ret
0x000000000043c002 : ja 0x43c05b ; mov eax, 1 ; ret
0x000000000043c1f2 : ja 0x43c253 ; mov eax, 1 ; ret
0x000000000043c552 : ja 0x43c5bb ; mov eax, 1 ; ret
0x000000000043cfe0 : ja 0x43d00c ; ret
0x000000000043ea12 : ja 0x43ea4e ; ret
0x00000000004442d2 : ja 0x444327 ; add cl, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000447792 : ja 0x4477b6 ; ret
0x00000000004477c2 : ja 0x4477de ; ret
0x00000000004477e2 : ja 0x44780e ; ret
0x000000000044a6b2 : ja 0x44a6d6 ; ret
0x000000000044a6e2 : ja 0x44a726 ; ret
0x000000000044aca1 : ja 0x44ace5 ; ret
0x000000000044acd1 : ja 0x44ad19 ; ret
0x000000000044acf1 : ja 0x44ad3d ; ret
0x000000000044ee01 : ja 0x44ee25 ; ret
0x000000000044efa1 : ja 0x44efd1 ; ret
0x000000000044efb3 : ja 0x44efe3 ; ret
0x0000000000452540 : ja 0x4524f3 ; ret
0x0000000000455141 : ja 0x455189 ; mov qword ptr [rdi + 0x38], rax ; ret
0x00000000004571c5 : ja 0x457173 ; ret
0x000000000045ce19 : ja 0x45ce32 ; mov qword ptr [rdi + 0x18], r15 ; ret
0x000000000045d262 : ja 0x45d27b ; mov qword ptr [rdi + 0x18], r15 ; ret
0x000000000045d453 : ja 0x45d49d ; movdqu xmmword ptr [rdi + 0x50], xmm7 ; ret
0x000000000045d5e0 : ja 0x45d5d7 ; ret
0x000000000045d6e2 : ja 0x45d6d9 ; ret
0x0000000000468b75 : ja 0x468b9e ; mov rdi, qword ptr [rdi + 0x10] ; jmp 0x468b47
0x000000000046a813 : ja 0x46a844 ; mov eax, 1 ; ret
0x000000000046aef2 : ja 0x46af0b ; mov eax, 1 ; ret
0x000000000046aff2 : ja 0x46b013 ; mov eax, 1 ; ret
0x000000000046b0f2 : ja 0x46b11b ; mov eax, 1 ; ret
0x000000000046b1f2 : ja 0x46b223 ; mov eax, 1 ; ret
0x0000000000472142 : ja 0x4721b6 ; ret
0x000000000048aa0e : ja 0x48aa42 ; ret
0x00000000004a0ac2 : ja 0x4a0b13 ; mov eax, 1 ; ret
0x00000000004a9575 : ja 0x4a9589 ; mov byte ptr [rdi], dl ; mov eax, 1 ; ret
0x00000000004a966f : ja 0x4a95c0 ; ret
0x00000000004a9689 : ja 0x4a9653 ; ret
0x00000000004ab4e2 : ja 0x4ab4ee ; ret
0x00000000004ab502 : ja 0x4ab516 ; ret
0x00000000004ab522 : ja 0x4ab53e ; ret
0x00000000004ab542 : ja 0x4ab566 ; ret
0x00000000004b0e82 : ja 0x4b0e96 ; ret
0x00000000004b0e92 : ja 0x4b0eae ; ret
0x00000000004b0ea2 : ja 0x4b0ec6 ; ret
0x00000000004b1862 : ja 0x4b18a6 ; ret
0x00000000004b3282 : ja 0x4b32ae ; ret
0x00000000004b3292 : ja 0x4b32fe ; ret
0x00000000004b3e0a : ja 0x4b3e26 ; ret
0x00000000004b3e52 : ja 0x4b3e63 ; or qword ptr [rdi + 0x18], 2 ; ret
0x00000000004b3e41 : ja 0x4b3e6d ; ret
0x00000000004b556a : ja 0x4b559e ; ret
0x00000000004b565a : ja 0x4b568e ; ret
0x00000000004b7216 : ja 0x4b722a ; ret
0x00000000004b75f7 : ja 0x4b7605 ; xor eax, eax ; ret
0x00000000004b7617 : ja 0x4b762d ; xor eax, eax ; ret
0x00000000004b7637 : ja 0x4b7655 ; xor eax, eax ; ret
0x00000000004b7657 : ja 0x4b767d ; xor eax, eax ; ret
0x00000000004b7677 : ja 0x4b76a5 ; xor eax, eax ; ret
0x00000000004b7697 : ja 0x4b76cd ; xor eax, eax ; ret
0x00000000004b780d : ja 0x4b781e ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004b784d : ja 0x4b785d ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000004b786d : ja 0x4b787d ; mov eax, dword ptr [rdi + 0x24] ; ret
0x00000000004be108 : ja 0x4be12d ; popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x00000000004c5cc9 : ja 0x4c5d31 ; lea rdi, qword ptr [r15 + 0x40] ; call rbx
0x00000000004c5f0c : ja 0x4c5f74 ; lea rdi, qword ptr [rdi + 0x40] ; call rbx
0x00000000004c63c2 : ja 0x4c642a ; lea rdi, qword ptr [r15 + 0x40] ; call rax
0x00000000004c6477 : ja 0x4c64df ; lea rdi, qword ptr [r15 + 0x40] ; call rax
0x00000000004c6f90 : ja 0x4c6faa ; mov rdx, qword ptr [rsp + 8] ; call r12
0x00000000004c7467 : ja 0x4c747f ; mov rdx, rax ; call r15
0x00000000004c767c : ja 0x4c7694 ; mov rdx, rax ; call r11
0x00000000004c8f7d : ja 0x4c8f74 ; ret
0x00000000004c9637 : ja 0x4c962e ; ret
0x00000000004f5ae3 : ja 0x4f5b3b ; pop rbp ; jg 0x4f5b21 ; ret
0x00000000004f81ea : ja 0x4f8251 ; xor dword ptr [rdi], edi ; xchg eax, ebp ; ret 0x5413
0x00000000004f84ea : ja 0x4f84b3 ; jns 0x4f8561 ; loopne 0x4f8564 ; ret 0xda27
0x00000000004faa05 : ja 0x4faa52 ; popfq ; out -9, eax ; xchg eax, esi ; ret
0x00000000004fc35f : ja 0x4fc2fa ; inc byte ptr [rbp + 0x2b62a352] ; ret
0x0000000000502c1a : ja 0x502c4e ; ret
0x0000000000504d69 : ja 0x504d10 ; ret 0xe3df
0x0000000000509bba : ja 0x509bd4 ; pop rbx ; add byte ptr [rsi + rbx], bl ; ret
0x000000000050a903 : ja 0x50a978 ; and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x000000000050ed48 : ja 0x50ed50 ; out 0xfa, al ; ret
0x000000000050ee64 : ja 0x50ee34 ; jno 0x50eeda ; call qword ptr [rax]
0x0000000000513a0c : ja 0x513a4b ; in al, 0x21 ; cmp edi, dword ptr [rcx + 0x30] ; ret 0x958e
0x000000000054671d : ja 0x546726 ; add byte ptr [rax - 0x70], dl ; jmp rsp
0x000000000054671c : ja 0x546727 ; add byte ptr [rax - 0x70], dl ; jmp rsp
0x0000000000553a68 : ja 0x553a76 ; ret
0x0000000000401db9 : jae 0x401dcc ; add byte ptr [rax], al ; movzx eax, byte ptr [rbp - 1] ; leave ; ret
0x000000000042be21 : jae 0x42be36 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x000000000042be31 : jae 0x42be46 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x000000000042e5c5 : jae 0x42e5a2 ; add al, ah ; ret
0x000000000042ea19 : jae 0x42e9f6 ; add al, ah ; ret
0x00000000004475e9 : jae 0x447640 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000447a12 : jae 0x447a18 ; call r14
0x000000000048e254 : jae 0x48e256 ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004bded2 : jae 0x4bdeb8 ; movdqu xmmword ptr [r8], xmm6 ; ret
0x00000000004be411 : jae 0x4be3f0 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret 0x4466
0x00000000004bec91 : jae 0x4bec70 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret 0x4466
0x00000000004bf35a : jae 0x4bf339 ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x00000000004c5b52 : jae 0x4c5bbb ; lea rdi, qword ptr [rbx + 0x40] ; call r8
0x00000000004c6672 : jae 0x4c66da ; lea rdi, qword ptr [rbx + 0x40] ; call rax
0x00000000004c676a : jae 0x4c67ce ; call rax
0x00000000004c84e6 : jae 0x4c84de ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c85a1 : jae 0x4c8599 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c863a : jae 0x4c8632 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c871a : jae 0x4c8712 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c8aa3 : jae 0x4c8a9b ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c8cc7 : jae 0x4c8cbf ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c8d75 : jae 0x4c8d6d ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x00000000004c8e9d : jae 0x4c8e81 ; or ch, al ; stc ; out dx, eax ; ret
0x00000000004c8f1d : jae 0x4c8f01 ; or ch, al ; stc ; out dx, eax ; ret
0x00000000004ca416 : jae 0x4ca41a ; or ah, al ; ret
0x00000000004cb06c : jae 0x4cb069 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000004f1275 : jae 0x4f12d4 ; add dl, ch ; ret
0x00000000004f7940 : jae 0x4f7967 ; ret
0x00000000004f8e48 : jae 0x4f8e42 ; push rcx ; ret 0xfe1a
0x00000000004f967d : jae 0x4f9642 ; pop rdi ; ret
0x00000000004fbaba : jae 0x4fbb39 ; ret
0x00000000004fc275 : jae 0x4fc2f7 ; cld ; ret
0x00000000004fe904 : jae 0x4fe932 ; ret
0x00000000004ffa44 : jae 0x4ffa28 ; imul edi, dword ptr [rax], 0x78 ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x0000000000502266 : jae 0x5021f7 ; ret
0x0000000000502266 : jae 0x5021f9 ; ret
0x0000000000504e9f : jae 0x504e64 ; ret
0x0000000000504fdf : jae 0x504fe4 ; jne 0x504f8f ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebx ; and al, 0xa5 ; ret 0x33c5
0x00000000005062e8 : jae 0x5062ec ; ret 0xd029
0x0000000000507cdd : jae 0x507d25 ; jge 0x507cd4 ; mov al, 0x6c ; sub cl, dh ; ret 0x861c
0x00000000005097ea : jae 0x5097a0 ; mov ah, 0xac ; ret
0x0000000000509ff9 : jae 0x50a027 ; jnp 0x50a004 ; nop ; jo 0x509f9a ; ret 0xd298
0x000000000050be42 : jae 0x50beba ; cmp eax, 0xdd6d2a48 ; ret 0xea0d
0x0000000000512396 : jae 0x512399 ; ret 0x1c87
0x0000000000514657 : jae 0x5146b4 ; and byte ptr [rbp + 9], dh ; ret
0x00000000005151f0 : jae 0x5151c9 ; out dx, al ; je 0x515253 ; ret
0x0000000000515b4a : jae 0x515b76 ; push rcx ; adc al, 0x87 ; ror esp, cl ; ret 0xcac1
0x0000000000517327 : jae 0x517397 ; ret 0xeeb6
0x0000000000530c61 : jae 0x530c52 ; call qword ptr [rsi]
0x00000000005321b1 : jae 0x5321a3 ; jmp qword ptr [rbx]
0x0000000000545b89 : jae 0x545b80 ; jmp rsi
0x0000000000413343 : jb 0x413047 ; ret
0x00000000004148d5 : jb 0x4145e7 ; ret
0x00000000004309ee : jb 0x43098a ; out 0xae, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000043e6fb : jb 0x43e70a ; mov rdi, rax ; mov rdx, qword ptr [rax + 0x38] ; jmp rdx
0x00000000004a627a : jb 0x4a62c0 ; idiv edi ; nop ; xor eax, eax ; ret
0x00000000004bdf0e : jb 0x4bdf73 ; ret
0x00000000004c457b : jb 0x4c4577 ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret 0xff3
0x00000000004c7837 : jb 0x4c782a ; ret
0x00000000004ce14a : jb 0x4ce169 ; cmc ; inc dword ptr [rbp - 0x7ce18b40] ; ret
0x00000000004ef990 : jb 0x4ef9d4 ; cdq ; pop rdx ; pop rsi ; out 0x6b, eax ; push rbp ; stc ; ret 0x98f0
0x00000000004f09b9 : jb 0x4f0944 ; pop rsp ; mov ah, 0x91 ; ret
0x00000000004ffef3 : jb 0x4ffe83 ; ret
0x0000000000503928 : jb 0x50392d ; ret 0x4a9d
0x0000000000504ec4 : jb 0x504f38 ; or dword ptr [rdi], 0x294f3319 ; ret 0x35cc
0x000000000050b6b6 : jb 0x50b723 ; wait ; ret 0x2128
0x000000000050c7dd : jb 0x50c814 ; mov al, 0xc4 ; ret 0xc5cc
0x000000000051135c : jb 0x511321 ; call rax
0x00000000005134c2 : jb 0x51351a ; add eax, 0x857d2e5c ; ret
0x0000000000513f81 : jb 0x513fc7 ; ret
0x000000000051574e : jb 0x5156e4 ; pop rsi ; ret
0x0000000000516bd3 : jb 0x516bed ; ret 0xd779
0x0000000000517ffe : jb 0x518007 ; sahf ; ret
0x0000000000517ffd : jb 0x518008 ; sahf ; ret
0x0000000000527fdd : jb 0x527fe5 ; add byte ptr [rsp], ah ; in eax, dx ; call rsp
0x0000000000528c71 : jb 0x528c64 ; call rsp
0x000000000052b689 : jb 0x52b681 ; jmp rsp
0x000000000052efa1 : jb 0x52ef9f ; jmp rsp
0x0000000000404487 : jbe 0x4044d9 ; lea eax, dword ptr [rsi + rdx*4] ; xor rax, rcx ; ret
0x000000000042be27 : jbe 0x42be5a ; leave ; ret 0x8581
0x000000000042be37 : jbe 0x42be6a ; leave ; ret 0x8581
0x00000000004309df : jbe 0x4309ce ; scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x00000000004a2a5e : jbe 0x4a2a93 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004a536f : jbe 0x4a537d ; xor eax, eax ; pop rbx ; ret
0x00000000004a5a6a : jbe 0x4a5a7f ; mov eax, 1 ; ret
0x00000000004ac528 : jbe 0x4ac574 ; call rax
0x00000000004b726d : jbe 0x4b7288 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b8ba0 : jbe 0x4b8bfa ; xor dl, byte ptr [rax] ; ret
0x00000000004ba1df : jbe 0x4ba16c ; ret 0xeac1
0x00000000004c77e3 : jbe 0x4c77f5 ; xor eax, eax ; ret
0x00000000004ca10c : jbe 0x4ca165 ; lea rsi, qword ptr [rsi + 0x60] ; ret
0x00000000004ca110 : jbe 0x4ca175 ; ret
0x00000000004cde5c : jbe 0x4cdeae ; add esp, 0xa8 ; ret
0x00000000004f0b46 : jbe 0x4f0b4d ; and dl, r15b ; ret
0x00000000004f0b45 : jbe 0x4f0b4e ; and dl, r15b ; ret
0x00000000004f793e : jbe 0x4f792d ; jae 0x4f7969 ; ret
0x00000000004f8d2c : jbe 0x4f8d22 ; ret
0x00000000004fa415 : jbe 0x4fa3ea ; scasb al, byte ptr [rdi] ; shl byte ptr [rdi + 0x31], 0x89 ; ret 0xc308
0x00000000004fb037 : jbe 0x4fb06e ; test dword ptr [rsi + 0x24], eax ; inc r13d ; jmp rsi
0x00000000004fbb77 : jbe 0x4fbb37 ; rcl dword ptr [rbp - 3], cl ; std ; ret 0x3148
0x00000000004fc50b : jbe 0x4fc4cf ; stosb byte ptr [rdi], al ; sahf ; stc ; in eax, 0x28 ; ret 0x8a49
0x00000000004feacf : jbe 0x4feac7 ; out dx, eax ; ret
0x00000000005020a0 : jbe 0x502040 ; leave ; ret 0xbe97
0x0000000000506116 : jbe 0x5060db ; ret
0x0000000000506116 : jbe 0x5060dc ; ret
0x00000000005062e5 : jbe 0x506303 ; xlatb ; jae 0x5062ef ; ret 0xd029
0x000000000050672b : jbe 0x50673d ; ret 0x6dd1
0x0000000000509186 : jbe 0x5091e0 ; stc ; ret
0x000000000050c96a : jbe 0x50c94c ; rcr eax, 1 ; ret
0x000000000050d78b : jbe 0x50d7b1 ; pop rdi ; xor ch, ch ; ret 0xa9bd
0x000000000050dc98 : jbe 0x50dc5f ; call 0xffffffffdce9bd39
0x0000000000510102 : jbe 0x510111 ; pop qword ptr [rbx - 0x72] ; ret
0x0000000000510f0c : jbe 0x510f27 ; ror ah, cl ; cmp esp, ebx ; push rax ; mov dh, 0x92 ; ret 0x54c
0x0000000000512dc6 : jbe 0x512d5a ; ret 0x62b7
0x0000000000513516 : jbe 0x513576 ; mov eax, dword ptr [rdx - 0x2d] ; jge 0x51355d ; ret 0xf356
0x00000000005145be : jbe 0x5145d6 ; fisubr dword ptr [rdx + rbp*8 + 0x40b6de34] ; ret 0xf1de
0x00000000005178d1 : jbe 0x517863 ; pop qword ptr [rax - 0x1289af4a] ; ret
0x00000000005178d7 : jbe 0x5178c9 ; ret
0x0000000000529bf9 : jbe 0x529bee ; call rsp
0x000000000052d879 : jbe 0x52d874 ; call rsp
0x000000000052d878 : jbe 0x52d875 ; call rsp
0x0000000000532461 : jbe 0x532453 ; jmp rsi
0x000000000054efc9 : jbe 0x54efc2 ; call qword ptr [rbx]
0x0000000000401c4d : je 0x401c68 ; pop rbp ; mov edi, 0x757c98 ; jmp rax
0x0000000000401c9b : je 0x401cb0 ; pop rbp ; mov edi, 0x757c98 ; jmp rax
0x0000000000401ce8 : je 0x401ce1 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000401fce : je 0x401ff8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000402d1d : je 0x402d17 ; mov eax, 0xffffffff ; ret
0x00000000004047e3 : je 0x404844 ; xor edi, edi ; call qword ptr [rax]
0x0000000000404a43 : je 0x404aa7 ; mov edi, 1 ; call qword ptr [rax]
0x0000000000404ba3 : je 0x404c04 ; xor edi, edi ; call qword ptr [rax]
0x0000000000404c2a : je 0x404c32 ; ret
0x0000000000404faa : je 0x404fbf ; mov rax, qword ptr [rax] ; xor edi, edi ; jmp rax
0x0000000000404fea : je 0x405000 ; mov rax, qword ptr [rax + 0x28] ; xor edi, edi ; jmp rax
0x0000000000405b1a : je 0x405b2e ; mov rax, qword ptr [rax + 0x50] ; jmp rax
0x0000000000405ea4 : je 0x405e32 ; adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000405f02 : je 0x405f17 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040605a : je 0x406063 ; ret
0x000000000040608a : je 0x406092 ; jmp rax
0x000000000040609e : je 0x4060b2 ; call rax
0x000000000040611a : je 0x406122 ; jmp rax
0x000000000040642e : je 0x40648a ; jmp rax
0x000000000040684a : je 0x406852 ; jmp rax
0x0000000000406d3e : je 0x406d48 ; xor esi, esi ; call rax
0x0000000000406f5f : je 0x406f6f ; xor r9d, r9d ; xor esi, esi ; call rax
0x000000000040700e : je 0x407018 ; xor esi, esi ; call rax
0x000000000040706a : je 0x407072 ; jmp rax
0x000000000040708a : je 0x407092 ; jmp rax
0x0000000000407465 : je 0x407491 ; or byte ptr [rcx], ch ; fidivr dword ptr [rcx] ; ret 0x8c0f
0x000000000040ba1c : je 0x40ba30 ; add eax, 1 ; mov dword ptr [rdi + 0x34], eax ; ret
0x0000000000413407 : je 0x413425 ; xor eax, eax ; ret
0x00000000004196fb : je 0x41970b ; mov rdi, rbx ; call rax
0x0000000000419841 : je 0x41984d ; mov rdi, rbx ; call rax
0x000000000041a0c0 : je 0x41a0cf ; mov edx, dword ptr [rax + 0x24] ; mov dword ptr [rsi], edx ; ret
0x000000000041a109 : je 0x41a0f9 ; cmp esi, eax ; jne 0x41a0fd ; mov rax, rdi ; ret
0x000000000041a123 : je 0x41a136 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000041a2f3 : je 0x41a306 ; mov rax, qword ptr [rdi + 0x50] ; ret
0x000000000041a313 : je 0x41a326 ; mov rax, qword ptr [rdi + 0x58] ; ret
0x000000000041a812 : je 0x41a829 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a858 : je 0x41a865 ; mov eax, ebx ; pop rbx ; ret
0x000000000041c79c : je 0x41c7ac ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000041c7fc : je 0x41c807 ; call r13
0x000000000041c833 : je 0x41c83c ; mov eax, dword ptr [rdi] ; ret
0x000000000041c8e3 : je 0x41c8f5 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000041d0a3 : je 0x41d0b6 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000041d0fa : je 0x41d102 ; ret
0x000000000041d1e5 : je 0x41d1eb ; call rax
0x000000000041d345 : je 0x41d356 ; add rsp, 8 ; jmp rax
0x000000000041d7ca : je 0x41d7d2 ; ret
0x000000000041d85a : je 0x41d86d ; mov rax, qword ptr [rax] ; jmp rax
0x000000000041d8ca : je 0x41d8de ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000041d93a : je 0x41d94e ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000041d98a : je 0x41d99e ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000041ffa8 : je 0x41ffb7 ; mov eax, 0x759930 ; ret
0x0000000000420005 : je 0x420012 ; call rax
0x0000000000420051 : je 0x420086 ; test esi, esi ; jne 0x4200c6 ; call rax
0x00000000004214d7 : je 0x4214f3 ; mov rdi, rbx ; call rdx
0x0000000000421aea : je 0x421af2 ; jmp rax
0x0000000000421baa : je 0x421bb2 ; jmp rax
0x0000000000421bdb : je 0x421c02 ; ret
0x0000000000421e73 : je 0x421e7e ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000421ec3 : je 0x421ed5 ; mov rax, qword ptr [rdi] ; ret
0x000000000042214c : je 0x42215b ; mov eax, dword ptr [rdx + 4] ; mov dword ptr [rsi], eax ; ret
0x0000000000422273 : je 0x422284 ; test byte ptr [rdi + 4], 1 ; jne 0x422289 ; ret
0x0000000000422318 : je 0x42231e ; call rax
0x0000000000422428 : je 0x42243c ; mov rdi, rbx ; call rax
0x000000000042272d : je 0x42273f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000423507 : je 0x423513 ; ret
0x0000000000423755 : je 0x423762 ; jmp rax
0x0000000000423b3d : je 0x423b4b ; ret
0x0000000000423df9 : je 0x423e32 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000424a1e : je 0x424a4b ; adc byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x2b48
0x0000000000424b8a : je 0x424b93 ; pop rbx ; ret
0x00000000004355bc : je 0x4355ea ; call rax
0x0000000000435d56 : je 0x435d66 ; add rsp, 8 ; jmp rax
0x0000000000437273 : je 0x437289 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x48] ; ret
0x00000000004372ba : je 0x437319 ; ret
0x00000000004372b9 : je 0x43731a ; ret
0x0000000000437d8a : je 0x437d92 ; ret
0x0000000000437dcf : je 0x437de9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000438f32 : je 0x438f5d ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000439bd9 : je 0x439bee ; mov rax, rbx ; pop rbx ; ret
0x0000000000439c49 : je 0x439c5e ; mov rax, rbx ; pop rbx ; ret
0x0000000000439cb9 : je 0x439cce ; mov rax, rbx ; pop rbx ; ret
0x000000000043a4b3 : je 0x43a4bf ; mov rdi, rbx ; call rax
0x000000000043b856 : je 0x43b867 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043bf9b : je 0x43bfd1 ; mov ecx, esi ; xor edx, edx ; mov rsi, rsp ; call rax
0x000000000043c18b : je 0x43c1c1 ; mov ecx, esi ; xor edx, edx ; mov rsi, rsp ; call rax
0x000000000043c4eb : je 0x43c521 ; mov ecx, esi ; xor edx, edx ; mov rsi, rsp ; call rax
0x000000000043ca48 : je 0x43ca53 ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x000000000043cdc7 : je 0x43cdd5 ; call rax
0x000000000043cf75 : je 0x43cf82 ; jmp rax
0x000000000043cfa5 : je 0x43cfb2 ; jmp rax
0x000000000043cfcf : je 0x43cfdb ; ret
0x000000000043d0b0 : je 0x43d0ba ; jmp rax
0x000000000043d0d9 : je 0x43d0f2 ; jmp rax
0x000000000043d125 : je 0x43d133 ; call rdx
0x000000000043d620 : je 0x43d62a ; jmp rax
0x000000000043d650 : je 0x43d65a ; jmp rax
0x000000000043d683 : je 0x43d692 ; jmp rax
0x000000000043e73b : je 0x43e745 ; call rdx
0x000000000043e7bf : je 0x43e7f2 ; call rax
0x000000000043e8cb : je 0x43e8d5 ; call rdx
0x000000000043e94f : je 0x43e982 ; call rdx
0x000000000043f4f2 : je 0x43f507 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000043f6e5 : je 0x43f6f7 ; jmp rax
0x000000000043f757 : je 0x43f732 ; jmp rax
0x000000000043f78f : je 0x43f7a8 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000043f9c6 : je 0x43f8fd ; call rax
0x000000000043fd0a : je 0x43fd32 ; call rax
0x00000000004410f6 : je 0x441112 ; call rax
0x000000000044486b : je 0x444859 ; cmp rcx, rsi ; je 0x444889 ; xor eax, eax ; ret
0x000000000044482e : je 0x444883 ; ret
0x0000000000444870 : je 0x444884 ; xor eax, eax ; ret
0x00000000004449e1 : je 0x4449f9 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000444a15 : je 0x444a71 ; add rsp, 8 ; ret
0x0000000000444a60 : je 0x444a73 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000044521e : je 0x44527d ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000445323 : je 0x445334 ; xor eax, eax ; ret
0x00000000004453d3 : je 0x4453e7 ; mov eax, 1 ; ret
0x0000000000446a63 : je 0x446a78 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000447404 : je 0x447410 ; mov rdi, rbp ; call rax
0x0000000000447400 : je 0x447414 ; test ebx, ebx ; je 0x447414 ; mov rdi, rbp ; call rax
0x00000000004475fa : je 0x447609 ; mov rdi, rbx ; call rdx
0x00000000004483e1 : je 0x4483f8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x3902
0x00000000004485d3 : je 0x4485e7 ; mov eax, 1 ; ret
0x0000000000448723 : je 0x448737 ; mov eax, 1 ; ret
0x0000000000448774 : je 0x448788 ; mov eax, 1 ; pop rbx ; ret
0x00000000004491f4 : je 0x449203 ; ret
0x00000000004491c8 : je 0x449208 ; std ; dec dword ptr [rax - 0x75] ; jnp 0x4491e0 ; call qword ptr [rax]
0x0000000000449214 : je 0x449223 ; ret
0x0000000000449288 : je 0x449297 ; mov eax, 1 ; ret
0x00000000004496d3 : je 0x4496e3 ; ret
0x000000000044ad24 : je 0x44ad3f ; call 0x407004
0x000000000044adba : je 0x44adc2 ; jmp rax
0x000000000044adfa : je 0x44ae02 ; jmp rax
0x000000000044ae3a : je 0x44ae42 ; jmp rax
0x000000000044ae7a : je 0x44ae82 ; jmp rax
0x000000000044aeba : je 0x44aec2 ; jmp rax
0x000000000044aefa : je 0x44af02 ; jmp rax
0x000000000044b283 : je 0x44b289 ; call rax
0x000000000044b2b3 : je 0x44b2b9 ; call rax
0x000000000044b333 : je 0x44b355 ; mov rdi, rbx ; call rax
0x000000000044b387 : je 0x44b3f5 ; mov rdi, rbx ; call rax
0x000000000044b463 : je 0x44b476 ; add rsp, 8 ; jmp rdx
0x000000000044c322 : je 0x44c337 ; mov qword ptr [rsp + 8], r10 ; jmp rax
0x000000000044c3b7 : je 0x44c3c2 ; jmp rax
0x000000000044c3f7 : je 0x44c402 ; jmp rax
0x0000000000450e1b : je 0x450e46 ; sbb byte ptr [rax - 0x77], cl ; ret 0x3abe
0x00000000004540f5 : je 0x45411f ; js 0x454086 ; ret
0x0000000000454cc1 : je 0x454ce0 ; and byte ptr [rax + 1], cl ; ret
0x000000000045a4e6 : je 0x45a4f3 ; ret
0x000000000045f9a6 : je 0x45f9d2 ; call rax
0x000000000045ffea : je 0x45fff2 ; ret
0x0000000000460037 : je 0x46003d ; call rax
0x000000000046005c : je 0x460068 ; mov rdi, rbx ; call rax
0x00000000004601a2 : je 0x4601b5 ; mov rdi, rbx ; call rax
0x000000000046032b : je 0x460337 ; mov rdi, rbx ; call rax
0x0000000000461c68 : je 0x461c5b ; mov eax, 0xffffffff ; ret
0x0000000000461d23 : je 0x461d3e ; add rsp, 0x18 ; ret
0x00000000004629e7 : je 0x462a1e ; pop rbx ; ret
0x0000000000464e1a : je 0x464e42 ; call rax
0x0000000000464faa : je 0x464fb2 ; ret
0x0000000000464fe7 : je 0x464fed ; call rax
0x0000000000465012 : je 0x46501e ; mov rdi, rbx ; call rax
0x0000000000465129 : je 0x46513c ; mov rdi, rbx ; call rax
0x000000000046529b : je 0x4652a7 ; mov rdi, rbx ; call rax
0x0000000000465507 : je 0x465512 ; ret
0x0000000000465590 : je 0x4655b3 ; pop rbx ; ret
0x0000000000465698 : je 0x4656c3 ; or byte ptr [rax - 0x77], cl ; ret
0x000000000046740e : je 0x46741a ; jmp rax
0x0000000000467c3a : je 0x467c42 ; ret
0x0000000000467c7a : je 0x467c80 ; call rax
0x0000000000467ca8 : je 0x467cb4 ; mov rdi, rbx ; call rax
0x0000000000467dd1 : je 0x467de4 ; mov rdi, rbx ; call rax
0x0000000000467f3e : je 0x467f4a ; mov rdi, rbx ; call rax
0x0000000000469d3a : je 0x469d42 ; ret
0x0000000000469d7f : je 0x469d99 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a397 : je 0x46a3a7 ; mov rdi, rbx ; call rax
0x000000000046a4a2 : je 0x46a4bb ; mov rdi, rbx ; call rdx
0x000000000046a4bd : je 0x46a4cf ; mov rdi, rbx ; call rax
0x000000000046a593 : je 0x46a5a5 ; mov eax, dword ptr [rdi + 0x14] ; ret
0x000000000046a628 : je 0x46a66a ; call rax
0x000000000046a62f : je 0x46a691 ; add rsp, 8 ; ret
0x000000000046a6c8 : je 0x46a70a ; call rax
0x000000000046a6cf : je 0x46a731 ; add rsp, 8 ; ret
0x000000000046a777 : je 0x46a7b0 ; add rsp, 8 ; jmp rax
0x000000000046a853 : je 0x46a860 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000046aa09 : je 0x46ab09 ; mov rdi, rbx ; call rax
0x000000000046ab6b : je 0x46ab7e ; add rsp, 8 ; jmp rax
0x000000000046abe4 : je 0x46ac05 ; mov rsi, rbp ; call rax
0x000000000046abee : je 0x46ac18 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046ace3 : je 0x46acf0 ; mov rax, qword ptr [rdi + 0x40] ; ret
0x000000000046ad37 : je 0x46ad69 ; add rsp, 0x28 ; jmp rax
0x000000000046ada7 : je 0x46adce ; add rsp, 0x18 ; jmp rax
0x000000000046bd93 : je 0x46bd9d ; call rax
0x000000000046be7a : je 0x46be8e ; add rsp, 8 ; ret
0x000000000046be73 : je 0x46beb2 ; call rax
0x000000000046c63b : je 0x46c645 ; call rdx
0x000000000046c7db : je 0x46c7e5 ; call rdx
0x000000000046c8db : je 0x46c8e5 ; call rdx
0x000000000046ca81 : je 0x46ca8b ; call rdx
0x000000000046cc31 : je 0x46cc3b ; call rdx
0x000000000046cde1 : je 0x46cdeb ; call rdx
0x000000000046d28a : je 0x46d351 ; mov rsi, rbx ; call rax
0x000000000046d1ec : je 0x46d369 ; mov rsi, rbx ; call rax
0x000000000046e9a2 : je 0x46e9b7 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046ec20 : je 0x46ec4c ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000046ec70 : je 0x46ec9c ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000046ecaf : je 0x46ecdb ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000046f0eb : je 0x46f072 ; ret
0x000000000046f3fb : je 0x46f42a ; push rax ; mov rdi, rbp ; mov edx, r12d ; call rbx
0x000000000046f4ec : je 0x46f51b ; mov rdi, rbp ; mov edx, r12d ; call rbx
0x000000000046fa53 : je 0x46fa67 ; mov eax, 1 ; ret
0x000000000046faf9 : je 0x46fb78 ; mov rsi, rbx ; mov rdi, rbp ; call rax
0x0000000000471095 : je 0x4710a8 ; mov eax, 1 ; pop rbx ; ret
0x000000000047140f : je 0x47141a ; ret
0x0000000000471430 : je 0x471439 ; pop rbx ; ret
0x0000000000471814 : je 0x471827 ; mov eax, 1 ; ret
0x0000000000471caa : je 0x4718c1 ; mov rdi, rbp ; call rax
0x0000000000471c43 : je 0x471c57 ; mov rdi, rbp ; call rax
0x000000000047201b : je 0x472022 ; jmp rax
0x000000000047203b : je 0x47204c ; xor ecx, ecx ; jmp rax
0x0000000000476b83 : je 0x476b97 ; mov eax, 1 ; ret
0x0000000000476d30 : je 0x476d3b ; ret
0x00000000004770bf : je 0x4771f6 ; call rax
0x00000000004778c2 : je 0x4778ef ; cmp byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x00000000004786b3 : je 0x4786d8 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000478c4b : je 0x478c5f ; mov eax, 0x39 ; ret
0x0000000000478c91 : je 0x478cd8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478f4b : je 0x478f60 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047a9c3 : je 0x47a9d5 ; mov rax, qword ptr [rdi] ; ret
0x000000000047a9e3 : je 0x47a9f6 ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000047b3d3 : je 0x47b3e5 ; mov rax, qword ptr [rdi] ; ret
0x000000000047bfb7 : je 0x47bfcd ; mov rdi, rbx ; call rax
0x0000000000480388 : je 0x480397 ; mov eax, 1 ; ret
0x00000000004804a8 : je 0x4804c3 ; ret
0x00000000004804f0 : je 0x4804fc ; mov eax, edx ; ret
0x0000000000480687 : je 0x4806bb ; ret
0x0000000000480782 : je 0x480794 ; cmp qword ptr [rsi + 0x58], 0x40 ; je 0x4807c9 ; ret
0x0000000000480789 : je 0x4807c2 ; ret
0x0000000000480788 : je 0x4807c3 ; ret
0x0000000000480d13 : je 0x480d26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048158f : je 0x4815a8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004842a5 : je 0x4842bd ; add rsp, 0x18 ; ret
0x0000000000484333 : je 0x484349 ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000484373 : je 0x484389 ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000484763 : je 0x484779 ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x0000000000484815 : je 0x484823 ; ret
0x0000000000484b8f : je 0x484b9a ; ret
0x0000000000485fa3 : je 0x485fb7 ; mov eax, 1 ; ret
0x0000000000485fd3 : je 0x485fe7 ; mov eax, 1 ; ret
0x000000000048a9b6 : je 0x48a9e1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048abd1 : je 0x48abe9 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048b90c : je 0x48b929 ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000048c151 : je 0x48c168 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048c5a3 : je 0x48c58e ; mov rdx, qword ptr [rdi + 8] ; mov qword ptr [rsi], rdx ; ret
0x000000000048c593 : je 0x48c5a4 ; xor eax, eax ; ret
0x000000000048c76d : je 0x48c77c ; xor eax, eax ; ret
0x000000000048c768 : je 0x48c791 ; cmp eax, 1 ; je 0x48c781 ; xor eax, eax ; ret
0x000000000048c77b : je 0x48c7b0 ; mov rdx, qword ptr [rdi + 8] ; mov qword ptr [rsi], rdx ; ret
0x000000000048e0c3 : je 0x48e0d8 ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000048e1fe : je 0x48e239 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490a2a : je 0x490a64 ; xor eax, eax ; ret
0x0000000000490bae : je 0x490b65 ; mov qword ptr [r9], 0 ; ret
0x0000000000490b6b : je 0x490b74 ; xor eax, eax ; ret
0x000000000049674a : je 0x496776 ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004969cf : je 0x4969fc ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r15
0x0000000000496a6a : je 0x496a97 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r15
0x0000000000496be0 : je 0x496c0d ; or byte ptr [rax - 0x77], cl ; out dx, eax ; call r15
0x0000000000497e42 : je 0x497e6f ; or byte ptr [rax - 0x77], cl ; out dx, eax ; call r15
0x0000000000497e59 : je 0x497e86 ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r15
0x0000000000497f58 : je 0x497f85 ; or byte ptr [rax - 0x77], cl ; out dx, eax ; call r15
0x00000000004986f3 : je 0x49871f ; or byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000499df8 : je 0x499e05 ; mov eax, edx ; pop rbx ; ret
0x000000000049db32 : je 0x49db41 ; mov eax, 1 ; ret
0x000000000049db31 : je 0x49db42 ; mov eax, 1 ; ret
0x000000000049fdb0 : je 0x49fdd3 ; pop rbx ; ret
0x000000000049fee0 : je 0x49ff03 ; pop rbx ; ret
0x00000000004a043b : je 0x4a04c3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a055b : je 0x4a05e3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a0a5b : je 0x4a0a91 ; mov ecx, esi ; xor edx, edx ; mov rsi, rsp ; call rax
0x00000000004a3b93 : je 0x4a3ba4 ; xor eax, eax ; ret
0x00000000004a3b8e : je 0x4a3bb0 ; cmp rdx, rax ; je 0x4a3ba9 ; xor eax, eax ; ret
0x00000000004a59f2 : je 0x4a5a36 ; add rsp, 8 ; ret
0x00000000004a6061 : je 0x4a608c ; mov edi, dword ptr [rdi] ; call rax
0x00000000004a6229 : je 0x4a6254 ; mov edi, dword ptr [rdi] ; call rax
0x00000000004a7fd2 : je 0x4a8038 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000004a8474 : je 0x4a8484 ; xor eax, eax ; ret
0x00000000004a8494 : je 0x4a84a4 ; xor eax, eax ; ret
0x00000000004a88ab : je 0x4a88b4 ; xor eax, eax ; ret
0x00000000004a88a6 : je 0x4a88c1 ; cmp eax, 0x17 ; je 0x4a88b9 ; xor eax, eax ; ret
0x00000000004a8ba6 : je 0x4a8bb3 ; ret
0x00000000004aae13 : je 0x4aae27 ; mov eax, 1 ; ret
0x00000000004ab299 : je 0x4ab2b0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rdx
0x00000000004ae4e8 : je 0x4ae4f7 ; mov eax, 1 ; ret
0x00000000004af6d5 : je 0x4af703 ; or byte ptr [rax - 0x77], cl ; fbstp dword ptr [rcx] ; in eax, dx ; call rax
0x00000000004b07b5 : je 0x4b0883 ; mov rdi, r13 ; call rax
0x00000000004b10c3 : je 0x4b10d4 ; call rax
0x00000000004b20b3 : je 0x4b20c5 ; mov rax, qword ptr [rdi] ; ret
0x00000000004b20d3 : je 0x4b20e6 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004b2328 : je 0x4b2338 ; mov rdi, rax ; call rdx
0x00000000004b2331 : je 0x4b2346 ; mov rax, rbx ; pop rbx ; ret
0x00000000004b2379 : je 0x4b237f ; call rax
0x00000000004b23b0 : je 0x4b23ba ; jmp rax
0x00000000004b23e0 : je 0x4b23ea ; jmp rax
0x00000000004b2410 : je 0x4b241a ; jmp rax
0x00000000004b2449 : je 0x4b2454 ; xor eax, eax ; ret
0x00000000004b2470 : je 0x4b247a ; jmp rax
0x00000000004b2490 : je 0x4b249a ; jmp rax
0x00000000004b24b0 : je 0x4b24ba ; jmp rax
0x00000000004b261d : je 0x4b2629 ; mov rdi, rbp ; call rax
0x00000000004b351c : je 0x4b3530 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b3ea1 : je 0x4b3eb8 ; mov rsi, qword ptr [rsp + 8] ; jmp 0x4b3e75
0x00000000004b3ea5 : je 0x4b3ecf ; or bl, ch ; ret
0x00000000004b441d : je 0x4b442c ; xor eax, eax ; ret
0x00000000004b4e58 : je 0x4b4e84 ; and byte ptr [rcx + rcx*4 - 0x39], cl ; call qword ptr [rbx]
0x00000000004b545f : je 0x4b5476 ; add rsp, 8 ; jmp rax
0x00000000004b54c0 : je 0x4b54d6 ; add rsp, 8 ; jmp rax
0x00000000004b5510 : je 0x4b5526 ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x00000000004b5540 : je 0x4b5556 ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x00000000004b5ad6 : je 0x4b5ae5 ; test byte ptr [rax], 8 ; jne 0x4b5ae8 ; ret
0x00000000004b6663 : je 0x4b6675 ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000004b66b3 : je 0x4b66c6 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004b6753 : je 0x4b6769 ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004b6773 : je 0x4b6789 ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x10] ; ret
0x00000000004b6793 : je 0x4b67a6 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004b683a : je 0x4b6856 ; mov rsi, rsp ; mov rdi, rdx ; call rcx
0x00000000004b70da : je 0x4b7102 ; call rax
0x00000000004b716d : je 0x4b7198 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000004b71d9 : je 0x4b7204 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000004b7301 : je 0x4b730f ; call rax
0x00000000004b735b : je 0x4b737a ; mov rdi, rbx ; call rax
0x00000000004b73be : je 0x4b73ce ; mov rdi, rbx ; call rax
0x00000000004b73c7 : je 0x4b73ff ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b751a : je 0x4b7522 ; ret
0x00000000004b75f3 : je 0x4b7604 ; mov qword ptr [rdi + 8], rsi ; xor eax, eax ; ret
0x00000000004b7613 : je 0x4b7624 ; mov qword ptr [rdi + 0x10], rsi ; xor eax, eax ; ret
0x00000000004b7633 : je 0x4b7644 ; mov qword ptr [rdi + 0x18], rsi ; xor eax, eax ; ret
0x00000000004b7653 : je 0x4b7664 ; mov qword ptr [rdi + 0x20], rsi ; xor eax, eax ; ret
0x00000000004b7673 : je 0x4b7684 ; mov qword ptr [rdi + 0x28], rsi ; xor eax, eax ; ret
0x00000000004b7693 : je 0x4b76a4 ; mov qword ptr [rdi + 0x30], rsi ; xor eax, eax ; ret
0x00000000004b76b3 : je 0x4b76c6 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004b76d3 : je 0x4b76e6 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004b76f3 : je 0x4b7706 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004b7713 : je 0x4b7726 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004b7733 : je 0x4b7746 ; mov rax, qword ptr [rdi + 0x28] ; ret
0x00000000004b7753 : je 0x4b7766 ; mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000004b7773 : je 0x4b7784 ; mov eax, dword ptr [rdi] ; ret
0x00000000004b7793 : je 0x4b77a5 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000004b77b3 : je 0x4b77c6 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004b8145 : je 0x4b8158 ; mov eax, edx ; add rsp, 8 ; ret
0x00000000004c6765 : je 0x4c6792 ; adc byte ptr [rax - 0x73], cl ; jae 0x4c67d3 ; call rax
0x00000000004c70d6 : je 0x4c7103 ; or byte ptr [rcx + rcx*4 - 1], cl ; call r14
0x00000000004cc1d1 : je 0x4cc1fd ; adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000004cc243 : je 0x4cc26f ; adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000004cdb64 : je 0x4cdb74 ; xor eax, eax ; ret
0x00000000004cdb84 : je 0x4cdb94 ; xor eax, eax ; ret
0x00000000004ef907 : je 0x4ef907 ; ret
0x00000000004f5382 : je 0x4f53e5 ; ret
0x00000000004f5563 : je 0x4f54ec ; pop rbp ; div ecx ; ret 0xa995
0x00000000004f67f1 : je 0x4f67b6 ; or byte ptr [rdx], dl ; pop rdx ; ret
0x00000000004f6960 : je 0x4f6979 ; outsb dx, byte ptr [rsi] ; jno 0x4f698d ; adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x00000000004f7183 : je 0x4f71cb ; xchg eax, edx ; ret
0x00000000004f7dcb : je 0x4f7d56 ; push rax ; bt dword ptr [rax - 9], -0x75 ; ret
0x00000000004f8277 : je 0x4f81ff ; and byte ptr [rbp], al ; xlatb ; ret
0x00000000004faa71 : je 0x4faa8a ; or edi, eax ; xchg eax, edx ; sahf ; pop rcx ; jne 0x4faae1 ; ret
0x00000000004fcda5 : je 0x4fcd7f ; mov esi, 0xf48c0012 ; ret
0x00000000004fcefe : je 0x4fcec9 ; imul esi, dword ptr [rcx], 0x42 ; ret 0xdc5a
0x0000000000508e55 : je 0x508e8f ; lahf ; ret 0xb224
0x0000000000508e54 : je 0x508e90 ; lahf ; ret 0xb224
0x0000000000508e53 : je 0x508ea8 ; je 0x508e91 ; lahf ; ret 0xb224
0x00000000005092e7 : je 0x50932b ; ret
0x0000000000509bb7 : je 0x509bf6 ; jno 0x509c3b ; adc bl, byte ptr [rbx] ; sbb al, 0x1e ; ret
0x000000000050f4f7 : je 0x50f520 ; ret 0x6948
0x00000000005129c0 : je 0x51297e ; cwde ; ret 0x1955
0x00000000005138ec : je 0x5138c4 ; cmp edi, dword ptr [rdx] ; ret
0x000000000051518d : je 0x515174 ; int1 ; ret
0x00000000005151f3 : je 0x515250 ; ret
0x000000000051573d : je 0x5156ea ; hlt ; ret 0x82f4
0x0000000000515ec2 : je 0x515eaf ; ret 0x89f6
0x0000000000518126 : je 0x51818b ; cmp eax, dword ptr [rdi + 0x63] ; ret
0x0000000000528035 : je 0x52803d ; add byte ptr [rcx + rbp*4 - 0x13], dl ; jmp rsp
0x00000000005285e4 : je 0x528580 ; add byte ptr [rax], al ; out dx, al ; call rsp
0x0000000000528790 : je 0x5287a5 ; out dx, eax ; jmp rsp
0x0000000000529cbc : je 0x529cd3 ; add dword ptr [rax], eax ; adc al, 0x95 ; int1 ; jmp rsp
0x000000000052a6e0 : je 0x52a712 ; jmp rsp
0x000000000052afdd : je 0x52afe6 ; add byte ptr [rbx - 0xd], ah ; jmp rsp
0x000000000052b47c : je 0x52b40f ; add dword ptr [rax], eax ; adc al, 0x3a ; hlt ; call rsp
0x000000000052b978 : je 0x52b915 ; hlt ; jmp rsp
0x000000000052c994 : je 0x52c997 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000052e298 : je 0x52e2e9 ; clc ; call rsp
0x000000000052e7c0 : je 0x52e785 ; clc ; jmp rsp
0x000000000053b64c : je 0x53b61b ; add byte ptr [rax], al ; rcr bl, 0xf0 ; jmp qword ptr [rbx]
0x000000000053f44c : je 0x53f459 ; add dword ptr [rax], eax ; jo 0x53f4c7 ; jmp qword ptr [rsi]
0x000000000054514c : je 0x5451b6 ; add dword ptr [rax], eax ; call qword ptr [rax]
0x000000000054ea4c : je 0x54ea4f ; add dword ptr [rax], eax ; push rax ; jo 0x54ea4f ; call qword ptr [rsi]
0x000000000054ee41 : je 0x54ee3a ; call qword ptr [rbx]
0x0000000000407112 : jg 0x40714d ; mov r8, qword ptr [rax] ; mov rsi, r10 ; jmp r9
0x0000000000408177 : jg 0x40817f ; jne 0x408174 ; ret
0x00000000004152fa : jg 0x415287 ; ret 0x4488
0x00000000004152f9 : jg 0x415288 ; ret 0x4488
0x0000000000416c6b : jg 0x416ca8 ; ret
0x0000000000416e0c : jg 0x416e49 ; ret
0x0000000000418e31 : jg 0x418e43 ; vzeroupper ; lea rsp, qword ptr [r11] ; ret
0x000000000041c10a : jg 0x41c11e ; ret 0x8b48
0x0000000000423502 : jg 0x423514 ; add byte ptr [rbx - 0xcf88bf9], cl ; ret
0x00000000004274cc : jg 0x4274dd ; movd dword ptr [rdi + 0x10], xmm1 ; ret
0x00000000004280b5 : jg 0x4280bf ; and al, 0xc1 ; ret
0x000000000042c2f5 : jg 0x42c30e ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000042c2f9 : jg 0x42c356 ; adc bl, dh ; ret
0x000000000043ca76 : jg 0x43ca8e ; mov rcx, qword ptr [rax] ; jmp r8
0x000000000043cab6 : jg 0x43cace ; mov rcx, qword ptr [rax] ; jmp r8
0x0000000000448ad9 : jg 0x448ac0 ; cmp byte ptr [rsi], 0 ; js 0x448af0 ; ret
0x000000000045a4e3 : jg 0x45a4fb ; add al, 0x74 ; or bl, dh ; ret
0x000000000045ce1d : jg 0x45ce3a ; ret
0x000000000045d266 : jg 0x45d283 ; ret
0x000000000045d458 : jg 0x45d4ad ; ret
0x000000000045d452 : jg 0x45d4d4 ; movdqu xmmword ptr [rdi + 0x50], xmm7 ; ret
0x000000000045d457 : jg 0x45d4dc ; push rax ; ret
0x000000000045d508 : jg 0x45d57a ; and bl, dh ; movq qword ptr [rdi + 0x30], mm5 ; ret
0x000000000045d50d : jg 0x45d582 ; xor bl, dh ; ret
0x000000000045d6dd : jg 0x45d745 ; and ch, al ; clc ; ja 0x45d6de ; ret
0x0000000000468b79 : jg 0x468b8e ; jmp 0x468b43
0x000000000046c83b : jg 0x46c866 ; adc byte ptr [rbp + 0x10], dh ; add rsp, 8 ; jmp rax
0x0000000000484812 : jg 0x484822 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004a2377 : jg 0x4a22f9 ; mov byte ptr [rdi], 0 ; ret
0x00000000004a2768 : jg 0x4a26b1 ; xor eax, eax ; ret
0x00000000004a39d9 : jg 0x4a39f1 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8ba3 : jg 0x4a8baf ; sbb al, 0x74 ; or bl, dh ; ret
0x00000000004a9683 : jg 0x4a9646 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x4a9659 ; ret
0x00000000004ab153 : jg 0x4ab153 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b2bf9 : jg 0x4b2c15 ; jmp 0x4b2ca8
0x00000000004b5514 : jg 0x4b5548 ; jmp rax
0x00000000004b5544 : jg 0x4b5578 ; jmp rax
0x00000000004bdda5 : jg 0x4bddc4 ; ret
0x00000000004bde30 : jg 0x4bde3b ; ret
0x00000000004bde50 : jg 0x4bde5b ; ret
0x00000000004bded7 : jg 0x4bdf0c ; ret
0x00000000004c5ccd : jg 0x4c5d11 ; call rbx
0x00000000004c5e8a : jg 0x4c5ece ; call rax
0x00000000004c5f10 : jg 0x4c5f54 ; call rbx
0x00000000004c63c6 : jg 0x4c640a ; call rax
0x00000000004c647b : jg 0x4c64bf ; call rax
0x00000000004c672b : jg 0x4c676f ; call rax
0x00000000004c86a3 : jg 0x4c8710 ; push rax ; ret
0x00000000004c8766 : jg 0x4c8772 ; ret
0x00000000004c8dc2 : jg 0x4c8dce ; ret
0x00000000004c9633 : jg 0x4c9652 ; vzeroupper ; ret
0x00000000004cf022 : jg 0x4cf043 ; movdqu xmmword ptr [rdi + 0x10], xmm0 ; ret
0x00000000004cf026 : jg 0x4cf073 ; adc bl, dh ; ret
0x00000000004f09d0 : jg 0x4f0a02 ; and bh, byte ptr [rsi - 0x26] ; xchg eax, ebx ; ret
0x00000000004f1722 : jg 0x4f178a ; ret
0x00000000004f1c52 : jg 0x4f1c6a ; mov edi, 0x18008dac ; ret
0x00000000004f5ae6 : jg 0x4f5b1e ; ret
0x00000000004f8761 : jg 0x4f87a1 ; ret
0x000000000050225f : jg 0x50225a ; test dword ptr [rbx + rsi*8 - 0x728c136b], ecx ; ret
0x000000000050581a : jg 0x5057d6 ; xchg eax, esi ; add eax, 0x64b0408d ; ret
0x0000000000505d8b : jg 0x505d9c ; sbb bh, al ; ret
0x0000000000507b4a : jg 0x507ae6 ; xchg eax, ebp ; ret
0x00000000005086c8 : jg 0x50873f ; ret 0x2642
0x000000000050caca : jg 0x50ca8c ; pushfq ; sbb edx, dword ptr [rsi + 0x290570e1] ; ret 0x2f5c
0x000000000050ed46 : jg 0x50ed68 ; ja 0x50ed52 ; out 0xfa, al ; ret
0x000000000050ed45 : jg 0x50ed69 ; ja 0x50ed53 ; out 0xfa, al ; ret
0x0000000000510606 : jg 0x5105e7 ; sub byte ptr [rsi + 0x4d352818], 0x65 ; ret
0x00000000005158ed : jg 0x515934 ; cmp cl, byte ptr [rbx - 0x6d94d81b] ; clc ; ret 0x9f2e
0x000000000052b759 : jg 0x52b751 ; call rsp
0x000000000052d8f1 : jg 0x52d8ec ; call rsp
0x000000000052d941 : jg 0x52d93c ; call rsp
0x0000000000546ee5 : jg 0x546eee ; add al, bh ; popfq ; call rbx
0x000000000040a15c : jge 0x40a0f6 ; call 0x4149e8
0x0000000000417b3b : jge 0x417b13 ; ret 0x43c4
0x0000000000417bb2 : jge 0x417b8a ; ret 0x43c4
0x0000000000418063 : jge 0x41805b ; ret 0x7ec5
0x000000000041808f : jge 0x418087 ; ret 0x7ec5
0x00000000004180f3 : jge 0x4180eb ; ret
0x0000000000418124 : jge 0x41811c ; ret
0x00000000004180be : jge 0x41811f ; push rbp ; adc byte ptr [rax - 0x77], cl ; ret 0xf48
0x00000000004180bd : jge 0x418120 ; push rbp ; adc byte ptr [rax - 0x77], cl ; ret 0xf48
0x0000000000418150 : jge 0x418148 ; ret
0x000000000041819e : jge 0x418196 ; ret 0x79c5
0x00000000004181d3 : jge 0x4181cb ; ret 0x7ec5
0x00000000004181ff : jge 0x4181f7 ; ret 0x7ec5
0x000000000041824b : jge 0x418243 ; ret
0x000000000041827c : jge 0x418274 ; ret
0x00000000004182a8 : jge 0x4182a0 ; ret
0x00000000004182ee : jge 0x4182e6 ; ret 0x79c5
0x0000000000418323 : jge 0x41831b ; ret 0x7ec5
0x000000000041834f : jge 0x418347 ; ret 0x7ec5
0x0000000000418394 : jge 0x41838c ; ret
0x00000000004183ca : jge 0x4183c2 ; ret
0x00000000004183f6 : jge 0x4183ee ; ret
0x0000000000421c80 : jge 0x421c5d ; mov eax, 0x1ad ; pop rbx ; ret
0x000000000042a265 : jge 0x42a267 ; ret
0x000000000042a264 : jge 0x42a268 ; ret
0x000000000042e15e : jge 0x42e19e ; add al, 0x24 ; add esp, eax ; ret
0x0000000000432f08 : jge 0x432f0c ; ret 0xc3c4
0x0000000000432f08 : jge 0x432f0e ; ret 0xc3c4
0x0000000000432ef9 : jge 0x432f39 ; add al, 0x24 ; add esp, eax ; ret
0x0000000000433016 : jge 0x432fee ; ret
0x00000000004330f9 : jge 0x4330d1 ; ret
0x0000000000446942 : jge 0x446997 ; add cl, ch ; ret 0xffff
0x000000000047b40a : jge 0x47b452 ; ret
0x000000000049fb7a : jge 0x49fb01 ; ret 0x3901
0x00000000004b9308 : jge 0x4b9307 ; out dx, eax ; inc dword ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x00000000004caaef : jge 0x4cab48 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004cab05 : jge 0x4cab5e ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004e61c6 : jge 0x4e6191 ; push rdx ; lahf ; ret 0x7700
0x00000000004f0b44 : jge 0x4f0b97 ; jbe 0x4f0b4f ; and dl, r15b ; ret
0x00000000004f5101 : jge 0x4f50df ; ret 0xfb5b
0x00000000004f50ff : jge 0x4f50ee ; jge 0x4f50e1 ; ret 0xfb5b
0x00000000004f7733 : jge 0x4f76db ; ret 0xaeee
0x00000000004f7d5a : jge 0x4f7ce6 ; test cl, dh ; ret 0x370f
0x00000000004fc4a3 : jge 0x4fc4ce ; add esi, esp ; ret 0xc6d7
0x00000000004fe2cb : jge 0x4fe2df ; or dword ptr [rax], eax ; pushfq ; ret 0x51d8
0x00000000004fef2d : jge 0x4fef17 ; add byte ptr [rdi + 0x45], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x4fef70 ; ret 0xc109
0x00000000004fff4c : jge 0x4fff29 ; mov cl, 0xb4 ; jp 0x4fff39 ; scasd eax, dword ptr [rdi] ; and eax, esp ; ret 0xbd61
0x0000000000500bc6 : jge 0x500c18 ; in al, dx ; call rsp
0x0000000000503045 : jge 0x5030c5 ; ret
0x0000000000506225 : jge 0x5061cd ; jmp 0x2db8c68e
0x00000000005071f4 : jge 0x5071c6 ; ret
0x00000000005071f3 : jge 0x5071c7 ; ret
0x0000000000507cdf : jge 0x507cd2 ; mov al, 0x6c ; sub cl, dh ; ret 0x861c
0x0000000000507cde : jge 0x507cd3 ; mov al, 0x6c ; sub cl, dh ; ret 0x861c
0x000000000050a91c : jge 0x50a924 ; pop rdi ; pop r12 ; jmp 0xffffffffc301e173
0x000000000050b33a : jge 0x50b359 ; in eax, dx ; push rbp ; ret 0x89e7
0x000000000050bf1a : jge 0x50bf79 ; ret
0x00000000005134c7 : jge 0x513450 ; ret
0x00000000005134c6 : jge 0x513451 ; ret
0x000000000051351b : jge 0x513558 ; ret 0xf356
0x0000000000513b19 : jge 0x513ac4 ; ret
0x0000000000516292 : jge 0x51623d ; jns 0x516228 ; ret
0x0000000000529c59 : jge 0x529c4e ; call rsp
0x0000000000529c58 : jge 0x529c4f ; call rsp
0x000000000052d3a1 : jge 0x52d39b ; jmp rsp
0x000000000053f8c1 : jge 0x53f8b7 ; jmp qword ptr [rsi]
0x0000000000546dad : jge 0x546db6 ; add byte ptr [rax], al ; pushfq ; call qword ptr [rdx]
0x00000000004023e3 : jl 0x4023f5 ; mov rax, rdi ; ret
0x00000000004051ee : jl 0x40521c ; adc bh, bh ; push rax ; adc byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000406b48 : jl 0x406b4e ; xor al, 0 ; mov qword ptr [rdx], rax ; ret
0x000000000040f99b : jl 0x40f9a7 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041e870 : jl 0x41e89d ; or byte ptr [rcx + rcx*4 - 2], cl ; call r12
0x0000000000420647 : jl 0x420672 ; adc al, 0xf ; lahf ; ret 0xb60f
0x0000000000437547 : jl 0x437572 ; or byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000438af7 : jl 0x438b25 ; cmp byte ptr [rbx + 0x490f07c2], al ; ret 0x8b48
0x000000000043c26c : jl 0x43c297 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000043c5cc : jl 0x43c5f7 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000443cbe : jl 0x443ce9 ; sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000044e506 : jl 0x44e531 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000450fdf : jl 0x45100a ; adc byte ptr [rdi], cl ; ret 0xf8c1
0x000000000045101c : jl 0x451047 ; or byte ptr [rdi], cl ; ret 0xf8c1
0x00000000004510c0 : jl 0x4510eb ; sbb byte ptr [rax - 0x77], cl ; ret 0x57be
0x000000000045a392 : jl 0x45a3c0 ; sub byte ptr [rax - 0x75], cl ; and al, 0x38 ; call rax
0x0000000000465e9d : jl 0x465ec8 ; adc al, ch ; jmp 0x465e6b
0x0000000000465fda : jl 0x466005 ; xor al, ch ; outsb dx, byte ptr [rsi] ; ret
0x0000000000466052 : jl 0x46607d ; adc al, ch ; ret 0xfff9
0x000000000046618c : jl 0x4661b7 ; xor al, ch ; insb byte ptr [rdi], dx ; ret 0xfff9
0x00000000004663e8 : jl 0x466412 ; add al, 0x89 ; ret 0x8944
0x000000000046dd89 : jl 0x46ddb4 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000471a82 : jl 0x471ab0 ; or byte ptr [rbp - 0x7cc48001], al ; ret
0x000000000047fdda : jl 0x47fe05 ; adc byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000480d7c : jl 0x480d68 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487650 : jl 0x48765a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048944c : jl 0x489477 ; sbb byte ptr [rax - 0x77], cl ; ret 0xde89
0x00000000004894dc : jl 0x489507 ; xor byte ptr [rax - 0x77], cl ; ret 0xde89
0x000000000048cc5c : jl 0x48cc87 ; and byte ptr [rax - 0x77], cl ; ret
0x000000000049428b : jl 0x4942b6 ; sbb byte ptr [rax + 1], cl ; ret
0x00000000004a98b9 : jl 0x4a98e8 ; or byte ptr [rcx + rcx*4 + 0x64], cl ; and al, 0x28 ; call r15
0x00000000004ad21b : jl 0x4ad246 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000004b056b : jl 0x4b0596 ; sub al, ch ; std ; ret 0xfff6
0x00000000004b5565 : jl 0x4b55e3 ; add byte ptr [rax - 0x77], cl ; ja 0x4b55a3 ; ret
0x00000000004b5564 : jl 0x4b55e4 ; add byte ptr [rax - 0x77], cl ; ja 0x4b55a4 ; ret
0x00000000004b5655 : jl 0x4b56d3 ; add byte ptr [rax - 0x77], cl ; ja 0x4b5693 ; ret
0x00000000004b58f7 : jl 0x4b5922 ; adc byte ptr [rax - 0x77], cl ; ret 0x50be
0x00000000004c5e77 : jl 0x4c5ea2 ; adc byte ptr [rax + 1], cl ; ret
0x00000000004c66b4 : jl 0x4c66e2 ; adc byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x00000000004c6af8 : jl 0x4c6b00 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004ce160 : jl 0x4ce140 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004e61c4 : jl 0x4e617d ; jge 0x4e6193 ; push rdx ; lahf ; ret 0x7700
0x00000000004ece84 : jl 0x4ece56 ; add ecx, ecx ; ret
0x00000000004eecc6 : jl 0x4eec8b ; ret 0xd8e5
0x00000000004f0a10 : jl 0x4f09a0 ; leave ; ret 0x8d33
0x00000000004f717e : jl 0x4f7169 ; in al, dx ; fdiv qword ptr [rbx + rax*2 - 0x6e] ; ret
0x00000000004f9295 : jl 0x4f9224 ; mov ecx, dword ptr [rip + 0x569ad4d1] ; scasb al, byte ptr [rdi] ; ret 0x2687
0x00000000004f995f : jl 0x4f993f ; ret
0x00000000004fa106 : jl 0x4fa0e7 ; ret 0x278f
0x00000000004fa18f : jl 0x4fa193 ; ret
0x00000000004fa642 : jl 0x4fa646 ; ffree st(7) ; ret 0x4823
0x00000000004fc276 : jl 0x4fc277 ; ret
0x00000000004fdb67 : jl 0x4fdb8e ; mov eax, esi ; xchg eax, edi ; or bl, byte ptr ss:[rcx] ; ret
0x0000000000500a92 : jl 0x500aea ; fisubr dword ptr [rcx - 0x39] ; test al, 0xdf ; insb byte ptr [rdi], dx ; ret
0x0000000000500cf6 : jl 0x500cf7 ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x00000000005027ba : jl 0x5027c8 ; ret
0x000000000050705f : jl 0x506ff1 ; ret
0x0000000000507e50 : jl 0x507e40 ; out dx, al ; test eax, 0x3c37951e ; ret
0x0000000000508be7 : jl 0x508c29 ; lea edi, dword ptr [rsi] ; in al, dx ; ret
0x000000000050c536 : jl 0x50c566 ; push rax ; jmp qword ptr [rdi]
0x000000000050c7d9 : jl 0x50c7b6 ; in eax, 0x58 ; jb 0x50c818 ; mov al, 0xc4 ; ret 0xc5cc
0x000000000050f79a : jl 0x50f773 ; stosb byte ptr [rdi], al ; mov word ptr [rdi - 0x69], fs ; ret
0x00000000005126e3 : jl 0x512711 ; jl 0x512718 ; lahf ; ret 0x8012
0x00000000005126e2 : jl 0x512712 ; jl 0x512719 ; lahf ; ret 0x8012
0x00000000005126e5 : jl 0x512716 ; lahf ; ret 0x8012
0x000000000051482c : jl 0x51487d ; ret 0x5767
0x000000000051482b : jl 0x51487e ; ret 0x5767
0x000000000052e8cc : jl 0x52e87c ; add al, byte ptr [rax] ; xchg eax, esp ; sar al, cl ; call rsp
0x000000000052ee84 : jl 0x52ee55 ; add al, byte ptr [rax] ; xor al, 0x35 ; cli ; jmp rsp
0x0000000000536f54 : jl 0x536fdd ; add byte ptr [rax], al ; call 0xffffffffc4535f99
0x000000000053e254 : jl 0x53e24d ; add byte ptr [rax], al ; clc ; ret
0x000000000053ef54 : jl 0x53ef5c ; add byte ptr [rax], al ; fsub dword ptr [rax - 0xe] ; call qword ptr [rsi]
0x0000000000541054 : jl 0x54107b ; add dword ptr [rax], eax ; ret
0x0000000000545254 : jl 0x5452bf ; add dword ptr [rax], eax ; test al, 0x66 ; call qword ptr [rax]
0x0000000000545754 : jl 0x5457c4 ; add dword ptr [rax], eax ; clc ; jmp qword ptr [edi]
0x0000000000546c0d : jl 0x546c16 ; add al, dl ; cdq ; call qword ptr [rsi]
0x0000000000547154 : jl 0x5470de ; add dword ptr [rax], eax ; pop rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rdi
0x000000000054eb54 : jl 0x54eb58 ; add dword ptr [rax], eax ; test al, 0x70 ; cmc ; call qword ptr [rsi]
0x0000000000550354 : jl 0x550370 ; add al, byte ptr [rax] ; sub cl, al ; cmc ; call qword ptr [rbx]
0x0000000000553354 : jl 0x5533a0 ; add al, byte ptr [rax] ; sbb byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x0000000000553bf1 : jl 0x553beb ; jmp qword ptr [rbx]
0x000000000040266b : jle 0x402673 ; ret
0x0000000000402889 : jle 0x402892 ; cmp edx, 0xff ; jne 0x402858 ; ret
0x00000000004045f0 : jle 0x4045fc ; pop rbx ; ret
0x0000000000406161 : jle 0x40616b ; pop rbx ; ret
0x000000000040625e : jle 0x406272 ; xchg eax, esp ; ret 0xf631
0x000000000040713b : jle 0x407143 ; ret
0x0000000000409a10 : jle 0x409a16 ; dec dword ptr [rax + 0x63] ; ret
0x00000000004179dc : jle 0x417a53 ; push rbp ; call 0x4a040332
0x00000000004179db : jle 0x417a54 ; push rbp ; call 0x4a040333
0x0000000000417a1c : jle 0x417a93 ; pop rbp ; sub byte ptr [rcx + 1], cl ; ret 0x8948
0x0000000000417a1b : jle 0x417a94 ; pop rbp ; sub byte ptr [rcx + 1], cl ; ret 0x8948
0x00000000004197f4 : jle 0x419805 ; mov eax, edx ; pop rbx ; ret
0x000000000041a167 : jle 0x41a159 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004274d0 : jle 0x427525 ; adc bl, dh ; ret
0x000000000043a467 : jle 0x43a49f ; pop rbx ; ret
0x000000000043d5d9 : jle 0x43d5e4 ; pop rbx ; ret
0x000000000043e741 : jle 0x43e74b ; pop rbx ; ret
0x000000000043e7c5 : jle 0x43e7d7 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000043e8d1 : jle 0x43e8db ; pop rbx ; ret
0x000000000043e955 : jle 0x43e967 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000044c87e : jle 0x44c899 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044c90e : jle 0x44c929 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044e439 : jle 0x44e444 ; pop rbx ; ret
0x00000000004525ac : jle 0x4525bc ; pop rbx ; ret
0x00000000004529dc : jle 0x4529ec ; pop rbx ; ret
0x000000000045722c : jle 0x45723c ; pop rbx ; ret
0x00000000004576cc : jle 0x4576dc ; pop rbx ; ret
0x000000000045a679 : jle 0x45a684 ; pop rbx ; ret
0x000000000045a6f9 : jle 0x45a704 ; pop rbx ; ret
0x0000000000460319 : jle 0x460324 ; pop rbx ; ret
0x0000000000465289 : jle 0x465294 ; pop rbx ; ret
0x0000000000467f29 : jle 0x467f34 ; pop rbx ; ret
0x000000000046c641 : jle 0x46c64b ; pop rbx ; ret
0x000000000046c7e1 : jle 0x46c7eb ; pop rbx ; ret
0x000000000046c8e1 : jle 0x46c8eb ; pop rbx ; ret
0x000000000046ca87 : jle 0x46ca93 ; pop rbx ; ret
0x000000000046cc37 : jle 0x46cc43 ; pop rbx ; ret
0x000000000046cde7 : jle 0x46cdf3 ; pop rbx ; ret
0x000000000046e809 : jle 0x46e813 ; ret
0x0000000000480786 : jle 0x4807e5 ; je 0x4807c5 ; ret
0x000000000049338c : jle 0x4933d6 ; push rbx ; sbb dl, byte ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049396b : jle 0x493919 ; jmp rsi
0x00000000004a043c : jle 0x4a048d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a0531 : jle 0x4a0598 ; mov rdi, qword ptr [rbx + 8] ; call 0x41c838
0x00000000004a055c : jle 0x4a05ad ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b7a82 : jle 0x4b7aae ; sub al, byte ptr [rax] ; ret
0x00000000004ece71 : jle 0x4ecea3 ; push rsi ; ret 0x3a22
0x00000000004ecf95 : jle 0x4ed003 ; mov edx, 0xc2ac05eb ; jmp qword ptr gs:[rbx]
0x00000000004eec26 : jle 0x4eebbf ; add esi, ecx ; xchg eax, esp ; xor edx, dword ptr [rsi + 7] ; ret
0x00000000004f0006 : jle 0x4f003b ; ret 0xbde5
0x00000000004f09d3 : jle 0x4f09b2 ; xchg eax, ebx ; ret
0x00000000004f23c2 : jle 0x4f23f7 ; ret 0xbde5
0x00000000004f4d60 : jle 0x4f4d79 ; salc ; out -0x2e, eax ; jo 0x4f4cfd ; ret 0x65aa
0x00000000004f5d8a : jle 0x4f5dcd ; insb byte ptr [rdi], dx ; ret
0x00000000004fdb8f : jle 0x4fdbc8 ; add dl, byte ptr [rsi + rdi*4 - 0x6a73c358] ; ret 0x45da
0x00000000004fe8bc : jle 0x4fe8c0 ; ret 0x25f3
0x00000000004fe8bb : jle 0x4fe8c1 ; ret 0x25f3
0x0000000000501e23 : jle 0x501e34 ; pop rbx ; jno 0x501dce ; ret
0x0000000000501fe7 : jle 0x501f76 ; adc byte ptr ds:[rcx - 0x18bf7c53], dl ; ret
0x0000000000506503 : jle 0x506528 ; ret
0x000000000050718a : jle 0x50712c ; ret 0x54c5
0x0000000000507189 : jle 0x50712d ; ret 0x54c5
0x000000000050a9d0 : jle 0x50aa1a ; push rdi ; ret 0xefcf
0x000000000050aad1 : jle 0x50aaf2 ; xchg eax, esp ; or byte ptr [rdx + 0x69], bh ; ret
0x00000000005107ed : jle 0x510795 ; ret
0x00000000005108d5 : jle 0x5108d5 ; ret
0x00000000005108d4 : jle 0x5108d6 ; ret
0x00000000005108d3 : jle 0x5108d7 ; ret
0x00000000005180ac : jle 0x51807b ; ret 0x5f2d
0x000000000052e125 : jle 0x52e12f ; add byte ptr [rdi + rbp - 8], dl ; call rsp
0x0000000000507228 : jmp 0x1037057b
0x00000000004fd166 : jmp 0x11cf323
0x0000000000508d72 : jmp 0x1639504c
0x0000000000513aef : jmp 0x1ffc5ed0
0x00000000004571b6 : jmp 0x207f507
0x00000000004571b6 : jmp 0x207f50b
0x0000000000506227 : jmp 0x2db8c68c
0x000000000042bd1f : jmp 0x39997f81
0x0000000000506f3c : jmp 0x3c9f120
0x000000000040176b : jmp 0x401727
0x00000000004054a4 : jmp 0x40545e
0x000000000040bb8b : jmp 0x40bb51
0x000000000040bec9 : jmp 0x40becf
0x0000000000411c9d : jmp 0x411c62
0x0000000000411cea : jmp 0x411caf
0x0000000000411d3a : jmp 0x411cff
0x0000000000411d89 : jmp 0x411d4e
0x000000000041233d : jmp 0x412302
0x000000000041238a : jmp 0x41234f
0x00000000004123da : jmp 0x41239f
0x0000000000412429 : jmp 0x4123ee
0x0000000000413835 : jmp 0x4137fa
0x000000000041387a : jmp 0x41383f
0x00000000004138c2 : jmp 0x413887
0x0000000000413909 : jmp 0x4138ce
0x0000000000415c11 : jmp 0x415bda
0x00000000004161c9 : jmp 0x41618e
0x0000000000416342 : jmp 0x416307
0x00000000004165a2 : jmp 0x416567
0x0000000000417121 : jmp 0x4170e6
0x0000000000418f81 : jmp 0x418f69
0x0000000000424264 : jmp 0x424229
0x000000000042ec94 : jmp 0x42ecb2
0x000000000042efa7 : jmp 0x42efc5
0x000000000042f315 : jmp 0x42f333
0x0000000000433ca3 : jmp 0x433cd1
0x0000000000433fc8 : jmp 0x433ff6
0x000000000043435a : jmp 0x434388
0x0000000000435ee1 : jmp 0x435eb1
0x000000000043bfe9 : jmp 0x43bfaf
0x000000000043c1d9 : jmp 0x43c19f
0x000000000043c539 : jmp 0x43c4ff
0x0000000000444295 : jmp 0x440582
0x00000000004412eb : jmp 0x441153
0x000000000044142c : jmp 0x441262
0x0000000000446925 : jmp 0x442b92
0x00000000004454ee : jmp 0x4454f6
0x0000000000445554 : jmp 0x445536
0x0000000000445dfc : jmp 0x445dc1
0x0000000000445f04 : jmp 0x445eca
0x000000000044754d : jmp 0x447411
0x0000000000448362 : jmp 0x448327
0x000000000044b8bf : jmp 0x44b885
0x000000000044b93f : jmp 0x44b905
0x000000000044b9bf : jmp 0x44b985
0x000000000044c7ce : jmp 0x44c794
0x0000000000461d61 : jmp 0x461d26
0x0000000000464a43 : jmp 0x46420c
0x0000000000465ea1 : jmp 0x465e67
0x0000000000468b7b : jmp 0x468b41
0x0000000000478cce : jmp 0x478c94
0x000000000047c23e : jmp 0x47c246
0x000000000048223e : jmp 0x48220b
0x000000000048dc5a : jmp 0x48dc58
0x000000000048e80a : jmp 0x48e7cf
0x000000000048f351 : jmp 0x48f357
0x000000000049075a : jmp 0x4906f0
0x0000000000493545 : jmp 0x493574
0x0000000000493545 : jmp 0x493578
0x0000000000494a8b : jmp 0x494a93
0x00000000004a0aa9 : jmp 0x4a0a6f
0x00000000004a2a32 : jmp 0x4a29f7
0x00000000004a7f97 : jmp 0x4a7f1c
0x00000000004b0200 : jmp 0x4b0207
0x00000000004b2bfb : jmp 0x4b2ca6
0x00000000004b3ea8 : jmp 0x4b3e6e
0x00000000004b542e : jmp 0x4b53f4
0x00000000004b6f4b : jmp 0x4b6f10
0x00000000004bd6fd : jmp 0x4bd702
0x00000000004be5fc : jmp 0x4be5c2
0x00000000004bee75 : jmp 0x4bee3b
0x00000000004cbc8f : jmp 0x4cbc54
0x00000000004cbe1f : jmp 0x4cbde4
0x00000000004cbedf : jmp 0x4cbea4
0x00000000004ce491 : jmp 0x4ce4d9
0x0000000000448ec1 : jmp 0x4d071815
0x00000000004607f7 : jmp 0x4d089147
0x00000000004ed039 : jmp 0x4ed09b
0x00000000004f2185 : jmp 0x4f2160
0x00000000004fdaa0 : jmp 0x4fda65
0x0000000000502a3e : jmp 0x502a22
0x0000000000502de7 : jmp 0x502dac
0x000000000050451b : jmp 0x504511
0x00000000005049d4 : jmp 0x504a48
0x00000000005064bc : jmp 0x506481
0x0000000000508c8e : jmp 0x508c54
0x000000000050986c : jmp 0x50985c
0x000000000050b761 : jmp 0x50b722
0x0000000000510d02 : jmp 0x510cf5
0x00000000005128ea : jmp 0x5128b0
0x00000000005160a6 : jmp 0x51606b
0x00000000005073c0 : jmp 0x55f89a5
0x00000000005070ca : jmp 0x7a727681
0x00000000004fe2c9 : jmp 0x95d60cf
0x00000000004074a0 : jmp 0xff3730
0x000000000046ab83 : jmp 0xffffffff838f6bc0
0x00000000004a1c25 : jmp 0xffffffff860c683c
0x0000000000500ee9 : jmp 0xffffffff8912faa4
0x00000000004a2248 : jmp 0xffffffff8992e4d8
0x00000000005081cf : jmp 0xffffffff89f985de
0x000000000051870c : jmp 0xffffffff8a196ff2
0x000000000040742b : jmp 0xffffffff8b8a36bb
0x0000000000446c71 : jmp 0xffffffff8b8e2f01
0x0000000000493b9e : jmp 0xffffffff94c49075
0x0000000000493cbe : jmp 0xffffffff94c49195
0x0000000000493dde : jmp 0xffffffff94c492b5
0x0000000000493efe : jmp 0xffffffff94c493d5
0x0000000000517303 : jmp 0xffffffff9b70359c
0x00000000004f687a : jmp 0xffffffff9dc42b2a
0x00000000004f5a9a : jmp 0xffffffffb548fdfd
0x0000000000417760 : jmp 0xffffffffc242c086
0x000000000040909a : jmp 0xffffffffc261d1a4
0x00000000004bb32f : jmp 0xffffffffc27cf752
0x00000000004bb56f : jmp 0xffffffffc27cf992
0x00000000004bb7ae : jmp 0xffffffffc27cfbd1
0x00000000004bc0d6 : jmp 0xffffffffc27d04f9
0x00000000004bc557 : jmp 0xffffffffc27d097a
0x00000000004bc797 : jmp 0xffffffffc27d0bba
0x00000000004bc9d6 : jmp 0xffffffffc27d0df9
0x00000000004f5831 : jmp 0xffffffffc2b85a4c
0x000000000041fad8 : jmp 0xffffffffc2c543f1
0x0000000000506d7c : jmp 0xffffffffc2f868ed
0x000000000050a921 : jmp 0xffffffffc301e16e
0x0000000000406073 : jmp 0xffffffffc34095b3
0x000000000046a2d3 : jmp 0xffffffffc346d1d8
0x00000000004adee3 : jmp 0xffffffffc34b0985
0x0000000000513775 : jmp 0xffffffffc3b9551c
0x0000000000515bec : jmp 0xffffffffc40573f1
0x00000000004ca3af : jmp 0xffffffffc41175a7
0x0000000000507425 : jmp 0xffffffffc41cff86
0x000000000052edf1 : jmp 0xffffffffc427edf3
0x00000000004291e1 : jmp 0xffffffffc431cfaf
0x000000000042a6a4 : jmp 0xffffffffc431e472
0x00000000004028fe : jmp 0xffffffffc433e938
0x00000000004a1df8 : jmp 0xffffffffeb0be088
0x00000000004a1e98 : jmp 0xffffffffeb0be128
0x00000000004d08da : jmp 0xfffffffff564fbfc
0x000000000045cf78 : jmp 0xfffffffff7cf9243
0x00000000004ca308 : jmp 0xfffffffff83c6cd8
0x0000000000518869 : jmp 0xfffffffffa544a72
0x0000000000545759 : jmp qword ptr [edi]
0x0000000000470af5 : jmp qword ptr [r8]
0x0000000000409057 : jmp qword ptr [r9]
0x00000000005280cb : jmp qword ptr [rax + rdi*2]
0x0000000000402232 : jmp qword ptr [rax]
0x0000000000528dd3 : jmp qword ptr [rbx + rax*8]
0x00000000004ecf9d : jmp qword ptr [rbx]
0x0000000000409058 : jmp qword ptr [rcx]
0x00000000005032fd : jmp qword ptr [rdi + 0x791a265a]
0x00000000004f4c0f : jmp qword ptr [rdi]
0x000000000052be2b : jmp qword ptr [rdx + rax*8 + 1]
0x0000000000500def : jmp qword ptr [rdx]
0x000000000048584b : jmp qword ptr [rsi + 0x41]
0x0000000000415d4b : jmp qword ptr [rsi + 0x4d]
0x0000000000419539 : jmp qword ptr [rsi + 0xf]
0x000000000052a08b : jmp qword ptr [rsi + rbx - 0x3c6bffff]
0x00000000004fe8bd : jmp qword ptr [rsi - 0x3e]
0x000000000050e71b : jmp qword ptr [rsi]
0x00000000004ecf9c : jmp qword ptr gs:[rbx]
0x0000000000544dc9 : jmp qword ptr gs:[rcx]
0x000000000053f2f9 : jmp qword ptr gs:[rsi]
0x000000000044b914 : jmp r10
0x000000000043ca7b : jmp r8
0x000000000040711a : jmp r9
0x0000000000401c55 : jmp rax
0x00000000005032b2 : jmp rbx
0x000000000040711b : jmp rcx
0x0000000000408146 : jmp rdi
0x000000000043e704 : jmp rdx
0x0000000000493969 : jmp rsi
0x00000000004ab60d : jmp rsp
0x0000000000401c53 : jne 0x401c57 ; jmp rax
0x0000000000401ca1 : jne 0x401ca5 ; jmp rax
0x00000000004022cc : jne 0x4022f9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000402675 : jne 0x402675 ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax] ; ret
0x00000000004026cd : jne 0x40269b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040288e : jne 0x402853 ; ret
0x00000000004028fd : jne 0x4028ed ; xor eax, eax ; ret
0x00000000004029e7 : jne 0x4029cc ; xor eax, eax ; ret
0x0000000000402c09 : jne 0x402c21 ; mov dword ptr [rdi + 0x10], 0 ; ret
0x0000000000402c95 : jne 0x402c84 ; xor eax, eax ; ret
0x0000000000402c90 : jne 0x402ca9 ; cmp rax, rdx ; jne 0x402c89 ; xor eax, eax ; ret
0x0000000000404298 : jne 0x4042a4 ; pop rbx ; ret
0x00000000004042b5 : jne 0x4042c4 ; xor eax, eax ; ret
0x0000000000404908 : jne 0x404958 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004049f8 : jne 0x404a23 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000404b55 : jne 0x404b83 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000404e89 : jne 0x404e6e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404f11 : jne 0x404ef6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404f61 : jne 0x404f46 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004050aa : jne 0x4050da ; add rsp, 0x38 ; ret
0x000000000040512a : jne 0x40515a ; add rsp, 0x38 ; ret
0x00000000004051b7 : jne 0x405207 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000405d87 : jne 0x405d9a ; add rsp, 0xd8 ; ret
0x000000000040619d : jne 0x4061a1 ; ret
0x00000000004063d6 : jne 0x4063e9 ; add rsp, 0xd8 ; ret
0x00000000004068d7 : jne 0x4068c5 ; movzx eax, al ; ret
0x0000000000406aa8 : jne 0x406ab2 ; ret
0x0000000000407231 : jne 0x40728c ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000040763d : jne 0x407665 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000407847 : jne 0x407854 ; xor eax, eax ; ret
0x0000000000407887 : jne 0x407894 ; xor eax, eax ; ret
0x0000000000407968 : jne 0x407977 ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x00000000004079a8 : jne 0x4079b7 ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x0000000000407c28 : jne 0x407c91 ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000407fbb : jne 0x407fba ; mov eax, r8d ; cdqe ; ret
0x0000000000408179 : jne 0x408172 ; ret
0x00000000004081a7 : jne 0x40819e ; cmp rsi, 0 ; jne 0x408178 ; ret
0x000000000040d874 : jne 0x40d888 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040d8b3 : jne 0x40d8c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040d914 : jne 0x40d928 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040d95f : jne 0x40d978 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040da57 : jne 0x40da68 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040da94 : jne 0x40daa8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040dad3 : jne 0x40dae8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040e6da : jne 0x40e6e3 ; ret
0x000000000040e731 : jne 0x40e705 ; mov rax, rdx ; ret
0x00000000004133eb : jne 0x413399 ; mov r10, r9 ; neg r9 ; ret
0x0000000000414967 : jne 0x414916 ; neg r9 ; ret
0x00000000004149bd : jne 0x4149ac ; ret
0x0000000000416aca : jne 0x416a07 ; ret
0x0000000000416bb7 : jne 0x416b07 ; ret
0x0000000000417034 : jne 0x417023 ; ret
0x0000000000417158 : jne 0x4170c7 ; ret
0x0000000000418bfa : jne 0x418be6 ; vzeroupper ; ret
0x0000000000418fdb : jne 0x418fe4 ; pop rbx ; ret
0x0000000000419448 : jne 0x41943d ; sub rax, rdi ; ret
0x0000000000419e80 : jne 0x419e8d ; add rsp, 0x18 ; ret
0x0000000000419ecb : jne 0x419ee2 ; add rsp, 0x18 ; ret
0x000000000041a10d : jne 0x41a0f9 ; mov rax, rdi ; ret
0x000000000041a9c3 : jne 0x41a9c7 ; ret
0x000000000041c092 : jne 0x41c0a5 ; add rsp, 0xd8 ; ret
0x000000000041c11c : jne 0x41c135 ; add rsp, 0x38 ; ret
0x000000000041c1dd : jne 0x41c1f0 ; add rsp, 0xd8 ; ret
0x000000000041c4a7 : jne 0x41c495 ; mov dword ptr [rdi], r10d ; ret
0x000000000041c4ef : jne 0x41c4e4 ; xor eax, eax ; ret
0x000000000041cf8b : jne 0x41cfa9 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041d165 : jne 0x41d178 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041de2c : jne 0x41dddc ; mov rdx, rax ; jmp 0x41de01
0x000000000041e25e : jne 0x41e24d ; ret
0x000000000041e21f : jne 0x41e290 ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rcx + 0x10] ; ret
0x000000000041e5f3 : jne 0x41e635 ; add rsp, 0x48 ; ret
0x000000000041e6d6 : jne 0x41e715 ; add rsp, 0x48 ; ret
0x000000000041e7b7 : jne 0x41e7f5 ; add rsp, 0x48 ; ret
0x000000000041e9cc : jne 0x41ea1c ; add rsp, 0x38 ; ret
0x000000000041eef0 : jne 0x41ef4a ; add rsp, 0x58 ; ret
0x000000000041efb0 : jne 0x41f00a ; add rsp, 0x58 ; ret
0x000000000041f3e0 : jne 0x41f3ea ; ret
0x000000000041ffad : jne 0x41ffb1 ; ret
0x000000000041ffe2 : jne 0x41ffea ; add rsp, 8 ; ret
0x000000000042000b : jne 0x42002a ; pop rbx ; ret
0x0000000000420055 : jne 0x4200c2 ; call rax
0x00000000004202b6 : jne 0x4202a3 ; pop rbx ; ret
0x0000000000420413 : jne 0x420494 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000420982 : jne 0x420993 ; ret
0x00000000004209a3 : jne 0x4209a7 ; ret
0x0000000000421b17 : jne 0x421b2d ; ret
0x0000000000421cac : jne 0x421cf0 ; mov eax, 0x1a5 ; pop rbx ; ret
0x0000000000421d23 : jne 0x421cf0 ; mov eax, 0x25 ; pop rbx ; ret
0x0000000000421cbb : jne 0x421cf0 ; mov eax, 5 ; pop rbx ; ret
0x0000000000421fd5 : jne 0x421ffd ; add rsp, 0xf8 ; ret
0x0000000000422279 : jne 0x422283 ; ret
0x00000000004222aa : jne 0x4222c0 ; xor eax, eax ; add rsp, 0x18 ; ret
0x0000000000423213 : jne 0x423224 ; pop rbx ; ret
0x0000000000423455 : jne 0x42349f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004234e8 : jne 0x4234f5 ; add rsp, 0x38 ; ret
0x0000000000424248 : jne 0x424245 ; mov eax, edx ; ret
0x0000000000424262 : jne 0x424253 ; jmp 0x42422b
0x00000000004246f0 : jne 0x4246ff ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000424bb3 : jne 0x424be5 ; xor eax, eax ; pop rbx ; ret
0x0000000000425553 : jne 0x425567 ; mov eax, 1 ; ret
0x000000000042581b : jne 0x42582a ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000042589b : jne 0x4258aa ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000432f00 : jne 0x432f41 ; and al, 0x10 ; add esp, eax ; ret 0x7d
0x00000000004348f1 : jne 0x434908 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000437f28 : jne 0x437f52 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004380e4 : jne 0x4380f3 ; ret
0x0000000000438e73 : jne 0x438e77 ; ret
0x000000000043a56f : jne 0x43a531 ; pop rbx ; ret
0x000000000043a5cf : jne 0x43a591 ; pop rbx ; ret
0x000000000043a7c3 : jne 0x43a7c7 ; ret
0x000000000043acef : jne 0x43ace7 ; add rsp, 8 ; ret
0x000000000043bd0d : jne 0x43bd1a ; add rsp, 0x28 ; ret
0x000000000043bda6 : jne 0x43bd93 ; pop rbx ; ret
0x000000000043be84 : jne 0x43beb8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043bee6 : jne 0x43bed3 ; pop rbx ; ret
0x000000000043bf34 : jne 0x43bf6b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043bfbc : jne 0x43bff1 ; add rsp, 0x18 ; ret
0x000000000043c074 : jne 0x43c0a8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043c0d6 : jne 0x43c0c3 ; pop rbx ; ret
0x000000000043c124 : jne 0x43c15b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043c1ac : jne 0x43c1e1 ; add rsp, 0x18 ; ret
0x000000000043c3d4 : jne 0x43c408 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043c436 : jne 0x43c423 ; pop rbx ; ret
0x000000000043c484 : jne 0x43c4bb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043c50c : jne 0x43c541 ; add rsp, 0x18 ; ret
0x000000000043c79e : jne 0x43c7ad ; add rsp, 0x30 ; pop rbx ; ret
0x000000000043cb07 : jne 0x43cb15 ; xor eax, eax ; pop rbx ; ret
0x000000000043ccad : jne 0x43ccba ; add rsp, 0x28 ; ret
0x000000000043ccfd : jne 0x43cd0a ; add rsp, 0x28 ; ret
0x000000000043cd4d : jne 0x43cd5a ; add rsp, 0x28 ; ret
0x000000000043cd9d : jne 0x43cdaa ; add rsp, 0x28 ; ret
0x000000000043d574 : jne 0x43d58b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000043d6d4 : jne 0x43d6e5 ; mov eax, dword ptr [rdi + 4] ; sub eax, dword ptr [rsi + 4] ; ret
0x000000000043d6ea : jne 0x43d6fb ; mov eax, dword ptr [rcx + 4] ; sub eax, dword ptr [rdx + 4] ; ret
0x000000000043f2a4 : jne 0x43f2f7 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000043f704 : jne 0x43f6fd ; mov rax, qword ptr [rsi + 0x28] ; mov dword ptr [rdi], eax ; ret
0x000000000043f6f3 : jne 0x43f709 ; mov qword ptr [rdi], 0 ; ret
0x000000000043fbcf : jne 0x43fbea ; add rsp, 0x18 ; ret
0x0000000000442b58 : jne 0x442b65 ; add rsp, 0x38 ; ret
0x0000000000442bfa : jne 0x442c13 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004431b2 : jne 0x4431b6 ; ret
0x000000000044344a : jne 0x443460 ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000004451a0 : jne 0x4451fa ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004456f2 : jne 0x445707 ; mov eax, 1 ; ret
0x0000000000446684 : jne 0x44669f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004466f9 : jne 0x44671c ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000448877 : jne 0x448884 ; add rsp, 0x58 ; ret
0x0000000000448bfe : jne 0x448c18 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004494af : jne 0x4494f8 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449684 : jne 0x4496ba ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449733 : jne 0x449740 ; add rsp, 0x28 ; ret
0x00000000004498fc : jne 0x44990d ; mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x0000000000449a69 : jne 0x449aae ; add rsp, 0x30 ; pop rbx ; ret
0x000000000044b020 : jne 0x44b00e ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000044b07b : jne 0x44b069 ; mov rbp, qword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rdx
0x000000000044b0db : jne 0x44b0c9 ; mov rbp, qword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rcx
0x000000000044bc18 : jne 0x44bbef ; add rsp, 8 ; jmp r9
0x000000000044bc93 : jne 0x44bc6f ; add rsp, 8 ; jmp r8
0x000000000044be6b : jne 0x44be7f ; add rsp, 8 ; jmp r8
0x000000000044c2b8 : jne 0x44c2af ; add rsp, 8 ; jmp r10
0x000000000044c390 : jne 0x44c39d ; add rsp, 0x28 ; ret
0x000000000044e2cf : jne 0x44e2bf ; mov eax, 0x51 ; ret
0x000000000044e302 : jne 0x44e2f4 ; xor eax, eax ; ret
0x0000000000450a64 : jne 0x450a78 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000451b59 : jne 0x451b68 ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000451ba9 : jne 0x451bb8 ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000004522c3 : jne 0x4522d0 ; add rsp, 0x58 ; ret
0x000000000045276f : jne 0x45278a ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000457136 : jne 0x457149 ; add rsp, 0xa8 ; ret
0x0000000000461c52 : jne 0x461c6d ; ret
0x0000000000461cf0 : jne 0x461cff ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046227f : jne 0x4622ee ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000462e61 : jne 0x462e70 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000463710 : jne 0x46377a ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004653cd : jne 0x4653da ; add rsp, 0x38 ; ret
0x00000000004662b3 : jne 0x4662b7 ; ret
0x0000000000467c13 : jne 0x467c17 ; ret
0x000000000046a2c3 : jne 0x46a2c7 ; ret
0x000000000046ab82 : jne 0x46ab75 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000046ae86 : jne 0x46ae73 ; pop rbx ; ret
0x000000000046af86 : jne 0x46af73 ; pop rbx ; ret
0x000000000046b086 : jne 0x46b073 ; pop rbx ; ret
0x000000000046b186 : jne 0x46b173 ; pop rbx ; ret
0x000000000046b50a : jne 0x46b4fb ; ret
0x000000000046b538 : jne 0x46b523 ; ret
0x000000000046c50c : jne 0x46c520 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000046c83e : jne 0x46c856 ; add rsp, 8 ; jmp rax
0x000000000046dc3e : jne 0x46dc29 ; xor eax, eax ; test cl, cl ; sete al ; ret
0x000000000046dda5 : jne 0x46dde2 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000046e1e4 : jne 0x46e1fc ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046e30a : jne 0x46e324 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046e784 : jne 0x46e7d7 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046f810 : jne 0x46f83b ; add rsp, 0x30 ; pop rbx ; ret
0x000000000046fafa : jne 0x46fb4b ; mov esi, ebx ; mov rdi, rbp ; call rax
0x000000000046fe97 : jne 0x46fed2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004704e4 : jne 0x4704d2 ; add eax, edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472123 : jne 0x472133 ; ret
0x000000000047433d : jne 0x474329 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000474b24 : jne 0x474b3b ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004766be : jne 0x4766f9 ; add rsp, 0x28 ; ret
0x000000000047684f : jne 0x476891 ; add rsp, 0x28 ; ret
0x0000000000476b42 : jne 0x476b81 ; add rsp, 0x28 ; ret
0x0000000000478b9e : jne 0x478bd9 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000478d65 : jne 0x478dcd ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000004790c5 : jne 0x479107 ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000479d5c : jne 0x479d54 ; xor eax, eax ; ret
0x0000000000479e53 : jne 0x479e8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000047bdc4 : jne 0x47bdd3 ; ret
0x000000000047befc : jne 0x47bf43 ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000047c013 : jne 0x47c003 ; pop rbx ; ret
0x000000000047c1d2 : jne 0x47c1f3 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047c525 : jne 0x47c532 ; ret
0x000000000047db06 : jne 0x47db47 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000047e6bc : jne 0x47e6d4 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004807a5 : jne 0x480780 ; ret
0x0000000000480851 : jne 0x48086d ; add rsp, 0x48 ; ret
0x0000000000480918 : jne 0x48091c ; ret
0x0000000000480ccf : jne 0x480cdc ; add rsp, 0x18 ; ret
0x0000000000481440 : jne 0x48144b ; pop rbp ; pop r12 ; mov rax, qword ptr [rdi + 0x10] ; jmp rax
0x00000000004816eb : jne 0x481700 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000483657 : jne 0x48366b ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048404e : jne 0x48406c ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000484187 : jne 0x484194 ; add rsp, 0x28 ; ret
0x00000000004841fd : jne 0x48423b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000048427e : jne 0x48428d ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004844d1 : jne 0x4844eb ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004845e8 : jne 0x484607 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000484738 : jne 0x48475c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004849a5 : jne 0x4849ba ; add rsp, 0x28 ; ret
0x0000000000485ee3 : jne 0x485ee7 ; ret
0x0000000000485ef3 : jne 0x485ef7 ; ret
0x0000000000486e86 : jne 0x486e98 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004875c1 : jne 0x4875ce ; mov rax, qword ptr [rdx + 8] ; pop rbx ; ret
0x0000000000488829 : jne 0x48883a ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000489609 : jne 0x48961a ; add rsp, 0x18 ; ret
0x000000000048a1ca : jne 0x48a243 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000048b2ef : jne 0x48b31c ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000048bb7c : jne 0x48bbe3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048c3ef : jne 0x48c407 ; mov rax, qword ptr [rbx + 8] ; pop rbx ; ret
0x000000000048d5b6 : jne 0x48d5c5 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048d715 : jne 0x48d725 ; xor eax, eax ; pop rbx ; ret
0x000000000048e02f : jne 0x48e047 ; mov rax, qword ptr [rbx + 8] ; pop rbx ; ret
0x000000000048e723 : jne 0x48e75c ; add rsp, 0x28 ; ret
0x000000000048f581 : jne 0x48f59b ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000493422 : jne 0x493428 ; ret
0x0000000000493480 : jne 0x493449 ; mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x000000000049347f : jne 0x49344a ; mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x000000000049cc80 : jne 0x49cc96 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049f583 : jne 0x49f587 ; ret
0x00000000004a00e6 : jne 0x4a00f3 ; add rsp, 0x68 ; ret
0x00000000004a08d3 : jne 0x4a08d7 ; ret
0x00000000004a0944 : jne 0x4a0978 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a09a6 : jne 0x4a0993 ; pop rbx ; ret
0x00000000004a09f4 : jne 0x4a0a2b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a0a7c : jne 0x4a0ab1 ; add rsp, 0x18 ; ret
0x00000000004a0f43 : jne 0x4a0f47 ; ret
0x00000000004a1093 : jne 0x4a1097 ; ret
0x00000000004a1b03 : jne 0x4a1b07 ; ret
0x00000000004a29f4 : jne 0x4a2a09 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a2a8f : jne 0x4a2a96 ; cmove rax, rdx ; ret
0x00000000004a2a8f : jne 0x4a2a97 ; cmove rax, rdx ; ret
0x00000000004a2a73 : jne 0x4a2aa4 ; add byte ptr [rax], al ; ret
0x00000000004a4155 : jne 0x4a4184 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004a64de : jne 0x4a6509 ; add rsp, 0x18 ; ret
0x00000000004a6653 : jne 0x4a6657 ; ret
0x00000000004a75f3 : jne 0x4a75f7 ; ret
0x00000000004a7d73 : jne 0x4a7d77 ; ret
0x00000000004a871a : jne 0x4a8765 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004a8a44 : jne 0x4a8a6e ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004ac42a : jne 0x4ac47f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004acb63 : jne 0x4acb67 ; ret
0x00000000004acbaa : jne 0x4acbb7 ; add rsp, 0x28 ; ret
0x00000000004acc0d : jne 0x4acc1e ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004acc5a : jne 0x4acc67 ; add rsp, 0x28 ; ret
0x00000000004accbd : jne 0x4accce ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004ade42 : jne 0x4ade4f ; add rsp, 0x28 ; ret
0x00000000004ade8e : jne 0x4ade9d ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004adec4 : jne 0x4aded3 ; ret
0x00000000004ae04e : jne 0x4ae092 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004ae495 : jne 0x4ae4a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ae67b : jne 0x4ae6e4 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004ae73e : jne 0x4ae7a7 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004b2dd3 : jne 0x4b2dfc ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004b3491 : jne 0x4b34ad ; add rsp, 0x38 ; ret
0x00000000004b34f9 : jne 0x4b3504 ; pop rbp ; pop r12 ; mov rax, qword ptr [rdi + 8] ; jmp rax
0x00000000004b35f6 : jne 0x4b35fa ; ret
0x00000000004b4494 : jne 0x4b44bd ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004b4640 : jne 0x4b4667 ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004b4a9b : jne 0x4b4ad0 ; call 0x401ba9
0x00000000004b5403 : jne 0x4b5442 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004b5566 : jne 0x4b556e ; mov qword ptr [rdi + 0x30], rsi ; ret
0x00000000004b5656 : jne 0x4b565e ; mov qword ptr [rdi + 0x30], rsi ; ret
0x00000000004b5937 : jne 0x4b5948 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004b5adb : jne 0x4b5ae3 ; ret
0x00000000004b66d9 : jne 0x4b66e6 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004b685c : jne 0x4b6869 ; add rsp, 0x58 ; ret
0x00000000004b6f45 : jne 0x4b6eab ; jmp 0x4b6f16
0x00000000004b77df : jne 0x4b77f6 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004b7828 : jne 0x4b7836 ; mov rax, qword ptr [rdi + 0x28] ; ret
0x00000000004b81c3 : jne 0x4b81c7 ; ret
0x00000000004b955c : jne 0x4b954b ; ret
0x00000000004b957a : jne 0x4b956f ; mov eax, 1 ; ret
0x00000000004b9960 : jne 0x4b997e ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004c6951 : jne 0x4c69c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004c6af6 : jne 0x4c6b80 ; xor eax, eax ; ret
0x00000000004c6bb3 : jne 0x4c6bc2 ; ret
0x00000000004cb571 : jne 0x4cb5ab ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004cbf2e : jne 0x4cbf20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004cde5b : jne 0x4cdedc ; add rsp, 0xa8 ; ret
0x00000000004cdf5b : jne 0x4cdf73 ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004ec853 : jne 0x4ec878 ; stc ; ret 0x5ca4
0x00000000004f4bf6 : jne 0x4f4ba2 ; ret 0x325c
0x00000000004f5aa1 : jne 0x4f5a3d ; jmp qword ptr [rbx]
0x00000000004faa78 : jne 0x4faada ; ret
0x00000000004fe8ff : jne 0x4fe904 ; and eax, 0x2a73ddc9 ; ret
0x00000000004fead4 : jne 0x4feaba ; xlatb ; mov dword ptr [rax - 0x55], eax ; ret 0x435d
0x00000000004fead3 : jne 0x4feabb ; xlatb ; mov dword ptr [rax - 0x55], eax ; ret 0x435d
0x00000000004fef34 : jne 0x4fef69 ; ret 0xc109
0x00000000004fef33 : jne 0x4fef6a ; ret 0xc109
0x00000000004ff55e : jne 0x4ff588 ; fisub word ptr [rbp + 0x402093b8] ; ret 0xa6f2
0x0000000000503926 : jne 0x5038c9 ; jb 0x50392f ; ret 0x4a9d
0x000000000050485d : jne 0x50480e ; loop 0x5047fc ; jmp qword ptr [rbx]
0x0000000000504fe1 : jne 0x504f8d ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebx ; and al, 0xa5 ; ret 0x33c5
0x0000000000507720 : jne 0x50776d ; xchg eax, esi ; test eax, 0x68206634 ; call rax
0x0000000000509520 : jne 0x509563 ; ret
0x000000000050e951 : jne 0x50e908 ; ret
0x00000000005128f6 : jne 0x512932 ; ret 0xd554
0x000000000051465a : jne 0x514667 ; ret
0x0000000000516aea : jne 0x516aaa ; or al, 0x43 ; ret 0x1595
0x0000000000516ae9 : jne 0x516aab ; or al, 0x43 ; ret 0x1595
0x0000000000517320 : jne 0x517339 ; push 0x180b280f ; jae 0x51739e ; ret 0xeeb6
0x0000000000529bb1 : jne 0x529ba6 ; jmp rsp
0x000000000052c549 : jne 0x52c542 ; jmp rsp
0x000000000052c548 : jne 0x52c543 ; jmp rsp
0x000000000052c599 : jne 0x52c592 ; call rsp
0x000000000052df65 : jne 0x52df6f ; add byte ptr [rdx + rax], dl ; clc ; jmp rsp
0x0000000000407882 : jno 0x4078ad ; xor eax, 0x7750100 ; xor eax, eax ; ret
0x000000000042030b : jno 0x4202ce ; add dword ptr [rax], eax ; nop ; mov rax, qword ptr [rdi + 0x38] ; ret
0x00000000004663e3 : jno 0x4663eb ; dec dword ptr [rax - 0x73] ; jl 0x466417 ; add al, 0x89 ; ret 0x8944
0x00000000004b2d5b : jno 0x4b2dc6 ; cld ; inc dword ptr [rbp - 0x7ca28b40] ; ret
0x00000000004f6963 : jno 0x4f698a ; adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x00000000004f7a9d : jno 0x4f7b18 ; cmp dword ptr [rax], eax ; lahf ; and al, 0xd8 ; xor al, 0x38 ; ret 0xa070
0x00000000004f93b4 : jno 0x4f9368 ; push rsp ; mov word ptr [rip - 0x60ae2af2], es ; ret 0xe1a9
0x00000000004feb79 : jno 0x4febc5 ; jno 0x4febd8 ; xlatb ; ret 0x32ec
0x00000000004feb7c : jno 0x4febd5 ; xlatb ; ret 0x32ec
0x00000000004feb7b : jno 0x4febd6 ; xlatb ; ret 0x32ec
0x00000000004feb7a : jno 0x4febd7 ; xlatb ; ret 0x32ec
0x0000000000501e26 : jno 0x501dcb ; ret
0x0000000000503b69 : jno 0x503b5c ; stc ; ret
0x0000000000507423 : jno 0x5073ba ; jmp 0xffffffffc41cff88
0x0000000000508a84 : jno 0x508a63 ; and edi, edx ; wait ; call rsp
0x0000000000509bb9 : jno 0x509c39 ; adc bl, byte ptr [rbx] ; sbb al, 0x1e ; ret
0x000000000050a199 : jno 0x50a198 ; xchg eax, edi ; ret
0x000000000050a198 : jno 0x50a199 ; xchg eax, edi ; ret
0x000000000050ee66 : jno 0x50eed8 ; call qword ptr [rax]
0x0000000000516c12 : jno 0x516ba0 ; ret 0xe440
0x000000000052a9c1 : jno 0x52a9b7 ; jmp rsp
0x0000000000546f1e : jno 0x546f2c ; ret
0x000000000054ec61 : jno 0x54ec5a ; call qword ptr [rsi]
0x000000000054ec79 : jno 0x54ec72 ; call qword ptr [rsi]
0x000000000054ec91 : jno 0x54ec8a ; call qword ptr [rsi]
0x000000000054eca9 : jno 0x54eca2 ; call qword ptr [rsi]
0x000000000054ecc1 : jno 0x54ecba ; call qword ptr [rsi]
0x000000000054ecd9 : jno 0x54ecd2 ; call qword ptr [rsi]
0x000000000054ecf1 : jno 0x54ecea ; call qword ptr [rsi]
0x0000000000429376 : jnp 0x42936d ; add ah, byte ptr [rcx] ; ret 0x7ec5
0x0000000000429463 : jnp 0x42945a ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000042954c : jnp 0x429543 ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000429636 : jnp 0x42962d ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x0000000000429711 : jnp 0x429708 ; add dh, byte ptr [rcx] ; ret 0x144
0x00000000004298c9 : jnp 0x4298c0 ; add dh, byte ptr [rcx] ; ret 0x144
0x00000000004299c5 : jnp 0x4299bc ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429ac8 : jnp 0x429abf ; add dh, byte ptr [rcx] ; ret 0xbdc5
0x0000000000429bc7 : jnp 0x429bbe ; add dh, byte ptr [rcx] ; ret 0x41c4
0x0000000000429c7f : jnp 0x429c76 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429d22 : jnp 0x429d19 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429dbe : jnp 0x429db5 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429f4a : jnp 0x429f41 ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000429ffe : jnp 0x429ff5 ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000042a0b2 : jnp 0x42a0a9 ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000042a15e : jnp 0x42a155 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a205 : jnp 0x42a1fc ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a2b2 : jnp 0x42a2a9 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a35d : jnp 0x42a354 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a42b : jnp 0x42a422 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a506 : jnp 0x42a4fd ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a5ec : jnp 0x42a5e3 ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x000000000042a8f1 : jnp 0x42a8e8 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042ec92 : jnp 0x42ec89 ; jmp 0x42ecb4
0x000000000042ec91 : jnp 0x42ec8a ; jmp 0x42ecb5
0x000000000042efa5 : jnp 0x42ef9c ; jmp 0x42efc7
0x000000000042efa4 : jnp 0x42ef9d ; jmp 0x42efc8
0x000000000042f313 : jnp 0x42f30a ; jmp 0x42f335
0x000000000042f312 : jnp 0x42f30b ; jmp 0x42f336
0x0000000000439bd6 : jnp 0x439bf1 ; add byte ptr [rbp + rcx + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x0000000000439c46 : jnp 0x439c61 ; add byte ptr [rbp + rcx + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x0000000000439cb6 : jnp 0x439cd1 ; add byte ptr [rbp + rcx + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x00000000004491ce : jnp 0x4491da ; call qword ptr [rax]
0x0000000000482196 : jnp 0x482171 ; push rcx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a0535 : jnp 0x4a0543 ; call 0x41c834
0x00000000004a053e : jnp 0x4a054f ; lea esi, dword ptr [rax - 1] ; call 0x41c847
0x00000000004bf594 : jnp 0x4bf5e9 ; ret
0x00000000004c5b56 : jnp 0x4c5b9b ; call r8
0x00000000004c6676 : jnp 0x4c66ba ; call rax
0x00000000004f47f7 : jnp 0x4f479f ; ret 0x9591
0x00000000004f7b3b : jnp 0x4f7af5 ; jmp rdi
0x00000000004f8d2a : jnp 0x4f8d33 ; jbe 0x4f8d24 ; ret
0x0000000000500ffb : jnp 0x501029 ; mov es, word ptr [rbp - 0x5f] ; push rsi ; ret 0xe039
0x00000000005040e2 : jnp 0x5040ff ; ret
0x0000000000509f59 : jnp 0x509f29 ; push rcx ; pop rdx ; ret 0xd378
0x0000000000509ffb : jnp 0x50a002 ; nop ; jo 0x509f98 ; ret 0xd298
0x000000000050b1ca : jnp 0x50b1fa ; ret
0x000000000050c531 : jnp 0x50c4bb ; and edi, dword ptr [rax + 0x502b7c77] ; jmp qword ptr [rdi]
0x000000000050cc43 : jnp 0x50cc22 ; ret 0x9f85
0x00000000005107e8 : jnp 0x510839 ; mov esi, 0xa47ecd67 ; ret
0x0000000000511768 : jnp 0x511775 ; ret
0x0000000000511ad4 : jnp 0x511b44 ; ret
0x000000000052b145 : jnp 0x52b14e ; add ah, dh ; add ah, dh ; jmp rsp
0x0000000000532831 : jnp 0x532823 ; jmp qword ptr [rbx]
0x0000000000532889 : jnp 0x53287b ; jmp qword ptr [rbx]
0x0000000000532888 : jnp 0x53287c ; jmp qword ptr [rbx]
0x0000000000536bc5 : jnp 0x536bcd ; add byte ptr [rax], cl ; sub dh, al ; jmp rsp
0x0000000000481590 : jns 0x41a57175 ; pop rsp ; ret
0x0000000000430d8f : jns 0x430d93 ; ret
0x0000000000430e7c : jns 0x430e54 ; ret
0x0000000000430f0c : jns 0x430ee4 ; ret
0x0000000000431d0f : jns 0x431d13 ; ret
0x0000000000431df1 : jns 0x431dc9 ; ret
0x0000000000431edd : jns 0x431eb5 ; ret
0x00000000004454ea : jns 0x4454b7 ; xor ebx, ebx ; jmp 0x4454fa
0x0000000000474e7a : jns 0x474e7b ; inc dword ptr [rcx - 0x48] ; ret
0x0000000000489ba3 : jns 0x489b66 ; idiv edi ; xor eax, eax ; pop rbx ; ret
0x000000000048de46 : jns 0x48de0f ; and byte ptr [rdx - 0x76b7ffb2], dl ; ret
0x00000000004a0aa3 : jns 0x4a0af7 ; idiv bh ; xor eax, eax ; jmp 0x4a0a75
0x00000000004ba1e8 : jns 0x4ba175 ; ret 0xe8c1
0x00000000004bb2e0 : jns 0x4bb338 ; add byte ptr [rcx], dh ; ret 0x3141
0x00000000004bb401 : jns 0x4bb459 ; add byte ptr [rcx], dh ; ret 0x3141
0x00000000004bb520 : jns 0x4bb578 ; add byte ptr [rcx], dh ; ret 0x3141
0x00000000004bb641 : jns 0x4bb699 ; add byte ptr [rcx], dh ; ret 0x3141
0x00000000004bc508 : jns 0x4bc560 ; add byte ptr [rcx], dh ; ret 0x3141
0x00000000004bc629 : jns 0x4bc681 ; add byte ptr [rcx], dh ; ret 0x3141
0x00000000004bc748 : jns 0x4bc7a0 ; add byte ptr [rcx], dh ; ret 0x3141
0x00000000004bc869 : jns 0x4bc8c1 ; add byte ptr [rcx], dh ; ret 0x3141
0x00000000004c8e5b : jns 0x4c8ea3 ; ret 0xc400
0x00000000004c8edb : jns 0x4c8f23 ; ret 0xc400
0x00000000004f607c : jns 0x4f6024 ; mov eax, 0x2e34d45f ; idiv dword ptr [rdx] ; ret
0x00000000004f84ed : jns 0x4f855e ; loopne 0x4f8561 ; ret 0xda27
0x00000000004f84ec : jns 0x4f855f ; loopne 0x4f8562 ; ret 0xda27
0x00000000004f967b : jns 0x4f9611 ; jae 0x4f9644 ; pop rdi ; ret
0x00000000004fc3c4 : jns 0x4fc362 ; outsd dx, dword ptr [rsi] ; leave ; ret 0xe867
0x00000000004fc3c3 : jns 0x4fc363 ; outsd dx, dword ptr [rsi] ; leave ; ret 0xe867
0x00000000004fd2fa : jns 0x4fd295 ; hlt ; stosb byte ptr [rdi], al ; mov esi, 0x76a27f2 ; ret
0x0000000000503302 : jns 0x5032bf ; ret
0x00000000005118b1 : jns 0x511847 ; mov al, 0xde ; add dword ptr [rdx - 0xd], 0x16 ; ret
0x00000000005118b0 : jns 0x511848 ; mov al, 0xde ; add dword ptr [rdx - 0xd], 0x16 ; ret
0x0000000000513a11 : jns 0x513a45 ; ret 0x958e
0x0000000000514d76 : jns 0x514d7b ; ret
0x0000000000516294 : jns 0x516226 ; ret
0x000000000052810d : jns 0x528115 ; add byte ptr [rbp + rax*8 - 0x13], dl ; call rsp
0x0000000000545ba0 : jns 0x545bae ; ret
0x0000000000545cf1 : jns 0x545ce8 ; call qword ptr [rbx]
0x0000000000554be9 : jns 0x554be4 ; jmp rcx
0x00000000004104fe : jo 0x410551 ; mov dword ptr [rdi + 0x78], ebx ; ret
0x0000000000410a88 : jo 0x410adb ; mov dword ptr [rdi + 0x78], edx ; ret
0x0000000000410a87 : jo 0x410adc ; mov dword ptr [rdi + 0x78], edx ; ret
0x0000000000420001 : jo 0x420051 ; test eax, eax ; je 0x420016 ; call rax
0x0000000000420000 : jo 0x420052 ; test eax, eax ; je 0x420017 ; call rax
0x00000000004229e3 : jo 0x422a32 ; mov dword ptr [rdi + 0x78], edx ; ret
0x000000000042be48 : jo 0x42bdd8 ; ret 0x51a3
0x000000000042be58 : jo 0x42bde8 ; ret 0x51a3
0x0000000000430a24 : jo 0x4309b4 ; ret 0xbe30
0x0000000000430a34 : jo 0x4309c4 ; ret 0xbe30
0x0000000000430dbe : jo 0x430d86 ; ret 0x51
0x0000000000431d3e : jo 0x431d06 ; ret 0x51
0x000000000043a6f3 : jo 0x43a6b3 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000043bfec : jo 0x43c04e ; cld ; dec dword ptr [rax - 0x75] ; push r8 ; ret
0x000000000044b28c : jo 0x44b250 ; sti ; push rbx ; ret
0x000000000046b533 : jo 0x46b53e ; mov byte ptr [rdi - 1], cl ; jne 0x46b528 ; ret
0x000000000047292c : jo 0x472931 ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000484d6b : jo 0x484cf4 ; loopne 0x484d74 ; ret
0x000000000048e68c : jo 0x48e6bd ; mov eax, 1 ; ret
0x00000000004a0541 : jo 0x4a0546 ; call 0x41c844
0x00000000004a7ec7 : jo 0x4a7f29 ; pop rbp ; pop r12 ; ret
0x00000000004b43d5 : jo 0x4b43e1 ; ret
0x00000000004b952a : jo 0x4b958c ; pop rbp ; pop r12 ; ret
0x00000000004bdf71 : jo 0x4bdfa3 ; pop rdx ; cwde ; call 0x7854a232
0x00000000004f4d65 : jo 0x4f4cf8 ; ret 0x65aa
0x00000000004f7a9e : jo 0x4f7ae1 ; add byte ptr [rdi + 0x3834d824], bl ; ret 0xa070
0x00000000004f9e39 : jo 0x4f9e44 ; pop rsi ; fimul dword ptr [rbx] ; cli ; int1 ; adc ch, dh ; ret
0x00000000004fad99 : jo 0x4fad36 ; xlatb ; stosb byte ptr [rdi], al ; ret
0x00000000004fcdc2 : jo 0x4fce11 ; pop rdi ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x00000000004fd0eb : jo 0x4fd11c ; ret
0x00000000004fe8c2 : jo 0x4fe8c7 ; ret
0x0000000000509ffe : jo 0x509f95 ; ret 0xd298
0x0000000000511729 : jo 0x51176e ; cmp dword ptr [rbx + rax*4], edx ; ret
0x0000000000511726 : jo 0x511795 ; push rbx ; jo 0x511771 ; cmp dword ptr [rbx + rax*4], edx ; ret
0x0000000000511725 : jo 0x511796 ; push rbx ; jo 0x511772 ; cmp dword ptr [rbx + rax*4], edx ; ret
0x0000000000511ad2 : jo 0x511b0a ; jnp 0x511b46 ; ret
0x0000000000512479 : jo 0x51248c ; ret 0xfd78
0x00000000005137d6 : jo 0x5137b9 ; ret 0x7553
0x0000000000516994 : jo 0x5169de ; cmp al, byte ptr [rdx] ; xor al, 0x5c ; ret
0x0000000000516ba3 : jo 0x516b5c ; mov dl, 0xf9 ; ret 0xbf6e
0x00000000005176a5 : jo 0x5176c7 ; outsd dx, dword ptr [rsi] ; ret 0x7a53
0x00000000005321b0 : jo 0x532228 ; out dx, al ; jmp qword ptr [rbx]
0x0000000000533a60 : jo 0x533a1e ; out dx, al ; jmp rcx
0x000000000053c25f : jo 0x53c26d ; ret
0x000000000053d2b0 : jo 0x53d2ed ; int1 ; call qword ptr [rdi]
0x000000000053e5e1 : jo 0x53e5e7 ; ret 0xe0a
0x000000000053f450 : jo 0x53f4c3 ; jmp qword ptr [rsi]
0x0000000000543130 : jo 0x543148 ; jmp rsp
0x0000000000543e20 : jo 0x543e76 ; call qword ptr [rbx]
0x000000000054a860 : jo 0x54a892 ; hlt ; call rbx
0x000000000054b010 : jo 0x54b071 ; hlt ; call qword ptr [rcx]
0x000000000054dce0 : jo 0x54dd29 ; cmc ; call qword ptr [rax]
0x000000000054dd70 : jo 0x54ddba ; cmc ; jmp qword ptr [rdi]
0x000000000054ea51 : jo 0x54ea4a ; call qword ptr [rsi]
0x000000000054ea69 : jo 0x54ea62 ; call qword ptr [rsi]
0x000000000054ea81 : jo 0x54ea7a ; call qword ptr [rsi]
0x000000000054ea99 : jo 0x54ea92 ; call qword ptr [rsi]
0x000000000054eab1 : jo 0x54eaaa ; call qword ptr [rsi]
0x000000000054eac9 : jo 0x54eac2 ; call qword ptr [rsi]
0x000000000054eae1 : jo 0x54eada ; call qword ptr [rsi]
0x000000000054eaf9 : jo 0x54eaf2 ; call qword ptr [rsi]
0x000000000054eb11 : jo 0x54eb0a ; call qword ptr [rsi]
0x000000000054eb29 : jo 0x54eb22 ; call qword ptr [rsi]
0x000000000054eab0 : jo 0x54eb25 ; cmc ; call qword ptr [rsi]
0x000000000054eb41 : jo 0x54eb3a ; call qword ptr [rsi]
0x000000000054eb59 : jo 0x54eb52 ; call qword ptr [rsi]
0x000000000054eb71 : jo 0x54eb6a ; call qword ptr [rsi]
0x000000000054eb89 : jo 0x54eb82 ; call qword ptr [rsi]
0x000000000054eba1 : jo 0x54eb9a ; call qword ptr [rsi]
0x000000000054ebb9 : jo 0x54ebb2 ; call qword ptr [rsi]
0x000000000054ebd1 : jo 0x54ebca ; call qword ptr [rsi]
0x000000000054ebe9 : jo 0x54ebe2 ; call qword ptr [rsi]
0x000000000054ec01 : jo 0x54ebfa ; call qword ptr [rsi]
0x000000000054ec19 : jo 0x54ec12 ; call qword ptr [rsi]
0x000000000054ec31 : jo 0x54ec2a ; call qword ptr [rsi]
0x000000000054ec49 : jo 0x54ec42 ; call qword ptr [rsi]
0x0000000000407cd9 : jp 0x407d2c ; add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446922 : jp 0x446977 ; add cl, ch ; ret 0xffff
0x00000000004bbe02 : jp 0x4bbe5a ; add byte ptr [rcx], dh ; ret 0x8944
0x00000000004bdf08 : jp 0x4bdf63 ; movdqa xmm14, xmmword ptr [r10 + 0x60] ; ret
0x00000000004f81d9 : jp 0x4f81b1 ; sahf ; or bh, byte ptr [rax + 0x46] ; ret 0x9fc2
0x00000000004fa135 : jp 0x4fa112 ; nop ; ret
0x00000000004fa134 : jp 0x4fa113 ; nop ; ret
0x00000000004fbc73 : jp 0x4fbc83 ; int1 ; lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x00000000004fff50 : jp 0x4fff35 ; scasd eax, dword ptr [rdi] ; and eax, esp ; ret 0xbd61
0x0000000000501062 : jp 0x501085 ; xchg eax, esi ; push rsp ; int 0x80
0x0000000000501061 : jp 0x501086 ; xchg eax, esi ; push rsp ; int 0x80
0x00000000005015b3 : jp 0x5015d0 ; ret
0x0000000000501bf7 : jp 0x501b96 ; lahf ; salc ; sub byte ptr [rdx], 0xe2 ; ret 0x60a
0x0000000000502de0 : jp 0x502d9b ; imul esp, esp, 0xeb911ecf ; ret 0x2d3e
0x000000000050441b : jp 0x504476 ; outsb dx, byte ptr [rsi] ; wait ; ret 0x8463
0x000000000050925b : jp 0x50921d ; ret 0x50e7
0x000000000050969b : jp 0x509709 ; push rsi ; ret 0x15e
0x000000000050aad5 : jp 0x50ab42 ; ret
0x000000000050ccf7 : jp 0x50cd3e ; xor cl, byte ptr fs:[rbx - 0x2ed41f02] ; ret
0x00000000005129d6 : jp 0x512a56 ; push 0x6f ; ret 0x2167
0x0000000000513497 : jp 0x513512 ; ret 0x12c9
0x00000000005162fc : jp 0x516305 ; ret 0x9ade
0x00000000005184c4 : jp 0x51845a ; push -0xe6dfcd7 ; ret 0x250d
0x0000000000518492 : jp 0x518498 ; ret 0x2076
0x0000000000518e9d : jp 0x518ead ; xchg eax, ebp ; add dword ptr ss:[rbx], edx ; adc ecx, ecx ; ret 0x15a3
0x000000000052b0fd : jp 0x52b106 ; add ah, dl ; cld ; call rsp
0x00000000005326f9 : jp 0x5326eb ; call qword ptr [rbx]
0x00000000005327b9 : jp 0x5327ab ; call qword ptr [rsi]
0x0000000000532801 : jp 0x5327f3 ; call qword ptr [rbx]
0x0000000000532819 : jp 0x53280b ; call qword ptr [rbx]
0x0000000000409055 : jrcxz 0x408fe7 ; jmp qword ptr [r9]
0x0000000000416e4b : jrcxz 0x416e49 ; and byte ptr [rcx + 0x11], cl ; ret 0x62c4
0x0000000000420073 : jrcxz 0x420005 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000429375 : jrcxz 0x4293f8 ; add ah, byte ptr [rcx] ; ret 0x7ec5
0x0000000000429462 : jrcxz 0x4294e5 ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000042954b : jrcxz 0x4295ce ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000429635 : jrcxz 0x4296b8 ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x0000000000429710 : jrcxz 0x429793 ; add dh, byte ptr [rcx] ; ret 0x144
0x00000000004298c8 : jrcxz 0x42994b ; add dh, byte ptr [rcx] ; ret 0x144
0x00000000004299c4 : jrcxz 0x429a47 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429ac7 : jrcxz 0x429b4a ; add dh, byte ptr [rcx] ; ret 0xbdc5
0x0000000000429bc6 : jrcxz 0x429c49 ; add dh, byte ptr [rcx] ; ret 0x41c4
0x0000000000429c7e : jrcxz 0x429d01 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429d21 : jrcxz 0x429da4 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429dbd : jrcxz 0x429e40 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429f49 : jrcxz 0x429fcc ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000429ffd : jrcxz 0x42a080 ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000042a0b1 : jrcxz 0x42a134 ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000042a15d : jrcxz 0x42a1e0 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a204 : jrcxz 0x42a287 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a2b1 : jrcxz 0x42a334 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a35c : jrcxz 0x42a3df ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a42a : jrcxz 0x42a4ad ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a505 : jrcxz 0x42a588 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a5eb : jrcxz 0x42a66e ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x000000000042a8f0 : jrcxz 0x42a973 ; add dh, byte ptr [rcx] ; ret 0x144
0x00000000004390cb : jrcxz 0x4390d3 ; add byte ptr [rcx], bh ; ret
0x000000000043eb3d : jrcxz 0x43eb45 ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x000000000043fc24 : jrcxz 0x43fc1e ; ret 0x7406
0x000000000044486c : jrcxz 0x4448be ; cmp ecx, esi ; je 0x444888 ; xor eax, eax ; ret
0x000000000044b07c : jrcxz 0x44b0ce ; mov ebp, dword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rdx
0x000000000044b0dc : jrcxz 0x44b12e ; mov ebp, dword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rcx
0x0000000000453f01 : jrcxz 0x453f0a ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004c7b70 : jrcxz 0x4c7b66 ; mov rdx, r8 ; jmp 0x4c7b84
0x00000000004c869f : jrcxz 0x4c86b1 ; movdqu xmmword ptr [rdi + 0x50], xmm4 ; ret
0x00000000004c8e5a : jrcxz 0x4c8ed8 ; ret 0xc400
0x00000000004c8eda : jrcxz 0x4c8f58 ; ret 0xc400
0x00000000004ca2d8 : jrcxz 0x4ca321 ; sti ; adc esp, eax ; ret
0x00000000004f5c5a : jrcxz 0x4f5c34 ; scasd eax, dword ptr [rdi] ; inc edx ; jmp 0x4f5c0a
0x00000000004f6762 : jrcxz 0x4f6732 ; mov byte ptr [rdi - 0x22], ch ; outsd dx, dword ptr [rsi] ; ret
0x00000000004f6761 : jrcxz 0x4f6733 ; mov byte ptr [rdi - 0x22], ch ; outsd dx, dword ptr [rsi] ; ret
0x00000000004fa009 : jrcxz 0x4fa051 ; push 0x42 ; sub eax, dword ptr [rdi] ; ret 0xecf9
0x00000000004fa896 : jrcxz 0x4fa871 ; add bh, dl ; mov bl, 0xe0 ; test dword ptr [rax], ecx ; ret
0x00000000004fb6b4 : jrcxz 0x4fb71b ; mov dl, 0xfd ; ret
0x0000000000504519 : jrcxz 0x5044ac ; jmp 0x504513
0x000000000050a689 : jrcxz 0x50a637 ; pop rdx ; ret 0xd69
0x000000000051391d : jrcxz 0x5138ff ; shr dword ptr [rcx + 0x41], 1 ; ret
0x0000000000515e19 : jrcxz 0x515e00 ; insb byte ptr [rdi], dx ; fidiv word ptr [rbx + 0x26df5e2a] ; ret 0x4d11
0x000000000051719c : jrcxz 0x51716a ; push rdi ; ret
0x000000000052afe1 : jrcxz 0x52afd8 ; jmp rsp
0x000000000052afe0 : jrcxz 0x52afd9 ; jmp rsp
0x0000000000548a01 : jrcxz 0x5489f8 ; jmp qword ptr [rsi]
0x000000000054d39d : jrcxz 0x54d3a6 ; add byte ptr [rax + 0x30], dl ; cmc ; call qword ptr [rdx]
0x000000000054d3d5 : jrcxz 0x54d3de ; add byte ptr [rax], bh ; xor ebp, esi ; call qword ptr [rdx]
0x0000000000418958 : js 0x4189ab ; mov eax, ebx ; ret
0x0000000000418957 : js 0x4189ac ; mov eax, ebx ; ret
0x0000000000420414 : js 0x420464 ; add esp, 0x20 ; pop rbx ; ret
0x000000000043a703 : js 0x43a6c3 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000043b442 : js 0x43b456 ; add rsp, 8 ; ret
0x000000000043cfdd : js 0x43cfd6 ; mov dword ptr [rdi + 0x28], esi ; ret
0x000000000043d0ac : js 0x43d0fc ; test eax, eax ; je 0x43d0be ; jmp rax
0x000000000043d0ab : js 0x43d0fd ; test eax, eax ; je 0x43d0bf ; jmp rax
0x0000000000448ade : js 0x448aeb ; ret
0x00000000004496cf : js 0x4496e7 ; cmp eax, esi ; je 0x4496e7 ; ret
0x000000000044b082 : js 0x44b08e ; call rdx
0x000000000044b0e2 : js 0x44b0ee ; call rcx
0x00000000004540f7 : js 0x454084 ; ret
0x000000000046500e : js 0x465061 ; test eax, eax ; je 0x465022 ; mov rdi, rbx ; call rax
0x0000000000465823 : js 0x465872 ; mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000465822 : js 0x465873 ; mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000465833 : js 0x465882 ; mov eax, dword ptr [rax + 8] ; jmp rax
0x0000000000465832 : js 0x465883 ; mov eax, dword ptr [rax + 8] ; jmp rax
0x0000000000465843 : js 0x465892 ; mov eax, dword ptr [rax + 0x10] ; jmp rax
0x0000000000465842 : js 0x465893 ; mov eax, dword ptr [rax + 0x10] ; jmp rax
0x000000000046d4da : js 0x46d467 ; ret
0x000000000047ebe7 : js 0x47ebfe ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000481bbc : js 0x481bd3 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048892f : js 0x48896e ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048e1d3 : js 0x48e1e2 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049fb76 : js 0x49fb7d ; add byte ptr [rbp + rdi*2 - 0x7d], dh ; ret 0x3901
0x00000000004a9222 : js 0x4a9235 ; mov qword ptr [rdx], rcx ; ret
0x00000000004b593c : js 0x4b599c ; pop rbp ; ret
0x00000000004baad5 : js 0x4bab2e ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000004bada5 : js 0x4badfe ; add byte ptr [rbp - 0x77], al ; ret 0xc141
0x00000000004bbc34 : js 0x4bbc8d ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000004bbe74 : js 0x4bbecd ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000004bfa46 : js 0x4bfa95 ; mov ebp, eax ; ret
0x00000000004bfd9c : js 0x4bfdeb ; mov ebp, eax ; ret
0x00000000004c0585 : js 0x4c05d4 ; mov ebp, eax ; ret
0x00000000004c0de0 : js 0x4c0e2f ; mov ebp, eax ; ret
0x00000000004ca10a : js 0x4ca126 ; jbe 0x4ca167 ; lea rsi, qword ptr [rsi + 0x60] ; ret
0x00000000004f113b : js 0x4f1164 ; ret 0xc4
0x00000000004f6f69 : js 0x4f6fa9 ; mov ebx, dword ptr [rcx - 0x68] ; ret 0x978
0x00000000004f81dd : js 0x4f8227 ; ret 0x9fc2
0x00000000004fc8c7 : js 0x4fc881 ; rcr dword ptr [rbx], cl ; ret
0x00000000004fc8c6 : js 0x4fc882 ; rcr dword ptr [rbx], cl ; ret
0x00000000004fc8c5 : js 0x4fc883 ; rcr dword ptr [rbx], cl ; ret
0x00000000004ffa48 : js 0x4ffa8f ; lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x00000000004ffc05 : js 0x4ffc2b ; ret
0x0000000000501554 : js 0x501523 ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rax ; std ; pop rax ; push rsp ; std ; ret
0x0000000000503951 : js 0x50392c ; push rdi ; ret 0xb9d9
0x0000000000503951 : js 0x503930 ; push rdi ; ret 0xb9d9
0x000000000050e74c : js 0x50e7c6 ; ret
0x00000000005129d7 : js 0x512a2c ; push 0x6f ; ret 0x2167
0x0000000000513f7b : js 0x513f6c ; cmp eax, 0x72396781 ; ret
0x00000000005156a1 : js 0x51565c ; hlt ; ret
0x0000000000516b6b : js 0x516b7f ; ret
0x000000000051848e : js 0x518480 ; push rbx ; in al, dx ; jp 0x51849c ; ret 0x2076
0x00000000005280d5 : js 0x5280db ; add ah, ah ; ret 0xffed
0x00000000005280dd : js 0x5280e5 ; add byte ptr [rbx + rax*8], ah ; in eax, dx ; jmp rsp
0x0000000000530d39 : js 0x530d2a ; call rsp
0x0000000000531a08 : js 0x5319d4 ; in eax, dx ; call qword ptr [rax]
0x0000000000532529 : js 0x53251b ; call rbx
0x0000000000532528 : js 0x53251c ; call rbx
0x00000000005339d8 : js 0x533994 ; out dx, al ; jmp rcx
0x0000000000534188 : js 0x534161 ; out dx, al ; jmp qword ptr [rcx]
0x0000000000540448 : js 0x5403f4 ; call qword ptr [rsi]
0x0000000000543e38 : js 0x543e8e ; call qword ptr [rbx]
0x0000000000549218 : js 0x549224 ; hlt ; jmp rsi
0x000000000054b028 : js 0x54b089 ; hlt ; jmp rsp
0x000000000054b148 : js 0x54b1ad ; hlt ; call qword ptr [rdi]
0x000000000054d798 : js 0x54d7d4 ; cmc ; jmp qword ptr [rdi]
0x000000000054eac8 : js 0x54eb3d ; cmc ; call qword ptr [rsi]
0x00000000005151ac : lahf ; adc eax, dword ptr [rax - 2] ; ret
0x000000000052875d : lahf ; add byte ptr [rax], al ; and al, 0x87 ; out dx, al ; call rsp
0x000000000050dbd6 : lahf ; add qword ptr [r8 + rcx*8 + 0x23], rdx ; ret 0x52a2
0x00000000004f7aa1 : lahf ; and al, 0xd8 ; xor al, 0x38 ; ret 0xa070
0x0000000000515cb9 : lahf ; fld xword ptr [rax - 0x536b70ed] ; ret
0x000000000052b9f9 : lahf ; hlt ; call rsp
0x000000000048b714 : lahf ; idiv edi ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000515b49 : lahf ; jae 0x515b77 ; push rcx ; adc al, 0x87 ; ror esp, cl ; ret 0xcac1
0x00000000004d0c26 : lahf ; lodsd eax, dword ptr es:[rsi] ; mov bl, 0x26 ; ret
0x00000000005330e9 : lahf ; out dx, al ; call qword ptr [rbx]
0x0000000000528f31 : lahf ; out dx, eax ; call rsp
0x0000000000518b16 : lahf ; pop rdi ; popfq ; insb byte ptr [rdi], dx ; out 0xee, al ; cmp al, 0x8b ; ret
0x00000000004f81b5 : lahf ; pop rsp ; ret
0x0000000000518c72 : lahf ; popfq ; xchg eax, ebp ; push rax ; in eax, dx ; ret
0x000000000044fc59 : lahf ; push rcx ; add byte ptr [rax + 0xf], cl ; ret 0xc748
0x0000000000472913 : lahf ; rcr byte ptr [rbx + 0xf], 0xb6 ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000046d4c1 : lahf ; ret
0x000000000041ba43 : lahf ; ret 0x30e9
0x000000000047c759 : lahf ; ret 0x51
0x0000000000492c80 : lahf ; ret 0x5dc2
0x00000000004f7aaf : lahf ; ret 0x61c0
0x00000000004e61c9 : lahf ; ret 0x7700
0x00000000004f5a03 : lahf ; ret 0x7a96
0x00000000005126e7 : lahf ; ret 0x8012
0x0000000000481848 : lahf ; ret 0x8348
0x000000000041b994 : lahf ; ret 0x8445
0x000000000041b80c : lahf ; ret 0x8545
0x000000000041b778 : lahf ; ret 0x854d
0x00000000004b0107 : lahf ; ret 0x894c
0x0000000000508e57 : lahf ; ret 0xb224
0x000000000042064b : lahf ; ret 0xb60f
0x0000000000516726 : lahf ; ret 0xbf2e
0x00000000004f93bc : lahf ; ret 0xe1a9
0x00000000004c60cb : lahf ; rol byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x000000000044e6f6 : lahf ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000501bf9 : lahf ; salc ; sub byte ptr [rdx], 0xe2 ; ret 0x60a
0x0000000000516860 : lahf ; xor al, 0x4d ; sbb al, 0xc5 ; ret
0x0000000000513ea9 : lahf ; xor byte ptr [rcx], 0xe9 ; ret 0xa287
0x000000000046e85f : lahf ; xor eax, eax ; ret
0x0000000000528873 : lcall ptr [rbp + 0x1e240000] ; out dx, eax ; call rsp
0x0000000000446475 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000047a2d5 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000041a932 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004ae617 : lcall ptr [rbx + 0x5d] ; jmp rax
0x00000000004ae4bc : lcall ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000419e1d : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000419cd7 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000462d77 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041d2e8 : lcall ptr [rbx + 0x5d] ; ret
0x000000000052e22b : lcall ptr [rbx + rax*4 + 0x44640002] ; clc ; call rsp
0x000000000052c3c3 : lcall ptr [rbx + rbx*8 + 0x4f840001] ; cmc ; jmp rsp
0x00000000004a0afb : lcall ptr [rbx - 0x3d] ; nop ; xor eax, eax ; pop rbx ; ret
0x00000000004cb50b : lcall ptr [rbx - 0xd] ; ret
0x000000000052e323 : lcall ptr [rcx + rcx*4 + 0x62240002] ; clc ; jmp rsp
0x000000000044806b : lcall ptr [rcx - 0x50f00409] ; ret
0x000000000052ef33 : lcall ptr [rdi + rcx*8 + 0x5cf40002] ; cli ; call rsp
0x000000000052ef9b : lcall ptr [rdx + rdx*8 + 0x72840002] ; cli ; jmp rsp
0x00000000005290d3 : lcall ptr [rsi + rcx*8 - 0x494c0000] ; out dx, eax ; call rsp
0x000000000052c983 : lcall ptr [rsp + rdi*8] ; add dword ptr [rax], eax ; hlt ; ret 0xfff5
0x000000000052e523 : lcall ptr [rsp + rdx*4 - 0x62fbfffe] ; clc ; call rsp
0x00000000004b45bd : lea eax, dword ptr [rax + 0x525f00] ; ret
0x0000000000462d74 : lea eax, dword ptr [rax + rax*2 - 1] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404762 : lea eax, dword ptr [rax + rdx*4] ; ret
0x0000000000424172 : lea eax, dword ptr [rax + rsi + 1] ; pop rbx ; mov qword ptr [rdi], rax ; ret
0x000000000050581e : lea eax, dword ptr [rax - 0x50] ; ret
0x00000000004b35f1 : lea eax, dword ptr [rax*8 + 0x7578e0] ; ret
0x00000000004f1c56 : lea eax, dword ptr [rax] ; sbb bl, dh ; ret
0x00000000004c5336 : lea eax, dword ptr [rbx + 1] ; add edx, eax ; jmp 0x4c5347
0x000000000052b50d : lea eax, dword ptr [rcx] ; add ah, dh ; hlt ; jmp rsp
0x00000000004a3c0f : lea eax, dword ptr [rdi + 0x28] ; mov rdi, r10 ; call rax
0x000000000044a6c1 : lea eax, dword ptr [rdi + 0x28] ; ret
0x000000000048c5f1 : lea eax, dword ptr [rdi + 0x48] ; ret
0x000000000055182c : lea eax, dword ptr [rdx] ; add bh, byte ptr [rsi + rcx + 0x28] ; ret
0x00000000004070ec : lea eax, dword ptr [rsi + rax] ; add rax, rdi ; ret
0x0000000000404489 : lea eax, dword ptr [rsi + rdx*4] ; xor rax, rcx ; ret
0x0000000000408221 : lea eax, dword ptr [rsp + 8] ; ret
0x0000000000507de6 : lea ebp, dword ptr [rbx - 0x2e] ; mov bl, 0x3c ; ret
0x000000000041e8f8 : lea ebp, dword ptr [rbx - 1] ; call r12
0x00000000004f9d3b : lea ebp, dword ptr [rcx] ; ret 0xfa3e
0x00000000004f1fe8 : lea ebp, dword ptr [rdx] ; ret
0x0000000000494a88 : lea ebx, dword ptr [rax + rbp] ; jmp 0x494a96
0x00000000004c60ca : lea ebx, dword ptr [rdi + 0xc0] ; mov rdx, r12 ; call rax
0x00000000004ed32f : lea ebx, dword ptr [rdi - 0x5e] ; ret 0x7455
0x0000000000449228 : lea ecx, dword ptr [rax + 1] ; mov dword ptr [rsi + 4], ecx ; mov qword ptr [rdx + rax*8], rdi ; ret
0x00000000004c1dcb : lea ecx, dword ptr [rbx + rdx + 0x20] ; mov r10, rax ; jmp 0x4c1de6
0x00000000004c205d : lea ecx, dword ptr [rcx + rax + 0x20] ; sub r10, rax ; jmp 0x4c2076
0x0000000000475470 : lea ecx, dword ptr [rsp + 0x40] ; mov esi, 2 ; call rax
0x000000000048f55f : lea ecx, dword ptr [rsp + 4] ; mov esi, 8 ; call rax
0x00000000004c5b55 : lea edi, dword ptr [rbx + 0x40] ; call r8
0x00000000004c6675 : lea edi, dword ptr [rbx + 0x40] ; call rax
0x00000000004c5e89 : lea edi, dword ptr [rdi + 0x40] ; call rax
0x00000000004c5ccc : lea edi, dword ptr [rdi + 0x40] ; call rbx
0x0000000000408176 : lea edi, dword ptr [rdi + 1] ; jne 0x408175 ; ret
0x000000000050504c : lea edi, dword ptr [rdi] ; ret
0x0000000000508be9 : lea edi, dword ptr [rsi] ; in al, dx ; ret
0x0000000000466051 : lea edi, dword ptr [rsp + 0x10] ; call 0x402296
0x00000000004aa34b : lea edi, dword ptr [rsp + 0x10] ; call rax
0x000000000046605b : lea edi, dword ptr [rsp + 0x30] ; call 0x402296
0x000000000046618b : lea edi, dword ptr [rsp + 0x30] ; call 0x402406
0x00000000004c5333 : lea edx, dword ptr [rax + rcx] ; lea eax, dword ptr [rbx + 1] ; add edx, eax ; jmp 0x4c534a
0x00000000004938e1 : lea edx, dword ptr [rbx] ; ret 0x8df6
0x00000000004938e5 : lea edx, dword ptr [rbx] ; ret 0xd890
0x00000000004ede16 : lea edx, dword ptr [rsi] ; ret 0x6786
0x000000000043c229 : lea edx, dword ptr [rsp + 0x10] ; call rax
0x000000000043c643 : lea edx, dword ptr [rsp + 0x18] ; mov rdi, rbp ; call rbx
0x00000000004a0540 : lea esi, dword ptr [rax - 1] ; call 0x41c845
0x000000000050a829 : lea esi, dword ptr [rbp - 0x1972dfd7] ; ret 0x5a93
0x00000000004c6769 : lea esi, dword ptr [rbx + 0x60] ; call rax
0x00000000004c5b51 : lea esi, dword ptr [rbx + 0x60] ; lea rdi, qword ptr [rbx + 0x40] ; call r8
0x00000000004c6671 : lea esi, dword ptr [rbx + 0x60] ; lea rdi, qword ptr [rbx + 0x40] ; call rax
0x0000000000447a11 : lea esi, dword ptr [rbx + 1] ; call r14
0x00000000004f4d1c : lea esi, dword ptr [rcx] ; cmp ch, ah ; mov dl, 0x1c ; ret
0x00000000004c6f8f : lea esi, dword ptr [rdi + 0x10] ; mov rdx, qword ptr [rsp + 8] ; call r12
0x00000000004c767b : lea esi, dword ptr [rdi + 0x10] ; mov rdx, rax ; call r11
0x00000000004c7466 : lea esi, dword ptr [rdi + 0x10] ; mov rdx, rax ; call r15
0x00000000004c63c1 : lea esi, dword ptr [rdi + 0x60] ; lea rdi, qword ptr [r15 + 0x40] ; call rax
0x00000000004c5cc8 : lea esi, dword ptr [rdi + 0x60] ; lea rdi, qword ptr [r15 + 0x40] ; call rbx
0x00000000004c5f0b : lea esi, dword ptr [rdi + 0x60] ; lea rdi, qword ptr [rdi + 0x40] ; call rbx
0x00000000004ac527 : lea esi, dword ptr [rsi + 0x48] ; call rax
0x00000000004ca10f : lea esi, dword ptr [rsi + 0x60] ; ret
0x00000000004a90f5 : lea esi, dword ptr [rsp + 0x10] ; call r14
0x00000000004a8d66 : lea esi, dword ptr [rsp + 0x10] ; mov rdi, rax ; call r12
0x000000000046ec1f : lea esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call rbx
0x00000000004b4e57 : lea esi, dword ptr [rsp + 0x20] ; mov rdi, r8 ; call qword ptr [rbx]
0x00000000004778c1 : lea esi, dword ptr [rsp + 0x38] ; mov rdi, r13 ; call r12
0x00000000004a6060 : lea esi, dword ptr [rsp + 0x40] ; mov edi, dword ptr [rdi] ; call rax
0x0000000000465bec : lea esi, dword ptr [rsp + 0x60] ; call r10
0x000000000046ebaa : lea esi, dword ptr [rsp + 0xf] ; mov rdi, rbp ; call rbx
0x00000000004af6d4 : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; xor ebp, ebp ; call rax
0x00000000004bb2de : lea esp, dword ptr [rax + 0x31005279] ; ret 0x3141
0x00000000004bbe00 : lea esp, dword ptr [rax + 0x3100527a] ; ret 0x8944
0x0000000000496bab : lea esp, dword ptr [rax + 8] ; mov rsi, r12 ; call r15
0x00000000004baa61 : lea esp, dword ptr [rax - 0x74ffad86] ; cmp byte ptr [rcx], r14b ; ret 0x8944
0x00000000004c9fea : lea esp, dword ptr [rax] ; mov rax, r10 ; ret
0x0000000000415fa4 : lea esp, dword ptr [rax] ; ret
0x00000000004f72f0 : lea esp, dword ptr [rax] ; sub al, 0x5d ; ret
0x00000000004c2828 : lea esp, dword ptr [rbp] ; pop rbp ; ret
0x0000000000418e37 : lea esp, dword ptr [rbx] ; ret
0x000000000045ad45 : lea esp, dword ptr [rdx - 8] ; ret
0x0000000000414c5c : lea esp, dword ptr [rdx] ; ret
0x000000000049270d : lea esp, dword ptr [rsi + 0x30] ; popfq ; ret
0x0000000000410e2a : lea esp, dword ptr [rsi + 0x30] ; ret
0x0000000000411520 : lea esp, dword ptr [rsi] ; ret
0x00000000004c7c3f : lea esp, dword ptr [rsp + 0x18] ; ret
0x00000000004bfa43 : lea esp, dword ptr [rsp + 0x78] ; mov rbp, rax ; ret
0x00000000004cf10e : lea esp, dword ptr [rsp + 0x88] ; ret
0x0000000000496baa : lea r12, qword ptr [rax + 8] ; mov rsi, r12 ; call r15
0x00000000004a3c0e : lea r8, qword ptr [rdi + 0x28] ; mov rdi, r10 ; call rax
0x00000000004b45bc : lea rax, qword ptr [rax + 0x525f00] ; ret
0x0000000000404761 : lea rax, qword ptr [rax + rdx*4] ; ret
0x0000000000424171 : lea rax, qword ptr [rax + rsi + 1] ; pop rbx ; mov qword ptr [rdi], rax ; ret
0x00000000004b35f0 : lea rax, qword ptr [rax*8 + 0x7578e0] ; ret
0x000000000044a6c0 : lea rax, qword ptr [rdi + 0x28] ; ret
0x000000000048c5f0 : lea rax, qword ptr [rdi + 0x48] ; ret
0x00000000004070eb : lea rax, qword ptr [rsi + rax] ; add rax, rdi ; ret
0x0000000000404488 : lea rax, qword ptr [rsi + rdx*4] ; xor rax, rcx ; ret
0x0000000000408220 : lea rax, qword ptr [rsp + 8] ; ret
0x00000000004c1dca : lea rcx, qword ptr [r11 + r10 + 0x20] ; mov r10, rax ; jmp 0x4c1de7
0x00000000004c205c : lea rcx, qword ptr [rcx + rax + 0x20] ; sub r10, rax ; jmp 0x4c2077
0x00000000004c5e88 : lea rdi, qword ptr [r15 + 0x40] ; call rax
0x00000000004c5ccb : lea rdi, qword ptr [r15 + 0x40] ; call rbx
0x00000000004c5b54 : lea rdi, qword ptr [rbx + 0x40] ; call r8
0x00000000004c6674 : lea rdi, qword ptr [rbx + 0x40] ; call rax
0x00000000004c6729 : lea rdi, qword ptr [rdi + 0x40] ; call rax
0x00000000004c5f0e : lea rdi, qword ptr [rdi + 0x40] ; call rbx
0x0000000000408175 : lea rdi, qword ptr [rdi + 1] ; jne 0x408176 ; ret
0x0000000000466050 : lea rdi, qword ptr [rsp + 0x10] ; call 0x402297
0x00000000004aa34a : lea rdi, qword ptr [rsp + 0x10] ; call rax
0x000000000046605a : lea rdi, qword ptr [rsp + 0x30] ; call 0x402297
0x000000000046618a : lea rdi, qword ptr [rsp + 0x30] ; call 0x402407
0x00000000004c5332 : lea rdx, qword ptr [r8 + rcx] ; lea eax, dword ptr [rbx + 1] ; add edx, eax ; jmp 0x4c534b
0x000000000043c228 : lea rdx, qword ptr [rsp + 0x10] ; call rax
0x000000000043c642 : lea rdx, qword ptr [rsp + 0x18] ; mov rdi, rbp ; call rbx
0x00000000004c63c0 : lea rsi, qword ptr [r15 + 0x60] ; lea rdi, qword ptr [r15 + 0x40] ; call rax
0x00000000004c5cc7 : lea rsi, qword ptr [r15 + 0x60] ; lea rdi, qword ptr [r15 + 0x40] ; call rbx
0x00000000004c6768 : lea rsi, qword ptr [rbx + 0x60] ; call rax
0x00000000004c5b50 : lea rsi, qword ptr [rbx + 0x60] ; lea rdi, qword ptr [rbx + 0x40] ; call r8
0x00000000004c6670 : lea rsi, qword ptr [rbx + 0x60] ; lea rdi, qword ptr [rbx + 0x40] ; call rax
0x00000000004c767a : lea rsi, qword ptr [rdi + 0x10] ; mov rdx, rax ; call r11
0x00000000004c7465 : lea rsi, qword ptr [rdi + 0x10] ; mov rdx, rax ; call r15
0x00000000004c5f0a : lea rsi, qword ptr [rdi + 0x60] ; lea rdi, qword ptr [rdi + 0x40] ; call rbx
0x00000000004ac526 : lea rsi, qword ptr [rsi + 0x48] ; call rax
0x00000000004ca10e : lea rsi, qword ptr [rsi + 0x60] ; ret
0x00000000004a90f4 : lea rsi, qword ptr [rsp + 0x10] ; call r14
0x00000000004a8d65 : lea rsi, qword ptr [rsp + 0x10] ; mov rdi, rax ; call r12
0x000000000046ec1e : lea rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call rbx
0x00000000004b4e56 : lea rsi, qword ptr [rsp + 0x20] ; mov rdi, r8 ; call qword ptr [rbx]
0x00000000004778c0 : lea rsi, qword ptr [rsp + 0x38] ; mov rdi, r13 ; call r12
0x00000000004a605f : lea rsi, qword ptr [rsp + 0x40] ; mov edi, dword ptr [rdi] ; call rax
0x0000000000465beb : lea rsi, qword ptr [rsp + 0x60] ; call r10
0x000000000046eba9 : lea rsi, qword ptr [rsp + 0xf] ; mov rdi, rbp ; call rbx
0x000000000045ad44 : lea rsp, qword ptr [r10 - 8] ; ret
0x0000000000414c5b : lea rsp, qword ptr [r10] ; ret
0x0000000000418e36 : lea rsp, qword ptr [r11] ; ret
0x00000000004c9fe9 : lea rsp, qword ptr [rax] ; mov rax, r10 ; ret
0x0000000000415fa3 : lea rsp, qword ptr [rax] ; ret
0x00000000004c2827 : lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x000000000049270c : lea rsp, qword ptr [rsi + 0x30] ; popfq ; ret
0x0000000000410e29 : lea rsp, qword ptr [rsi + 0x30] ; ret
0x000000000041151f : lea rsp, qword ptr [rsi] ; ret
0x00000000004c7c3e : lea rsp, qword ptr [rsp + 0x18] ; ret
0x00000000004bfa42 : lea rsp, qword ptr [rsp + 0x78] ; mov rbp, rax ; ret
0x00000000004cf10d : lea rsp, qword ptr [rsp + 0x88] ; ret
0x000000000052eea5 : leave ; add al, byte ptr [rax] ; add al, 0x3c ; cli ; call rsp
0x0000000000425af4 : leave ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8588
0x000000000043a213 : leave ; add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; in eax, -0x7d ; ret
0x000000000043cb2c : leave ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x0000000000516c10 : leave ; add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x00000000004f64b9 : leave ; call 0xffffffff847726e4
0x00000000004f64b8 : leave ; call 0xffffffff847726e5
0x0000000000511b11 : leave ; cmp dword ptr [rbp - 0x2c312c3a], esi ; ret 0x1203
0x000000000049347d : leave ; enter 0x7544, -0x3e ; mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x00000000004fe902 : leave ; fnsave dword ptr [rbx + 0x2a] ; ret
0x0000000000498c60 : leave ; idiv bh ; xor eax, eax ; add rsp, 8 ; ret
0x000000000052a0c1 : leave ; int1 ; call rsp
0x000000000053e331 : leave ; int1 ; jmp rbx
0x00000000004b6839 : leave ; je 0x4b6857 ; mov rsi, rsp ; mov rdi, rdx ; call rcx
0x000000000047203e : leave ; jmp rax
0x0000000000416ac9 : leave ; jne 0x416a08 ; ret
0x0000000000416bb6 : leave ; jne 0x416b08 ; ret
0x0000000000417033 : leave ; jne 0x417024 ; ret
0x0000000000417157 : leave ; jne 0x4170c8 ; ret
0x000000000041de2b : leave ; jne 0x41dddd ; mov rdx, rax ; jmp 0x41de02
0x0000000000424bb2 : leave ; jne 0x424be6 ; xor eax, eax ; pop rbx ; ret
0x0000000000513496 : leave ; jp 0x513513 ; ret 0x12c9
0x00000000004a9221 : leave ; js 0x4a9236 ; mov qword ptr [rdx], rcx ; ret
0x00000000004c40f8 : leave ; lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x0000000000518222 : leave ; leave ; ret
0x00000000005189b6 : leave ; mov byte ptr [rbp + rcx*2 + 0xb], bh ; ret
0x00000000004804a2 : leave ; mov eax, 4 ; je 0x4804c9 ; ret
0x00000000004fc63b : leave ; mov ebx, 0x1ec0a630 ; ret
0x0000000000422721 : leave ; mov edx, r8d ; mov esi, ebp ; call r11
0x0000000000421d84 : leave ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040feaa : leave ; mov rax, r9 ; ret
0x000000000047a3b1 : leave ; mov rax, rcx ; ret
0x0000000000406ea4 : leave ; mov rcx, rsi ; mov edx, ebp ; xor esi, esi ; call rax
0x000000000043b7a4 : leave ; mov rdx, rax ; jmp 0x43b77b
0x00000000004c1033 : leave ; movups xmmword ptr [rsi], xmm2 ; pxor xmm2, xmm2 ; ret
0x00000000004fb999 : leave ; or al, 0x6b ; ret 0x1320
0x000000000050b1dd : leave ; outsd dx, dword ptr [rsi] ; ret 0xcea3
0x000000000051719d : leave ; push rdi ; ret
0x00000000005086e4 : leave ; rcl byte ptr [rcx - 0x3e], 1 ; jmp 0x5086f5
0x0000000000401d61 : leave ; ret
0x0000000000503ef8 : leave ; ret 0x1278
0x0000000000518ea5 : leave ; ret 0x15a3
0x00000000005078a8 : leave ; ret 0x347f
0x00000000004309e5 : leave ; ret 0x3b81
0x00000000004ecc3f : leave ; ret 0x4577
0x000000000047cdcb : leave ; ret 0x51
0x000000000042be29 : leave ; ret 0x8581
0x00000000004f0a12 : leave ; ret 0x8d33
0x0000000000517dea : leave ; ret 0x90cf
0x000000000051857a : leave ; ret 0x9a60
0x00000000005020a2 : leave ; ret 0xbe97
0x00000000004fc3c8 : leave ; ret 0xe867
0x000000000050b543 : leave ; ret 0xead1
0x00000000004f5e12 : leave ; sbb al, 0x47 ; ret
0x00000000004f7833 : leave ; sbb dh, byte ptr [rdi + rdi*8 - 0x939d122] ; ret 0xf6c2
0x0000000000502d18 : leave ; scasb al, byte ptr [rdi] ; ret 0x953d
0x000000000046dc43 : leave ; sete al ; ret
0x00000000005160a1 : leave ; std ; int1 ; insb byte ptr [rdi], dx ; pop rdi ; jmp 0x516070
0x0000000000512ce5 : leave ; std ; ret
0x00000000004c46c7 : leave ; stosb byte ptr [rdi], al ; xorps xmm2, xmm1 ; ret
0x0000000000507a37 : leave ; xor al, 0x35 ; or eax, 0xed2a2bf9 ; ret
0x0000000000406f63 : leave ; xor esi, esi ; call rax
0x000000000043be65 : leave ; xor esi, esi ; mov rbx, rdi ; mov rdx, rsp ; call rax
0x00000000004173ad : les eax, ptr [rcx + 0x3d] ; hlt ; ret 0x62c4
0x00000000005297bb : ljmp ptr [rbp + rsi*8 + 0x39340000] ; int1 ; jmp rsp
0x0000000000509cc0 : ljmp ptr [rbp - 0x6e] ; mov edi, 0xba1700f6 ; ret 0xbf6b
0x00000000004fbb75 : ljmp ptr [rbx + 0x76] ; mov eax, 0xfdfd55d3 ; ret 0x3148
0x000000000052b753 : ljmp ptr [rbx + rbx*4 + 0x7f840001] ; hlt ; call rsp
0x0000000000529ce3 : ljmp ptr [rcx + rdx - 0x53dbffff] ; int1 ; call rsp
0x000000000052a103 : ljmp ptr [rcx - 0x2d4bffff] ; int1 ; call rsp
0x000000000040db62 : ljmp ptr [rcx] ; ret
0x000000000052bdb3 : ljmp ptr [rdi + rdi*4 + 0x12840001] ; cmc ; jmp rsp
0x0000000000528633 : ljmp ptr [rdi + rdx*4 + 0x59f40000] ; out dx, al ; jmp rsp
0x000000000052cabb : ljmp ptr [rdx + rax - 0x206bfffe] ; cmc ; jmp rsp
0x000000000052a78b : ljmp ptr [rdx + rax*2 + 0x33d40001] ; call rsp
0x000000000052ecf3 : ljmp ptr [rdx + rdi*4 + 0x16940002] ; stc ; jmp rsp
0x0000000000529183 : ljmp ptr [rdx + rdx*8] ; add ah, dl ; ret 0xffef
0x000000000052a063 : ljmp ptr [rsi + rbx] ; add dword ptr [rax], eax ; ret
0x00000000005296ad : lock add byte ptr [rax], al ; adc al, 0x27 ; int1 ; jmp rsp
0x00000000004533ac : lock add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000052c79d : lock add dword ptr [rax], eax ; hlt ; xchg eax, esi ; cmc ; jmp rsp
0x000000000044614a : lock add dword ptr [rdi], ecx ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004c84e7 : lock add dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0x0000000000529ce4 : lodsb al, byte ptr [rsi] ; adc dword ptr [rcx], eax ; add byte ptr [rsp + rbp*4], ah ; int1 ; call rsp
0x0000000000553384 : lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; sub byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x000000000043a463 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi + 0x33], bh ; pop rbx ; ret
0x0000000000545484 : lodsb al, byte ptr [rsi] ; add dword ptr fs:[rax], eax ; test al, 0x66 ; call qword ptr [rbx]
0x000000000044cbde : lodsb al, byte ptr [rsi] ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005297bc : lodsb al, byte ptr [rsi] ; cmc ; add byte ptr [rax], al ; xor al, 0x39 ; int1 ; jmp rsp
0x0000000000532884 : lodsb al, byte ptr [rsi] ; cmp byte ptr [rax], al ; add byte ptr [rax + 0x7b], cl ; out dx, al ; jmp qword ptr [rbx]
0x000000000054b649 : lodsb al, byte ptr [rsi] ; hlt ; call qword ptr [rdx]
0x0000000000529ce9 : lodsb al, byte ptr [rsi] ; int1 ; call rsp
0x00000000004f1c55 : lodsb al, byte ptr [rsi] ; lea eax, dword ptr [rax] ; sbb bl, dh ; ret
0x00000000004f9342 : lodsb al, byte ptr [rsi] ; loopne 0x4f9368 ; sal byte ptr [rbp - 0x2ce6c8fd], cl ; ret 0x254
0x000000000052bdb4 : lodsb al, byte ptr [rsi] ; mov edi, 0x12840001 ; cmc ; jmp rsp
0x000000000052ecf4 : lodsb al, byte ptr [rsi] ; mov edx, 0x16940002 ; stc ; jmp rsp
0x0000000000490baf : lodsb al, byte ptr [rsi] ; mov qword ptr [r9], 0 ; ret
0x00000000004fc527 : lodsb al, byte ptr [rsi] ; neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x000000000053fc84 : lodsb al, byte ptr [rsi] ; or al, 1 ; add byte ptr [rax - 0x78], ch ; jmp rbx
0x000000000050b822 : lodsb al, byte ptr [rsi] ; or al, byte ptr [rsi - 0x57cb9399] ; clc ; ret 0xc375
0x00000000005151ee : lodsb al, byte ptr [rsi] ; push rbp ; jae 0x5151cb ; out dx, al ; je 0x515255 ; ret
0x0000000000534184 : lodsb al, byte ptr [rsi] ; push rcx ; add byte ptr [rax], al ; js 0x534165 ; out dx, al ; jmp qword ptr [rcx]
0x0000000000544784 : lodsb al, byte ptr [rsi] ; push rdi ; add dword ptr [rax], eax ; cmp byte ptr [rdx - 0xd], ah ; call qword ptr [rbx]
0x00000000005085db : lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x00000000004189e8 : lodsb al, byte ptr [rsi] ; ret
0x000000000053b284 : lodsb al, byte ptr [rsi] ; ret 0
0x0000000000516719 : lodsb al, byte ptr [rsi] ; ret 0x1c5b
0x0000000000515622 : lodsb al, byte ptr [rsi] ; ret 0x5624
0x00000000004f8640 : lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x00000000004ecf9a : lodsb al, byte ptr [rsi] ; ret 0xff65
0x000000000052b754 : lodsb al, byte ptr [rsi] ; wait ; add dword ptr [rax], eax ; test byte ptr [rdi - 0xc], bh ; call rsp
0x0000000000528634 : lodsb al, byte ptr [rsi] ; xchg eax, edi ; add byte ptr [rax], al ; hlt ; pop rcx ; out dx, al ; jmp rsp
0x00000000004f4df0 : lodsb al, byte ptr [rsi] ; xchg eax, esi ; mov ch, 0xa4 ; ret 0x9a5b
0x0000000000517ab8 : lodsb al, byte ptr [rsi] ; xor al, 1 ; ret 0x5253
0x000000000052e9f5 : lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; add al, 0xe8 ; clc ; jmp rsp
0x00000000005289f5 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; in al, 0x45 ; out dx, eax ; call rsp
0x0000000000404816 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050cdbf : lodsd eax, dword ptr [rsi] ; cmp dword ptr [rsi - 0x76], 0x61f28b63 ; xchg eax, ebp ; ret
0x00000000004f501f : lodsd eax, dword ptr [rsi] ; insd dword ptr [rdi], dx ; cmp edi, edi ; ret 0x8087
0x0000000000529d31 : lodsd eax, dword ptr [rsi] ; int1 ; call rsp
0x0000000000500ffa : lodsd eax, dword ptr [rsi] ; jnp 0x50102a ; mov es, word ptr [rbp - 0x5f] ; push rsi ; ret 0xe039
0x00000000004d0c28 : lodsd eax, dword ptr [rsi] ; mov bl, 0x26 ; ret
0x000000000050e912 : lodsd eax, dword ptr [rsi] ; mov cs, word ptr [rax + 0x63] ; ret
0x000000000050379b : lodsd eax, dword ptr [rsi] ; mov esi, 0xf4e0c504 ; ret 0x77fc
0x00000000005337f9 : lodsd eax, dword ptr [rsi] ; out dx, al ; call rsp
0x00000000004ffa4a : lodsd eax, dword ptr [rsi] ; pop rax ; ret 0x2910
0x00000000004f7b02 : lodsd eax, dword ptr [rsi] ; pop rdi ; ret 0xd710
0x00000000005064b8 : lodsd eax, dword ptr [rsi] ; push rdx ; push rsp ; out 0xeb, al ; ret 0x6449
0x000000000051211e : lodsd eax, dword ptr [rsi] ; ret
0x000000000047cb47 : lodsd eax, dword ptr [rsi] ; ret 0x51
0x000000000050d805 : lodsd eax, dword ptr [rsi] ; ret 0x82b3
0x000000000050c33d : lodsd eax, dword ptr [rsi] ; ret 0x8362
0x00000000004affa8 : lodsd eax, dword ptr [rsi] ; rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0x8941
0x000000000046a8f4 : lodsd eax, dword ptr [rsi] ; stc ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000046a8c7 : lodsd eax, dword ptr [rsi] ; stc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004fbc76 : lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x00000000004d0c27 : lodsd eax, dword ptr es:[rsi] ; mov bl, 0x26 ; ret
0x000000000051211d : lodsq rax, qword ptr [rsi] ; ret
0x000000000040228a : loop 0x402297 ; add eax, edx ; ret
0x0000000000407fd4 : loop 0x407ffc ; or rax, rdx ; ret
0x000000000040ffa0 : loop 0x40ff98 ; sbb rax, rax ; and eax, 1 ; ret
0x000000000040ffe0 : loop 0x40ffd8 ; sbb rax, rax ; and eax, 1 ; ret
0x0000000000432f3e : loop 0x432f06 ; ret
0x000000000045a403 : loop 0x45a40e ; shr cl, 1 ; add edx, ecx ; mov byte ptr [rsi], dl ; ret
0x0000000000463340 : loop 0x463390 ; mov edi, ebx ; call 0x43f576
0x00000000004724d0 : loop 0x472521 ; mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000047f62a : loop 0x47f5d6 ; stc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000047fa4f : loop 0x47fa11 ; ret
0x0000000000480508 : loop 0x480513 ; mov eax, edx ; ret
0x0000000000480d7d : loop 0x480db7 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000498444 : loop 0x498495 ; mov esi, dword ptr [rbx] ; mov rdi, r13 ; call rax
0x00000000004986f0 : loop 0x498743 ; mov esi, dword ptr [rsp + 8] ; mov rdi, rbp ; call rax
0x00000000004a760a : loop 0x4a763c ; idiv edi ; nop ; xor eax, eax ; ret
0x00000000004a7a7a : loop 0x4a7aad ; fiadd dword ptr [rcx + 0x39] ; fmul qword ptr [rdi] ; ret 0x8348
0x00000000004b4b44 : loop 0x4b4ba8 ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004b4fae : loop 0x4b4ffc ; mov edi, ebx ; call rax
0x00000000004f1136 : loop 0x4f113f ; fimul word ptr [rcx] ; pop rsp ; js 0x4f1169 ; ret 0xc4
0x00000000004f5a02 : loop 0x4f59a5 ; ret 0x7a96
0x00000000004faa11 : loop 0x4faa68 ; ret 0x74a2
0x0000000000500ff8 : loop 0x501000 ; lodsd eax, dword ptr [rsi] ; jnp 0x50102c ; mov es, word ptr [rbp - 0x5f] ; push rsi ; ret 0xe039
0x0000000000501d86 : loop 0x501d56 ; adc esi, ebp ; ret 0xb687
0x0000000000503798 : loop 0x5037f1 ; shr byte ptr [rbp - 0x1f3afb42], cl ; hlt ; ret 0x77fc
0x0000000000504001 : loop 0x504065 ; ret
0x000000000050485f : loop 0x5047fa ; jmp qword ptr [rbx]
0x00000000005060c2 : loop 0x506086 ; ret 0x62a8
0x0000000000506114 : loop 0x506121 ; jbe 0x5060dd ; ret
0x0000000000506114 : loop 0x506122 ; jbe 0x5060de ; ret
0x000000000051518e : loop 0x515183 ; ret
0x0000000000516bb8 : loop 0x516b44 ; in al, -0x4b ; ret 0xf99f
0x000000000052cbb1 : loop 0x52cbaa ; jmp rsp
0x000000000052cbb0 : loop 0x52cbab ; jmp rsp
0x000000000052cc01 : loop 0x52cbfa ; call rsp
0x000000000053d2ad : loop 0x53d2b5 ; add byte ptr [rax + 0x38], dh ; int1 ; call qword ptr [rdi]
0x000000000054d26d : loop 0x54d276 ; add al, dh ; sub al, 0xf5 ; jmp rax
0x0000000000550c99 : loop 0x550c92 ; jmp qword ptr [rbx]
0x0000000000406caf : loope 0x406d01 ; mov edx, ebp ; mov esi, ebx ; xor edi, edi ; call rax
0x0000000000406daf : loope 0x406e01 ; mov edx, ebp ; mov esi, ebx ; xor edi, edi ; call rax
0x0000000000425298 : loope 0x42526e ; ret
0x000000000045ceeb : loope 0x45ceb3 ; ret 0xf789
0x000000000047433e : loope 0x474394 ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b68b : loope 0x47b67c ; add al, byte ptr [rax] ; add rsp, 0x18 ; ret
0x000000000047f95b : loope 0x47f934 ; stc ; dec dword ptr [rax - 0x75] ; xor byte ptr [rax - 0x77], cl ; ret
0x00000000004807a0 : loope 0x48076a ; add byte ptr [rax], al ; add byte ptr [rbp - 0x2a], dh ; ret
0x00000000004913dd : loope 0x491426 ; xor edx, eax ; ret
0x00000000004913dd : loope 0x491428 ; xor edx, eax ; ret
0x00000000004918eb : loope 0x491934 ; xor edx, eax ; ret
0x00000000004918eb : loope 0x491936 ; xor edx, eax ; ret
0x0000000000497436 : loope 0x497485 ; mov edi, ebx ; call r15
0x0000000000498518 : loope 0x49856d ; mov edi, ebp ; mov rdx, rsi ; call rax
0x00000000004b5137 : loope 0x4b50c4 ; ret 0x894d
0x00000000004b7513 : loope 0x4b7549 ; sub al, byte ptr [rax] ; test rax, rax ; je 0x4b7529 ; ret
0x00000000004baf79 : loope 0x4baf88 ; xor eax, ecx ; mov dword ptr [rdi], edx ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004d08d8 : loope 0x4d08f9 ; jmp 0xfffffffff564fbfe
0x00000000004ec3be : loope 0x4ec407 ; ret 0x5325
0x00000000004f717f : loope 0x4f71ce ; in al, dx ; fdiv qword ptr [rbx + rax*2 - 0x6e] ; ret
0x00000000004fd352 : loope 0x4fd397 ; cdq ; adc al, 0xdd ; ret 0x8c0e
0x00000000005092e5 : loope 0x509321 ; je 0x50932d ; ret
0x0000000000513ea6 : loope 0x513edf ; mov word ptr [rdi - 0x16ce7fba], ds ; ret 0xa287
0x00000000005167fd : loope 0x5167ce ; ret
0x0000000000528349 : loope 0x52833a ; call rsp
0x000000000052c4ad : loope 0x52c4b6 ; add byte ptr [rsp], dh ; cmc ; call rsp
0x000000000040290e : loopne 0x402917 ; sub eax, 1 ; ret
0x0000000000402938 : loopne 0x402941 ; sub eax, 1 ; ret
0x0000000000402b60 : loopne 0x402b65 ; ret
0x0000000000402c3c : loopne 0x402c45 ; sub eax, 1 ; ret
0x0000000000402ca6 : loopne 0x402caf ; sub eax, 1 ; ret
0x000000000040706d : loopne 0x4070d9 ; nop ; ret
0x000000000040708d : loopne 0x4070fa ; nop ; xor eax, eax ; ret
0x000000000040e069 : loopne 0x40dff6 ; ret 0x550a
0x000000000040e0ea : loopne 0x40e077 ; ret 0x550a
0x000000000040e891 : loopne 0x40e8f5 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040e8cc : loopne 0x40e930 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ffa6 : loopne 0x40ffab ; ret
0x000000000040ffe6 : loopne 0x40ffeb ; ret
0x0000000000414994 : loopne 0x4149b8 ; ret
0x0000000000418e5c : loopne 0x418e84 ; shr eax, 5 ; ret
0x000000000041909d : loopne 0x419104 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000419e39 : loopne 0x419eaa ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000041a23b : loopne 0x41a29f ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a816 : loopne 0x41a878 ; pop rbp ; pop r12 ; ret
0x000000000041a825 : loopne 0x41a887 ; pop rbp ; pop r12 ; ret
0x000000000041c653 : loopne 0x41c6b5 ; pop rbp ; pop r12 ; ret
0x000000000041c66a : loopne 0x41c6cc ; pop rbp ; pop r12 ; ret
0x000000000041da46 : loopne 0x41d9d3 ; ret
0x000000000041e117 : loopne 0x41e13d ; or rax, r8 ; pop rbx ; ret
0x00000000004214ff : loopne 0x421561 ; pop rbp ; pop r12 ; ret
0x000000000042553e : loopne 0x4255a4 ; mov dword ptr [rdx + 0x6c], 0x20 ; ret
0x0000000000426075 : loopne 0x42607f ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000426195 : loopne 0x42619f ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000427729 : loopne 0x4276ee ; ret 0x105
0x0000000000427728 : loopne 0x4276ef ; ret 0x105
0x00000000004353a8 : loopne 0x43540c ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004353ca : loopne 0x43542f ; pop r12 ; pop r13 ; ret
0x0000000000435400 : loopne 0x435464 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004372b4 : loopne 0x4372b5 ; or al, 0x80 ; mov dword ptr [rbx + 0x74], eax ; pop rbx ; ret
0x000000000043eb4c : loopne 0x43eb56 ; sub eax, 1 ; pop rbx ; ret
0x00000000004462c2 : loopne 0x446324 ; pop rbp ; pop r12 ; ret
0x000000000044a80b : loopne 0x44a85d ; mov edx, dword ptr [rbx + 0x10] ; mov rsi, rdi ; call rax
0x000000000044c43c : loopne 0x44c49e ; pop rbp ; pop r12 ; ret
0x000000000044c4bd : loopne 0x44c51f ; pop rbp ; pop r12 ; ret
0x000000000044e312 : loopne 0x44e321 ; mov rax, qword ptr [rax + 0x4eb7e0] ; ret
0x000000000044e629 : loopne 0x44e68d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044e78d : loopne 0x44e7f3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000450585 : loopne 0x4505ec ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004505b5 : loopne 0x45061c ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000451d26 : loopne 0x451d2b ; ret
0x0000000000452651 : loopne 0x452656 ; ret
0x00000000004569cf : loopne 0x4569da ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000456b16 : loopne 0x456b1b ; ret
0x00000000004655a9 : loopne 0x4655b0 ; pop rbx ; ret
0x0000000000468518 : loopne 0x46857a ; pop rbp ; pop r12 ; ret
0x0000000000468546 : loopne 0x4685a8 ; pop rbp ; pop r12 ; ret
0x000000000047201e : loopne 0x471fb4 ; xor eax, eax ; ret
0x0000000000474341 : loopne 0x4743a3 ; pop rbp ; pop r12 ; ret
0x000000000047436e : loopne 0x4743d0 ; pop rbp ; pop r12 ; ret
0x000000000047bc5a : loopne 0x47bccd ; add byte ptr [r8 - 0x77], r9b ; ret 0x894c
0x000000000047bd2a : loopne 0x47bd9d ; add byte ptr [r8 - 0x77], r9b ; ret 0x894c
0x000000000047da56 : loopne 0x47dabc ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047fb71 : loopne 0x47fbd5 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004804b7 : loopne 0x4804bc ; ret
0x00000000004804d7 : loopne 0x4804e0 ; ret
0x0000000000480543 : loopne 0x480548 ; ret
0x00000000004806b2 : loopne 0x4806b8 ; ret
0x00000000004806c8 : loopne 0x4806d1 ; ret
0x0000000000480763 : loopne 0x480769 ; ret
0x0000000000480912 : loopne 0x480920 ; add rax, 0x756e80 ; ret
0x0000000000484d6d : loopne 0x484d72 ; ret
0x0000000000489ddf : loopne 0x489de1 ; push rcx ; add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x000000000048b68a : loopne 0x48b6ec ; pop rbp ; pop r12 ; ret
0x000000000048b96c : loopne 0x48b9ce ; pop rbp ; pop r12 ; ret
0x000000000048b97d : loopne 0x48b9df ; pop rbp ; pop r12 ; ret
0x000000000048c5a4 : loopne 0x48c5f6 ; mov edx, dword ptr [rdi + 8] ; mov qword ptr [rsi], rdx ; ret
0x000000000048d192 : loopne 0x48d1f4 ; pop rbp ; pop r12 ; ret
0x000000000049760c : loopne 0x49765f ; mov edi, ebx ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000498f60 : loopne 0x498fc4 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000498fcb : loopne 0x49902f ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000049fdc9 : loopne 0x49fdd0 ; pop rbx ; ret
0x000000000049fef9 : loopne 0x49ff00 ; pop rbx ; ret
0x00000000004a0698 : loopne 0x4a06fc ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a06d5 : loopne 0x4a0739 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a0731 : loopne 0x4a0795 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a0f41 : loopne 0x4a0fbc ; jne 0x4a0f49 ; ret
0x00000000004a11d3 : loopne 0x4a1235 ; pop rbp ; pop r12 ; ret
0x00000000004a11f3 : loopne 0x4a1255 ; pop rbp ; pop r12 ; ret
0x00000000004a17c4 : loopne 0x4a182a ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004a228e : loopne 0x4a22f4 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004a29f8 : loopne 0x4a2a5a ; pop rbp ; pop r12 ; ret
0x00000000004a2a26 : loopne 0x4a2a88 ; pop rbp ; pop r12 ; ret
0x00000000004a39dd : loopne 0x4a3a3f ; pop rbp ; pop r12 ; ret
0x00000000004a3a02 : loopne 0x4a3a64 ; pop rbp ; pop r12 ; ret
0x00000000004a8b80 : loopne 0x4a8b84 ; add eax, 0x16 ; ret
0x00000000004acb43 : loopne 0x4acba5 ; pop rbp ; pop r12 ; ret
0x00000000004acb5a : loopne 0x4acbbc ; pop rbp ; pop r12 ; ret
0x00000000004b0e73 : loopne 0x4b0e79 ; add byte ptr [rax], al ; ret
0x00000000004b2ec9 : loopne 0x4b2f2d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004b2fe9 : loopne 0x4b304d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004b3394 : loopne 0x4b339d ; add eax, 1 ; ret
0x00000000004b344a : loopne 0x4b3453 ; add eax, 1 ; ret
0x00000000004b35f4 : loopne 0x4b3672 ; jne 0x4b35fc ; ret
0x00000000004b45ba : loopne 0x4b45cb ; lea rax, qword ptr [rax + 0x525f00] ; ret
0x00000000004b6698 : loopne 0x4b66a4 ; add rax, qword ptr [rdi] ; ret
0x00000000004b7458 : loopne 0x4b745d ; ret
0x00000000004bdda1 : loopne 0x4bddda ; movdqu xmmword ptr [rdx], xmm3 ; ret
0x00000000004c11ad : loopne 0x4c11a4 ; ret
0x00000000004c121d : loopne 0x4c1214 ; ret
0x00000000004c96fe : loopne 0x4c96b9 ; add byte ptr [rax], al ; ret 0x8401
0x00000000004f0b36 : loopne 0x4f0b3c ; and al, 0x4f ; ret
0x00000000004f4dee : loopne 0x4f4df7 ; lodsb al, byte ptr [rsi] ; xchg eax, esi ; mov ch, 0xa4 ; ret 0x9a5b
0x00000000004f5d28 : loopne 0x4f5d8a ; nop ; ret 0x40fb
0x00000000004f6b3e : loopne 0x4f6b2c ; ret 0xb54d
0x00000000004f84ef : loopne 0x4f855f ; ret 0xda27
0x00000000004f85ef : loopne 0x4f85c2 ; xchg eax, esp ; ret
0x00000000004f9343 : loopne 0x4f9367 ; sal byte ptr [rbp - 0x2ce6c8fd], cl ; ret 0x254
0x0000000000501bf6 : loopne 0x501c7b ; xchg eax, ebp ; lahf ; salc ; sub byte ptr [rdx], 0xe2 ; ret 0x60a
0x0000000000502415 : loopne 0x50239d ; ret 0x8f8d
0x00000000005027a1 : loopne 0x502788 ; sbb al, 0x66 ; out dx, al ; push rax ; ret
0x00000000005027a0 : loopne 0x502789 ; sbb al, 0x66 ; out dx, al ; push rax ; ret
0x000000000050379f : loopne 0x503797 ; ret 0x77fc
0x0000000000507578 : loopne 0x5075c7 ; ret 0xe976
0x000000000051821f : loopne 0x51827b ; int1 ; leave ; leave ; ret
0x00000000005185b0 : loopne 0x5185d8 ; ret
0x00000000005282f9 : loopne 0x5282ea ; call rsp
0x000000000052cb01 : loopne 0x52cafa ; call rsp
0x000000000052f190 : loopne 0x52f1c5 ; in eax, dx ; jmp qword ptr [rax]
0x00000000005346e0 : loopne 0x5346bc ; out dx, al ; call qword ptr [rbx]
0x0000000000535ae0 : loopne 0x535ad0 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000053b891 : loopne 0x53b885 ; call qword ptr [rsi]
0x00000000005410a0 : loopne 0x541069 ; call qword ptr [rsi]
0x0000000000545180 : loopne 0x5451eb ; call qword ptr [rax]
0x0000000000545620 : loopne 0x54568b ; call qword ptr [rax]
0x000000000054ec00 : loopne 0x54ec75 ; cmc ; call qword ptr [rsi]
0x0000000000550590 : loopne 0x550559 ; cmc ; jmp qword ptr [rdi]
0x00000000004affc2 : mov ah, 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004b0e02 : mov ah, 0 ; add byte ptr [rax], al ; ret
0x000000000055058c : mov ah, 0x15 ; add al, byte ptr [rax] ; loopne 0x55055d ; cmc ; jmp qword ptr [rdi]
0x000000000051431c : mov ah, 0x18 ; ret
0x00000000004f9f2c : mov ah, 0x19 ; jmp rcx
0x000000000052acc0 : mov ah, 0x26 ; jmp rsp
0x00000000004fedcc : mov ah, 0x2d ; ret
0x0000000000532e8c : mov ah, 0x3e ; add byte ptr [rax], al ; mov al, 0x99 ; out dx, al ; jmp qword ptr [rbx]
0x000000000052b4d8 : mov ah, 0x3f ; hlt ; call rsp
0x00000000004ff124 : mov ah, 0x4c ; ret
0x000000000052a9bc : mov ah, 0x4e ; add dword ptr [rax], eax ; in al, 0x71 ; jmp rsp
0x00000000004ffe86 : mov ah, 0x58 ; xchg eax, ebx ; xor al, 0xcc ; ret
0x0000000000528b90 : mov ah, 0x5b ; out dx, eax ; call rsp
0x000000000054508c : mov ah, 0x60 ; add dword ptr [rax], eax ; xor byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x000000000052dcb4 : mov ah, 0x66 ; add al, byte ptr [rax] ; ret 0xfff7
0x000000000052e294 : mov ah, 0x86 ; add al, byte ptr [rax] ; je 0x52e2ed ; clc ; call rsp
0x000000000052c6c8 : mov ah, 0x86 ; cmc ; call rsp
0x000000000052b43c : mov ah, 0x88 ; add dword ptr [rax], eax ; adc al, 0x33 ; hlt ; call rsp
0x000000000052e34c : mov ah, 0x8a ; add al, byte ptr [rax] ; and al, 0x64 ; clc ; call rsp
0x000000000052b4d4 : mov ah, 0x8c ; add dword ptr [rax], eax ; mov ah, 0x3f ; hlt ; call rsp
0x000000000052b50c : mov ah, 0x8d ; add dword ptr [rax], eax ; hlt ; hlt ; jmp rsp
0x00000000004f5a9e : mov ah, 0x8f ; iretd ; jne 0x4f5a40 ; jmp qword ptr [rbx]
0x000000000052e458 : mov ah, 0x90 ; clc ; call rsp
0x00000000004f09bc : mov ah, 0x91 ; ret
0x000000000052e5ac : mov ah, 0x97 ; add al, byte ptr [rax] ; push rsp ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; call rsp
0x00000000004fccc2 : mov ah, 0x9e ; std ; ret
0x0000000000528f30 : mov ah, 0x9f ; out dx, eax ; call rsp
0x00000000005097ec : mov ah, 0xac ; ret
0x000000000050ac70 : mov ah, 0xb1 ; mov dl, 0xd ; adc byte ptr [rbx], bl ; cmc ; ret 0x1d0d
0x00000000005290d8 : mov ah, 0xb6 ; out dx, eax ; call rsp
0x000000000052e720 : mov ah, 0xb9 ; clc ; jmp rsp
0x000000000053ab8c : mov ah, 0xbb ; add byte ptr [rax], al ; rol ah, 0xf0 ; call qword ptr [rsi]
0x0000000000430e79 : mov ah, 0xc1 ; jns 0x430e57 ; ret
0x0000000000529180 : mov ah, 0xc2 ; out dx, eax ; ljmp ptr [rdx + rdx*8] ; add ah, dl ; ret 0xffef
0x000000000053b58c : mov ah, 0xc5 ; add byte ptr [rax], al ; push rax ; fcomi st(0) ; call qword ptr [rdx]
0x000000000052a0c0 : mov ah, 0xc9 ; int1 ; call rsp
0x000000000054bc8c : mov ah, 0xcc ; add dword ptr [rax], eax ; push rax ; sal ah, 1 ; call qword ptr [rbx]
0x000000000052ca58 : mov ah, 0xcd ; cmc ; jmp rsp
0x00000000004fa63f : mov ah, 0xcf ; jl 0x4fa649 ; ffree st(7) ; ret 0x4823
0x000000000052ed88 : mov ah, 0xcf ; stc ; jmp rsp
0x000000000052919c : mov ah, 0xd2 ; add byte ptr [rax], al ; push rsp ; ret
0x000000000052a108 : mov ah, 0xd2 ; int1 ; call rsp
0x0000000000528348 : mov ah, 0xe1 ; in eax, dx ; call rsp
0x0000000000500dda : mov ah, 0xf2 ; xlatb ; xor byte ptr [rbp - 0x30], ah ; ret 0x3ef2
0x00000000005156a2 : mov ah, 0xf4 ; ret
0x0000000000529874 : mov ah, 0xf8 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call rsp
0x0000000000446365 : mov ah, 0xfb ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000054ec8c : mov ah, 0xfc ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000052998c : mov ah, 0xfd ; add byte ptr [rax], al ; and al, 0x4d ; int1 ; call rsp
0x00000000005299c4 : mov ah, 0xfe ; add byte ptr [rax], al ; adc al, 0x50 ; int1 ; jmp rsp
0x000000000052f18c : mov ah, 1 ; add byte ptr [rax], al ; loopne 0x52f1c9 ; in eax, dx ; jmp qword ptr [rax]
0x0000000000529bac : mov ah, 8 ; add dword ptr [rax], eax ; test byte ptr [rbp - 0xf], dh ; jmp rsp
0x0000000000517592 : mov ah, byte ptr [rax] ; mov ebx, edi ; ret
0x00000000004f7d57 : mov ah, byte ptr [rdx + rsi*2 - 0x317b7a83] ; ret 0x370f
0x000000000047142c : mov al, 0 ; add byte ptr [rax], al ; je 0x47143d ; pop rbx ; ret
0x0000000000420021 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b1882 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000471408 : mov al, 0 ; add byte ptr [rax], al ; test rax, rax ; je 0x471421 ; ret
0x00000000005103da : mov al, 0x18 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], ebp ; xchg eax, ebx ; call qword ptr [rcx]
0x00000000004f81d7 : mov al, 0x1f ; jp 0x4f81b3 ; sahf ; or bh, byte ptr [rax + 0x46] ; ret 0x9fc2
0x0000000000481001 : mov al, 0x31 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000471759 : mov al, 0x31 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f846b : mov al, 0x34 ; stc ; ret 0x1ede
0x000000000054da20 : mov al, 0x3d ; cmc ; call qword ptr [rcx]
0x0000000000511d75 : mov al, 0x3d ; ret 0x40
0x000000000054db80 : mov al, 0x3f ; cmc ; call qword ptr [rax]
0x00000000004fa809 : mov al, 0x43 ; ret 0xa613
0x0000000000505820 : mov al, 0x64 ; ret
0x0000000000545240 : mov al, 0x66 ; call qword ptr [rax]
0x00000000005454a0 : mov al, 0x66 ; call qword ptr [rbx]
0x0000000000507ce1 : mov al, 0x6c ; sub cl, dh ; ret 0x861c
0x000000000054eb70 : mov al, 0x70 ; cmc ; call qword ptr [rsi]
0x0000000000532460 : mov al, 0x76 ; out dx, al ; jmp rsi
0x0000000000501748 : mov al, 0x78 ; ret 0xfb3b
0x000000000040d83b : mov al, 0x86 ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000053dc30 : mov al, 0x8d ; int1 ; jmp qword ptr [rcx]
0x0000000000532e90 : mov al, 0x99 ; out dx, al ; jmp qword ptr [rbx]
0x00000000005097eb : mov al, 0xb4 ; lodsb al, byte ptr [rsi] ; ret
0x00000000004fbff6 : mov al, 0xc ; mov al, bh ; ret 0xa3b3
0x000000000050d007 : mov al, 0xc2 ; ret
0x000000000043ea69 : mov al, 0xc3 ; nop dword ptr [rax + rax] ; ret
0x000000000050c7df : mov al, 0xc4 ; ret 0xc5cc
0x00000000004a0aac : mov al, 0xd ; idiv bh ; mov rax, qword ptr [rdi + 0x48] ; ret
0x00000000004ec995 : mov al, 0xd2 ; ret
0x00000000005118b3 : mov al, 0xde ; add dword ptr [rdx - 0xd], 0x16 ; ret
0x0000000000548a00 : mov al, 0xe3 ; jmp qword ptr [rsi]
0x0000000000507183 : mov al, 0xeb ; sub qword ptr [r14 + rdx*8 + 0x2e], 0x7e ; sahf ; ret 0x54c5
0x0000000000529ee1 : mov al, 0xf1 ; jmp rsp
0x000000000054fcf9 : mov al, 0xf5 ; call qword ptr [rbx]
0x0000000000506501 : mov al, 0xf6 ; jle 0x50652a ; ret
0x000000000052dbb1 : mov al, 0xf7 ; call rsp
0x000000000050f4f2 : mov al, 5 ; pushfq ; mov dh, 0x37 ; je 0x50f525 ; ret 0x6948
0x00000000005030ad : mov al, 5 ; ret
0x00000000004fbff9 : mov al, bh ; ret 0xa3b3
0x000000000043471a : mov al, byte ptr [rax] ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000052b47d : mov al, byte ptr [rcx] ; add byte ptr [rdx + rdi], dl ; hlt ; call rsp
0x00000000004f1fe2 : mov al, byte ptr [rdi + rsi] ; sbb eax, 0x2a8d03ec ; ret
0x000000000052e34d : mov al, byte ptr [rdx] ; add byte ptr [rsp], ah ; clc ; call rsp
0x00000000004f8275 : mov bh, 0x17 ; je 0x4f8201 ; and byte ptr [rbp], al ; xlatb ; ret
0x00000000004f8274 : mov bh, 0x17 ; je 0x4f8202 ; and byte ptr [rbp], al ; xlatb ; ret
0x00000000004f4364 : mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x0000000000479811 : mov bh, 0x40 ; ret 0x51
0x00000000004c7855 : mov bh, 0x54 ; add bh, dh ; mov word ptr [rsi + rax - 2], dx ; ret
0x000000000051340a : mov bh, 0x58 ; rcr byte ptr [rsi - 0x52], 1 ; mov cl, 0x4d ; ret
0x000000000050485c : mov bh, 0x75 ; stosd dword ptr [rdi], eax ; loop 0x5047fd ; jmp qword ptr [rbx]
0x000000000050cacb : mov bh, 0x9c ; sbb edx, dword ptr [rsi + 0x290570e1] ; ret 0x2f5c
0x000000000051805f : mov bh, 0x9d ; adc edx, edx ; out dx, eax ; ret 0xd875
0x0000000000492841 : mov bh, 0xb7 ; ret 0xb775
0x0000000000492845 : mov bh, 0xb7 ; ret 0xfde1
0x00000000004ece80 : mov bh, 0xe5 ; mov bl, 0xde ; jl 0x4ece5a ; add ecx, ecx ; ret
0x00000000005339d9 : mov bh, 0xee ; jmp rcx
0x000000000054a7bd : mov bh, 1 ; add byte ptr [rax], dl ; sub esp, esi ; jmp rdx
0x000000000052ec45 : mov bh, 2 ; add byte ptr [rbx + rax - 7], ah ; jmp rsp
0x0000000000484d69 : mov bh, 4 ; jo 0x484cf6 ; loopne 0x484d76 ; ret
0x000000000050b733 : mov bh, 4 ; ret
0x00000000005417d8 : mov bh, bl ; call qword ptr [rax]
0x00000000004f4d5e : mov bh, byte ptr [rbx - 0x1829ef82] ; sal byte ptr [rax - 0x71], cl ; ret 0x65aa
0x00000000004ab152 : mov bh, byte ptr [rdi - 7] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ec850 : mov bh, byte ptr [rsi - 0x6df8ae3] ; ret 0x5ca4
0x000000000050a685 : mov bh, ch ; push rbp ; xchg eax, edi ; jrcxz 0x50a63b ; pop rdx ; ret 0xd69
0x00000000004faac4 : mov bl, 0x15 ; mov esi, 0x291d2136 ; clc ; ret 0x6dc0
0x00000000004d0c2a : mov bl, 0x26 ; ret
0x0000000000515e1d : mov bl, 0x2a ; pop rsi ; fbld dword ptr [rsi] ; ret 0x4d11
0x00000000004d0e06 : mov bl, 0x2f ; ret
0x0000000000507de9 : mov bl, 0x3c ; ret
0x00000000004f493e : mov bl, 0x58 ; out dx, al ; shl byte ptr [rbx + 0x4d], 0xca ; ret
0x00000000004f717d : mov bl, 0x7c ; loope 0x4f71d0 ; in al, dx ; fdiv qword ptr [rbx + rax*2 - 0x6e] ; ret
0x00000000004f58b1 : mov bl, 0xa7 ; add cl, al ; xchg eax, edi ; sti ; sub al, 0xf1 ; ret 0x7130
0x00000000005136dd : mov bl, 0xce ; ret
0x000000000050b1c6 : mov bl, 0xd3 ; movsxd rcx, eax ; jnp 0x50b1fe ; ret
0x00000000004ece82 : mov bl, 0xde ; jl 0x4ece58 ; add ecx, ecx ; ret
0x0000000000503b87 : mov bl, 0xdf ; pop rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004fa89a : mov bl, 0xe0 ; test dword ptr [rax], ecx ; ret
0x0000000000500eea : mov bl, 0xeb ; ret 0xfe88
0x0000000000504158 : mov bl, 0xf ; jmp qword ptr [rbx]
0x000000000052c901 : mov bl, 0xf5 ; jmp rsp
0x000000000052e679 : mov bl, 0xf8 ; jmp rsp
0x000000000052eb25 : mov bl, 2 ; add ah, ah ; idiv al ; call rsp
0x0000000000513d11 : mov bl, 4 ; sar dword ptr [rax], -0x79 ; in eax, dx ; ret
0x00000000005108cf : mov bl, byte ptr [rax] ; push rdi ; and al, byte ptr [rsi + 0x65] ; jle 0x5108db ; ret
0x00000000004fccbd : mov bl, byte ptr [rip - 0x4ba54db4] ; sahf ; std ; ret
0x00000000005136b2 : mov bl, dh ; ret 0xde91
0x00000000004241f5 : mov byte ptr [r11], 0x80 ; pop rbx ; mov qword ptr [rdi], rax ; ret
0x000000000042412f : mov byte ptr [r11], dl ; pop rbx ; mov qword ptr [rdi], rax ; ret
0x000000000041f6c2 : mov byte ptr [r8], 0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004180d8 : mov byte ptr [r9 + 1], cl ; ret
0x0000000000417f7d : mov byte ptr [r9 + 1], cl ; ret 0x8948
0x000000000041775c : mov byte ptr [r9 - 0x3f], r9b ; jmp 0xffffffffc242c08a
0x000000000046b532 : mov byte ptr [rax + 1], dh ; mov byte ptr [rdi - 1], cl ; jne 0x46b529 ; ret
0x000000000046b507 : mov byte ptr [rax + 1], dl ; jne 0x46b4fe ; ret
0x000000000054eaf8 : mov byte ptr [rax - 0xb], dh ; call qword ptr [rsi]
0x000000000044848c : mov byte ptr [rax - 1], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000425b07 : mov byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000041f6c3 : mov byte ptr [rax], 0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000053b64d : mov byte ptr [rax], 0 ; rcr bl, 0xf0 ; jmp qword ptr [rbx]
0x00000000004b2582 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a2136 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004229fa : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043d0d2 : mov byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x43d0f9 ; jmp rax
0x000000000043d11e : mov byte ptr [rax], al ; add byte ptr [rax], al ; test rdx, rdx ; je 0x43d13a ; call rdx
0x00000000004f9f28 : mov byte ptr [rbp + 0x19b46efb], ah ; jmp rcx
0x00000000005189b7 : mov byte ptr [rbp + rcx*2 + 0xb], bh ; ret
0x0000000000516291 : mov byte ptr [rbp - 0x5b], bh ; jns 0x516229 ; ret
0x000000000051817f : mov byte ptr [rbx + 0x22cc1b5e], al ; in eax, 0x70 ; ret
0x000000000043fc21 : mov byte ptr [rbx], 0x75 ; jrcxz 0x43fc21 ; ret 0x7406
0x00000000004241f6 : mov byte ptr [rbx], 0x80 ; pop rbx ; mov qword ptr [rdi], rax ; ret
0x00000000004c694f : mov byte ptr [rbx], cl ; jne 0x4c69c8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000424130 : mov byte ptr [rbx], dl ; pop rbx ; mov qword ptr [rdi], rax ; ret
0x0000000000418012 : mov byte ptr [rcx + 1], cl ; ret
0x0000000000417f7e : mov byte ptr [rcx + 1], cl ; ret 0x8948
0x0000000000418011 : mov byte ptr [rcx + 1], r9b ; ret
0x000000000041775d : mov byte ptr [rcx - 0x3f], cl ; jmp 0xffffffffc242c089
0x000000000054b6c5 : mov byte ptr [rcx], 0 ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rax]
0x00000000004c5c8b : mov byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000004d7510 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret 1
0x000000000052b43d : mov byte ptr [rcx], al ; add byte ptr [rbx + rsi], dl ; hlt ; call rsp
0x00000000004a9644 : mov byte ptr [rdi + 1], al ; mov eax, 3 ; ret
0x00000000004a960a : mov byte ptr [rdi + 2], al ; mov eax, 4 ; ret
0x00000000004a96ed : mov byte ptr [rdi + 3], al ; mov eax, 5 ; ret
0x00000000004a975f : mov byte ptr [rdi + 4], al ; mov eax, 6 ; ret
0x00000000004f6764 : mov byte ptr [rdi - 0x22], ch ; outsd dx, dword ptr [rsi] ; ret
0x00000000004b9556 : mov byte ptr [rdi - 1], al ; cmp rdi, rdx ; jne 0x4b9551 ; ret
0x000000000046b535 : mov byte ptr [rdi - 1], cl ; jne 0x46b526 ; ret
0x00000000004a237d : mov byte ptr [rdi], 0 ; ret
0x00000000004fa06d : mov byte ptr [rdi], ah ; ret
0x00000000004a95a5 : mov byte ptr [rdi], al ; mov eax, 2 ; ret
0x00000000004a9577 : mov byte ptr [rdi], dl ; mov eax, 1 ; ret
0x00000000004c6a71 : mov byte ptr [rdi], dl ; ret
0x00000000004ffb25 : mov byte ptr [rdx + 0x31], 0xa9 ; ret
0x0000000000405531 : mov byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004a2a70 : mov byte ptr [rip + 0x2b75a9], 0 ; ret
0x0000000000401cc3 : mov byte ptr [rip + 0x355ffe], 1 ; ret
0x00000000004fbf61 : mov byte ptr [rsi + 0xd], bl ; ret 0x2316
0x0000000000509051 : mov byte ptr [rsi + rdx*4 - 0x4a2bd922], bh ; ret
0x0000000000402888 : mov byte ptr [rsi - 1], bh ; cmp edx, 0xff ; jne 0x402859 ; ret
0x000000000045a409 : mov byte ptr [rsi], dl ; ret
0x000000000046ea74 : mov byte ptr [rsp + 1], al ; call r12
0x00000000004f7aad : mov ch, 0x14 ; lahf ; ret 0x61c0
0x00000000004f4366 : mov ch, 0x27 ; ret 0x2237
0x00000000004be105 : mov ch, 0x36 ; pop rdi ; ja 0x4be130 ; popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x00000000004307c1 : mov ch, 0x48 ; pop rbx ; ret 0x3956
0x0000000000516b9f : mov ch, 0x5a ; or byte ptr [rsi], al ; jo 0x516b60 ; mov dl, 0xf9 ; ret 0xbf6e
0x0000000000505d7b : mov ch, 0x7b ; xor eax, 0x67059841 ; ret
0x0000000000511102 : mov ch, 0x8f ; pop rdi ; xchg eax, edi ; xchg esp, edi ; shr edx, cl ; ret
0x00000000004f4df2 : mov ch, 0xa4 ; ret 0x9a5b
0x000000000042bd1e : mov ch, 0xe9 ; pop rbx ; ret 0x3956
0x00000000004ef905 : mov ch, 0xed ; je 0x4ef909 ; ret
0x000000000051598d : mov ch, 0xee ; scasd eax, dword ptr [rdi] ; test al, 0x54 ; cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x00000000004f8d25 : mov ch, byte ptr [rbx + 0x7b0d9a8b] ; add esi, dword ptr [rsi - 0xe] ; ret
0x00000000004572b2 : mov ch, byte ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000000000530f61 : mov ch, ch ; call qword ptr [rdx]
0x00000000004fd1eb : mov ch, dl ; insd dword ptr [rdi], dx ; sbb dh, cl ; ret 0x4c24
0x0000000000511d86 : mov cl, 0x1e ; movsb byte ptr [rdi], byte ptr [rsi] ; or ebp, dword ptr [rbx + 0x55] ; xchg bh, cl ; ret
0x0000000000407842 : mov cl, 0x20 ; xor eax, 0x7750100 ; xor eax, eax ; ret
0x00000000004fd167 : mov cl, 0x21 ; int 0
0x0000000000512ce0 : mov cl, 0x25 ; pop rdi ; or bl, byte ptr [rcx - 0x37] ; std ; ret
0x00000000004d0e7c : mov cl, 0x31 ; ret
0x000000000051340f : mov cl, 0x4d ; ret
0x000000000050acd8 : mov cl, 0x67 ; ret
0x00000000005134c0 : mov cl, 0x69 ; jb 0x51351c ; add eax, 0x857d2e5c ; ret
0x000000000050441a : mov cl, 0x7a ; push rbp ; outsb dx, byte ptr [rsi] ; wait ; ret 0x8463
0x00000000005127f8 : mov cl, 0x83 ; ret 0x467e
0x00000000004fff4e : mov cl, 0xb4 ; jp 0x4fff37 ; scasd eax, dword ptr [rdi] ; and eax, esp ; ret 0xbd61
0x0000000000505cc7 : mov cl, 0xb5 ; ret 0x35a0
0x0000000000427a39 : mov cl, 0xc0 ; add eax, 0x6f0f4466 ; ret 0xfd01
0x0000000000513495 : mov cl, 0xc9 ; jp 0x513514 ; ret 0x12c9
0x0000000000508ebc : mov cl, 0xde ; call rbx
0x0000000000510113 : mov cl, 0xec ; ret 0x203c
0x0000000000529f31 : mov cl, 0xf1 ; call rsp
0x000000000052bad9 : mov cl, 0xf4 ; jmp rsp
0x000000000054a16d : mov cl, 1 ; add byte ptr [rax + 0x19], ah ; hlt ; call qword ptr [rax]
0x0000000000516bb4 : mov cl, 3 ; xchg byte ptr [rdi - 0x4a1b791e], dl ; ret 0xf99f
0x00000000005167fc : mov cl, ah ; int 0xc3
0x0000000000550408 : mov cl, al ; cmc ; call qword ptr [rbx]
0x00000000005013cd : mov cl, byte ptr [rdx + rbx*8 - 0x461a7c93] ; ret 0xae59
0x0000000000503ef7 : mov cl, cl ; ret 0x1278
0x0000000000517de9 : mov cl, cl ; ret 0x90cf
0x00000000004f0891 : mov cl, dh ; mov ebx, 0x16e9a3 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0xccd8
0x000000000049347c : mov cs, ecx ; enter 0x7544, -0x3e ; mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x00000000004f5e11 : mov cs, ecx ; sbb al, 0x47 ; ret
0x000000000050e913 : mov cs, word ptr [rax + 0x63] ; ret
0x0000000000516c0c : mov cs, word ptr [rbx] ; cmp al, 0xae ; leave ; add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x00000000005444cb : mov cs, word ptr [rdx] ; ret
0x00000000005001da : mov dh, 0x15 ; hlt ; mov ebp, 0xf12d87c8 ; out dx, al ; ret 0x89e3
0x000000000041e2b5 : mov dh, 0x33 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000050f4f5 : mov dh, 0x37 ; je 0x50f522 ; ret 0x6948
0x00000000004152f8 : mov dh, 0x40 ; jg 0x415289 ; ret 0x4488
0x0000000000479806 : mov dh, 0x40 ; ret 0x51
0x00000000005145c5 : mov dh, 0x40 ; ret 0xf1de
0x00000000004a841d : mov dh, 0x42 ; add dword ptr [rbx - 0x7cb7fe3d], eax ; ret 0x8d01
0x0000000000401dbe : mov dh, 0x45 ; dec ecx ; ret
0x00000000005178d5 : mov dh, 0x50 ; jbe 0x5178cb ; ret
0x00000000004a47c1 : mov dh, 0x57 ; cmp dh, dh ; ret
0x00000000005027b5 : mov dh, 0x57 ; mov esp, 0xa7c1baa ; ret
0x00000000004c1825 : mov dh, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000050b762 : mov dh, 0x82 ; out dx, al ; pop rcx ; xchg eax, esp ; sub al, 0xdd ; stosb byte ptr [rdi], al ; ret 0x6595
0x00000000004eee46 : mov dh, 0x89 ; ret 0xa79c
0x0000000000510f13 : mov dh, 0x92 ; ret 0x54c
0x000000000050d0ef : mov dh, 0x9b ; ret 0x431e
0x0000000000512cdf : mov dh, 0xb1 ; and eax, 0xc9590a5f ; std ; ret
0x0000000000479805 : mov dh, 0xb6 ; ret 0x51
0x0000000000479810 : mov dh, 0xb7 ; ret 0x51
0x0000000000425dc1 : mov dh, 0xc ; and al, 0xf6 ; ret 0x8802
0x000000000047060a : mov dh, 0xc0 ; add eax, eax ; ret
0x00000000004864be : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004b3e7b : mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x00000000004486e3 : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048b9a6 : mov dh, 0xc0 ; add rsp, 8 ; ret
0x000000000043b440 : mov dh, 0xc0 ; js 0x43b458 ; add rsp, 8 ; ret
0x000000000043b4e3 : mov dh, 0xc0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000449600 : mov dh, 0xc0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043494c : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000044614d : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000424df7 : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000424bd6 : mov dh, 0xc0 ; pop rbx ; ret
0x00000000004068da : mov dh, 0xc0 ; ret
0x000000000043f819 : mov dh, 0xc2 ; pop rbx ; pop rbp ; ret
0x00000000005290d9 : mov dh, 0xef ; call rsp
0x0000000000484d66 : mov dh, 0xf6 ; movzx eax, word ptr [rax + rsi*2] ; and eax, 1 ; ret
0x0000000000444b41 : mov dh, 0xf6 ; ret
0x000000000052e6e9 : mov dh, 0xf8 ; call rsp
0x00000000005040e0 : mov dh, 0xf8 ; jnp 0x504101 ; ret
0x00000000004ed6ba : mov dh, 0xfe ; ret
0x000000000052bc3d : mov dh, 1 ; add byte ptr [rsp + rbp*8], dh ; hlt ; jmp rsp
0x00000000004cd004 : mov dh, bl ; dec dword ptr [rax - 0x77] ; ret 0xc148
0x0000000000507cdc : mov dh, byte ptr [rbx + 0x3e] ; jge 0x507cd5 ; mov al, 0x6c ; sub cl, dh ; ret 0x861c
0x00000000004f63de : mov dh, dl ; ret 0x9004
0x00000000004adf44 : mov dl, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004f4d21 : mov dl, 0x1c ; ret
0x0000000000507c99 : mov dl, 0x58 ; ret
0x00000000004fccc0 : mov dl, 0x5a ; mov ah, 0x9e ; std ; ret
0x000000000041a3dd : mov dl, 0x66 ; nop ; mov eax, 1 ; ret
0x000000000050c7d8 : mov dl, 0x7c ; shl ebp, cl ; pop rax ; jb 0x50c819 ; mov al, 0xc4 ; ret 0xc5cc
0x00000000004efcf3 : mov dl, 0x7d ; sbb eax, 0x85617937 ; ret 0x2c94
0x000000000050581b : mov dl, 0x96 ; add eax, 0x64b0408d ; ret
0x0000000000516ba4 : mov dl, 0xb2 ; stc ; ret 0xbf6e
0x000000000050a9e0 : mov dl, 0xbe ; adc cl, byte ptr [rcx - 0x78] ; scasd eax, dword ptr [rdi] ; ret
0x000000000050ac72 : mov dl, 0xd ; adc byte ptr [rbx], bl ; cmc ; ret 0x1d0d
0x00000000004fe1b0 : mov dl, 0xe1 ; ret
0x0000000000425e7d : mov dl, 0xeb ; mov dword ptr [rax + 1], edi ; ret
0x0000000000529f89 : mov dl, 0xf1 ; jmp rsp
0x0000000000540bd1 : mov dl, 0xf2 ; jmp qword ptr [rdx]
0x0000000000540bf1 : mov dl, 0xf2 ; jmp qword ptr [rsi]
0x0000000000508e5a : mov dl, 0xf3 ; in al, dx ; ret
0x0000000000547721 : mov dl, 0xf3 ; jmp qword ptr [rax]
0x00000000005051cb : mov dl, 0xf6 ; pop rsi ; add esp, dword ptr [rbp - 0x47] ; pushfq ; outsd dx, dword ptr [rsi] ; ret 0x53a0
0x0000000000516ba5 : mov dl, 0xf9 ; ret 0xbf6e
0x00000000004fb6b6 : mov dl, 0xfd ; ret
0x000000000053e1e8 : mov dl, al ; int1 ; jmp qword ptr [rdi]
0x0000000000517bf5 : mov dl, byte ptr [rbp - 1] ; sahf ; ret
0x000000000053fbf9 : mov dl, dh ; jmp qword ptr [rsi]
0x000000000053fc89 : mov dl, dh ; jmp rbx
0x000000000053fbf8 : mov dl, sil ; jmp qword ptr [rsi]
0x00000000005107cb : mov dr0, word ptr [rbp + 0x289cb633] ; ret
0x0000000000503b68 : mov dr0, word ptr [rcx - 0x13] ; stc ; ret
0x000000000050d789 : mov dr0, word ptr [rsi + rsi*2 + 0x1f] ; pop rdi ; xor ch, ch ; ret 0xa9bd
0x000000000052e411 : mov dr1, eax ; call rsp
0x00000000004fe6f9 : mov ds, ecx ; test eax, 0xd28fb8af ; clc ; push rcx ; ret 0x2a40
0x00000000004fd687 : mov ds, word ptr [rax - 0x2e6d2bf2] ; ret
0x000000000050fe30 : mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x00000000004a8c59 : mov dword ptr [r11 + 4], eax ; mov eax, 1 ; ret
0x00000000004bcbb9 : mov dword ptr [r11 + 4], eax ; ret
0x00000000004bcbb6 : mov dword ptr [r11], edx ; mov dword ptr [r11 + 4], eax ; ret
0x0000000000490755 : mov dword ptr [r12 + rax - 4], edx ; jmp 0x4906f5
0x00000000004c64ea : mov dword ptr [r15 + 0xc], edx ; mov rdx, r12 ; call rax
0x00000000004b84a1 : mov dword ptr [r8], r10d ; pop rbp ; pop r12 ; ret
0x000000000042450e : mov dword ptr [rax + 0x10], 0 ; pop rbx ; ret
0x0000000000423bd4 : mov dword ptr [rax + 0x10], 1 ; ret
0x0000000000451b13 : mov dword ptr [rax + 0x18], eax ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000438036 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x000000000048ea6e : mov dword ptr [rax + 0x28], edx ; mov eax, 1 ; ret
0x000000000048e68b : mov dword ptr [rax + 0x28], esi ; mov eax, 1 ; ret
0x0000000000496b2d : mov dword ptr [rax + 0x50], 0 ; call r15
0x0000000000425e7f : mov dword ptr [rax + 1], edi ; ret
0x00000000004717ae : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x0000000000423728 : mov dword ptr [rax + 8], 0xffffffff ; pop rbx ; ret
0x000000000048bf25 : mov dword ptr [rax + 8], ebx ; mov eax, 1 ; pop rbx ; ret
0x00000000004b43d4 : mov dword ptr [rax + 8], esi ; ret
0x00000000004f813a : mov dword ptr [rax + rbp*2 - 0x67], eax ; ret 0xef10
0x000000000041c88a : mov dword ptr [rax + rsi*8], edx ; mov rax, rdx ; ret
0x00000000004fead7 : mov dword ptr [rax - 0x55], eax ; ret 0x435d
0x000000000047176d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000004a80c3 : mov dword ptr [rax], 0x10 ; mov rax, rdi ; ret
0x00000000004d8004 : mov dword ptr [rax], 0xc60000 ; add byte ptr [rax], al ; ret 0
0x0000000000528f2d : mov dword ptr [rax], 0xef9fb400 ; call rsp
0x000000000052848d : mov dword ptr [rax], eax ; add ah, dl ; int1 ; in eax, dx ; jmp rsp
0x00000000004fa1ae : mov dword ptr [rax], eax ; jmp qword ptr [rax]
0x00000000004434db : mov dword ptr [rax], eax ; mov eax, 1 ; ret
0x0000000000406c69 : mov dword ptr [rax], eax ; ret
0x00000000004b84a2 : mov dword ptr [rax], edx ; pop rbp ; pop r12 ; ret
0x00000000004c7134 : mov dword ptr [rbp - 8], eax ; xor qword ptr [r15 + 0x18], rax ; call r14
0x00000000004412e8 : mov dword ptr [rbp], eax ; jmp 0x441156
0x0000000000470780 : mov dword ptr [rbp], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046b334 : mov dword ptr [rbp], ebx ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000402652 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000041c8ca : mov dword ptr [rbx + 0x10], 1 ; pop rbx ; ret
0x0000000000483fcf : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000402326 : mov dword ptr [rbx + 0x14], eax ; pop rbx ; ret
0x000000000043cde2 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000439228 : mov dword ptr [rbx + 0x18], eax ; mov eax, 1 ; pop rbx ; ret
0x000000000043e748 : mov dword ptr [rbx + 0x20], 0 ; pop rbx ; ret
0x000000000047111f : mov dword ptr [rbx + 0x20], eax ; mov eax, 1 ; pop rbx ; ret
0x00000000004a6724 : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000004a0af5 : mov dword ptr [rbx + 0x28], 0xffffffff ; pop rbx ; ret
0x0000000000434fed : mov dword ptr [rbx + 0x28], eax ; mov eax, 1 ; pop rbx ; ret
0x00000000004b18eb : mov dword ptr [rbx + 0x28], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048fcca : mov dword ptr [rbx + 0x28], edx ; mov eax, 1 ; pop rbx ; ret
0x00000000004b39dc : mov dword ptr [rbx + 0x30], 0 ; pop rbx ; ret
0x0000000000418f60 : mov dword ptr [rbx + 0x38], 0 ; pop rbx ; ret
0x000000000048c748 : mov dword ptr [rbx + 0x38], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000437b1a : mov dword ptr [rbx + 0x40], eax ; mov eax, 1 ; pop rbx ; ret
0x0000000000495d8f : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000404225 : mov dword ptr [rbx + 0x60], 0 ; pop rbx ; ret
0x00000000004372b8 : mov dword ptr [rbx + 0x74], eax ; pop rbx ; ret
0x000000000042001f : mov dword ptr [rbx + 0xb0], edx ; pop rbx ; ret
0x00000000004a8c5a : mov dword ptr [rbx + 4], eax ; mov eax, 1 ; ret
0x00000000004bcbba : mov dword ptr [rbx + 4], eax ; ret
0x00000000004060aa : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004c486b : mov dword ptr [rbx + 8], edx ; mov rdx, rbp ; call r12
0x00000000004244cb : mov dword ptr [rbx + 8], esp ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005139ae : mov dword ptr [rbx - 0x3f90d47a], ecx ; ret
0x000000000041c59f : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x000000000046553d : mov dword ptr [rbx], eax ; mov eax, 2 ; pop rbx ; ret
0x00000000004060b6 : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x000000000046e8d5 : mov dword ptr [rbx], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000436881 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x00000000004ed32b : mov dword ptr [rbx], eax ; test eax, 0xa25f8d6f ; ret 0x7455
0x000000000048b968 : mov dword ptr [rbx], ebp ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004244ce : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000478ccc : mov dword ptr [rbx], edx ; jmp 0x478c96
0x00000000004bcbb7 : mov dword ptr [rbx], edx ; mov dword ptr [r11 + 4], eax ; ret
0x00000000004a25e4 : mov dword ptr [rbx], edx ; pop rbx ; ret
0x000000000041c4a4 : mov dword ptr [rcx + rdx], eax ; jne 0x41c498 ; mov dword ptr [rdi], r10d ; ret
0x000000000042ac6b : mov dword ptr [rcx - 0x3f], 0x894106cd ; ret 0x2141
0x0000000000490bb1 : mov dword ptr [rcx], 0 ; ret
0x0000000000415564 : mov dword ptr [rcx], 0x11f5e8 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000000004cb1ed : mov dword ptr [rcx], 0x8901e883 ; ret 0xeac1
0x000000000041b98e : mov dword ptr [rcx], 0xffd3945 ; lahf ; ret 0x8445
0x0000000000507575 : mov dword ptr [rcx], eax ; call 0x7712c161
0x00000000004702bf : mov dword ptr [rcx], eax ; mov eax, 1 ; ret
0x0000000000486dd2 : mov dword ptr [rcx], eax ; ret
0x0000000000401ff4 : mov dword ptr [rcx], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490a14 : mov dword ptr [rcx], edx ; ret
0x00000000004f89e1 : mov dword ptr [rcx], esp ; jmp rcx
0x0000000000402360 : mov dword ptr [rdi + 0x10], 0 ; ret
0x000000000043ea3b : mov dword ptr [rdi + 0x10], 0x43e6f0 ; ret
0x0000000000402c18 : mov dword ptr [rdi + 0x10], 1 ; ret
0x0000000000451c84 : mov dword ptr [rdi + 0x10], eax ; mov qword ptr [rdi + 0x18], r11 ; pop rbx ; ret
0x000000000045cbe4 : mov dword ptr [rdi + 0x10], eax ; mov qword ptr [rdi + 0x18], r9 ; ret
0x000000000040fe97 : mov dword ptr [rdi + 0x10], ecx ; mov r9, rdx ; mov rax, r9 ; ret
0x000000000046aef1 : mov dword ptr [rdi + 0x10], esi ; mov eax, 1 ; ret
0x000000000045ce18 : mov dword ptr [rdi + 0x10], esi ; mov qword ptr [rdi + 0x18], r15 ; ret
0x00000000004198d1 : mov dword ptr [rdi + 0x10], esi ; ret
0x00000000004b7616 : mov dword ptr [rdi + 0x10], esi ; xor eax, eax ; ret
0x0000000000402627 : mov dword ptr [rdi + 0x14], ecx ; mov dword ptr [rsi + 0x14], eax ; ret
0x000000000046a7a0 : mov dword ptr [rdi + 0x14], edx ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004514e8 : mov dword ptr [rdi + 0x18], 0 ; ret
0x00000000004b3df2 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000045150b : mov dword ptr [rdi + 0x18], eax ; ret
0x000000000045c623 : mov dword ptr [rdi + 0x18], ebx ; pop r13 ; pop r12 ; ret
0x0000000000451c88 : mov dword ptr [rdi + 0x18], ebx ; pop rbx ; ret
0x00000000004b557d : mov dword ptr [rdi + 0x18], ecx ; mov dword ptr [rdi], r9d ; ret
0x000000000045cbe8 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000045ce1c : mov dword ptr [rdi + 0x18], edi ; ret
0x000000000045a461 : mov dword ptr [rdi + 0x18], edx ; ret
0x000000000046aff1 : mov dword ptr [rdi + 0x18], esi ; mov eax, 1 ; ret
0x000000000041c2d1 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000004b7636 : mov dword ptr [rdi + 0x18], esi ; xor eax, eax ; ret
0x000000000041a34b : mov dword ptr [rdi + 0x20], 0 ; ret
0x000000000040ff58 : mov dword ptr [rdi + 0x20], eax ; mov qword ptr [rdi + 0x28], rdx ; ret
0x000000000046b0f1 : mov dword ptr [rdi + 0x20], esi ; mov eax, 1 ; ret
0x0000000000422991 : mov dword ptr [rdi + 0x20], esi ; mov qword ptr [rdi + 0x28], rdx ; ret
0x00000000004380c3 : mov dword ptr [rdi + 0x20], esi ; ret
0x00000000004b7656 : mov dword ptr [rdi + 0x20], esi ; xor eax, eax ; ret
0x000000000041a2a0 : mov dword ptr [rdi + 0x24], eax ; ret
0x00000000004b7473 : mov dword ptr [rdi + 0x28], ecx ; add rsp, 8 ; ret
0x000000000040ff5c : mov dword ptr [rdi + 0x28], edx ; ret
0x000000000046a812 : mov dword ptr [rdi + 0x28], esi ; mov eax, 1 ; ret
0x0000000000422901 : mov dword ptr [rdi + 0x28], esi ; ret
0x00000000004b7676 : mov dword ptr [rdi + 0x28], esi ; xor eax, eax ; ret
0x000000000050ce51 : mov dword ptr [rdi + 0x2a], ebp ; cmp dl, byte ptr [rdx + rcx*2 + 0x26] ; ret 0x5ec7
0x00000000004a0ff4 : mov dword ptr [rdi + 0x30], 0 ; ret
0x0000000000407138 : mov dword ptr [rdi + 0x30], eax ; jle 0x407146 ; ret
0x0000000000410bae : mov dword ptr [rdi + 0x30], ecx ; mov qword ptr [rdi + 0x38], r10 ; ret
0x00000000004c6a6c : mov dword ptr [rdi + 0x30], ecx ; or edx, eax ; mov byte ptr [rdi], dl ; ret
0x0000000000410664 : mov dword ptr [rdi + 0x30], edx ; mov qword ptr [rdi + 0x38], r11 ; ret
0x000000000043be11 : mov dword ptr [rdi + 0x30], esi ; mov eax, 1 ; ret
0x0000000000416c66 : mov dword ptr [rdi + 0x30], esi ; mov qword ptr [rdi + 0x38], r15 ; ret
0x00000000004229a1 : mov dword ptr [rdi + 0x30], esi ; mov qword ptr [rdi + 0x38], rdx ; ret
0x0000000000422941 : mov dword ptr [rdi + 0x30], esi ; ret
0x00000000004b7696 : mov dword ptr [rdi + 0x30], esi ; xor eax, eax ; ret
0x000000000040ba21 : mov dword ptr [rdi + 0x34], eax ; ret
0x000000000040bb7b : mov dword ptr [rdi + 0x38], 0 ; ret
0x0000000000425950 : mov dword ptr [rdi + 0x38], eax ; mov eax, 1 ; ret
0x0000000000455144 : mov dword ptr [rdi + 0x38], eax ; ret
0x0000000000410668 : mov dword ptr [rdi + 0x38], ebx ; ret
0x0000000000416c6a : mov dword ptr [rdi + 0x38], edi ; ret
0x000000000045171b : mov dword ptr [rdi + 0x38], edx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000410bb2 : mov dword ptr [rdi + 0x38], edx ; ret
0x0000000000420321 : mov dword ptr [rdi + 0x38], esi ; mov eax, 1 ; ret
0x000000000043ea11 : mov dword ptr [rdi + 0x38], esi ; ret
0x0000000000455030 : mov dword ptr [rdi + 0x40], 0 ; ret
0x0000000000456e35 : mov dword ptr [rdi + 0x40], eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000455083 : mov dword ptr [rdi + 0x40], eax ; ret
0x00000000004228f1 : mov dword ptr [rdi + 0x40], esi ; mov dword ptr [rdi + 0x48], edx ; ret
0x0000000000455140 : mov dword ptr [rdi + 0x40], esi ; mov qword ptr [rdi + 0x38], rax ; ret
0x00000000004229b1 : mov dword ptr [rdi + 0x40], esi ; mov qword ptr [rdi + 0x48], rdx ; ret
0x000000000044a6e1 : mov dword ptr [rdi + 0x40], esi ; ret
0x000000000044acd0 : mov dword ptr [rdi + 0x44], esi ; ret
0x00000000004b10a5 : mov dword ptr [rdi + 0x48], 0x4ae320 ; ret
0x0000000000443875 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 0x50], rcx ; ret
0x00000000004228f4 : mov dword ptr [rdi + 0x48], edx ; ret
0x00000000004a0ac1 : mov dword ptr [rdi + 0x48], esi ; mov eax, 1 ; ret
0x000000000044acf0 : mov dword ptr [rdi + 0x48], esi ; ret
0x0000000000443879 : mov dword ptr [rdi + 0x50], ecx ; ret
0x000000000043c001 : mov dword ptr [rdi + 0x50], esi ; mov eax, 1 ; ret
0x00000000004229c1 : mov dword ptr [rdi + 0x50], esi ; mov qword ptr [rdi + 0x58], rdx ; ret
0x00000000004a22cd : mov dword ptr [rdi + 0x58], 0 ; ret
0x0000000000443866 : mov dword ptr [rdi + 0x58], ecx ; mov qword ptr [rdi + 0x60], rax ; ret
0x00000000004229c5 : mov dword ptr [rdi + 0x58], edx ; ret
0x000000000043c1f1 : mov dword ptr [rdi + 0x58], esi ; mov eax, 1 ; ret
0x00000000004a2604 : mov dword ptr [rdi + 0x5c], 0 ; ret
0x00000000004517e6 : mov dword ptr [rdi + 0x60], eax ; mov qword ptr [rdi + 0x68], rdx ; ret
0x000000000044386a : mov dword ptr [rdi + 0x60], eax ; ret
0x000000000043c551 : mov dword ptr [rdi + 0x60], esi ; mov eax, 1 ; ret
0x00000000004229d1 : mov dword ptr [rdi + 0x60], esi ; mov qword ptr [rdi + 0x68], rdx ; ret
0x0000000000421dd1 : mov dword ptr [rdi + 0x60], esi ; ret
0x0000000000451674 : mov dword ptr [rdi + 0x68], edx ; pop r14 ; ret
0x00000000004229d5 : mov dword ptr [rdi + 0x68], edx ; ret
0x000000000043a6e1 : mov dword ptr [rdi + 0x68], esi ; mov eax, 1 ; ret
0x00000000004b3291 : mov dword ptr [rdi + 0x68], esi ; ret
0x0000000000410a86 : mov dword ptr [rdi + 0x70], ecx ; mov qword ptr [rdi + 0x78], r10 ; ret
0x00000000004104fc : mov dword ptr [rdi + 0x70], edx ; mov qword ptr [rdi + 0x78], r11 ; ret
0x000000000043a6f1 : mov dword ptr [rdi + 0x70], esi ; mov eax, 1 ; ret
0x00000000004229e1 : mov dword ptr [rdi + 0x70], esi ; mov qword ptr [rdi + 0x78], rdx ; ret
0x0000000000472141 : mov dword ptr [rdi + 0x70], esi ; ret
0x0000000000418956 : mov dword ptr [rdi + 0x78], eax ; mov rax, r11 ; ret
0x0000000000410500 : mov dword ptr [rdi + 0x78], ebx ; ret
0x0000000000410a8a : mov dword ptr [rdi + 0x78], edx ; ret
0x000000000043a701 : mov dword ptr [rdi + 0x78], esi ; mov eax, 1 ; ret
0x00000000004229f8 : mov dword ptr [rdi + 0x88], edx ; ret
0x00000000004438a0 : mov dword ptr [rdi + 0x90], eax ; ret
0x0000000000422a08 : mov dword ptr [rdi + 0x98], edx ; ret
0x00000000004438b1 : mov dword ptr [rdi + 0xa0], esi ; ret
0x0000000000422a18 : mov dword ptr [rdi + 0xa8], edx ; ret
0x00000000004438c1 : mov dword ptr [rdi + 0xa8], esi ; ret
0x000000000043a461 : mov dword ptr [rdi + 0xac], edx ; jle 0x43a4a5 ; pop rbx ; ret
0x0000000000418ba4 : mov dword ptr [rdi + 0xb8], eax ; ret
0x0000000000422a28 : mov dword ptr [rdi + 0xb8], edx ; ret
0x00000000004b0df0 : mov dword ptr [rdi + 0xb8], esi ; ret
0x0000000000443828 : mov dword ptr [rdi + 0xc0], eax ; ret
0x00000000004438d8 : mov dword ptr [rdi + 0xc0], esi ; ret
0x000000000042225e : mov dword ptr [rdi + 0xc8], eax ; ret
0x0000000000422a38 : mov dword ptr [rdi + 0xc8], edx ; ret
0x0000000000423e75 : mov dword ptr [rdi + 0xc], 0x3e ; xor eax, eax ; ret
0x0000000000423ed0 : mov dword ptr [rdi + 0xc], 0x3f ; ret
0x00000000004c64eb : mov dword ptr [rdi + 0xc], edx ; mov rdx, r12 ; call rax
0x00000000004baf7f : mov dword ptr [rdi + 4], eax ; ret
0x000000000042356b : mov dword ptr [rdi + 8], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000402bb0 : mov dword ptr [rdi + 8], eax ; mov eax, 1 ; ret
0x0000000000423550 : mov dword ptr [rdi + 8], ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000402b10 : mov dword ptr [rdi + 8], edx ; mov eax, 1 ; ret
0x00000000004060db : mov dword ptr [rdi + 8], edx ; ret
0x000000000043a6a6 : mov dword ptr [rdi + 8], esi ; mov eax, 1 ; ret
0x00000000004b3e51 : mov dword ptr [rdi + 8], esi ; or qword ptr [rdi + 0x18], 2 ; ret
0x0000000000406038 : mov dword ptr [rdi + 8], esi ; ret
0x00000000004b75f6 : mov dword ptr [rdi + 8], esi ; xor eax, eax ; ret
0x00000000004c7834 : mov dword ptr [rdi + rax], ecx ; jb 0x4c782d ; ret
0x00000000004a8100 : mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000043f6f6 : mov dword ptr [rdi], 0 ; ret
0x00000000004fd70f : mov dword ptr [rdi], 0xae48daa ; shl dword ptr [rdi + rcx*2], cl ; ret
0x0000000000470425 : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000042420f : mov dword ptr [rdi], eax ; mov eax, 2 ; ret
0x00000000004060d8 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000004236d4 : mov dword ptr [rdi], eax ; pop rbx ; ret
0x0000000000424134 : mov dword ptr [rdi], eax ; ret
0x00000000004b5581 : mov dword ptr [rdi], ecx ; ret
0x00000000004baf7d : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000423ea9 : mov dword ptr [rdi], edx ; mov eax, 1 ; ret
0x000000000041c4aa : mov dword ptr [rdi], edx ; ret
0x000000000043a666 : mov dword ptr [rdi], esi ; mov eax, 1 ; ret
0x000000000046b341 : mov dword ptr [rdi], esi ; mov eax, esi ; ret
0x0000000000406041 : mov dword ptr [rdi], esi ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000424710 : mov dword ptr [rdi], esi ; ret
0x000000000041c4a9 : mov dword ptr [rdi], r10d ; ret
0x00000000004b5580 : mov dword ptr [rdi], r9d ; ret
0x0000000000425294 : mov dword ptr [rdx + 0x10], 0xc3d2e1f0 ; ret
0x00000000004254d0 : mov dword ptr [rdx + 0x6c], 0x1c ; ret
0x0000000000425540 : mov dword ptr [rdx + 0x6c], 0x20 ; ret
0x0000000000493482 : mov dword ptr [rdx + 0x75], ebp ; ret 0x6a89
0x00000000004b8b9d : mov dword ptr [rdx + 0xc], 0x10325476 ; ret
0x000000000044922f : mov dword ptr [rdx + rax*8], edi ; ret
0x00000000004a25de : mov dword ptr [rdx], 0 ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x000000000052e325 : mov dword ptr [rdx], eax ; add byte ptr [rdx], ah ; clc ; jmp rsp
0x0000000000446bb5 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000406b4d : mov dword ptr [rdx], eax ; ret
0x0000000000490925 : mov dword ptr [rdx], ecx ; ret
0x0000000000423b29 : mov dword ptr [rdx], esi ; ret
0x00000000004b7a80 : mov dword ptr [rip + 0x2a267e], edi ; ret
0x00000000004b7501 : mov dword ptr [rip + 0x2a2bf1], edi ; ret
0x00000000004b34b8 : mov dword ptr [rip + 0x2a4562], edi ; ret
0x00000000004adee1 : mov dword ptr [rip + 0x2a99e9], edi ; ret
0x0000000000479d81 : mov dword ptr [rip + 0x2dce61], edi ; ret
0x00000000004720bd : mov dword ptr [rip + 0x2e4add], edi ; ret
0x000000000046a2d1 : mov dword ptr [rip + 0x2efce9], edi ; ret
0x0000000000469d21 : mov dword ptr [rip + 0x2f0291], edi ; ret
0x0000000000467c21 : mov dword ptr [rip + 0x2f2389], edi ; ret
0x0000000000464f91 : mov dword ptr [rip + 0x2f5011], edi ; ret
0x000000000045ffd1 : mov dword ptr [rip + 0x2f9fc9], edi ; ret
0x000000000043b8c0 : mov dword ptr [rip + 0x31e612], edi ; ret
0x000000000043a5c9 : mov dword ptr [rip + 0x31f8f1], eax ; jne 0x43a597 ; pop rbx ; ret
0x000000000043a569 : mov dword ptr [rip + 0x31f951], eax ; jne 0x43a537 ; pop rbx ; ret
0x0000000000437d71 : mov dword ptr [rip + 0x322139], edi ; ret
0x000000000041e348 : mov dword ptr [rip + 0x338562], edi ; ret
0x000000000041d123 : mov dword ptr [rip + 0x33c7df], ebx ; pop rbx ; ret
0x0000000000406a8c : mov dword ptr [rip + 0x34fd36], esi ; ret
0x0000000000406a4c : mov dword ptr [rip + 0x34fd5e], esi ; ret
0x0000000000406a02 : mov dword ptr [rip + 0x34fda8], edx ; ret
0x0000000000407861 : mov dword ptr [rip + 0x352071], edi ; ret
0x0000000000406101 : mov dword ptr [rip + 0x353761], edi ; ret
0x0000000000406021 : mov dword ptr [rip + 0x353849], edi ; ret
0x000000000040600a : mov dword ptr [rip + 0x353868], ebx ; pop rbx ; ret
0x0000000000405fd1 : mov dword ptr [rip + 0x353871], edi ; ret
0x0000000000405fc1 : mov dword ptr [rip + 0x353889], edi ; ret
0x0000000000405fb1 : mov dword ptr [rip + 0x3538a1], edi ; ret
0x000000000040210e : mov dword ptr [rip + 0x355bb8], ecx ; ret
0x000000000040262a : mov dword ptr [rsi + 0x14], eax ; ret
0x000000000044922b : mov dword ptr [rsi + 4], ecx ; mov qword ptr [rdx + rax*8], rdi ; ret
0x0000000000402624 : mov dword ptr [rsi + 8], ecx ; mov dword ptr [rdi + 0x14], ecx ; mov dword ptr [rsi + 0x14], eax ; ret
0x00000000004c785a : mov dword ptr [rsi + rax - 2], edx ; ret
0x00000000004c7869 : mov dword ptr [rsi + rax - 4], edx ; ret
0x00000000004cb505 : mov dword ptr [rsi + rdx*4], 0xffffffff ; pop rbx ; ret
0x000000000046f9b0 : mov dword ptr [rsi], 0xffffffff ; ret
0x0000000000406bdd : mov dword ptr [rsi], eax ; ret
0x000000000047160c : mov dword ptr [rsi], edx ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041a0c5 : mov dword ptr [rsi], edx ; ret
0x0000000000402e64 : mov dword ptr [rsi], edx ; xor qword ptr [rax], rdi ; ret
0x00000000004a9f8b : mov dword ptr [rsp + 0x10], eax ; call r15
0x00000000004c6725 : mov dword ptr [rsp + 0x10], eax ; lea rdi, qword ptr [rdi + 0x40] ; call rax
0x000000000046dcc5 : mov dword ptr [rsp + 0x10], ebx ; call r12
0x0000000000476831 : mov dword ptr [rsp + 0x10], edx ; movsxd rdx, dword ptr [rdi] ; xor edi, edi ; call rax
0x000000000046e1b8 : mov dword ptr [rsp + 0x10], edx ; movsxd rdx, eax ; call rbx
0x00000000004c6764 : mov dword ptr [rsp + 0x10], esi ; lea rsi, qword ptr [rbx + 0x60] ; call rax
0x00000000004aa147 : mov dword ptr [rsp + 0x18], eax ; call r12
0x0000000000462675 : mov dword ptr [rsp + 0x18], eax ; xor eax, eax ; call 0x41e968
0x00000000004a9f5e : mov dword ptr [rsp + 0x18], eax ; xor eax, eax ; call r15
0x00000000004c7756 : mov dword ptr [rsp + 0x20], eax ; call r11
0x000000000045a2cd : mov dword ptr [rsp + 0x20], eax ; call r15
0x0000000000497dbb : mov dword ptr [rsp + 0x20], eax ; mov rdx, rax ; call r15
0x000000000045a34a : mov dword ptr [rsp + 0x20], ecx ; call r15
0x000000000046f5c7 : mov dword ptr [rsp + 0x24], eax ; mov edx, eax ; mov rdi, rbp ; call rbx
0x00000000004c74a8 : mov dword ptr [rsp + 0x28], ebx ; call rax
0x000000000049411d : mov dword ptr [rsp + 0x28], edx ; mov rdx, rbp ; call r12
0x00000000004a98bd : mov dword ptr [rsp + 0x28], esp ; call r15
0x000000000045a2a0 : mov dword ptr [rsp + 0x30], ecx ; call r15
0x0000000000496a21 : mov dword ptr [rsp + 0x38], eax ; mov rdx, rax ; call r15
0x00000000004942db : mov dword ptr [rsp + 0x38], edx ; mov rdx, rbp ; call r12
0x0000000000416ffc : mov dword ptr [rsp + 0x80], edi ; ret
0x0000000000403091 : mov dword ptr [rsp + 0xc], eax ; mov edi, r8d ; call r9
0x00000000004b4e29 : mov dword ptr [rsp + 8], eax ; call qword ptr [rbx]
0x00000000004c49a8 : mov dword ptr [rsp + 8], eax ; call r15
0x00000000004961dd : mov dword ptr [rsp + 8], ecx ; call 0x402406
0x000000000045a16f : mov dword ptr [rsp + 8], ecx ; call r9
0x000000000044c325 : mov dword ptr [rsp + 8], edx ; jmp rax
0x00000000004c727e : mov dword ptr [rsp + 8], esi ; call rax
0x000000000043d014 : mov dword ptr [rsp + 8], esi ; call rdx
0x0000000000490756 : mov dword ptr [rsp + rax - 4], edx ; jmp 0x4906f4
0x0000000000478b73 : mov dword ptr [rsp], eax ; call rbx
0x00000000004c68d9 : mov dword ptr [rsp], edx ; mov rdi, r13 ; call rdx
0x00000000004fa1ad : mov dword ptr gs:[rax], eax ; jmp qword ptr [rax]
0x0000000000401eff : mov eax, 0 ; pop rbp ; ret
0x00000000004a8b92 : mov eax, 0x13 ; ret
0x0000000000421cae : mov eax, 0x1a5 ; pop rbx ; ret
0x000000000050db65 : mov eax, 0x1a5456b3 ; ret 0x6df0
0x0000000000421d10 : mov eax, 0x1a9 ; pop rbx ; ret
0x0000000000421c82 : mov eax, 0x1ad ; pop rbx ; ret
0x0000000000421c55 : mov eax, 0x1e ; pop rbx ; ret
0x0000000000480d41 : mov eax, 0x1f ; pop rbp ; pop r12 ; ret
0x00000000004490d0 : mov eax, 0x20 ; ret
0x0000000000421d25 : mov eax, 0x25 ; pop rbx ; ret
0x0000000000405f70 : mov eax, 0x29 ; ret
0x000000000054a85d : mov eax, 0x2d700001 ; hlt ; call rbx
0x00000000004f607e : mov eax, 0x2e34d45f ; idiv dword ptr [rdx] ; ret
0x00000000004f878e : mov eax, 0x32142f94 ; ret
0x0000000000461c70 : mov eax, 0x34 ; ret
0x0000000000461c4d : mov eax, 0x35 ; jne 0x461c72 ; ret
0x0000000000478c4d : mov eax, 0x39 ; ret
0x0000000000470674 : mov eax, 0x39fffac1 ; ret
0x000000000044a370 : mov eax, 0x40 ; ret
0x000000000052ec95 : mov eax, 0x4440002 ; stc ; call rsp
0x000000000046d28c : mov eax, 0x48000000 ; mov esi, ebx ; call rax
0x000000000042030c : mov eax, 0x48900001 ; mov eax, dword ptr [rdi + 0x38] ; ret
0x0000000000402170 : mov eax, 0x4d0230 ; ret
0x0000000000406180 : mov eax, 0x4d17bf ; ret
0x0000000000421a40 : mov eax, 0x4e50c0 ; ret
0x0000000000421a30 : mov eax, 0x4e5140 ; ret
0x0000000000421a20 : mov eax, 0x4e51c0 ; ret
0x0000000000421a10 : mov eax, 0x4e5240 ; ret
0x0000000000421a00 : mov eax, 0x4e52c0 ; ret
0x0000000000454fe0 : mov eax, 0x4f0620 ; ret
0x000000000045a130 : mov eax, 0x4f1400 ; ret
0x000000000045c4f0 : mov eax, 0x4f3000 ; ret
0x000000000050c534 : mov eax, 0x502b7c77 ; jmp qword ptr [rdi]
0x000000000044e2d1 : mov eax, 0x51 ; ret
0x0000000000478be0 : mov eax, 0x51c1b1 ; ret
0x0000000000478bf0 : mov eax, 0x51c1c6 ; ret
0x0000000000478c00 : mov eax, 0x51c1d3 ; ret
0x0000000000478c10 : mov eax, 0x51c1e6 ; ret
0x0000000000478c20 : mov eax, 0x51c1fc ; ret
0x0000000000478c30 : mov eax, 0x51c209 ; ret
0x00000000004fe6fd : mov eax, 0x51f8d28f ; ret 0x2a40
0x0000000000491190 : mov eax, 0x5210b8 ; ret
0x0000000000494b60 : mov eax, 0x5211c0 ; ret
0x0000000000494b50 : mov eax, 0x5211e0 ; ret
0x0000000000494b40 : mov eax, 0x521200 ; ret
0x0000000000494b30 : mov eax, 0x521220 ; ret
0x0000000000494b20 : mov eax, 0x521240 ; ret
0x00000000004987a0 : mov eax, 0x5216c0 ; ret
0x0000000000498cd0 : mov eax, 0x521800 ; ret
0x00000000004990d0 : mov eax, 0x521940 ; ret
0x000000000049ccc0 : mov eax, 0x522380 ; ret
0x00000000004a3ad0 : mov eax, 0x522ee0 ; ret
0x00000000004a3aa0 : mov eax, 0x522f40 ; ret
0x00000000004a3a90 : mov eax, 0x522fa0 ; ret
0x00000000004a3a80 : mov eax, 0x523000 ; ret
0x00000000004a3a70 : mov eax, 0x523060 ; ret
0x00000000004a3a60 : mov eax, 0x5230c0 ; ret
0x00000000004a3a50 : mov eax, 0x523120 ; ret
0x00000000004a3a40 : mov eax, 0x523180 ; ret
0x00000000004a3a30 : mov eax, 0x5231e0 ; ret
0x00000000004a3a20 : mov eax, 0x523240 ; ret
0x00000000004a3a10 : mov eax, 0x5232a0 ; ret
0x00000000004a5e60 : mov eax, 0x523480 ; ret
0x00000000004a5e50 : mov eax, 0x5234e0 ; ret
0x00000000004a5e40 : mov eax, 0x523540 ; ret
0x00000000004a5e2c : mov eax, 0x523600 ; cmove rax, rdx ; ret
0x00000000004a5e0c : mov eax, 0x5236c0 ; cmove rax, rdx ; ret
0x00000000004a5dec : mov eax, 0x523780 ; cmove rax, rdx ; ret
0x00000000004a5dcc : mov eax, 0x523840 ; cmove rax, rdx ; ret
0x00000000004a5dac : mov eax, 0x523900 ; cmove rax, rdx ; ret
0x00000000004a5d8c : mov eax, 0x5239c0 ; cmove rax, rdx ; ret
0x00000000004a5d6c : mov eax, 0x523a80 ; cmove rax, rdx ; ret
0x00000000004a5d4c : mov eax, 0x523b40 ; cmove rax, rdx ; ret
0x00000000004a5d2c : mov eax, 0x523c00 ; cmove rax, rdx ; ret
0x00000000004a5d0c : mov eax, 0x523cc0 ; cmove rax, rdx ; ret
0x00000000004a5cec : mov eax, 0x523d80 ; cmove rax, rdx ; ret
0x00000000004a5ccc : mov eax, 0x523e40 ; cmove rax, rdx ; ret
0x00000000004a5cac : mov eax, 0x523f00 ; cmove rax, rdx ; ret
0x00000000004a5c8c : mov eax, 0x523fc0 ; cmove rax, rdx ; ret
0x00000000004a5c6c : mov eax, 0x524080 ; cmove rax, rdx ; ret
0x00000000004a5c4c : mov eax, 0x524140 ; cmove rax, rdx ; ret
0x00000000004a5c2c : mov eax, 0x524200 ; cmove rax, rdx ; ret
0x00000000004a5c0c : mov eax, 0x5242c0 ; cmove rax, rdx ; ret
0x00000000004a5bec : mov eax, 0x524380 ; cmove rax, rdx ; ret
0x00000000004a5bcc : mov eax, 0x524440 ; cmove rax, rdx ; ret
0x00000000004a5bac : mov eax, 0x524500 ; cmove rax, rdx ; ret
0x00000000004a5b8c : mov eax, 0x5245c0 ; cmove rax, rdx ; ret
0x00000000004a5b6c : mov eax, 0x524680 ; cmove rax, rdx ; ret
0x00000000004a5b4c : mov eax, 0x524740 ; cmove rax, rdx ; ret
0x00000000004a5b2c : mov eax, 0x524800 ; cmove rax, rdx ; ret
0x00000000004a5b0c : mov eax, 0x5248c0 ; cmove rax, rdx ; ret
0x00000000004a5aec : mov eax, 0x524980 ; cmove rax, rdx ; ret
0x00000000004a5acc : mov eax, 0x524a40 ; cmove rax, rdx ; ret
0x00000000004a5aac : mov eax, 0x524b00 ; cmove rax, rdx ; ret
0x00000000004a5ea0 : mov eax, 0x524b60 ; ret
0x000000000050fb90 : mov eax, 0x53206348 ; ret 0x6202
0x0000000000528c1d : mov eax, 0x67d40000 ; out dx, eax ; jmp rsp
0x000000000041a9c0 : mov eax, 0x756800 ; ret
0x00000000004209a0 : mov eax, 0x7568c0 ; ret
0x0000000000438e70 : mov eax, 0x756980 ; ret
0x00000000004662b0 : mov eax, 0x756a40 ; ret
0x0000000000467c10 : mov eax, 0x756aa0 ; ret
0x000000000046a2c0 : mov eax, 0x756b00 ; ret
0x0000000000485ef0 : mov eax, 0x757040 ; ret
0x0000000000485ee0 : mov eax, 0x7570a0 ; ret
0x000000000049f580 : mov eax, 0x757500 ; ret
0x00000000004a08d0 : mov eax, 0x757580 ; ret
0x00000000004a0f40 : mov eax, 0x7575e0 ; ret
0x00000000004a1090 : mov eax, 0x757640 ; ret
0x00000000004a1b00 : mov eax, 0x7576a0 ; ret
0x00000000004a6650 : mov eax, 0x757700 ; ret
0x00000000004a75f0 : mov eax, 0x757760 ; ret
0x00000000004a7d70 : mov eax, 0x7577c0 ; ret
0x00000000004acb60 : mov eax, 0x757880 ; ret
0x00000000004b81c0 : mov eax, 0x757c60 ; ret
0x000000000041ffdf : mov eax, 0x759930 ; add rsp, 8 ; ret
0x000000000041ffaa : mov eax, 0x759930 ; ret
0x000000000043a7c0 : mov eax, 0x759eb8 ; ret
0x00000000004a2a8c : mov eax, 0x75a020 ; cmove rax, rdx ; ret
0x000000000040619a : mov eax, 0x75b4b8 ; ret
0x00000000004feacb : mov eax, 0x760883fd ; out dx, eax ; ret
0x00000000004f84e9 : mov eax, 0x7966c077 ; imul esp, eax, 0x6c ; ret 0xda27
0x000000000050ed57 : mov eax, 0x7a2186b ; ret 0x55d0
0x0000000000500f32 : mov eax, 0x7bca023c ; ret
0x00000000004afdf1 : mov eax, 0x83000003 ; ret
0x000000000043f412 : mov eax, 0x8507508d ; ror byte ptr [rdi], 0x48 ; ret 0xf8c1
0x00000000004f7a83 : mov eax, 0x8530c45f ; ret 0x8a41
0x000000000047a694 : mov eax, 0x89fff871 ; ret
0x0000000000492c7c : mov eax, 0x9fe45c5c ; ret 0x5dc2
0x0000000000505286 : mov eax, 0xaa4823f2 ; ret 0x426d
0x0000000000492c78 : mov eax, 0xb8e45c5c ; pop rsp ; pop rsp ; in al, -0x61 ; ret 0x5dc2
0x0000000000443190 : mov eax, 0xc ; ret
0x00000000004189e5 : mov eax, 0xc3ac0f4d ; sub byte ptr [rcx + 0x21], cl ; ret
0x0000000000418ba6 : mov eax, 0xf3000000 ; ret
0x0000000000402110 : mov eax, 0xf300355b ; ret
0x00000000004fbb78 : mov eax, 0xfdfd55d3 ; ret 0x3148
0x00000000004a9392 : mov eax, 0xfffffffc ; ret
0x0000000000434547 : mov eax, 0xfffffffe ; add rsp, 8 ; ret
0x0000000000424b85 : mov eax, 0xfffffffe ; je 0x424b98 ; pop rbx ; ret
0x00000000004b9881 : mov eax, 0xfffffffe ; pop rbp ; pop r12 ; ret
0x0000000000437894 : mov eax, 0xfffffffe ; pop rbx ; pop rbp ; ret
0x00000000004376d0 : mov eax, 0xfffffffe ; pop rbx ; ret
0x000000000043d0f0 : mov eax, 0xfffffffe ; ret
0x000000000046ad82 : mov eax, 0xffffffff ; add rsp, 0x28 ; ret
0x0000000000421e9c : mov eax, 0xffffffff ; add rsp, 8 ; ret
0x0000000000402665 : mov eax, 0xffffffff ; jle 0x402679 ; ret
0x000000000040e6d4 : mov eax, 0xffffffff ; jne 0x40e6e9 ; ret
0x000000000047a2d1 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000041d2e4 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000041c2b5 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000402d1f : mov eax, 0xffffffff ; ret
0x00000000004aa5b6 : mov eax, 1 ; add qword ptr [rsi], 1 ; ret
0x00000000004aa5d0 : mov eax, 1 ; add qword ptr [rsi], 2 ; ret
0x00000000004aa604 : mov eax, 1 ; add qword ptr [rsi], 4 ; ret
0x00000000004222c4 : mov eax, 1 ; add rsp, 0x18 ; ret
0x0000000000405dbd : mov eax, 1 ; add rsp, 8 ; ret
0x00000000004b3e03 : mov eax, 1 ; and qword ptr [rdi + 0x18], rsi ; ret
0x00000000004a9684 : mov eax, 1 ; ja 0x4a9658 ; ret
0x0000000000421bd6 : mov eax, 1 ; je 0x421c07 ; ret
0x0000000000465502 : mov eax, 1 ; je 0x465517 ; ret
0x000000000046558b : mov eax, 1 ; je 0x4655b8 ; pop rbx ; ret
0x0000000000484b8a : mov eax, 1 ; je 0x484b9f ; ret
0x000000000049fdab : mov eax, 1 ; je 0x49fdd8 ; pop rbx ; ret
0x000000000049fedb : mov eax, 1 ; je 0x49ff08 ; pop rbx ; ret
0x0000000000421b12 : mov eax, 1 ; jne 0x421b32 ; ret
0x0000000000423eff : mov eax, 1 ; mov qword ptr [rdi], rdx ; ret
0x0000000000425182 : mov eax, 1 ; pop r12 ; ret
0x0000000000402a38 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000041970a : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004026af : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000405ea7 : mov eax, 1 ; pop rbx ; ret
0x0000000000402b13 : mov eax, 1 ; ret
0x000000000044705c : mov eax, 2 ; add rsp, 8 ; ret
0x00000000004b3351 : mov eax, 2 ; pop rbp ; pop r12 ; ret
0x000000000046553f : mov eax, 2 ; pop rbx ; ret
0x0000000000424211 : mov eax, 2 ; ret
0x00000000004b3341 : mov eax, 3 ; pop rbp ; pop r12 ; ret
0x00000000004a9647 : mov eax, 3 ; ret
0x00000000004804a3 : mov eax, 4 ; je 0x4804c8 ; ret
0x00000000004a960d : mov eax, 4 ; ret
0x0000000000421cbd : mov eax, 5 ; pop rbx ; ret
0x00000000004a96f0 : mov eax, 5 ; ret
0x00000000004a9762 : mov eax, 6 ; ret
0x00000000004b35d0 : mov eax, 8 ; ret
0x00000000004808f0 : mov eax, 9 ; ret
0x000000000041e220 : mov eax, dword ptr [edi + 0x10] ; sub eax, dword ptr [rcx + 0x10] ; ret
0x000000000041d923 : mov eax, dword ptr [rax + 0x10] ; add rsp, 0x38 ; jmp rax
0x00000000004849cf : mov eax, dword ptr [rax + 0x10] ; add rsp, 8 ; ret
0x000000000041d8cd : mov eax, dword ptr [rax + 0x10] ; jmp rax
0x0000000000421db4 : mov eax, dword ptr [rax + 0x10] ; ret
0x000000000041d1df : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; je 0x41d1f1 ; call rax
0x000000000044b2ad : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; je 0x44b2bf ; call rax
0x00000000004b2373 : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; je 0x4b2385 ; call rax
0x000000000041d975 : mov eax, dword ptr [rax + 0x18] ; add rsp, 0x28 ; jmp rax
0x000000000041d93d : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000478df4 : mov eax, dword ptr [rax + 0x18] ; ret
0x0000000000422312 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x422324 ; call rax
0x000000000042374f : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x423768 ; jmp rax
0x000000000043f751 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x43f738 ; jmp rax
0x000000000046a622 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x46a670 ; call rax
0x00000000004b23aa : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x4b23c0 ; jmp rax
0x000000000041d9c5 : mov eax, dword ptr [rax + 0x20] ; add rsp, 0x28 ; jmp rax
0x000000000041d98d : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000486d92 : mov eax, dword ptr [rax + 0x20] ; ret
0x000000000043f6df : mov eax, dword ptr [rax + 0x20] ; test rax, rax ; je 0x43f6fd ; jmp rax
0x000000000046a6c2 : mov eax, dword ptr [rax + 0x20] ; test rax, rax ; je 0x46a710 ; call rax
0x0000000000472015 : mov eax, dword ptr [rax + 0x20] ; test rax, rax ; je 0x472028 ; jmp rax
0x00000000004b23da : mov eax, dword ptr [rax + 0x20] ; test rax, rax ; je 0x4b23f0 ; jmp rax
0x000000000041da0d : mov eax, dword ptr [rax + 0x28] ; add rsp, 0x28 ; jmp rax
0x000000000040500b : mov eax, dword ptr [rax + 0x28] ; add rsp, 8 ; jmp rax
0x000000000048c60f : mov eax, dword ptr [rax + 0x28] ; add rsp, 8 ; ret
0x0000000000484379 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000478e04 : mov eax, dword ptr [rax + 0x28] ; ret
0x00000000004410f0 : mov eax, dword ptr [rax + 0x28] ; test rax, rax ; je 0x441118 ; call rax
0x000000000044adb4 : mov eax, dword ptr [rax + 0x28] ; test rax, rax ; je 0x44adc8 ; jmp rax
0x000000000044ae34 : mov eax, dword ptr [rax + 0x28] ; test rax, rax ; je 0x44ae48 ; jmp rax
0x0000000000467c74 : mov eax, dword ptr [rax + 0x28] ; test rax, rax ; je 0x467c86 ; call rax
0x000000000046bd8d : mov eax, dword ptr [rax + 0x28] ; test rax, rax ; je 0x46bda3 ; call rax
0x00000000004b240a : mov eax, dword ptr [rax + 0x28] ; test rax, rax ; je 0x4b2420 ; jmp rax
0x0000000000404fed : mov eax, dword ptr [rax + 0x28] ; xor edi, edi ; jmp rax
0x000000000040504b : mov eax, dword ptr [rax + 0x30] ; add rsp, 0x18 ; jmp rax
0x0000000000484769 : mov eax, dword ptr [rax + 0x30] ; jmp rax
0x0000000000479279 : mov eax, dword ptr [rax + 0x30] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000048e1b5 : mov eax, dword ptr [rax + 0x30] ; ret
0x000000000043fd04 : mov eax, dword ptr [rax + 0x30] ; test rax, rax ; je 0x43fd38 ; call rax
0x000000000044adf4 : mov eax, dword ptr [rax + 0x30] ; test rax, rax ; je 0x44ae08 ; jmp rax
0x000000000044ae74 : mov eax, dword ptr [rax + 0x30] ; test rax, rax ; je 0x44ae88 ; jmp rax
0x00000000004b70d4 : mov eax, dword ptr [rax + 0x30] ; test rax, rax ; je 0x4b7108 ; call rax
0x000000000043d61a : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x43d630 ; jmp rax
0x000000000044aeb4 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x44aec8 ; jmp rax
0x0000000000464fe1 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x464ff3 ; call rax
0x00000000004b246a : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x4b2480 ; jmp rax
0x000000000044aef4 : mov eax, dword ptr [rax + 0x40] ; test rax, rax ; je 0x44af08 ; jmp rax
0x0000000000460031 : mov eax, dword ptr [rax + 0x40] ; test rax, rax ; je 0x460043 ; call rax
0x0000000000467408 : mov eax, dword ptr [rax + 0x40] ; test rax, rax ; je 0x467420 ; jmp rax
0x00000000004b248a : mov eax, dword ptr [rax + 0x40] ; test rax, rax ; je 0x4b24a0 ; jmp rax
0x0000000000484339 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000437279 : mov eax, dword ptr [rax + 0x48] ; ret
0x000000000046be6d : mov eax, dword ptr [rax + 0x48] ; test rax, rax ; je 0x46beb8 ; call rax
0x00000000004b24aa : mov eax, dword ptr [rax + 0x48] ; test rax, rax ; je 0x4b24c0 ; jmp rax
0x000000000044e315 : mov eax, dword ptr [rax + 0x4eb7e0] ; ret
0x0000000000405b39 : mov eax, dword ptr [rax + 0x50] ; add rsp, 8 ; jmp rax
0x0000000000405b1d : mov eax, dword ptr [rax + 0x50] ; jmp rax
0x000000000043d64a : mov eax, dword ptr [rax + 0x50] ; test rax, rax ; je 0x43d660 ; jmp rax
0x000000000044b27d : mov eax, dword ptr [rax + 0x50] ; test rax, rax ; je 0x44b28f ; call rax
0x00000000004355b6 : mov eax, dword ptr [rax + 0x58] ; test rax, rax ; je 0x4355f0 ; call rax
0x000000000043cf9f : mov eax, dword ptr [rax + 0x58] ; test rax, rax ; je 0x43cfb8 ; jmp rax
0x0000000000464e14 : mov eax, dword ptr [rax + 0x58] ; test rax, rax ; je 0x464e48 ; call rax
0x000000000043cf6f : mov eax, dword ptr [rax + 0x60] ; test rax, rax ; je 0x43cf88 ; jmp rax
0x000000000045f9a0 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; je 0x45f9d8 ; call rax
0x000000000043d0aa : mov eax, dword ptr [rax + 0x78] ; test rax, rax ; je 0x43d0c0 ; jmp rax
0x0000000000421df3 : mov eax, dword ptr [rax + 0xc] ; ret
0x0000000000421d73 : mov eax, dword ptr [rax + 4] ; ret
0x000000000048b43c : mov eax, dword ptr [rax + 8] ; add rax, 8 ; ret
0x0000000000404f91 : mov eax, dword ptr [rax + 8] ; add rsp, 8 ; jmp rax
0x000000000044915d : mov eax, dword ptr [rax + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000489392 : mov eax, dword ptr [rax + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004893e4 : mov eax, dword ptr [rax + 8] ; add rsp, 8 ; ret
0x0000000000437235 : mov eax, dword ptr [rax + 8] ; jmp rax
0x000000000046f9a3 : mov eax, dword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x000000000043ca8b : mov eax, dword ptr [rax + 8] ; mov rcx, qword ptr [rax] ; jmp r8
0x00000000004198f4 : mov eax, dword ptr [rax + 8] ; ret
0x00000000004b72fb : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0x4b7315 ; call rax
0x0000000000405af9 : mov eax, dword ptr [rax + rdx*8 + 0x50] ; add rsp, 8 ; ret
0x0000000000402b59 : mov eax, dword ptr [rax + rdx*8] ; shr rax, cl ; and eax, 1 ; ret
0x000000000043ea67 : mov eax, dword ptr [rax + rsi*4] ; ret
0x000000000041c85a : mov eax, dword ptr [rax + rsi*8] ; ret
0x0000000000404fcb : mov eax, dword ptr [rax] ; add rsp, 8 ; jmp rax
0x000000000048b90f : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000041d85d : mov eax, dword ptr [rax] ; jmp rax
0x0000000000407115 : mov eax, dword ptr [rax] ; mov rsi, r10 ; jmp r9
0x000000000040267b : mov eax, dword ptr [rax] ; ret
0x0000000000421f46 : mov eax, dword ptr [rax] ; sub eax, dword ptr [rdx] ; ret
0x0000000000404fad : mov eax, dword ptr [rax] ; xor edi, edi ; jmp rax
0x0000000000401de2 : mov eax, dword ptr [rbp - 8] ; leave ; ret
0x000000000044a405 : mov eax, dword ptr [rbp] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047b441 : mov eax, dword ptr [rbx + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000486d8d : mov eax, dword ptr [rbx + 0x20] ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; ret
0x000000000043d2e3 : mov eax, dword ptr [rbx + 0x20] ; pop rbx ; ret
0x00000000004ae4b8 : mov eax, dword ptr [rbx + 0x40] ; xor edi, edi ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000047b482 : mov eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048b409 : mov eax, dword ptr [rbx + 8] ; pop rbx ; add rax, 0x18 ; ret
0x000000000048b471 : mov eax, dword ptr [rbx + 8] ; pop rbx ; add rax, 0x20 ; ret
0x000000000048b389 : mov eax, dword ptr [rbx + 8] ; pop rbx ; mov rax, qword ptr [rax + 0x10] ; ret
0x000000000048b37b : mov eax, dword ptr [rbx + 8] ; pop rbx ; mov rax, qword ptr [rax + 0x18] ; ret
0x000000000048b399 : mov eax, dword ptr [rbx + 8] ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; ret
0x000000000048b3a9 : mov eax, dword ptr [rbx + 8] ; pop rbx ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000406833 : mov eax, dword ptr [rbx + 8] ; pop rbx ; ret
0x0000000000437261 : mov eax, dword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000437241 : mov eax, dword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000437251 : mov eax, dword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000437231 : mov eax, dword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000004b7281 : mov eax, dword ptr [rcx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b8d14 : mov eax, dword ptr [rcx + 0x21] ; ret
0x0000000000465821 : mov eax, dword ptr [rcx + 0x78] ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000043d6ec : mov eax, dword ptr [rcx + 4] ; sub eax, dword ptr [rdx + 4] ; ret
0x00000000004498fe : mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x0000000000421f00 : mov eax, dword ptr [rdi + 0x10] ; and eax, esi ; ret
0x0000000000481446 : mov eax, dword ptr [rdi + 0x10] ; jmp rax
0x0000000000437276 : mov eax, dword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x48] ; ret
0x00000000004b7211 : mov eax, dword ptr [rdi + 0x10] ; mov qword ptr [rdi + 0x10], rsi ; ret
0x0000000000486de6 : mov eax, dword ptr [rdi + 0x10] ; mov qword ptr [rsi], rax ; ret
0x0000000000403066 : mov eax, dword ptr [rdi + 0x10] ; mov rdx, rdi ; mov edi, ecx ; jmp rax
0x00000000004198e1 : mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000041e221 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rcx + 0x10] ; ret
0x000000000046a595 : mov eax, dword ptr [rdi + 0x14] ; ret
0x00000000004660f5 : mov eax, dword ptr [rdi + 0x18] ; mov rsi, rbp ; mov rdi, r15 ; call rax
0x0000000000422931 : mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000419890 : mov eax, dword ptr [rdi + 0x20] ; and eax, esi ; ret
0x000000000048c94a : mov eax, dword ptr [rdi + 0x20] ; mov qword ptr [r8], rax ; ret
0x0000000000486dce : mov eax, dword ptr [rdi + 0x20] ; mov qword ptr [rcx], rax ; ret
0x00000000004228e0 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000041a0d0 : mov eax, dword ptr [rdi + 0x24] ; ret
0x0000000000421491 : mov eax, dword ptr [rdi + 0x28] ; jmp rax
0x000000000043cfda : mov eax, dword ptr [rdi + 0x28] ; js 0x43cfd9 ; mov dword ptr [rdi + 0x28], esi ; ret
0x0000000000422911 : mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000044ef90 : mov eax, dword ptr [rdi + 0x2c] ; ret
0x0000000000422951 : mov eax, dword ptr [rdi + 0x30] ; ret
0x00000000004b43d1 : mov eax, dword ptr [rdi + 0x38] ; mov dword ptr [rax + 8], esi ; ret
0x00000000004b43e1 : mov eax, dword ptr [rdi + 0x38] ; mov rax, qword ptr [rax + 0x10] ; ret
0x000000000041a126 : mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000043ea61 : mov eax, dword ptr [rdi + 0x40] ; movsxd rsi, esi ; mov eax, dword ptr [rax + rsi*4] ; ret
0x000000000044a6d1 : mov eax, dword ptr [rdi + 0x40] ; ret
0x000000000044ace0 : mov eax, dword ptr [rdi + 0x44] ; and eax, 0x7fffffff ; ret
0x000000000043ea78 : mov eax, dword ptr [rdi + 0x48] ; ret
0x000000000041a2f6 : mov eax, dword ptr [rdi + 0x50] ; ret
0x000000000041a316 : mov eax, dword ptr [rdi + 0x58] ; ret
0x0000000000421dc1 : mov eax, dword ptr [rdi + 0x60] ; ret
0x0000000000421e40 : mov eax, dword ptr [rdi + 0x64] ; ret
0x0000000000421e10 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000421f30 : mov eax, dword ptr [rdi + 0x70] ; and eax, esi ; ret
0x000000000043a771 : mov eax, dword ptr [rdi + 0x70] ; ret
0x000000000041ffff : mov eax, dword ptr [rdi + 0x70] ; test rax, rax ; je 0x420018 ; call rax
0x0000000000465841 : mov eax, dword ptr [rdi + 0x78] ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000043a781 : mov eax, dword ptr [rdi + 0x78] ; ret
0x000000000043a791 : mov eax, dword ptr [rdi + 0x80] ; ret
0x000000000043a7b1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000043a7a0 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x00000000004b1880 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x00000000004b0e00 : mov eax, dword ptr [rdi + 0xb4] ; ret
0x00000000004b0de0 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x00000000004b0e11 : mov eax, dword ptr [rdi + 0xc0] ; ret
0x00000000004b0e51 : mov eax, dword ptr [rdi + 0xc8] ; ret
0x0000000000421de0 : mov eax, dword ptr [rdi + 0xc] ; ret
0x00000000004b0e61 : mov eax, dword ptr [rdi + 0xd0] ; ret
0x00000000004b0e71 : mov eax, dword ptr [rdi + 0xe0] ; ret
0x000000000044ac2a : mov eax, dword ptr [rdi + 0xe8] ; ret
0x0000000000421d60 : mov eax, dword ptr [rdi + 4] ; ret
0x000000000043d6d6 : mov eax, dword ptr [rdi + 4] ; sub eax, dword ptr [rsi + 4] ; ret
0x000000000041e071 : mov eax, dword ptr [rdi + 8] ; add dword ptr [rax + 0x10], 1 ; ret
0x0000000000490c88 : mov eax, dword ptr [rdi + 8] ; add rax, 0x30 ; ret
0x00000000004b34ff : mov eax, dword ptr [rdi + 8] ; jmp rax
0x0000000000490966 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x20] ; ret
0x000000000048e19e : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x28] ; ret
0x000000000048e1b1 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000004060e1 : mov eax, dword ptr [rdi + 8] ; ret
0x0000000000423640 : mov eax, dword ptr [rdi + 8] ; sub eax, dword ptr [rsi + 8] ; ret
0x000000000040613d : mov eax, dword ptr [rdi*8 + 0x4d1940] ; ret
0x00000000004410bb : mov eax, dword ptr [rdi*8 + 0x4e6c40] ; ret
0x0000000000476661 : mov eax, dword ptr [rdi*8 + 0x51bd60] ; ret
0x00000000004431ad : mov eax, dword ptr [rdi*8 + 0x7569c0] ; ret
0x0000000000423505 : mov eax, dword ptr [rdi] ; je 0x423515 ; ret
0x0000000000421df1 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax + 0xc] ; ret
0x0000000000421d71 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax + 4] ; ret
0x0000000000419901 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x0000000000421d81 : mov eax, dword ptr [rdi] ; mov ecx, ecx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000046a301 : mov eax, dword ptr [rdi] ; mov qword ptr [rdi], rsi ; ret
0x0000000000421db1 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x10] ; ret
0x0000000000478df1 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x18] ; ret
0x0000000000484376 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000478e01 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; ret
0x0000000000484766 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x0000000000484336 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004198f1 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000402678 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax] ; ret
0x0000000000421f41 : mov eax, dword ptr [rdi] ; mov rdx, qword ptr [rsi] ; mov eax, dword ptr [rax] ; sub eax, dword ptr [rdx] ; ret
0x000000000041c835 : mov eax, dword ptr [rdi] ; ret
0x0000000000404491 : mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x00000000004070a1 : mov eax, dword ptr [rdi] ; sub rax, qword ptr [rsi] ; ret
0x000000000041a29d : mov eax, dword ptr [rdx + 0x24] ; mov dword ptr [rdi + 0x24], eax ; ret
0x0000000000421ba4 : mov eax, dword ptr [rdx + 0x38] ; test rax, rax ; je 0x421bb8 ; jmp rax
0x0000000000421ae4 : mov eax, dword ptr [rdx + 0x40] ; test rax, rax ; je 0x421af8 ; jmp rax
0x0000000000465831 : mov eax, dword ptr [rdx + 0x78] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000042214e : mov eax, dword ptr [rdx + 4] ; mov dword ptr [rsi], eax ; ret
0x00000000004713e2 : mov eax, dword ptr [rdx + 8] ; mov qword ptr [rsi], rax ; ret
0x00000000004875c4 : mov eax, dword ptr [rdx + 8] ; pop rbx ; ret
0x0000000000423b17 : mov eax, dword ptr [rdx + rax] ; ret
0x0000000000513518 : mov eax, dword ptr [rdx - 0x2d] ; jge 0x51355b ; ret 0xf356
0x000000000041dfc8 : mov eax, dword ptr [rdx] ; call qword ptr [r10 + 0x10]
0x000000000041dc40 : mov eax, dword ptr [rdx] ; call qword ptr [r10 + 0x18]
0x0000000000423b27 : mov eax, dword ptr [rdx] ; mov dword ptr [rdx], esi ; ret
0x00000000004adef1 : mov eax, dword ptr [rip + 0x2a99d9] ; ret
0x0000000000479d71 : mov eax, dword ptr [rip + 0x2dce71] ; ret
0x000000000046a2e1 : mov eax, dword ptr [rip + 0x2efcd9] ; ret
0x000000000043b8b0 : mov eax, dword ptr [rip + 0x31e622] ; ret
0x00000000004068a1 : mov eax, dword ptr [rip + 0x351419] ; ret
0x0000000000407871 : mov eax, dword ptr [rip + 0x352061] ; ret
0x00000000004060f1 : mov eax, dword ptr [rip + 0x353771] ; ret
0x0000000000406071 : mov eax, dword ptr [rip + 0x3537e9] ; ret
0x0000000000405ff1 : mov eax, dword ptr [rip + 0x353879] ; ret
0x0000000000405fe1 : mov eax, dword ptr [rip + 0x353891] ; ret
0x0000000000405fa1 : mov eax, dword ptr [rip + 0x3538a1] ; ret
0x0000000000405f91 : mov eax, dword ptr [rip + 0x3538b9] ; ret
0x0000000000405f81 : mov eax, dword ptr [rip + 0x3538d1] ; ret
0x0000000000402160 : mov eax, dword ptr [rip + 0x355b6e] ; ret
0x0000000000402150 : mov eax, dword ptr [rip + 0x355b7a] ; ret
0x0000000000402140 : mov eax, dword ptr [rip + 0x355b92] ; ret
0x0000000000451507 : mov eax, dword ptr [rsi + 0x18] ; mov qword ptr [rdi + 0x18], rax ; ret
0x00000000004236d1 : mov eax, dword ptr [rsi + 0x28] ; mov dword ptr [rdi], eax ; pop rbx ; ret
0x000000000043f707 : mov eax, dword ptr [rsi + 0x28] ; mov dword ptr [rdi], eax ; ret
0x0000000000470431 : mov eax, dword ptr [rsi + 0x28] ; mov qword ptr [rdi], rax ; ret
0x00000000004550cf : mov eax, dword ptr [rsi + 0x40] ; add qword ptr [rdi + 0x40], rax ; ret
0x000000000045507f : mov eax, dword ptr [rsi + 0x40] ; mov qword ptr [rdi + 0x40], rax ; ret
0x0000000000423b14 : mov eax, dword ptr [rsi + 8] ; mov eax, dword ptr [rdx + rax] ; ret
0x0000000000449205 : mov eax, dword ptr [rsi + 8] ; mov rsi, rdx ; jmp rax
0x00000000004042b0 : mov eax, dword ptr [rsi + 8] ; test eax, eax ; jne 0x4042c9 ; xor eax, eax ; ret
0x00000000004491f0 : mov eax, dword ptr [rsi] ; cmp dword ptr [rdi], eax ; je 0x449207 ; ret
0x0000000000449210 : mov eax, dword ptr [rsi] ; cmp dword ptr [rdi], eax ; je 0x449227 ; ret
0x000000000043b809 : mov eax, dword ptr [rsi] ; mov rsi, qword ptr [rdi + 8] ; mov edi, dword ptr [rdi] ; jmp rax
0x000000000044012e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000497efc : mov eax, dword ptr [rsp + 0x10] ; mov rdx, rsi ; call rax
0x0000000000440161 : mov eax, dword ptr [rsp + 0x10] ; xor r13d, r13d ; call rax
0x0000000000497889 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004c7243 : mov eax, dword ptr [rsp + 0x18] ; mov rsi, rdi ; call rax
0x0000000000497536 : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000497510 : mov eax, dword ptr [rsp + 0x20] ; mov rdx, rsi ; call rax
0x00000000004974ba : mov eax, dword ptr [rsp + 0x20] ; mov rsi, r15 ; call rax
0x0000000000496b53 : mov eax, dword ptr [rsp + 0x28] ; call rax
0x0000000000496c3e : mov eax, dword ptr [rsp + 0x28] ; mov rcx, rsi ; call rax
0x0000000000496aa7 : mov eax, dword ptr [rsp + 0x28] ; mov rdx, rsi ; call rax
0x00000000004978a8 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000497bb4 : mov eax, dword ptr [rsp + 0x30] ; mov rcx, rsi ; call rax
0x000000000049798b : mov eax, dword ptr [rsp + 0x30] ; mov rdx, rsi ; call rax
0x00000000004a1ec0 : mov eax, dword ptr [rsp + 0x30] ; sub rsi, rbx ; call rax
0x000000000045a2fc : mov eax, dword ptr [rsp + 0x38] ; call rax
0x000000000042275b : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0x00000000004201f7 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040309b : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000043e7e3 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047be43 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000041c79f : mov eax, dword ptr [rsp + 8] ; call rax
0x0000000000461d5d : mov eax, dword ptr [rsp + 8] ; jmp 0x461d2a
0x000000000045a356 : mov eax, dword ptr [rsp + 8] ; mov rdi, rbx ; call rax
0x0000000000445551 : mov eax, dword ptr [rsp] ; jmp 0x445539
0x0000000000407fbe : mov eax, eax ; cdqe ; ret
0x00000000004029f1 : mov eax, eax ; ret
0x000000000040252c : mov eax, ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000042267a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004041d5 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000421302 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000406cf0 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041c369 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a084 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000044e6a7 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000404832 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040763b : mov eax, ebx ; jne 0x407667 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000425819 : mov eax, ebx ; jne 0x42582c ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000425899 : mov eax, ebx ; jne 0x4258ac ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000043d572 : mov eax, ebx ; jne 0x43d58d ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004790c3 : mov eax, ebx ; jne 0x479109 ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048f57f : mov eax, ebx ; jne 0x48f59d ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004ae04c : mov eax, ebx ; jne 0x4ae094 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000042243c : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004020aa : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404331 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040425d : mov eax, ebx ; pop rbx ; ret
0x000000000041895a : mov eax, ebx ; ret
0x000000000047a383 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000402959 : mov eax, ecx ; ret
0x000000000041f3de : mov eax, edi ; jne 0x41f3ec ; ret
0x000000000044422c : mov eax, edi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041977c : mov eax, edi ; pop rbx ; pop rbp ; ret
0x00000000004023e6 : mov eax, edi ; ret
0x00000000004211b9 : mov eax, edx ; add rsp, 8 ; ret
0x00000000004804b4 : mov eax, edx ; and eax, 1 ; ret
0x0000000000480685 : mov eax, edx ; je 0x4806bd ; ret
0x000000000044519e : mov eax, edx ; jne 0x4451fc ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004b5401 : mov eax, edx ; jne 0x4b5444 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000408156 : mov eax, edx ; mov rbx, r8 ; or rax, r9 ; ret
0x000000000044aa47 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000406e68 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000041902e : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004197f6 : mov eax, edx ; pop rbx ; ret
0x000000000040e734 : mov eax, edx ; ret
0x0000000000419451 : mov eax, edx ; sub rax, rdi ; ret
0x00000000004b7551 : mov eax, esi ; mov qword ptr [rdi], rsi ; ret
0x000000000040ff74 : mov eax, esi ; mov rdx, rdi ; div rcx ; ret
0x0000000000406ee8 : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041a021 : mov eax, esi ; ret
0x00000000004fdb69 : mov eax, esi ; xchg eax, edi ; or bl, byte ptr ss:[rcx] ; ret
0x000000000044a80a : mov eax, esp ; mov rdx, qword ptr [rbx + 0x10] ; mov rsi, rdi ; call rax
0x000000000041909c : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004353c9 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040e890 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a815 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004353c8 : mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040e88f : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a814 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421301 : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004212e3 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000407fbd : mov eax, r8d ; cdqe ; ret
0x00000000004029f0 : mov eax, r8d ; ret
0x0000000000402958 : mov eax, r9d ; ret
0x00000000004f7022 : mov ebp, 0x1581ffc3 ; test al, 0xc5 ; ret
0x000000000046b28a : mov ebp, 0x1f0ffff9 ; add bl, dh ; ret
0x000000000050daf5 : mov ebp, 0x213febb9 ; ret 0x8246
0x000000000050d68a : mov ebp, 0x250c8422 ; ret 0xe942
0x000000000054da4b : mov ebp, 0x41380e0a ; ret
0x0000000000528cc5 : mov ebp, 0x80a40000 ; out dx, eax ; jmp rsp
0x00000000004fc4d2 : mov ebp, 0x860fc460 ; sbb al, byte ptr [rcx] ; int 0x80
0x00000000005039a6 : mov ebp, 0x8b193729 ; outsd dx, dword ptr fs:[rsi] ; ret 0xf479
0x000000000044ef5b : mov ebp, 0x9066ffff ; ret
0x00000000004b0597 : mov ebp, 0xa0 ; call 0x41c837
0x00000000004b05ae : mov ebp, 0xa0 ; mov esi, ebp ; call 0x41c849
0x00000000004b05e9 : mov ebp, 0xa0 ; mov esi, ebx ; call 0x41c849
0x0000000000504e9a : mov ebp, 0xb681d2bb ; jae 0x504e69 ; ret
0x0000000000518574 : mov ebp, 0xb93ee2be ; nop ; leave ; ret 0x9a60
0x00000000005001dd : mov ebp, 0xf12d87c8 ; out dx, al ; ret 0x89e3
0x000000000050d6f8 : mov ebp, 0xf3d76a55 ; cmc ; ret
0x00000000004f7ccc : mov ebp, 0xf801df2b ; out dx, eax ; ret
0x000000000044b0de : mov ebp, dword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rcx
0x000000000044b07e : mov ebp, dword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rdx
0x00000000004f0f15 : mov ebp, dword ptr [rdi + 0x77daea00] ; ret 0xdb0c
0x00000000004b949a : mov ebp, dword ptr [rsp + 0x20] ; add rsp, 0x28 ; ret
0x00000000004bfa48 : mov ebp, eax ; ret
0x00000000004a7ea5 : mov ebp, ebx ; call rax
0x0000000000494a86 : mov ebp, edi ; lea ebx, dword ptr [rax + rbp] ; jmp 0x494a98
0x000000000043c226 : mov ebp, edi ; lea rdx, qword ptr [rsp + 0x10] ; call rax
0x00000000004ac524 : mov ebp, edi ; lea rsi, qword ptr [rsi + 0x48] ; call rax
0x000000000044ad1f : mov ebp, edx ; test rdi, rdi ; je 0x44ad44 ; call 0x407009
0x0000000000401cec : mov ebp, esp ; call rax
0x00000000004f5ad6 : mov ebp, gs ; sbb al, 0x70 ; and ah, byte ptr [rsi + rdi*4 - 0x15] ; ret
0x00000000004f0893 : mov ebx, 0x16e9a3 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0xccd8
0x000000000052ed25 : mov ebx, 0x1c340002 ; stc ; jmp rsp
0x00000000004fc63c : mov ebx, 0x1ec0a630 ; ret
0x000000000042be24 : mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x0000000000505a37 : mov ebx, 0x595669f3 ; xor cl, byte ptr [rdi + rbp*8 + 0x6e] ; ret
0x0000000000480971 : mov ebx, 0x83fff9be ; ror byte ptr [rcx], 0x39 ; ret
0x00000000005091c9 : mov ebx, 0x88335561 ; ret
0x00000000005008c4 : mov ebx, 0xa068aa40 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000501e20 : mov ebx, 0xa7e37a9 ; pop rbx ; jno 0x501dd1 ; ret
0x0000000000461b6b : mov ebx, 0xc2835275 ; add dword ptr [rcx], edi ; ret 0xe375
0x0000000000508dda : mov ebx, 0xc59842a ; ret 0xf245
0x0000000000508a83 : mov ebx, 0xd721d871 ; wait ; call rsp
0x00000000005180a5 : mov ebx, 0xde434a8e ; cdq ; fnstsw dword ptr [rsi - 0x35] ; ret 0x5f2d
0x000000000048d18e : mov ebx, 0xe0894c90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004f4d5f : mov ebx, 0xe7d6107e ; sal byte ptr [rax - 0x71], cl ; ret 0x65aa
0x0000000000510289 : mov ebx, 0xeaba3bbf ; adc byte ptr [rcx], bl ; ret
0x000000000050fb55 : mov ebx, 0xf086d1c ; ret
0x00000000004729f9 : mov ebx, 0xf6000002 ; ret
0x00000000004fa1d5 : mov ebx, 0xfa39ef18 ; ret
0x00000000004473a5 : mov ebx, 1 ; call rax
0x0000000000502262 : mov ebx, dr0 ; xchg eax, ebp ; in al, dx ; jae 0x5021fb ; ret
0x0000000000502262 : mov ebx, dr0 ; xchg eax, ebp ; in al, dx ; jae 0x5021fd ; ret
0x0000000000415fa0 : mov ebx, dword ptr [rax - 8] ; lea rsp, qword ptr [rax] ; ret
0x00000000004f6f6b : mov ebx, dword ptr [rcx - 0x68] ; ret 0x978
0x0000000000512a34 : mov ebx, dword ptr [rcx] ; ret 0xa260
0x00000000004f8d27 : mov ebx, dword ptr [rdx + 0x76037b0d] ; ret
0x0000000000492709 : mov ebx, dword ptr [rsi + 0x28] ; lea rsp, qword ptr [rsi + 0x30] ; popfq ; ret
0x0000000000410e26 : mov ebx, dword ptr [rsi + 0x28] ; lea rsp, qword ptr [rsi + 0x30] ; ret
0x000000000041151c : mov ebx, dword ptr [rsi - 8] ; lea rsp, qword ptr [rsi] ; ret
0x0000000000491cc9 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x000000000041bf91 : mov ebx, eax ; call 0x407008
0x00000000004202b4 : mov ebx, eax ; jne 0x4202a5 ; pop rbx ; ret
0x000000000043bda4 : mov ebx, eax ; jne 0x43bd95 ; pop rbx ; ret
0x000000000043bee4 : mov ebx, eax ; jne 0x43bed5 ; pop rbx ; ret
0x000000000043c0d4 : mov ebx, eax ; jne 0x43c0c5 ; pop rbx ; ret
0x000000000043c434 : mov ebx, eax ; jne 0x43c425 ; pop rbx ; ret
0x000000000046ae84 : mov ebx, eax ; jne 0x46ae75 ; pop rbx ; ret
0x000000000046af84 : mov ebx, eax ; jne 0x46af75 ; pop rbx ; ret
0x000000000046b084 : mov ebx, eax ; jne 0x46b075 ; pop rbx ; ret
0x000000000046b184 : mov ebx, eax ; jne 0x46b175 ; pop rbx ; ret
0x00000000004a09a4 : mov ebx, eax ; jne 0x4a0995 ; pop rbx ; ret
0x00000000004454e8 : mov ebx, eax ; jns 0x4454b9 ; xor ebx, ebx ; jmp 0x4454fc
0x0000000000408159 : mov ebx, eax ; or rax, r9 ; ret
0x000000000043a2f2 : mov ebx, edi ; call qword ptr [rdi]
0x000000000043be69 : mov ebx, edi ; mov rdx, rsp ; call rax
0x0000000000517594 : mov ebx, edi ; ret
0x0000000000406099 : mov ebx, edi ; test rax, rax ; je 0x4060b7 ; call rax
0x0000000000406d39 : mov ebx, edi ; test rax, rax ; je 0x406d4d ; xor esi, esi ; call rax
0x0000000000407009 : mov ebx, edi ; test rax, rax ; je 0x40701d ; xor esi, esi ; call rax
0x0000000000420072 : mov ebx, esp ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054db64 : mov ebx, gs ; add dword ptr [rax], eax ; test al, 0x3f ; cmc ; call qword ptr [rsi]
0x0000000000420071 : mov ebx, r12d ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005103d7 : mov ecx, 0x18b06350 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], ebp ; xchg eax, ebx ; call qword ptr [rcx]
0x00000000004f1d35 : mov ecx, 0x215503f7 ; ret 0xfa94
0x00000000004f0b34 : mov ecx, 0x2400e03a ; ret
0x000000000054a8e5 : mov ecx, 0x2e180001 ; hlt ; call qword ptr [rcx]
0x0000000000407df4 : mov ecx, 0x48000000 ; add esp, 0x20 ; pop rbx ; ret
0x000000000045ffe3 : mov ecx, 0x48002f9f ; test eax, eax ; je 0x45fff9 ; ret
0x0000000000446920 : mov ecx, 0x4e7aa0 ; jmp 0x442b97
0x0000000000446980 : mov ecx, 0x4e7c60 ; jmp 0x442b97
0x0000000000446940 : mov ecx, 0x4e7d00 ; jmp 0x442b97
0x0000000000512391 : mov ecx, 0x4f75051 ; jae 0x51239e ; ret 0x1c87
0x00000000005070ec : mov ecx, 0x5c1a0b6c ; enter -0x6f25, -0x2e ; ret
0x00000000005135b3 : mov ecx, 0x6cfb4715 ; ret 0x3118
0x000000000050900a : mov ecx, 0x7df9efdc ; ret 0x666d
0x000000000047fa4a : mov ecx, 0x89440051 ; loop 0x47fa16 ; ret
0x000000000046f4cd : mov ecx, 0x89480051 ; out dx, eax ; call rbx
0x0000000000489ccc : mov ecx, 0x8948fff7 ; fucompi st(0) ; pop rcx ; ret
0x00000000004ab606 : mov ecx, 0x894c0051 ; out -0x18, eax ; jmp rsp
0x000000000047c8dc : mov ecx, 0xa5be0051 ; ret 0x51
0x000000000052ecbd : mov ecx, 0xa840002 ; stc ; jmp rsp
0x0000000000518a6f : mov ecx, 0xb1a8908e ; ret 0xf0ad
0x00000000005154bb : mov ecx, 0xb7df465c ; int 0x80
0x00000000004d1132 : mov ecx, 0xbf3ebd3e ; ret
0x0000000000469cba : mov ecx, 0xc031fff9 ; pop rbx ; ret
0x0000000000510fcc : mov ecx, 0xc505891d ; ret 0x96c1
0x00000000004ec3d8 : mov ecx, 0xcb06bac1 ; ret 0xfea6
0x00000000004ef1af : mov ecx, 0xd3c1034a ; push rsi ; ret 0x2211
0x000000000043aa7b : mov ecx, 0xd889fffc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047536b : mov ecx, 0xf480051 ; ret 0xc5f6
0x000000000044754e : mov ecx, 0xf6fffffe ; ret
0x0000000000512b4e : mov ecx, 0xfd2dd0b5 ; ret 0x6c5d
0x00000000004950fc : mov ecx, 4 ; mov rsi, rbx ; call r14
0x000000000043ca79 : mov ecx, dword ptr [rax] ; jmp r8
0x0000000000490921 : mov ecx, dword ptr [rcx + 0x10] ; mov qword ptr [rdx], rcx ; ret
0x0000000000490a79 : mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000000004f9297 : mov ecx, dword ptr [rip + 0x569ad4d1] ; scasb al, byte ptr [rdi] ; ret 0x2687
0x00000000004c7b6c : mov ecx, dword ptr [rsi + rax] ; and bl, 0xf0 ; mov rdx, r8 ; jmp 0x4c7b88
0x00000000004c77e1 : mov ecx, eax ; jbe 0x4c77f7 ; xor eax, eax ; ret
0x00000000004fad97 : mov ecx, ebp ; jo 0x4fad38 ; xlatb ; stosb byte ptr [rdi], al ; ret
0x000000000046d4f5 : mov ecx, ebp ; mov rdx, r14 ; mov rdi, r12 ; call rax
0x00000000004c74a5 : mov ecx, ebx ; mov qword ptr [rsp + 0x28], r11 ; call rax
0x0000000000496a81 : mov ecx, ebx ; mov rdi, rbp ; mov rdx, rsi ; call r15
0x000000000041ddee : mov ecx, ebx ; mov rsi, r12 ; mov rdi, r14 ; call r10
0x000000000049633e : mov ecx, ebx ; mov rsi, r12 ; mov rdi, r15 ; call rax
0x00000000004965c8 : mov ecx, ebx ; mov rsi, r15 ; mov rdi, rbp ; call rax
0x000000000050a498 : mov ecx, ebx ; ret 0x6d1e
0x0000000000422720 : mov ecx, ecx ; mov edx, r8d ; mov esi, ebp ; call r11
0x0000000000421d83 : mov ecx, ecx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004f0a11 : mov ecx, ecx ; ret 0x8d33
0x00000000004c76b7 : mov ecx, edi ; mov rsi, r13 ; mov rdi, r12 ; call r10
0x000000000040fe9b : mov ecx, edx ; mov rax, r9 ; ret
0x0000000000496c43 : mov ecx, esi ; call rax
0x0000000000406ea6 : mov ecx, esi ; mov edx, ebp ; xor esi, esi ; call rax
0x000000000043d6b6 : mov ecx, esi ; xor edx, edx ; mov esi, 3 ; jmp rax
0x000000000043bf9d : mov ecx, esi ; xor edx, edx ; mov rsi, rsp ; call rax
0x0000000000498517 : mov ecx, esp ; mov rdi, r13 ; mov rdx, rsi ; call rax
0x0000000000497435 : mov ecx, esp ; mov rdi, rbx ; call r15
0x0000000000406cae : mov ecx, esp ; mov rdx, rbp ; mov esi, ebx ; xor edi, edi ; call rax
0x0000000000507427 : mov ecx, esp ; ret
0x000000000052bdb5 : mov edi, 0x12840001 ; cmc ; jmp rsp
0x00000000004f1c54 : mov edi, 0x18008dac ; ret
0x000000000048933d : mov edi, 0x21 ; call 0x405627
0x00000000004622bb : mov edi, 0x38f ; call 0x41e567
0x00000000004b636d : mov edi, 0x39fff664 ; ret
0x00000000004f171d : mov edi, 0x3a9203bc ; jg 0x4f178f ; ret
0x00000000004fa1ac : mov edi, 0x46008965 ; jmp qword ptr [rax]
0x00000000005129d5 : mov edi, 0x494e787a ; push 0x6f ; ret 0x2167
0x00000000004b07b7 : mov edi, 0x4c000000 ; mov edi, ebp ; call rax
0x00000000005151ec : mov edi, 0x7355ac9a ; shr dh, cl ; je 0x515257 ; ret
0x0000000000401c50 : mov edi, 0x757c98 ; jmp rax
0x0000000000517a5c : mov edi, 0x7c44912e ; ret 0x2496
0x000000000040b3bd : mov edi, 0x85ffff72 ; ror byte ptr [rdi], 0x95 ; ret
0x0000000000437854 : mov edi, 0xa03d ; add byte ptr [rax + rcx - 9], dh ; ret 0xfeff
0x000000000050eb29 : mov edi, 0xa997af10 ; call 0x114ffd71
0x000000000050eb28 : mov edi, 0xa997af10 ; call 0x114ffd72
0x0000000000479337 : mov edi, 0xb ; xor ebp, ebp ; call 0x405629
0x0000000000509cc3 : mov edi, 0xba1700f6 ; ret 0xbf6b
0x00000000004755bc : mov edi, 0xc ; mov rdx, r14 ; call rax
0x00000000004b35ef : mov edi, 0xc5048d48 ; loopne 0x4b3677 ; jne 0x4b3601 ; ret
0x0000000000517235 : mov edi, 0xe980d936 ; ret
0x000000000044aad7 : mov edi, 0xf0 ; call 0x406d77
0x0000000000457309 : mov edi, 0xf000000 ; ret 0x173d
0x0000000000511809 : mov edi, 0xf1cec7bf ; adc ebx, ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; ret 0x3c61
0x0000000000404a45 : mov edi, 1 ; call qword ptr [rax]
0x000000000043fa1a : mov edi, 1 ; call r14
0x00000000004093a5 : mov edi, 3 ; call 0x405627
0x00000000004400da : mov edi, 7 ; call rax
0x000000000044937a : mov edi, 8 ; call 0x405627
0x00000000004ab891 : mov edi, 8 ; call r15
0x00000000004abe0b : mov edi, 9 ; call r15
0x000000000053e764 : mov edi, dr0 ; add byte ptr [rax], al ; clc ; sub edx, esi ; call qword ptr [rdi]
0x00000000005032fc : mov edi, dr1 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; pop rdx ; sbb bh, byte ptr es:[rcx - 0x47] ; ret
0x000000000044b0e1 : mov edi, dword ptr [rax + 8] ; call rcx
0x000000000044b081 : mov edi, dword ptr [rax + 8] ; call rdx
0x00000000004497fc : mov edi, dword ptr [rax + rbp] ; add rbp, 8 ; call r12
0x00000000004b0596 : mov edi, dword ptr [rbp + 0xa0] ; call 0x41c838
0x000000000040a15b : mov edi, dword ptr [rbp - 0x70] ; call 0x4149e9
0x00000000004a0534 : mov edi, dword ptr [rbx + 8] ; call 0x41c835
0x00000000004491cd : mov edi, dword ptr [rbx + 8] ; call qword ptr [rax]
0x00000000004a053d : mov edi, dword ptr [rbx + 8] ; lea esi, dword ptr [rax - 1] ; call 0x41c848
0x000000000041c984 : mov edi, dword ptr [rbx] ; call r15
0x0000000000440226 : mov edi, dword ptr [rbx] ; call rax
0x0000000000517c31 : mov edi, dword ptr [rbx] ; push rax ; ret
0x0000000000468b78 : mov edi, dword ptr [rdi + 0x10] ; jmp 0x468b44
0x000000000043ca75 : mov edi, dword ptr [rdi + 0x10] ; mov rcx, qword ptr [rax] ; jmp r8
0x00000000004b5513 : mov edi, dword ptr [rdi + 0x30] ; jmp rax
0x00000000004a6064 : mov edi, dword ptr [rdi] ; call rax
0x000000000043b80f : mov edi, dword ptr [rdi] ; jmp rax
0x00000000004360e2 : mov edi, dword ptr [rsp + 0x10] ; call 0x402306
0x00000000004c66b3 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004b056a : mov edi, dword ptr [rsp + 0x28] ; call 0x41c876
0x000000000045a391 : mov edi, dword ptr [rsp + 0x28] ; mov rax, qword ptr [rsp + 0x38] ; call rax
0x00000000004a2ed3 : mov edi, dword ptr [rsp + 0x30] ; call rax
0x00000000004a985e : mov edi, dword ptr [rsp + 8] ; call r15
0x000000000041e8f5 : mov edi, dword ptr [rsp] ; lea ebp, dword ptr [rbx - 1] ; call r12
0x00000000004a8e13 : mov edi, eax ; add ebp, 1 ; call r12
0x000000000041aa82 : mov edi, eax ; call 0x406d74
0x000000000041e478 : mov edi, eax ; call 0x407009
0x00000000004b4e5c : mov edi, eax ; call qword ptr [rbx]
0x00000000004a8d02 : mov edi, eax ; call r12
0x00000000004b28bc : mov edi, eax ; call r8
0x0000000000403096 : mov edi, eax ; call r9
0x000000000046ecd4 : mov edi, eax ; call rbx
0x00000000004b232b : mov edi, eax ; call rdx
0x000000000045a2ca : mov edi, eax ; mov qword ptr [rsp + 0x20], rax ; call r15
0x00000000004c49a5 : mov edi, eax ; mov qword ptr [rsp + 8], rax ; call r15
0x000000000043e6fe : mov edi, eax ; mov rdx, qword ptr [rax + 0x38] ; jmp rdx
0x0000000000518710 : mov edi, eax ; ret
0x00000000005034e4 : mov edi, eax ; ret 0xfd89
0x00000000004b4e24 : mov edi, eax ; xor esi, esi ; mov qword ptr [rsp + 8], r8 ; call qword ptr [rbx]
0x0000000000474fd9 : mov edi, ebp ; call 0x419fe8
0x000000000047d6e2 : mov edi, ebp ; call 0x41c528
0x000000000047eacb : mov edi, ebp ; call 0x47e868
0x000000000047788d : mov edi, ebp ; call r12
0x00000000004954bf : mov edi, ebp ; call r14
0x00000000004969d3 : mov edi, ebp ; call r15
0x0000000000447407 : mov edi, ebp ; call rax
0x000000000043c648 : mov edi, ebp ; call rbx
0x00000000004960c5 : mov edi, ebp ; call rcx
0x00000000004c6890 : mov edi, ebp ; call rdx
0x00000000004770bd : mov edi, ebp ; je 0x4771f8 ; call rax
0x00000000004473a3 : mov edi, ebp ; mov ebx, 1 ; call rax
0x000000000046f3ff : mov edi, ebp ; mov edx, r12d ; call rbx
0x00000000004aa144 : mov edi, ebp ; mov qword ptr [rsp + 0x18], rax ; call r12
0x0000000000478b70 : mov edi, ebp ; mov qword ptr [rsp], rax ; call rbx
0x0000000000497e77 : mov edi, ebp ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000497ad3 : mov edi, ebp ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000496b50 : mov edi, ebp ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000004978a5 : mov edi, ebp ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000049c6bd : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000495fe7 : mov edi, ebp ; mov rdx, r8 ; mov rsi, r8 ; call rax
0x0000000000496a84 : mov edi, ebp ; mov rdx, rsi ; call r15
0x000000000049851a : mov edi, ebp ; mov rdx, rsi ; call rax
0x00000000004228a5 : mov edi, ebp ; mov rsi, r8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004b0430 : mov edi, ebp ; mov rsi, rax ; call r12
0x00000000004c56ce : mov edi, ebp ; mov rsi, rbp ; call r8
0x0000000000421712 : mov edi, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000046603e : mov edi, ebp ; xor ebp, ebp ; call 0x402296
0x000000000040b9b7 : mov edi, ebx ; call 0x402299
0x000000000040b87f : mov edi, ebx ; call 0x402639
0x0000000000474e76 : mov edi, ebx ; call 0x41c7d9
0x0000000000463342 : mov edi, ebx ; call 0x43f574
0x0000000000406ee1 : mov edi, ebx ; call r10
0x00000000004a9b47 : mov edi, ebx ; call r11
0x0000000000419f61 : mov edi, ebx ; call r12
0x000000000045a2b0 : mov edi, ebx ; call r15
0x0000000000406fbf : mov edi, ebx ; call rax
0x00000000004aafd4 : mov edi, ebx ; call rcx
0x00000000004214da : mov edi, ebx ; call rdx
0x00000000004975d5 : mov edi, ebx ; mov r10, qword ptr [rsp + 0x20] ; call r10
0x0000000000497533 : mov edi, ebx ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000045a2f9 : mov edi, ebx ; mov rax, qword ptr [rsp + 0x38] ; call rax
0x000000000045a1e5 : mov edi, ebx ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a7ea2 : mov edi, ebx ; mov rbp, rbx ; call rax
0x00000000004c73ab : mov edi, ebx ; mov rdx, qword ptr [rsp + 8] ; call r15
0x00000000004b7335 : mov edi, ebx ; mov rsi, rax ; call r12
0x000000000046c701 : mov edi, ebx ; pop rbx ; jmp r9
0x000000000043d03d : mov edi, ebx ; pop rbx ; jmp rax
0x000000000046d0e6 : mov edi, ebx ; pop rbx ; jmp rcx
0x000000000041d244 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000419ca2 : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000047c7f7 : mov edi, ebx ; xor ebp, ebp ; call rax
0x000000000045a277 : mov edi, ecx ; call r15
0x000000000040306c : mov edi, ecx ; jmp rax
0x000000000045a29d : mov edi, ecx ; mov qword ptr [rsp + 0x30], rcx ; call r15
0x000000000044fda4 : mov edi, edi ; call 0x41bff4
0x00000000004b054b : mov edi, edi ; call 0x41c7d4
0x00000000004cf1a7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004c677e : mov edi, edi ; call r14
0x00000000004660fc : mov edi, edi ; call rax
0x0000000000447a0f : mov edi, edi ; lea esi, dword ptr [rbx + 1] ; call r14
0x00000000004c727b : mov edi, edi ; mov qword ptr [rsp + 8], rsi ; call rax
0x00000000004c71e4 : mov edi, edi ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004c7194 : mov edi, edi ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000004a3c13 : mov edi, edx ; call rax
0x00000000004b6840 : mov edi, edx ; call rcx
0x00000000004961da : mov edi, edx ; mov qword ptr [rsp + 8], rcx ; call 0x402409
0x00000000004c4aa8 : mov edi, esi ; add r14, 0x10 ; call r15
0x000000000048562f : mov edi, esi ; call 0x401854
0x000000000041ddf4 : mov edi, esi ; call r10
0x000000000041e47c : mov edi, esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000043d011 : mov edi, esi ; mov qword ptr [rsp + 8], rsi ; call rdx
0x000000000041e4c1 : mov edi, esp ; call 0x407009
0x00000000004c76bd : mov edi, esp ; call r10
0x000000000043f9a1 : mov edi, esp ; call rax
0x000000000047d535 : mov edi, esp ; inc dword ptr [rbp - 0x41c38b40] ; salc ; ret 0x51
0x00000000004a9f88 : mov edi, esp ; mov qword ptr [rsp + 0x10], rax ; call r15
0x00000000004c4a26 : mov edi, esp ; mov rsi, rbp ; call r15
0x00000000004cf1a6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000403095 : mov edi, r8d ; call r9
0x00000000004805d0 : mov edx, 0 ; cmove eax, edx ; ret
0x0000000000423513 : mov edx, 0 ; cmovne eax, edx ; ret
0x000000000052ecf5 : mov edx, 0x16940002 ; stc ; jmp rsp
0x00000000004feab5 : mov edx, 0x1bf8d7e5 ; adc al, 0x90 ; ret
0x00000000004f4ddf : mov edx, 0x1f9af32a ; pop rbx ; ret 0xdfca
0x0000000000499e2b : mov edx, 0x2ab ; mov eax, edx ; pop rbx ; ret
0x000000000050ea8e : mov edx, 0x31be70df ; ret
0x00000000004f89dc : mov edx, 0x33a03907 ; mov dword ptr [rcx], esp ; jmp rcx
0x0000000000512a2f : mov edx, 0x4631a3c4 ; mov ebx, dword ptr [rcx] ; ret 0xa260
0x0000000000469c72 : mov edx, 0x48fffb3c ; mov eax, ebx ; pop rbx ; ret
0x000000000043a862 : mov edx, 0x48fffcbb ; mov eax, ebx ; pop rbx ; ret
0x00000000004442d0 : mov edx, 0x4e7760 ; jmp 0x440587
0x0000000000444290 : mov edx, 0x4e7840 ; jmp 0x440587
0x0000000000528c6d : mov edx, 0x72f40000 ; out dx, eax ; call rsp
0x00000000004b0a52 : mov edx, 0x85fffc15 ; ror byte ptr [rdi], 0x8e ; ret 2
0x0000000000512474 : mov edx, 0x8ba3091f ; jo 0x512491 ; ret 0xfd78
0x0000000000489ba4 : mov edx, 0xc031fff7 ; pop rbx ; ret
0x00000000004ecf97 : mov edx, 0xc2ac05eb ; jmp qword ptr gs:[rbx]
0x00000000004b8b9b : mov edx, 0xc42c798 ; jbe 0x4b8bff ; xor dl, byte ptr [rax] ; ret
0x0000000000517bf0 : mov edx, 0xecf3612c ; mov dl, byte ptr [rbp - 1] ; sahf ; ret
0x00000000004f7dcf : mov edx, 0xf38bf760 ; ret
0x0000000000419850 : mov edx, 1 ; mov eax, edx ; pop rbx ; ret
0x000000000044660b : mov edx, 4 ; test eax, eax ; cmovne eax, edx ; jmp 0x4465cb
0x000000000054ea64 : mov edx, dr1 ; add dword ptr [rax], eax ; pop rax ; jo 0x54ea67 ; call qword ptr [rsi]
0x00000000005013ce : mov edx, ds ; insd dword ptr [rdi], dx ; and ebp, 0xffffffb9 ; ret 0xae59
0x000000000041a0c2 : mov edx, dword ptr [rax + 0x24] ; mov dword ptr [rsi], edx ; ret
0x000000000043e701 : mov edx, dword ptr [rax + 0x38] ; jmp rdx
0x000000000047160a : mov edx, dword ptr [rax] ; mov dword ptr [rsi], edx ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000479d58 : mov edx, dword ptr [rax] ; test edx, edx ; jne 0x479d58 ; xor eax, eax ; ret
0x000000000044a80d : mov edx, dword ptr [rbx + 0x10] ; mov rsi, rdi ; call rax
0x000000000048c5a6 : mov edx, dword ptr [rdi + 8] ; mov qword ptr [rsi], rdx ; ret
0x0000000000423b11 : mov edx, dword ptr [rdi] ; mov rax, qword ptr [rsi + 8] ; mov eax, dword ptr [rdx + rax] ; ret
0x0000000000490a10 : mov edx, dword ptr [rdx + 8] ; mov qword ptr [r9], rdx ; ret
0x00000000004c7865 : mov edx, dword ptr [rdx + rax - 4] ; mov dword ptr [rsi + rax - 4], edx ; ret
0x000000000043d441 : mov edx, dword ptr [rdx] ; add dword ptr [rax], eax ; mov rax, qword ptr [rbx + 0x20] ; pop rbx ; ret
0x0000000000421f44 : mov edx, dword ptr [rsi] ; mov eax, dword ptr [rax] ; sub eax, dword ptr [rdx] ; ret
0x00000000004975d8 : mov edx, dword ptr [rsp + 0x20] ; call r10
0x000000000044c7c8 : mov edx, dword ptr [rsp + 0x2c] ; and edx, ebx ; jmp 0x44c79a
0x00000000004c6e29 : mov edx, dword ptr [rsp + 8] ; call r12
0x0000000000447a43 : mov edx, dword ptr [rsp + 8] ; call r14
0x00000000004c73ae : mov edx, dword ptr [rsp + 8] ; call r15
0x0000000000419f71 : mov edx, dword ptr [rsp + 8] ; call rax
0x000000000046a24a : mov edx, dword ptr [rsp + 8] ; mov rdi, r13 ; call rax
0x00000000004c779b : mov edx, dword ptr [rsp + 8] ; mov rsi, rdi ; call r11
0x00000000004c767f : mov edx, eax ; call r11
0x0000000000496a26 : mov edx, eax ; call r15
0x00000000004804ee : mov edx, eax ; je 0x4804fe ; mov eax, edx ; ret
0x0000000000419868 : mov edx, eax ; jmp 0x4197f7
0x000000000041de2f : mov edx, eax ; jmp 0x41ddfe
0x000000000043b7a6 : mov edx, eax ; jmp 0x43b779
0x00000000004b5437 : mov edx, eax ; jmp 0x4b53f4
0x00000000004c1dd0 : mov edx, eax ; jmp 0x4c1de1
0x00000000004c7b73 : mov edx, eax ; jmp 0x4c7b81
0x0000000000422723 : mov edx, eax ; mov esi, ebp ; call r11
0x0000000000497886 : mov edx, eax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000046f5cb : mov edx, eax ; mov rdi, rbp ; call rbx
0x0000000000495fea : mov edx, eax ; mov rsi, r8 ; call rax
0x0000000000495f9c : mov edx, eax ; mov rsi, r8 ; mov rdi, rbp ; call rax
0x000000000043eb5d : mov edx, eax ; neg edx ; test ebx, ebx ; cmovne eax, edx ; pop rbx ; ret
0x0000000000406e64 : mov edx, eax ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000041ca02 : mov edx, eax ; shr rdx, 0x10 ; xor rax, rdx ; ret
0x0000000000494122 : mov edx, ebp ; call r12
0x00000000004c61e5 : mov edx, ebp ; call rax
0x0000000000406ce1 : mov edx, ebp ; mov esi, ebx ; mov rdi, rax ; call r9
0x0000000000406cb1 : mov edx, ebp ; mov esi, ebx ; xor edi, edi ; call rax
0x00000000004c6efa : mov edx, ebp ; mov rdi, rbx ; call r12
0x000000000047c82f : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000497104 : mov edx, ebp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000406fb9 : mov edx, ebp ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000406edb : mov edx, ebp ; mov rsi, rax ; mov rdi, rbx ; call r10
0x00000000004c48ea : mov edx, ebp ; mov rsi, rbx ; mov rdi, rbx ; call r12
0x00000000004c6eee : mov edx, ebp ; mov rsi, rdi ; call r12
0x00000000004aafce : mov edx, ebp ; mov rsi, rsp ; mov rdi, rbx ; call rcx
0x000000000040d848 : mov edx, ebp ; pop rbx ; pop rbp ; jmp rax
0x0000000000406ea8 : mov edx, ebp ; xor esi, esi ; call rax
0x00000000004b542c : mov edx, ebx ; jmp 0x4b53f6
0x000000000043f9e5 : mov edx, ebx ; mov rsi, r12 ; call r14
0x000000000045a271 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rcx ; call r15
0x00000000004960bf : mov edx, ebx ; mov rsi, r14 ; mov rdi, rbp ; call rcx
0x00000000004ab7f1 : mov edx, ebx ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x00000000004133ee : mov edx, ecx ; neg r9 ; ret
0x000000000040ff77 : mov edx, edi ; div rcx ; ret
0x00000000004c5e86 : mov edx, edi ; lea rdi, qword ptr [r15 + 0x40] ; call rax
0x000000000040306a : mov edx, edi ; mov edi, ecx ; jmp rax
0x000000000040fda9 : mov edx, edx ; mov rax, r10 ; ret
0x0000000000496a87 : mov edx, esi ; call r15
0x00000000004755c2 : mov edx, esi ; call rax
0x00000000004b28b6 : mov edx, esi ; mov esi, r12d ; mov rdi, rax ; call r8
0x000000000046d4f8 : mov edx, esi ; mov rdi, r12 ; call rax
0x00000000004c56cb : mov edx, esi ; mov rdi, rbp ; mov rsi, rbp ; call r8
0x00000000004a9b41 : mov edx, esi ; mov rsi, r13 ; mov rdi, rbx ; call r11
0x000000000049607a : mov edx, esi ; mov rsi, r14 ; mov rdi, rbp ; call rax
0x00000000004ab9ae : mov edx, esi ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000043be6c : mov edx, esp ; call rax
0x000000000046f402 : mov edx, esp ; call rbx
0x000000000046333f : mov edx, esp ; mov rdi, rbx ; call 0x43f577
0x00000000004b4fad : mov edx, esp ; mov rdi, rbx ; call rax
0x0000000000498443 : mov edx, esp ; mov rsi, qword ptr [rbx] ; mov rdi, r13 ; call rax
0x00000000004724cf : mov edx, esp ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000004b4b43 : mov edx, esp ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000046f401 : mov edx, r12d ; call rbx
0x000000000046333e : mov edx, r12d ; mov rdi, rbx ; call 0x43f578
0x000000000046333d : mov edx, r12d ; mov rdi, rbx ; call 0x43f579
0x00000000004b4b42 : mov edx, r12d ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004aafcd : mov edx, r13d ; mov rsi, rsp ; mov rdi, rbx ; call rcx
0x00000000004ab9ad : mov edx, r14d ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x0000000000422722 : mov edx, r8d ; mov esi, ebp ; call r11
0x000000000050aa6a : mov edx, ss ; sub al, ch ; test dword ptr [rsi], edi ; wait ; ret
0x0000000000500ffd : mov es, word ptr [rbp - 0x5f] ; push rsi ; ret 0xe039
0x0000000000500ffc : mov es, word ptr es:[rbp - 0x5f] ; push rsi ; ret 0xe039
0x000000000052bd75 : mov esi, 0x10640001 ; cmc ; jmp rsp
0x000000000051584f : mov esi, 0x18d3b1d4 ; ret 0x32c0
0x000000000040a57e : mov esi, 0x1ffff85 ; ret
0x0000000000516993 : mov esi, 0x23a4270 ; xor al, 0x5c ; ret
0x00000000004faac6 : mov esi, 0x291d2136 ; clc ; ret 0x6dc0
0x0000000000484d72 : mov esi, 0x30e883c6 ; ret
0x00000000004858cf : mov esi, 0x39410141 ; ret 0x8941
0x00000000004f0b31 : mov esi, 0x3ab9f738 ; loopne 0x4f0b41 ; and al, 0x4f ; ret
0x000000000047a69b : mov esi, 0x401f0f ; xor eax, eax ; ret
0x000000000041aa7d : mov esi, 0x4d1f0d ; mov edi, eax ; call 0x406d79
0x000000000054ae1d : mov esi, 0x4e500001 ; hlt ; jmp qword ptr [rdx]
0x000000000046ebd8 : mov esi, 0x51a3c5 ; mov rdi, rbp ; call rbx
0x000000000046ecce : mov esi, 0x51a3c6 ; mov rdi, r8 ; call rbx
0x000000000046f4cb : mov esi, 0x51b902 ; mov rdi, rbp ; call rbx
0x000000000046f276 : mov esi, 0x51e935 ; mov rdi, rbp ; call rbx
0x0000000000501a46 : mov esi, 0x525d329b ; ret
0x00000000004fd2fe : mov esi, 0x76a27f2 ; ret
0x0000000000528cfd : mov esi, 0x83440000 ; out dx, eax ; jmp rsp
0x0000000000419df1 : mov esi, 0x86 ; jmp rax
0x0000000000419f5b : mov esi, 0x86 ; mov rdi, rbx ; call r12
0x0000000000518575 : mov esi, 0x90b93ee2 ; leave ; ret 0x9a60
0x00000000005020a5 : mov esi, 0x9302bb07 ; ret 0x6718
0x00000000004fdb93 : mov esi, 0x958c3ca8 ; ret 0x45da
0x000000000045390a : mov esi, 0x9c001c0 ; ret 0xc031
0x00000000005107ea : mov esi, 0xa47ecd67 ; ret
0x0000000000511a3b : mov esi, 0xa56d9dcf ; ret 0xcec9
0x000000000050a9e1 : mov esi, 0xaf884912 ; ret
0x000000000047d45d : mov esi, 0xb9000001 ; lodsd eax, dword ptr [rsi] ; ret 0x51
0x0000000000517b76 : mov esi, 0xb93ab8cd ; ret
0x000000000043093b : mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004897cb : mov esi, 0xc031fff7 ; pop rbx ; ret
0x0000000000480972 : mov esi, 0xc083fff9 ; or dword ptr [rcx], edi ; ret
0x0000000000484f02 : mov esi, 0xc18349c6 ; add dword ptr [rcx + 0x39], eax ; ret 0x2b74
0x000000000052ed85 : mov esi, 0xcfb40002 ; stc ; jmp rsp
0x000000000050a13b : mov esi, 0xe82aa265 ; ret 0x3128
0x0000000000464a44 : mov esi, 0xe8fffff7 ; ret
0x00000000004fcda7 : mov esi, 0xf48c0012 ; ret
0x000000000050379c : mov esi, 0xf4e0c504 ; ret 0x77fc
0x00000000004ec851 : mov esi, 0xf920751d ; ret 0x5ca4
0x000000000046a5cd : mov esi, 1 ; call 0x406847
0x0000000000486b32 : mov esi, 1 ; mov rdi, r12 ; call rax
0x0000000000419816 : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000406d5a : mov esi, 1 ; xor edi, edi ; jmp rax
0x0000000000475474 : mov esi, 2 ; call rax
0x0000000000486f01 : mov esi, 2 ; mov rdi, r12 ; call rax
0x000000000046ce91 : mov esi, 2 ; mov rdi, rbx ; call rax
0x000000000043d6ba : mov esi, 3 ; jmp rax
0x000000000048c353 : mov esi, 5 ; call rax
0x0000000000419f31 : mov esi, 6 ; call r12
0x00000000004a7db7 : mov esi, 6 ; call rax
0x00000000004a7e0a : mov esi, 6 ; jmp rax
0x000000000048e09d : mov esi, 7 ; call rax
0x000000000048f563 : mov esi, 8 ; call rax
0x000000000048e333 : mov esi, 8 ; mov rdi, rbp ; call rax
0x000000000046c528 : mov esi, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000512478 : mov esi, dword ptr [rax + 0xf] ; ret 0xfd78
0x0000000000498446 : mov esi, dword ptr [rbx] ; mov rdi, r13 ; call rax
0x000000000041e259 : mov esi, dword ptr [rcx] ; test rsi, rsi ; jne 0x41e252 ; ret
0x0000000000468b74 : mov esi, dword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x10] ; jmp 0x468b48
0x000000000043b80c : mov esi, dword ptr [rdi + 8] ; mov edi, dword ptr [rdi] ; jmp rax
0x000000000043e7ba : mov esi, dword ptr [rsi] ; test rsi, rsi ; je 0x43e7f7 ; call rax
0x000000000043e94a : mov esi, dword ptr [rsi] ; test rsi, rsi ; je 0x43e987 ; call rdx
0x00000000004c6e39 : mov esi, dword ptr [rsp + 0x10] ; call r12
0x00000000004cc1d0 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rax
0x00000000004969ce : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r15
0x0000000000497e58 : mov esi, dword ptr [rsp + 0x18] ; mov rdi, rbp ; call r15
0x0000000000496749 : mov esi, dword ptr [rsp + 0x18] ; mov rdi, rbp ; call rax
0x000000000049748d : mov esi, dword ptr [rsp + 0x18] ; mov rdi, rbx ; call r15
0x00000000004a2ece : mov esi, dword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x00000000004c7197 : mov esi, dword ptr [rsp + 8] ; call rax
0x00000000004b3ea4 : mov esi, dword ptr [rsp + 8] ; jmp 0x4b3e72
0x00000000004c70d5 : mov esi, dword ptr [rsp + 8] ; mov rdi, r15 ; call r14
0x0000000000496bdf : mov esi, dword ptr [rsp + 8] ; mov rdi, rbp ; call r15
0x00000000004986f2 : mov esi, dword ptr [rsp + 8] ; mov rdi, rbp ; call rax
0x000000000044021f : mov esi, dword ptr [rsp] ; mov rsi, r12 ; mov rdi, qword ptr [rbx] ; call rax
0x00000000004b0433 : mov esi, eax ; call r12
0x0000000000495fed : mov esi, eax ; call rax
0x00000000004c73c3 : mov esi, eax ; mov qword ptr [rsp + 0x10], r8 ; call r15
0x00000000004c7753 : mov esi, eax ; mov qword ptr [rsp + 0x20], r8 ; call r11
0x0000000000495f9f : mov esi, eax ; mov rdi, rbp ; call rax
0x0000000000406ede : mov esi, eax ; mov rdi, rbx ; call r10
0x00000000004c7624 : mov esi, eax ; mov rdi, rbx ; call r11
0x00000000004c7414 : mov esi, eax ; mov rdi, rbx ; call r15
0x00000000004228a8 : mov esi, eax ; pop rbx ; pop rbp ; jmp rax
0x00000000004b05b3 : mov esi, ebp ; call 0x41c844
0x0000000000422725 : mov esi, ebp ; call r11
0x00000000004c4a29 : mov esi, ebp ; call r15
0x00000000004c56d1 : mov esi, ebp ; call r8
0x000000000046abe7 : mov esi, ebp ; call rax
0x00000000004ab88f : mov esi, ebp ; mov edi, 8 ; call r15
0x00000000004abe09 : mov esi, ebp ; mov edi, 9 ; call r15
0x00000000004b028f : mov esi, ebp ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004c76ba : mov esi, ebp ; mov rdi, r12 ; call r10
0x0000000000497107 : mov esi, ebp ; mov rdi, r12 ; call rax
0x00000000004660f9 : mov esi, ebp ; mov rdi, r15 ; call rax
0x00000000004a9b44 : mov esi, ebp ; mov rdi, rbx ; call r11
0x0000000000406fbc : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000041d241 : mov esi, ebp ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004b4faa : mov esi, ebp ; mov rdx, r12 ; mov rdi, rbx ; call rax
0x00000000004b3587 : mov esi, ebp ; pop rbp ; pop r12 ; mov rax, qword ptr [rdi + 8] ; jmp rax
0x00000000004b05ee : mov esi, ebx ; call 0x41c844
0x0000000000495102 : mov esi, ebx ; call r14
0x000000000046d1f3 : mov esi, ebx ; call rax
0x00000000004aebfb : mov esi, ebx ; mov edi, 1 ; call r14
0x00000000004400d8 : mov esi, ebx ; mov edi, 7 ; call rax
0x00000000004afe95 : mov esi, ebx ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000043f99e : mov esi, ebx ; mov rdi, r12 ; call rax
0x0000000000406ce3 : mov esi, ebx ; mov rdi, rax ; call r9
0x00000000004954bc : mov esi, ebx ; mov rdi, rbp ; call r14
0x000000000046fafc : mov esi, ebx ; mov rdi, rbp ; call rax
0x000000000042170f : mov esi, ebx ; mov rdi, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004c48ed : mov esi, ebx ; mov rdi, rbx ; call r12
0x000000000045a2ad : mov esi, ebx ; mov rdi, rbx ; call r15
0x00000000004c61e2 : mov esi, ebx ; mov rdx, r13 ; call rax
0x00000000004f7dd2 : mov esi, ebx ; ret
0x0000000000406cb3 : mov esi, ebx ; xor edi, edi ; call rax
0x000000000045a347 : mov esi, ecx ; mov qword ptr [rsp + 0x20], rcx ; call r15
0x00000000004c77a0 : mov esi, edi ; call r11
0x000000000041e874 : mov esi, edi ; call r12
0x00000000004b00e5 : mov esi, edi ; call r14
0x000000000044a811 : mov esi, edi ; call rax
0x000000000052da01 : mov esi, edi ; jmp rsp
0x00000000004965cb : mov esi, edi ; mov rdi, rbp ; call rax
0x00000000004c6f47 : mov esi, edi ; mov rdi, rbx ; call r12
0x00000000004c6e26 : mov esi, edi ; mov rdx, qword ptr [rsp + 8] ; call r12
0x00000000004c6ef7 : mov esi, edi ; mov rdx, rbp ; mov rdi, rbx ; call r12
0x0000000000407118 : mov esi, edx ; jmp r9
0x0000000000449209 : mov esi, edx ; jmp rax
0x00000000004aa348 : mov esi, esi ; lea rdi, qword ptr [rsp + 0x10] ; call rax
0x000000000041c981 : mov esi, esi ; mov rdi, qword ptr [rbx] ; call r15
0x000000000049607d : mov esi, esi ; mov rdi, rbp ; call rax
0x00000000004960c2 : mov esi, esi ; mov rdi, rbp ; call rcx
0x000000000043f9e8 : mov esi, esp ; call r14
0x0000000000496baf : mov esi, esp ; call r15
0x000000000043bfa2 : mov esi, esp ; call rax
0x000000000043fa18 : mov esi, esp ; mov edi, 1 ; call r14
0x0000000000440223 : mov esi, esp ; mov rdi, qword ptr [rbx] ; call rax
0x000000000041ddf1 : mov esi, esp ; mov rdi, r14 ; call r10
0x00000000004c677b : mov esi, esp ; mov rdi, r15 ; call r14
0x0000000000496341 : mov esi, esp ; mov rdi, r15 ; call rax
0x00000000004b28b9 : mov esi, esp ; mov rdi, rax ; call r8
0x0000000000478b6d : mov esi, esp ; mov rdi, rbp ; mov qword ptr [rsp], rax ; call rbx
0x000000000047c73e : mov esi, esp ; mov rdi, rbx ; call rax
0x00000000004aafd1 : mov esi, esp ; mov rdi, rbx ; call rcx
0x00000000004a7e9f : mov esi, esp ; mov rdi, rbx ; mov rbp, rbx ; call rax
0x000000000047c7f4 : mov esi, esp ; mov rdi, rbx ; xor ebp, ebp ; call rax
0x000000000045a274 : mov esi, esp ; mov rdi, rcx ; call r15
0x00000000004b683d : mov esi, esp ; mov rdi, rdx ; call rcx
0x00000000004b28b8 : mov esi, r12d ; mov rdi, rax ; call r8
0x000000000045b5de : mov esp, 0x12024 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000005296fc : mov esp, 0x140000f1 ; sub cl, dh ; call rsp
0x000000000052dd24 : mov esp, 0x1400026a ; fcomi st(7) ; jmp rsp
0x0000000000457553 : mov esp, 0x14024 ; add al, ch ; ret 0xfff5
0x0000000000500e97 : mov esp, 0x19c4d016 ; ret 0x5d95
0x0000000000517223 : mov esp, 0x1baf6060 ; ret 0x7888
0x0000000000457aad : mov esp, 0x1e024 ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000527fdc : mov esp, 0x24000072 ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; call rsp
0x000000000052875c : mov esp, 0x2400009f ; xchg esi, ebp ; call rsp
0x000000000052d034 : mov esp, 0x2400021b ; sub esi, esi ; call rsp
0x000000000045825d : mov esp, 0x32024 ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x000000000052bb7c : mov esp, 0x340001b0 ; ret
0x000000000052c4ac : mov esp, 0x340001e1 ; cmc ; call rsp
0x0000000000550c94 : mov esp, 0x3800021c ; loop 0x550c97 ; jmp qword ptr [rbx]
0x000000000047e970 : mov esp, 0x39fff9de ; ret
0x0000000000528dc4 : mov esp, 0x40000c2 ; cdq ; out dx, eax ; call rsp
0x000000000052ab04 : mov esp, 0x4000156 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call rsp
0x000000000052d8ec : mov esp, 0x4000251 ; jg 0x52d8f1 ; call rsp
0x00000000005298ec : mov esp, 0x440000fa ; int1 ; call rsp
0x0000000000529d2c : mov esp, 0x44000112 ; lodsd eax, dword ptr [rsi] ; int1 ; call rsp
0x0000000000529e2c : mov esp, 0x44000115 ; scasd eax, dword ptr [rdi] ; int1 ; call rsp
0x0000000000529f2c : mov esp, 0x44000118 ; mov cl, 0xf1 ; call rsp
0x000000000052d874 : mov esp, 0x4400024e ; jbe 0x52d879 ; call rsp
0x000000000052ec94 : mov esp, 0x440002b8 ; add al, 0xf9 ; call rsp
0x000000000051bd71 : mov esp, 0x51 ; add byte ptr [rax], al ; ret
0x000000000052a854 : mov esp, 0x54000146 ; jmp rsp
0x000000000052a5ac : mov esp, 0x64000139 ; sbb esi, edx ; jmp rsp
0x000000000052c7fc : mov esp, 0x640001f2 ; wait ; cmc ; call rsp
0x000000000054ea94 : mov esp, 0x680001fa ; jo 0x54ea97 ; call qword ptr [rsi]
0x000000000052d5bc : mov esp, 0x7400023c ; or al, 0xf7 ; call rsp
0x000000000052dd74 : mov esp, 0x7400026b ; fdivr st(7), st(0) ; call rsp
0x00000000004f171e : mov esp, 0x7f3a9203 ; ret
0x0000000000416ffd : mov esp, 0x8024 ; add bl, dh ; ret
0x0000000000529bf4 : mov esp, 0x84000109 ; jbe 0x529bf3 ; call rsp
0x000000000052b8fc : mov esp, 0x840001a3 ; xchg eax, esp ; hlt ; call rsp
0x000000000052bffc : mov esp, 0x840001ca ; sub al, 0xf5 ; call rsp
0x000000000052ce9c : mov esp, 0x84000216 ; and al, 0xf6 ; call rsp
0x000000000044f928 : mov esp, 0x85480004 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000052c1ac : mov esp, 0x940001d2 ; cmp ebp, esi ; call rsp
0x000000000052e6e4 : mov esp, 0x9400029d ; mov dh, 0xf8 ; call rsp
0x000000000050940c : mov esp, 0x97c6237f ; ret 0x27ba
0x000000000052a094 : mov esp, 0xa400011e ; ret
0x000000000052b3ec : mov esp, 0xa4000187 ; xor esp, esi ; call rsp
0x000000000052bcf4 : mov esp, 0xa40001bc ; or al, 0xf5 ; call rsp
0x00000000005027b7 : mov esp, 0xa7c1baa ; ret
0x0000000000528344 : mov esp, 0xb4000083 ; loope 0x52833f ; call rsp
0x0000000000528f2c : mov esp, 0xb40000c7 ; lahf ; out dx, eax ; call rsp
0x000000000052a0bc : mov esp, 0xb400011f ; leave ; int1 ; call rsp
0x000000000052c6c4 : mov esp, 0xb40001ec ; xchg ch, dh ; call rsp
0x000000000052e454 : mov esp, 0xb4000290 ; nop ; clc ; call rsp
0x0000000000458b69 : mov esp, 0xbe24 ; add byte ptr [rax + 9], cl ; ret 0x69e8
0x000000000052733d : mov esp, 0xc1c1bfbf ; ret 0xc4c2
0x0000000000529834 : mov esp, 0xc40000f7 ; int1 ; call rsp
0x000000000052bcf5 : mov esp, 0xca40001 ; cmc ; call rsp
0x000000000052a484 : mov esp, 0xd4000133 ; or dh, dl ; call rsp
0x000000000052b0fc : mov esp, 0xd400017a ; cld ; call rsp
0x000000000052b9f4 : mov esp, 0xd40001a7 ; lahf ; hlt ; call rsp
0x0000000000545194 : mov esp, 0xd8000161 ; call qword ptr [rax]
0x00000000005289f4 : mov esp, 0xe40000ad ; out dx, eax ; call rsp
0x000000000052c594 : mov esp, 0xe40001e6 ; jne 0x52c597 ; call rsp
0x000000000052cafc : mov esp, 0xe4000203 ; loopne 0x52caff ; call rsp
0x000000000052cbfc : mov esp, 0xe4000206 ; loop 0x52cbff ; call rsp
0x000000000052d93c : mov esp, 0xe4000252 ; jg 0x52d941 ; call rsp
0x000000000052e40c : mov esp, 0xe400028f ; mov dr1, eax ; call rsp
0x000000000052eb24 : mov esp, 0xe40002b3 ; idiv al ; call rsp
0x0000000000545694 : mov esp, 0xe8000166 ; call qword ptr [rax]
0x00000000004feaeb : mov esp, 0xf2f1e862 ; ret
0x000000000050e98d : mov esp, 0xffe87f6a ; ret
0x00000000004a2a2d : mov esp, 0xffffffff ; jmp 0x4a29fc
0x00000000004fcdaa : mov esp, dr0 ; ret
0x0000000000450ae3 : mov esp, dr1 ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000004217a9 : mov esp, dword ptr [rbp + 0x18] ; call 0x421ee9
0x00000000004ef8f1 : mov esp, dword ptr [rcx + 0x27] ; ret 0x54c
0x00000000005039aa : mov esp, dword ptr [rdx + rax*2 + 0x6f] ; ret 0xf479
0x000000000050b1ac : mov fs, word ptr [rdx] ; xchg eax, esi ; ret
0x000000000050ee5f : mov gs, esi ; pop rdx ; pop rbx ; ja 0x50ee39 ; jno 0x50eedf ; call qword ptr [rax]
0x000000000050f481 : mov gs, word ptr [rdx - 0x52] ; ret 0xe408
0x00000000004434da : mov qword ptr [r8], rax ; mov eax, 1 ; ret
0x0000000000406c68 : mov qword ptr [r8], rax ; ret
0x0000000000490bb0 : mov qword ptr [r9], 0 ; ret
0x000000000048e9f6 : mov qword ptr [r9], rax ; mov eax, 1 ; ret
0x0000000000490a13 : mov qword ptr [r9], rdx ; ret
0x000000000042450d : mov qword ptr [rax + 0x10], 0 ; pop rbx ; ret
0x000000000048ea6d : mov qword ptr [rax + 0x28], rdx ; mov eax, 1 ; ret
0x000000000048e68a : mov qword ptr [rax + 0x28], rsi ; mov eax, 1 ; ret
0x000000000041c889 : mov qword ptr [rax + rsi*8], rdx ; mov rax, rdx ; ret
0x000000000047176c : mov qword ptr [rax], 0 ; pop rbx ; ret
0x00000000004c7133 : mov qword ptr [rbp - 8], rax ; xor qword ptr [r15 + 0x18], rax ; call r14
0x000000000043cde1 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x00000000004060a9 : mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x00000000004c486a : mov qword ptr [rbx + 8], rdx ; mov rdx, rbp ; call r12
0x00000000004236a0 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x00000000004060b5 : mov qword ptr [rbx], rax ; mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x0000000000478ccb : mov qword ptr [rbx], rdx ; jmp 0x478c97
0x000000000041c4a3 : mov qword ptr [rcx + rdx], r8 ; jne 0x41c499 ; mov dword ptr [rdi], r10d ; ret
0x00000000004702be : mov qword ptr [rcx], rax ; mov eax, 1 ; ret
0x0000000000486dd1 : mov qword ptr [rcx], rax ; ret
0x0000000000401ff3 : mov qword ptr [rcx], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040235f : mov qword ptr [rdi + 0x10], 0 ; ret
0x000000000043ea3a : mov qword ptr [rdi + 0x10], 0x43e6f0 ; ret
0x000000000045ce17 : mov qword ptr [rdi + 0x10], r14 ; mov qword ptr [rdi + 0x18], r15 ; ret
0x000000000045cbe3 : mov qword ptr [rdi + 0x10], r8 ; mov qword ptr [rdi + 0x18], r9 ; ret
0x0000000000451c83 : mov qword ptr [rdi + 0x10], rax ; mov qword ptr [rdi + 0x18], r11 ; pop rbx ; ret
0x000000000046aef0 : mov qword ptr [rdi + 0x10], rsi ; mov eax, 1 ; ret
0x00000000004198d0 : mov qword ptr [rdi + 0x10], rsi ; ret
0x00000000004b7615 : mov qword ptr [rdi + 0x10], rsi ; xor eax, eax ; ret
0x00000000004514e7 : mov qword ptr [rdi + 0x18], 0 ; ret
0x000000000045c622 : mov qword ptr [rdi + 0x18], r11 ; pop r13 ; pop r12 ; ret
0x0000000000451c87 : mov qword ptr [rdi + 0x18], r11 ; pop rbx ; ret
0x000000000045ce1b : mov qword ptr [rdi + 0x18], r15 ; ret
0x000000000045cbe7 : mov qword ptr [rdi + 0x18], r9 ; ret
0x00000000004b3df1 : mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000045150a : mov qword ptr [rdi + 0x18], rax ; ret
0x00000000004b557c : mov qword ptr [rdi + 0x18], rcx ; mov dword ptr [rdi], r9d ; ret
0x000000000045a460 : mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000046aff0 : mov qword ptr [rdi + 0x18], rsi ; mov eax, 1 ; ret
0x000000000041c2d0 : mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000004b7635 : mov qword ptr [rdi + 0x18], rsi ; xor eax, eax ; ret
0x000000000040ff57 : mov qword ptr [rdi + 0x20], rax ; mov qword ptr [rdi + 0x28], rdx ; ret
0x000000000046b0f0 : mov qword ptr [rdi + 0x20], rsi ; mov eax, 1 ; ret
0x0000000000422990 : mov qword ptr [rdi + 0x20], rsi ; mov qword ptr [rdi + 0x28], rdx ; ret
0x0000000000447790 : mov qword ptr [rdi + 0x20], rsi ; ret
0x00000000004b7655 : mov qword ptr [rdi + 0x20], rsi ; xor eax, eax ; ret
0x000000000040ff5b : mov qword ptr [rdi + 0x28], rdx ; ret
0x000000000046a811 : mov qword ptr [rdi + 0x28], rsi ; mov eax, 1 ; ret
0x0000000000422900 : mov qword ptr [rdi + 0x28], rsi ; ret
0x00000000004b7675 : mov qword ptr [rdi + 0x28], rsi ; xor eax, eax ; ret
0x00000000004a0ff3 : mov qword ptr [rdi + 0x30], 0 ; ret
0x0000000000410663 : mov qword ptr [rdi + 0x30], r10 ; mov qword ptr [rdi + 0x38], r11 ; ret
0x0000000000416c65 : mov qword ptr [rdi + 0x30], r14 ; mov qword ptr [rdi + 0x38], r15 ; ret
0x0000000000410bad : mov qword ptr [rdi + 0x30], rcx ; mov qword ptr [rdi + 0x38], r10 ; ret
0x00000000004c6a6b : mov qword ptr [rdi + 0x30], rcx ; or edx, eax ; mov byte ptr [rdi], dl ; ret
0x000000000043be10 : mov qword ptr [rdi + 0x30], rsi ; mov eax, 1 ; ret
0x00000000004229a0 : mov qword ptr [rdi + 0x30], rsi ; mov qword ptr [rdi + 0x38], rdx ; ret
0x0000000000422940 : mov qword ptr [rdi + 0x30], rsi ; ret
0x00000000004b7695 : mov qword ptr [rdi + 0x30], rsi ; xor eax, eax ; ret
0x0000000000410bb1 : mov qword ptr [rdi + 0x38], r10 ; ret
0x0000000000410667 : mov qword ptr [rdi + 0x38], r11 ; ret
0x0000000000416c69 : mov qword ptr [rdi + 0x38], r15 ; ret
0x000000000042594f : mov qword ptr [rdi + 0x38], rax ; mov eax, 1 ; ret
0x0000000000455143 : mov qword ptr [rdi + 0x38], rax ; ret
0x00000000004229a4 : mov qword ptr [rdi + 0x38], rdx ; ret
0x0000000000420320 : mov qword ptr [rdi + 0x38], rsi ; mov eax, 1 ; ret
0x000000000043ea10 : mov qword ptr [rdi + 0x38], rsi ; ret
0x000000000045502f : mov qword ptr [rdi + 0x40], 0 ; ret
0x0000000000455082 : mov qword ptr [rdi + 0x40], rax ; ret
0x00000000004228f0 : mov qword ptr [rdi + 0x40], rsi ; mov dword ptr [rdi + 0x48], edx ; ret
0x000000000045513f : mov qword ptr [rdi + 0x40], rsi ; mov qword ptr [rdi + 0x38], rax ; ret
0x00000000004229b0 : mov qword ptr [rdi + 0x40], rsi ; mov qword ptr [rdi + 0x48], rdx ; ret
0x000000000044a6e0 : mov qword ptr [rdi + 0x40], rsi ; ret
0x00000000004b10a4 : mov qword ptr [rdi + 0x48], 0x4ae320 ; ret
0x0000000000443874 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x50], rcx ; ret
0x00000000004229b4 : mov qword ptr [rdi + 0x48], rdx ; ret
0x00000000004a0ac0 : mov qword ptr [rdi + 0x48], rsi ; mov eax, 1 ; ret
0x0000000000443878 : mov qword ptr [rdi + 0x50], rcx ; ret
0x000000000043c000 : mov qword ptr [rdi + 0x50], rsi ; mov eax, 1 ; ret
0x00000000004229c0 : mov qword ptr [rdi + 0x50], rsi ; mov qword ptr [rdi + 0x58], rdx ; ret
0x0000000000443865 : mov qword ptr [rdi + 0x58], r9 ; mov qword ptr [rdi + 0x60], rax ; ret
0x00000000004229c4 : mov qword ptr [rdi + 0x58], rdx ; ret
0x000000000043c1f0 : mov qword ptr [rdi + 0x58], rsi ; mov eax, 1 ; ret
0x00000000004517e5 : mov qword ptr [rdi + 0x60], rax ; mov qword ptr [rdi + 0x68], rdx ; ret
0x0000000000443869 : mov qword ptr [rdi + 0x60], rax ; ret
0x000000000043c550 : mov qword ptr [rdi + 0x60], rsi ; mov eax, 1 ; ret
0x00000000004229d0 : mov qword ptr [rdi + 0x60], rsi ; mov qword ptr [rdi + 0x68], rdx ; ret
0x0000000000421dd0 : mov qword ptr [rdi + 0x60], rsi ; ret
0x0000000000451673 : mov qword ptr [rdi + 0x68], rdx ; pop r14 ; ret
0x00000000004229d4 : mov qword ptr [rdi + 0x68], rdx ; ret
0x000000000043a6e0 : mov qword ptr [rdi + 0x68], rsi ; mov eax, 1 ; ret
0x00000000004b3290 : mov qword ptr [rdi + 0x68], rsi ; ret
0x00000000004104fb : mov qword ptr [rdi + 0x70], r10 ; mov qword ptr [rdi + 0x78], r11 ; ret
0x0000000000410a85 : mov qword ptr [rdi + 0x70], rcx ; mov qword ptr [rdi + 0x78], r10 ; ret
0x000000000043a6f0 : mov qword ptr [rdi + 0x70], rsi ; mov eax, 1 ; ret
0x00000000004229e0 : mov qword ptr [rdi + 0x70], rsi ; mov qword ptr [rdi + 0x78], rdx ; ret
0x0000000000472140 : mov qword ptr [rdi + 0x70], rsi ; ret
0x0000000000410a89 : mov qword ptr [rdi + 0x78], r10 ; ret
0x00000000004104ff : mov qword ptr [rdi + 0x78], r11 ; ret
0x0000000000418955 : mov qword ptr [rdi + 0x78], rax ; mov rax, r11 ; ret
0x00000000004229e4 : mov qword ptr [rdi + 0x78], rdx ; ret
0x000000000043a700 : mov qword ptr [rdi + 0x78], rsi ; mov eax, 1 ; ret
0x00000000004229f7 : mov qword ptr [rdi + 0x88], rdx ; ret
0x000000000044389f : mov qword ptr [rdi + 0x90], rax ; ret
0x0000000000422a07 : mov qword ptr [rdi + 0x98], rdx ; ret
0x00000000004438b0 : mov qword ptr [rdi + 0xa0], rsi ; ret
0x0000000000422a17 : mov qword ptr [rdi + 0xa8], rdx ; ret
0x00000000004438c0 : mov qword ptr [rdi + 0xa8], rsi ; ret
0x0000000000418ba3 : mov qword ptr [rdi + 0xb8], r8 ; ret
0x0000000000422a27 : mov qword ptr [rdi + 0xb8], rdx ; ret
0x0000000000443827 : mov qword ptr [rdi + 0xc0], rax ; ret
0x00000000004438d7 : mov qword ptr [rdi + 0xc0], rsi ; ret
0x000000000042225d : mov qword ptr [rdi + 0xc8], rax ; ret
0x0000000000422a37 : mov qword ptr [rdi + 0xc8], rdx ; ret
0x00000000004060da : mov qword ptr [rdi + 8], rdx ; ret
0x000000000043a6a5 : mov qword ptr [rdi + 8], rsi ; mov eax, 1 ; ret
0x00000000004b3e50 : mov qword ptr [rdi + 8], rsi ; or qword ptr [rdi + 0x18], 2 ; ret
0x0000000000406037 : mov qword ptr [rdi + 8], rsi ; ret
0x00000000004b75f5 : mov qword ptr [rdi + 8], rsi ; xor eax, eax ; ret
0x00000000004c7833 : mov qword ptr [rdi + r8], r9 ; jb 0x4c782e ; ret
0x000000000043f6f5 : mov qword ptr [rdi], 0 ; ret
0x0000000000470424 : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x000000000042420e : mov qword ptr [rdi], rax ; mov eax, 2 ; ret
0x00000000004060d7 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000424133 : mov qword ptr [rdi], rax ; ret
0x0000000000423ea8 : mov qword ptr [rdi], rdx ; mov eax, 1 ; ret
0x0000000000423f04 : mov qword ptr [rdi], rdx ; ret
0x000000000043a665 : mov qword ptr [rdi], rsi ; mov eax, 1 ; ret
0x000000000046b340 : mov qword ptr [rdi], rsi ; mov eax, esi ; ret
0x0000000000406040 : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000004380d0 : mov qword ptr [rdi], rsi ; ret
0x000000000044922e : mov qword ptr [rdx + rax*8], rdi ; ret
0x0000000000446bb4 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000406b4c : mov qword ptr [rdx], rax ; ret
0x0000000000490924 : mov qword ptr [rdx], rcx ; ret
0x00000000004b7500 : mov qword ptr [rip + 0x2a2bf1], rdi ; ret
0x00000000004b34b7 : mov qword ptr [rip + 0x2a4562], rdi ; ret
0x00000000004adee0 : mov qword ptr [rip + 0x2a99e9], rdi ; ret
0x0000000000479d80 : mov qword ptr [rip + 0x2dce61], rdi ; ret
0x00000000004720bc : mov qword ptr [rip + 0x2e4add], rdi ; ret
0x000000000046a2d0 : mov qword ptr [rip + 0x2efce9], rdi ; ret
0x0000000000469d20 : mov qword ptr [rip + 0x2f0291], rdi ; ret
0x0000000000467c20 : mov qword ptr [rip + 0x2f2389], rdi ; ret
0x0000000000464f90 : mov qword ptr [rip + 0x2f5011], rdi ; ret
0x000000000045ffd0 : mov qword ptr [rip + 0x2f9fc9], rdi ; ret
0x0000000000437d70 : mov qword ptr [rip + 0x322139], rdi ; ret
0x000000000041d122 : mov qword ptr [rip + 0x33c7df], rbx ; pop rbx ; ret
0x0000000000406a8b : mov qword ptr [rip + 0x34fd36], rsi ; ret
0x0000000000406a4b : mov qword ptr [rip + 0x34fd5e], rsi ; ret
0x0000000000406a01 : mov qword ptr [rip + 0x34fda8], rdx ; ret
0x0000000000407860 : mov qword ptr [rip + 0x352071], rdi ; ret
0x0000000000406100 : mov qword ptr [rip + 0x353761], rdi ; ret
0x0000000000406020 : mov qword ptr [rip + 0x353849], rdi ; ret
0x0000000000406009 : mov qword ptr [rip + 0x353868], rbx ; pop rbx ; ret
0x0000000000405fd0 : mov qword ptr [rip + 0x353871], rdi ; ret
0x0000000000405fc0 : mov qword ptr [rip + 0x353889], rdi ; ret
0x0000000000405fb0 : mov qword ptr [rip + 0x3538a1], rdi ; ret
0x0000000000406bdc : mov qword ptr [rsi], rax ; ret
0x000000000048c5a9 : mov qword ptr [rsi], rdx ; ret
0x0000000000402e63 : mov qword ptr [rsi], rdx ; xor qword ptr [rax], rdi ; ret
0x00000000004c73c5 : mov qword ptr [rsp + 0x10], r8 ; call r15
0x00000000004a9f8a : mov qword ptr [rsp + 0x10], rax ; call r15
0x00000000004c6724 : mov qword ptr [rsp + 0x10], rax ; lea rdi, qword ptr [rdi + 0x40] ; call rax
0x000000000046dcc4 : mov qword ptr [rsp + 0x10], rbx ; call r12
0x000000000046e1b7 : mov qword ptr [rsp + 0x10], rdx ; movsxd rdx, eax ; call rbx
0x00000000004c6763 : mov qword ptr [rsp + 0x10], rsi ; lea rsi, qword ptr [rbx + 0x60] ; call rax
0x00000000004aa146 : mov qword ptr [rsp + 0x18], rax ; call r12
0x0000000000462674 : mov qword ptr [rsp + 0x18], rax ; xor eax, eax ; call 0x41e969
0x00000000004a9f5d : mov qword ptr [rsp + 0x18], rax ; xor eax, eax ; call r15
0x00000000004c7755 : mov qword ptr [rsp + 0x20], r8 ; call r11
0x000000000045a2cc : mov qword ptr [rsp + 0x20], rax ; call r15
0x0000000000497dba : mov qword ptr [rsp + 0x20], rax ; mov rdx, rax ; call r15
0x000000000045a349 : mov qword ptr [rsp + 0x20], rcx ; call r15
0x00000000004c74a7 : mov qword ptr [rsp + 0x28], r11 ; call rax
0x00000000004a98bc : mov qword ptr [rsp + 0x28], r12 ; call r15
0x000000000049411c : mov qword ptr [rsp + 0x28], rdx ; mov rdx, rbp ; call r12
0x000000000045a29f : mov qword ptr [rsp + 0x30], rcx ; call r15
0x0000000000496a20 : mov qword ptr [rsp + 0x38], rax ; mov rdx, rax ; call r15
0x00000000004942da : mov qword ptr [rsp + 0x38], rdx ; mov rdx, rbp ; call r12
0x0000000000416ffb : mov qword ptr [rsp + 0x80], r15 ; ret
0x000000000044c324 : mov qword ptr [rsp + 8], r10 ; jmp rax
0x00000000004b4e28 : mov qword ptr [rsp + 8], r8 ; call qword ptr [rbx]
0x000000000045a16e : mov qword ptr [rsp + 8], r9 ; call r9
0x00000000004c49a7 : mov qword ptr [rsp + 8], rax ; call r15
0x00000000004961dc : mov qword ptr [rsp + 8], rcx ; call 0x402407
0x00000000004c727d : mov qword ptr [rsp + 8], rsi ; call rax
0x000000000043d013 : mov qword ptr [rsp + 8], rsi ; call rdx
0x0000000000478b72 : mov qword ptr [rsp], rax ; call rbx
0x00000000004c68d8 : mov qword ptr [rsp], rdx ; mov rdi, r13 ; call rdx
0x00000000004975d7 : mov r10, qword ptr [rsp + 0x20] ; call r10
0x00000000004133ed : mov r10, r9 ; neg r9 ; ret
0x00000000004c1dcf : mov r10, rax ; jmp 0x4c1de2
0x000000000040fda8 : mov r10, rdx ; mov rax, r10 ; ret
0x0000000000512a33 : mov r11d, dword ptr [rcx] ; ret 0xa260
0x00000000004a2a2c : mov r12d, 0xffffffff ; jmp 0x4a29fd
0x0000000000494a85 : mov r13, r15 ; lea ebx, dword ptr [rax + rbp] ; jmp 0x494a99
0x0000000000511101 : mov r13b, 0x8f ; pop rdi ; xchg eax, edi ; xchg esp, edi ; shr edx, cl ; ret
0x00000000004c61e1 : mov r14d, ebx ; mov rdx, r13 ; call rax
0x00000000004b0569 : mov r15, qword ptr [rsp + 0x28] ; call 0x41c877
0x000000000041dfc7 : mov r8, qword ptr [r10] ; call qword ptr [r10 + 0x10]
0x000000000041dc3f : mov r8, qword ptr [r10] ; call qword ptr [r10 + 0x18]
0x000000000043ca8a : mov r8, qword ptr [rax + 8] ; mov rcx, qword ptr [rax] ; jmp r8
0x0000000000407114 : mov r8, qword ptr [rax] ; mov rsi, r10 ; jmp r9
0x00000000004f846a : mov r8b, 0x34 ; stc ; ret 0x1ede
0x00000000004b8d13 : mov r8d, dword ptr [rcx + 0x21] ; ret
0x00000000004c7b6b : mov r9, qword ptr [rsi + rax] ; and bl, 0xf0 ; mov rdx, r8 ; jmp 0x4c7b89
0x00000000004c74a4 : mov r9, r11 ; mov qword ptr [rsp + 0x28], r11 ; call rax
0x000000000040fe9a : mov r9, rdx ; mov rax, r9 ; ret
0x000000000043f37c : mov rax, -1 ; ret
0x000000000041d922 : mov rax, qword ptr [rax + 0x10] ; add rsp, 0x38 ; jmp rax
0x00000000004849ce : mov rax, qword ptr [rax + 0x10] ; add rsp, 8 ; ret
0x000000000041d8cc : mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000421db3 : mov rax, qword ptr [rax + 0x10] ; ret
0x000000000041d1de : mov rax, qword ptr [rax + 0x10] ; test rax, rax ; je 0x41d1f2 ; call rax
0x000000000044b2ac : mov rax, qword ptr [rax + 0x10] ; test rax, rax ; je 0x44b2c0 ; call rax
0x00000000004b2372 : mov rax, qword ptr [rax + 0x10] ; test rax, rax ; je 0x4b2386 ; call rax
0x000000000041d974 : mov rax, qword ptr [rax + 0x18] ; add rsp, 0x28 ; jmp rax
0x000000000041d93c : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000478df3 : mov rax, qword ptr [rax + 0x18] ; ret
0x0000000000422311 : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x422325 ; call rax
0x000000000042374e : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x423769 ; jmp rax
0x000000000043f750 : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x43f739 ; jmp rax
0x000000000046a621 : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x46a671 ; call rax
0x00000000004b23a9 : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x4b23c1 ; jmp rax
0x000000000041d9c4 : mov rax, qword ptr [rax + 0x20] ; add rsp, 0x28 ; jmp rax
0x000000000041d98c : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000486d91 : mov rax, qword ptr [rax + 0x20] ; ret
0x000000000043f6de : mov rax, qword ptr [rax + 0x20] ; test rax, rax ; je 0x43f6fe ; jmp rax
0x000000000046a6c1 : mov rax, qword ptr [rax + 0x20] ; test rax, rax ; je 0x46a711 ; call rax
0x0000000000472014 : mov rax, qword ptr [rax + 0x20] ; test rax, rax ; je 0x472029 ; jmp rax
0x00000000004b23d9 : mov rax, qword ptr [rax + 0x20] ; test rax, rax ; je 0x4b23f1 ; jmp rax
0x000000000041da0c : mov rax, qword ptr [rax + 0x28] ; add rsp, 0x28 ; jmp rax
0x000000000040500a : mov rax, qword ptr [rax + 0x28] ; add rsp, 8 ; jmp rax
0x000000000048c60e : mov rax, qword ptr [rax + 0x28] ; add rsp, 8 ; ret
0x0000000000484378 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000478e03 : mov rax, qword ptr [rax + 0x28] ; ret
0x00000000004410ef : mov rax, qword ptr [rax + 0x28] ; test rax, rax ; je 0x441119 ; call rax
0x000000000044adb3 : mov rax, qword ptr [rax + 0x28] ; test rax, rax ; je 0x44adc9 ; jmp rax
0x000000000044ae33 : mov rax, qword ptr [rax + 0x28] ; test rax, rax ; je 0x44ae49 ; jmp rax
0x0000000000467c73 : mov rax, qword ptr [rax + 0x28] ; test rax, rax ; je 0x467c87 ; call rax
0x000000000046bd8c : mov rax, qword ptr [rax + 0x28] ; test rax, rax ; je 0x46bda4 ; call rax
0x00000000004b2409 : mov rax, qword ptr [rax + 0x28] ; test rax, rax ; je 0x4b2421 ; jmp rax
0x0000000000404fec : mov rax, qword ptr [rax + 0x28] ; xor edi, edi ; jmp rax
0x000000000040504a : mov rax, qword ptr [rax + 0x30] ; add rsp, 0x18 ; jmp rax
0x0000000000484768 : mov rax, qword ptr [rax + 0x30] ; jmp rax
0x0000000000479278 : mov rax, qword ptr [rax + 0x30] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000048e1b4 : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000043fd03 : mov rax, qword ptr [rax + 0x30] ; test rax, rax ; je 0x43fd39 ; call rax
0x000000000044adf3 : mov rax, qword ptr [rax + 0x30] ; test rax, rax ; je 0x44ae09 ; jmp rax
0x000000000044ae73 : mov rax, qword ptr [rax + 0x30] ; test rax, rax ; je 0x44ae89 ; jmp rax
0x00000000004b70d3 : mov rax, qword ptr [rax + 0x30] ; test rax, rax ; je 0x4b7109 ; call rax
0x000000000043d619 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x43d631 ; jmp rax
0x000000000044aeb3 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x44aec9 ; jmp rax
0x0000000000464fe0 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x464ff4 ; call rax
0x00000000004b2469 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x4b2481 ; jmp rax
0x000000000044aef3 : mov rax, qword ptr [rax + 0x40] ; test rax, rax ; je 0x44af09 ; jmp rax
0x0000000000460030 : mov rax, qword ptr [rax + 0x40] ; test rax, rax ; je 0x460044 ; call rax
0x0000000000467407 : mov rax, qword ptr [rax + 0x40] ; test rax, rax ; je 0x467421 ; jmp rax
0x00000000004b2489 : mov rax, qword ptr [rax + 0x40] ; test rax, rax ; je 0x4b24a1 ; jmp rax
0x0000000000484338 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000046be6c : mov rax, qword ptr [rax + 0x48] ; test rax, rax ; je 0x46beb9 ; call rax
0x00000000004b24a9 : mov rax, qword ptr [rax + 0x48] ; test rax, rax ; je 0x4b24c1 ; jmp rax
0x000000000044e314 : mov rax, qword ptr [rax + 0x4eb7e0] ; ret
0x0000000000405b38 : mov rax, qword ptr [rax + 0x50] ; add rsp, 8 ; jmp rax
0x0000000000405b1c : mov rax, qword ptr [rax + 0x50] ; jmp rax
0x000000000043d649 : mov rax, qword ptr [rax + 0x50] ; test rax, rax ; je 0x43d661 ; jmp rax
0x000000000044b27c : mov rax, qword ptr [rax + 0x50] ; test rax, rax ; je 0x44b290 ; call rax
0x00000000004355b5 : mov rax, qword ptr [rax + 0x58] ; test rax, rax ; je 0x4355f1 ; call rax
0x000000000043cf9e : mov rax, qword ptr [rax + 0x58] ; test rax, rax ; je 0x43cfb9 ; jmp rax
0x0000000000464e13 : mov rax, qword ptr [rax + 0x58] ; test rax, rax ; je 0x464e49 ; call rax
0x000000000043cf6e : mov rax, qword ptr [rax + 0x60] ; test rax, rax ; je 0x43cf89 ; jmp rax
0x000000000045f99f : mov rax, qword ptr [rax + 0x68] ; test rax, rax ; je 0x45f9d9 ; call rax
0x000000000043d0a9 : mov rax, qword ptr [rax + 0x78] ; test rax, rax ; je 0x43d0c1 ; jmp rax
0x000000000048b43b : mov rax, qword ptr [rax + 8] ; add rax, 8 ; ret
0x0000000000404f90 : mov rax, qword ptr [rax + 8] ; add rsp, 8 ; jmp rax
0x00000000004893e3 : mov rax, qword ptr [rax + 8] ; add rsp, 8 ; ret
0x0000000000437234 : mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000046f9a2 : mov rax, qword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x00000000004198f3 : mov rax, qword ptr [rax + 8] ; ret
0x00000000004b72fa : mov rax, qword ptr [rax + 8] ; test rax, rax ; je 0x4b7316 ; call rax
0x0000000000405af8 : mov rax, qword ptr [rax + rdx*8 + 0x50] ; add rsp, 8 ; ret
0x000000000041c859 : mov rax, qword ptr [rax + rsi*8] ; ret
0x0000000000404fca : mov rax, qword ptr [rax] ; add rsp, 8 ; jmp rax
0x000000000048b90e : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000041d85c : mov rax, qword ptr [rax] ; jmp rax
0x000000000040267a : mov rax, qword ptr [rax] ; ret
0x0000000000404fac : mov rax, qword ptr [rax] ; xor edi, edi ; jmp rax
0x0000000000401de1 : mov rax, qword ptr [rbp - 8] ; leave ; ret
0x0000000000486d8c : mov rax, qword ptr [rbx + 0x20] ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; ret
0x000000000043d2e2 : mov rax, qword ptr [rbx + 0x20] ; pop rbx ; ret
0x000000000048b408 : mov rax, qword ptr [rbx + 8] ; pop rbx ; add rax, 0x18 ; ret
0x000000000048b470 : mov rax, qword ptr [rbx + 8] ; pop rbx ; add rax, 0x20 ; ret
0x000000000048b388 : mov rax, qword ptr [rbx + 8] ; pop rbx ; mov rax, qword ptr [rax + 0x10] ; ret
0x000000000048b37a : mov rax, qword ptr [rbx + 8] ; pop rbx ; mov rax, qword ptr [rax + 0x18] ; ret
0x000000000048b398 : mov rax, qword ptr [rbx + 8] ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; ret
0x000000000048b3a8 : mov rax, qword ptr [rbx + 8] ; pop rbx ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000406832 : mov rax, qword ptr [rbx + 8] ; pop rbx ; ret
0x0000000000437260 : mov rax, qword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000437240 : mov rax, qword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000437250 : mov rax, qword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000437230 : mov rax, qword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000465820 : mov rax, qword ptr [rcx + 0x78] ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000481445 : mov rax, qword ptr [rdi + 0x10] ; jmp rax
0x0000000000437275 : mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x48] ; ret
0x00000000004b7210 : mov rax, qword ptr [rdi + 0x10] ; mov qword ptr [rdi + 0x10], rsi ; ret
0x0000000000486de5 : mov rax, qword ptr [rdi + 0x10] ; mov qword ptr [rsi], rax ; ret
0x0000000000403065 : mov rax, qword ptr [rdi + 0x10] ; mov rdx, rdi ; mov edi, ecx ; jmp rax
0x00000000004198e0 : mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000422930 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000048c949 : mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [r8], rax ; ret
0x0000000000486dcd : mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [rcx], rax ; ret
0x000000000043d260 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000421490 : mov rax, qword ptr [rdi + 0x28] ; jmp rax
0x0000000000422910 : mov rax, qword ptr [rdi + 0x28] ; ret
0x0000000000422950 : mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000004b43d0 : mov rax, qword ptr [rdi + 0x38] ; mov dword ptr [rax + 8], esi ; ret
0x00000000004b43e0 : mov rax, qword ptr [rdi + 0x38] ; mov rax, qword ptr [rax + 0x10] ; ret
0x000000000041a125 : mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000044a6d0 : mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000004a0ab0 : mov rax, qword ptr [rdi + 0x48] ; ret
0x000000000041a2f5 : mov rax, qword ptr [rdi + 0x50] ; ret
0x000000000041a315 : mov rax, qword ptr [rdi + 0x58] ; ret
0x0000000000421dc0 : mov rax, qword ptr [rdi + 0x60] ; ret
0x000000000043a760 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000043a770 : mov rax, qword ptr [rdi + 0x70] ; ret
0x000000000041fffe : mov rax, qword ptr [rdi + 0x70] ; test rax, rax ; je 0x420019 ; call rax
0x0000000000465840 : mov rax, qword ptr [rdi + 0x78] ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000043a780 : mov rax, qword ptr [rdi + 0x78] ; ret
0x000000000043a790 : mov rax, qword ptr [rdi + 0x80] ; ret
0x000000000043a7b0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x00000000004b1870 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x00000000004b0e10 : mov rax, qword ptr [rdi + 0xc0] ; ret
0x00000000004b0e50 : mov rax, qword ptr [rdi + 0xc8] ; ret
0x00000000004b0e60 : mov rax, qword ptr [rdi + 0xd0] ; ret
0x00000000004b0e70 : mov rax, qword ptr [rdi + 0xe0] ; ret
0x000000000044ac29 : mov rax, qword ptr [rdi + 0xe8] ; ret
0x000000000041e070 : mov rax, qword ptr [rdi + 8] ; add dword ptr [rax + 0x10], 1 ; ret
0x0000000000490c87 : mov rax, qword ptr [rdi + 8] ; add rax, 0x30 ; ret
0x00000000004b34fe : mov rax, qword ptr [rdi + 8] ; jmp rax
0x0000000000490965 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x20] ; ret
0x000000000048e19d : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x28] ; ret
0x000000000048e1b0 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000004060e0 : mov rax, qword ptr [rdi + 8] ; ret
0x000000000040613c : mov rax, qword ptr [rdi*8 + 0x4d1940] ; ret
0x00000000004410ba : mov rax, qword ptr [rdi*8 + 0x4e6c40] ; ret
0x0000000000476660 : mov rax, qword ptr [rdi*8 + 0x51bd60] ; ret
0x00000000004431ac : mov rax, qword ptr [rdi*8 + 0x7569c0] ; ret
0x0000000000421df0 : mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 0xc] ; ret
0x0000000000421d70 : mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 4] ; ret
0x0000000000419900 : mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x0000000000421d80 : mov rax, qword ptr [rdi] ; mov ecx, ecx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000046a300 : mov rax, qword ptr [rdi] ; mov qword ptr [rdi], rsi ; ret
0x0000000000421db0 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x10] ; ret
0x0000000000478df0 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x18] ; ret
0x0000000000484375 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000478e00 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; ret
0x0000000000484765 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x0000000000484335 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004198f0 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000402677 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax] ; ret
0x0000000000421d90 : mov rax, qword ptr [rdi] ; ret
0x0000000000404490 : mov rax, qword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x00000000004070a0 : mov rax, qword ptr [rdi] ; sub rax, qword ptr [rsi] ; ret
0x0000000000421ba3 : mov rax, qword ptr [rdx + 0x38] ; test rax, rax ; je 0x421bb9 ; jmp rax
0x0000000000421ae3 : mov rax, qword ptr [rdx + 0x40] ; test rax, rax ; je 0x421af9 ; jmp rax
0x0000000000465830 : mov rax, qword ptr [rdx + 0x78] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000004713e1 : mov rax, qword ptr [rdx + 8] ; mov qword ptr [rsi], rax ; ret
0x00000000004875c3 : mov rax, qword ptr [rdx + 8] ; pop rbx ; ret
0x00000000004adef0 : mov rax, qword ptr [rip + 0x2a99d9] ; ret
0x0000000000479d70 : mov rax, qword ptr [rip + 0x2dce71] ; ret
0x000000000046a2e0 : mov rax, qword ptr [rip + 0x2efcd9] ; ret
0x00000000004068a0 : mov rax, qword ptr [rip + 0x351419] ; ret
0x0000000000407870 : mov rax, qword ptr [rip + 0x352061] ; ret
0x00000000004060f0 : mov rax, qword ptr [rip + 0x353771] ; ret
0x0000000000406070 : mov rax, qword ptr [rip + 0x3537e9] ; ret
0x0000000000405ff0 : mov rax, qword ptr [rip + 0x353879] ; ret
0x0000000000405fe0 : mov rax, qword ptr [rip + 0x353891] ; ret
0x0000000000405fa0 : mov rax, qword ptr [rip + 0x3538a1] ; ret
0x0000000000405f90 : mov rax, qword ptr [rip + 0x3538b9] ; ret
0x0000000000405f80 : mov rax, qword ptr [rip + 0x3538d1] ; ret
0x0000000000451506 : mov rax, qword ptr [rsi + 0x18] ; mov qword ptr [rdi + 0x18], rax ; ret
0x00000000004236d0 : mov rax, qword ptr [rsi + 0x28] ; mov dword ptr [rdi], eax ; pop rbx ; ret
0x000000000043f706 : mov rax, qword ptr [rsi + 0x28] ; mov dword ptr [rdi], eax ; ret
0x0000000000470430 : mov rax, qword ptr [rsi + 0x28] ; mov qword ptr [rdi], rax ; ret
0x00000000004550ce : mov rax, qword ptr [rsi + 0x40] ; add qword ptr [rdi + 0x40], rax ; ret
0x000000000045507e : mov rax, qword ptr [rsi + 0x40] ; mov qword ptr [rdi + 0x40], rax ; ret
0x0000000000423b13 : mov rax, qword ptr [rsi + 8] ; mov eax, dword ptr [rdx + rax] ; ret
0x0000000000449204 : mov rax, qword ptr [rsi + 8] ; mov rsi, rdx ; jmp rax
0x000000000043b808 : mov rax, qword ptr [rsi] ; mov rsi, qword ptr [rdi + 8] ; mov edi, dword ptr [rdi] ; jmp rax
0x000000000044012d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000497efb : mov rax, qword ptr [rsp + 0x10] ; mov rdx, rsi ; call rax
0x0000000000440160 : mov rax, qword ptr [rsp + 0x10] ; xor r13d, r13d ; call rax
0x0000000000497888 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004c7242 : mov rax, qword ptr [rsp + 0x18] ; mov rsi, rdi ; call rax
0x0000000000497535 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000049750f : mov rax, qword ptr [rsp + 0x20] ; mov rdx, rsi ; call rax
0x00000000004974b9 : mov rax, qword ptr [rsp + 0x20] ; mov rsi, r15 ; call rax
0x0000000000496b52 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000496c3d : mov rax, qword ptr [rsp + 0x28] ; mov rcx, rsi ; call rax
0x0000000000496aa6 : mov rax, qword ptr [rsp + 0x28] ; mov rdx, rsi ; call rax
0x00000000004978a7 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000497bb3 : mov rax, qword ptr [rsp + 0x30] ; mov rcx, rsi ; call rax
0x000000000049798a : mov rax, qword ptr [rsp + 0x30] ; mov rdx, rsi ; call rax
0x00000000004a1ebf : mov rax, qword ptr [rsp + 0x30] ; sub rsi, rbx ; call rax
0x000000000045a2fb : mov rax, qword ptr [rsp + 0x38] ; call rax
0x000000000041c79e : mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000461d5c : mov rax, qword ptr [rsp + 8] ; jmp 0x461d2b
0x000000000045a355 : mov rax, qword ptr [rsp + 8] ; mov rdi, rbx ; call rax
0x0000000000445550 : mov rax, qword ptr [rsp] ; jmp 0x44553a
0x000000000040fdab : mov rax, r10 ; ret
0x0000000000418959 : mov rax, r11 ; ret
0x000000000041a239 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041c651 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000406cef : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fe9d : mov rax, r9 ; ret
0x000000000040252b : mov rax, rbp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000422679 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040bbfd : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041c368 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a083 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000044e6a6 : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000404831 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042243b : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004020a9 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404330 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000040425c : mov rax, rbx ; pop rbx ; ret
0x000000000047a3b2 : mov rax, rcx ; ret
0x000000000041f3dd : mov rax, rdi ; jne 0x41f3ed ; ret
0x000000000041977b : mov rax, rdi ; pop rbx ; pop rbp ; ret
0x00000000004023e5 : mov rax, rdi ; ret
0x00000000004211b8 : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000406e67 : mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000422138 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000047902b : mov rax, rdx ; pop rbx ; ret
0x000000000040e733 : mov rax, rdx ; ret
0x0000000000419450 : mov rax, rdx ; sub rax, rdi ; ret
0x00000000004b7550 : mov rax, rsi ; mov qword ptr [rdi], rsi ; ret
0x000000000040ff73 : mov rax, rsi ; mov rdx, rdi ; div rcx ; ret
0x000000000041a020 : mov rax, rsi ; ret
0x000000000044b0dd : mov rbp, qword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rcx
0x000000000044b07d : mov rbp, qword ptr [rax] ; mov rdi, qword ptr [rax + 8] ; call rdx
0x00000000004bfa47 : mov rbp, rax ; ret
0x00000000004a7ea4 : mov rbp, rbx ; call rax
0x000000000043c225 : mov rbp, rdi ; lea rdx, qword ptr [rsp + 0x10] ; call rax
0x00000000004ac523 : mov rbp, rdi ; lea rsi, qword ptr [rsi + 0x48] ; call rax
0x0000000000401ceb : mov rbp, rsp ; call rax
0x0000000000415f9f : mov rbx, qword ptr [rax - 8] ; lea rsp, qword ptr [rax] ; ret
0x0000000000410e25 : mov rbx, qword ptr [rsi + 0x28] ; lea rsp, qword ptr [rsi + 0x30] ; ret
0x000000000041151b : mov rbx, qword ptr [rsi - 8] ; lea rsp, qword ptr [rsi] ; ret
0x0000000000408158 : mov rbx, r8 ; or rax, r9 ; ret
0x00000000004202b3 : mov rbx, rax ; jne 0x4202a6 ; pop rbx ; ret
0x000000000043bda3 : mov rbx, rax ; jne 0x43bd96 ; pop rbx ; ret
0x000000000043bee3 : mov rbx, rax ; jne 0x43bed6 ; pop rbx ; ret
0x000000000043c0d3 : mov rbx, rax ; jne 0x43c0c6 ; pop rbx ; ret
0x000000000043c433 : mov rbx, rax ; jne 0x43c426 ; pop rbx ; ret
0x000000000046ae83 : mov rbx, rax ; jne 0x46ae76 ; pop rbx ; ret
0x000000000046af83 : mov rbx, rax ; jne 0x46af76 ; pop rbx ; ret
0x000000000046b083 : mov rbx, rax ; jne 0x46b076 ; pop rbx ; ret
0x000000000046b183 : mov rbx, rax ; jne 0x46b176 ; pop rbx ; ret
0x00000000004a09a3 : mov rbx, rax ; jne 0x4a0996 ; pop rbx ; ret
0x000000000043a2f1 : mov rbx, rdi ; call qword ptr [rdi]
0x000000000043be68 : mov rbx, rdi ; mov rdx, rsp ; call rax
0x0000000000406098 : mov rbx, rdi ; test rax, rax ; je 0x4060b8 ; call rax
0x000000000043ca78 : mov rcx, qword ptr [rax] ; jmp r8
0x0000000000490920 : mov rcx, qword ptr [rcx + 0x10] ; mov qword ptr [rdx], rcx ; ret
0x0000000000490a78 : mov rcx, qword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x0000000000498516 : mov rcx, r12 ; mov rdi, r13 ; mov rdx, rsi ; call rax
0x0000000000497434 : mov rcx, r12 ; mov rdi, rbx ; call r15
0x000000000042271f : mov rcx, r9 ; mov edx, r8d ; mov esi, ebp ; call r11
0x00000000004c77e0 : mov rcx, rax ; jbe 0x4c77f8 ; xor eax, eax ; ret
0x000000000046d4f4 : mov rcx, rbp ; mov rdx, r14 ; mov rdi, r12 ; call rax
0x000000000049633d : mov rcx, rbx ; mov rsi, r12 ; mov rdi, r15 ; call rax
0x00000000004965c7 : mov rcx, rbx ; mov rsi, r15 ; mov rdi, rbp ; call rax
0x0000000000496c42 : mov rcx, rsi ; call rax
0x0000000000406ea5 : mov rcx, rsi ; mov edx, ebp ; xor esi, esi ; call rax
0x00000000004b0595 : mov rdi, qword ptr [r13 + 0xa0] ; call 0x41c839
0x000000000044b0e0 : mov rdi, qword ptr [rax + 8] ; call rcx
0x000000000044b080 : mov rdi, qword ptr [rax + 8] ; call rdx
0x00000000004497fb : mov rdi, qword ptr [rax + rbp] ; add rbp, 8 ; call r12
0x00000000004a0533 : mov rdi, qword ptr [rbx + 8] ; call 0x41c836
0x00000000004491cc : mov rdi, qword ptr [rbx + 8] ; call qword ptr [rax]
0x00000000004a053c : mov rdi, qword ptr [rbx + 8] ; lea esi, dword ptr [rax - 1] ; call 0x41c849
0x000000000041c983 : mov rdi, qword ptr [rbx] ; call r15
0x0000000000440225 : mov rdi, qword ptr [rbx] ; call rax
0x0000000000468b77 : mov rdi, qword ptr [rdi + 0x10] ; jmp 0x468b45
0x000000000043ca74 : mov rdi, qword ptr [rdi + 0x10] ; mov rcx, qword ptr [rax] ; jmp r8
0x00000000004b5512 : mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x00000000004360e1 : mov rdi, qword ptr [rsp + 0x10] ; call 0x402307
0x00000000004a2ed2 : mov rdi, qword ptr [rsp + 0x30] ; call rax
0x00000000004a985d : mov rdi, qword ptr [rsp + 8] ; call r15
0x000000000041e8f4 : mov rdi, qword ptr [rsp] ; lea ebp, dword ptr [rbx - 1] ; call r12
0x00000000004a3c12 : mov rdi, r10 ; call rax
0x00000000004c73aa : mov rdi, r11 ; mov rdx, qword ptr [rsp + 8] ; call r15
0x00000000004c76bc : mov rdi, r12 ; call r10
0x000000000043f9a0 : mov rdi, r12 ; call rax
0x00000000004a9f87 : mov rdi, r12 ; mov qword ptr [rsp + 0x10], rax ; call r15
0x00000000004c4a25 : mov rdi, r12 ; mov rsi, rbp ; call r15
0x0000000000474fd8 : mov rdi, r13 ; call 0x419fe9
0x000000000047d6e1 : mov rdi, r13 ; call 0x41c529
0x000000000047788c : mov rdi, r13 ; call r12
0x000000000046a24e : mov rdi, r13 ; call rax
0x00000000004c688f : mov rdi, r13 ; call rdx
0x00000000004aa143 : mov rdi, r13 ; mov qword ptr [rsp + 0x18], rax ; call r12
0x0000000000497ad2 : mov rdi, r13 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004978a4 : mov rdi, r13 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000498519 : mov rdi, r13 ; mov rdx, rsi ; call rax
0x00000000004b042f : mov rdi, r13 ; mov rsi, rax ; call r12
0x00000000004c4aa7 : mov rdi, r14 ; add r14, 0x10 ; call r15
0x000000000048562e : mov rdi, r14 ; call 0x401855
0x000000000041ddf3 : mov rdi, r14 ; call r10
0x000000000044fda3 : mov rdi, r15 ; call 0x41bff5
0x00000000004b054a : mov rdi, r15 ; call 0x41c7d5
0x00000000004c677d : mov rdi, r15 ; call r14
0x00000000004660fb : mov rdi, r15 ; call rax
0x0000000000447a0e : mov rdi, r15 ; lea esi, dword ptr [rbx + 1] ; call r14
0x00000000004c727a : mov rdi, r15 ; mov qword ptr [rsp + 8], rsi ; call rax
0x00000000004c71e3 : mov rdi, r15 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004c7193 : mov rdi, r15 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000004b4e5b : mov rdi, r8 ; call qword ptr [rbx]
0x000000000046ecd3 : mov rdi, r8 ; call rbx
0x00000000004a8e12 : mov rdi, rax ; add ebp, 1 ; call r12
0x00000000004a8d01 : mov rdi, rax ; call r12
0x00000000004b28bb : mov rdi, rax ; call r8
0x0000000000406ce5 : mov rdi, rax ; call r9
0x00000000004b232a : mov rdi, rax ; call rdx
0x000000000045a2c9 : mov rdi, rax ; mov qword ptr [rsp + 0x20], rax ; call r15
0x00000000004c49a4 : mov rdi, rax ; mov qword ptr [rsp + 8], rax ; call r15
0x000000000043e6fd : mov rdi, rax ; mov rdx, qword ptr [rax + 0x38] ; jmp rdx
0x000000000047eaca : mov rdi, rbp ; call 0x47e869
0x00000000004954be : mov rdi, rbp ; call r14
0x00000000004969d2 : mov rdi, rbp ; call r15
0x0000000000447406 : mov rdi, rbp ; call rax
0x000000000043c647 : mov rdi, rbp ; call rbx
0x00000000004960c4 : mov rdi, rbp ; call rcx
0x00000000004770bc : mov rdi, rbp ; je 0x4771f9 ; call rax
0x00000000004473a2 : mov rdi, rbp ; mov ebx, 1 ; call rax
0x000000000046f3fe : mov rdi, rbp ; mov edx, r12d ; call rbx
0x0000000000478b6f : mov rdi, rbp ; mov qword ptr [rsp], rax ; call rbx
0x0000000000497e76 : mov rdi, rbp ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000496b4f : mov rdi, rbp ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000049c6bc : mov rdi, rbp ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000495fe6 : mov rdi, rbp ; mov rdx, r8 ; mov rsi, r8 ; call rax
0x0000000000496a83 : mov rdi, rbp ; mov rdx, rsi ; call r15
0x00000000004228a4 : mov rdi, rbp ; mov rsi, r8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004c56cd : mov rdi, rbp ; mov rsi, rbp ; call r8
0x0000000000421711 : mov rdi, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000046603d : mov rdi, rbp ; xor ebp, ebp ; call 0x402297
0x0000000000463341 : mov rdi, rbx ; call 0x43f575
0x0000000000406ee0 : mov rdi, rbx ; call r10
0x00000000004a9b46 : mov rdi, rbx ; call r11
0x0000000000419f60 : mov rdi, rbx ; call r12
0x000000000045a2af : mov rdi, rbx ; call r15
0x0000000000406fbe : mov rdi, rbx ; call rax
0x00000000004aafd3 : mov rdi, rbx ; call rcx
0x00000000004214d9 : mov rdi, rbx ; call rdx
0x00000000004975d4 : mov rdi, rbx ; mov r10, qword ptr [rsp + 0x20] ; call r10
0x0000000000497532 : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000045a2f8 : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x38] ; call rax
0x000000000045a1e4 : mov rdi, rbx ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a7ea1 : mov rdi, rbx ; mov rbp, rbx ; call rax
0x00000000004b7334 : mov rdi, rbx ; mov rsi, rax ; call r12
0x000000000046c700 : mov rdi, rbx ; pop rbx ; jmp r9
0x000000000043d03c : mov rdi, rbx ; pop rbx ; jmp rax
0x000000000046d0e5 : mov rdi, rbx ; pop rbx ; jmp rcx
0x000000000041d243 : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000419ca1 : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000047c7f6 : mov rdi, rbx ; xor ebp, ebp ; call rax
0x000000000045a276 : mov rdi, rcx ; call r15
0x000000000045a29c : mov rdi, rcx ; mov qword ptr [rsp + 0x30], rcx ; call r15
0x00000000004b683f : mov rdi, rdx ; call rcx
0x000000000043d010 : mov rdi, rsi ; mov qword ptr [rsp + 8], rsi ; call rdx
0x000000000043e700 : mov rdx, qword ptr [rax + 0x38] ; jmp rdx
0x000000000044a80c : mov rdx, qword ptr [rbx + 0x10] ; mov rsi, rdi ; call rax
0x000000000048c5a5 : mov rdx, qword ptr [rdi + 8] ; mov qword ptr [rsi], rdx ; ret
0x0000000000490a0f : mov rdx, qword ptr [rdx + 8] ; mov qword ptr [r9], rdx ; ret
0x0000000000421f43 : mov rdx, qword ptr [rsi] ; mov eax, dword ptr [rax] ; sub eax, dword ptr [rdx] ; ret
0x00000000004c6e28 : mov rdx, qword ptr [rsp + 8] ; call r12
0x0000000000447a42 : mov rdx, qword ptr [rsp + 8] ; call r14
0x00000000004c73ad : mov rdx, qword ptr [rsp + 8] ; call r15
0x0000000000419f70 : mov rdx, qword ptr [rsp + 8] ; call rax
0x000000000046a249 : mov rdx, qword ptr [rsp + 8] ; mov rdi, r13 ; call rax
0x00000000004c779a : mov rdx, qword ptr [rsp + 8] ; mov rsi, rdi ; call r11
0x00000000004c60d0 : mov rdx, r12 ; call rax
0x00000000004b4fac : mov rdx, r12 ; mov rdi, rbx ; call rax
0x0000000000498442 : mov rdx, r12 ; mov rsi, qword ptr [rbx] ; mov rdi, r13 ; call rax
0x00000000004724ce : mov rdx, r12 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000004c61e4 : mov rdx, r13 ; call rax
0x000000000047c82e : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000497103 : mov rdx, r13 ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000004755c1 : mov rdx, r14 ; call rax
0x000000000046d4f7 : mov rdx, r14 ; mov rdi, r12 ; call rax
0x0000000000496079 : mov rdx, r14 ; mov rsi, r14 ; mov rdi, rbp ; call rax
0x00000000004c7b72 : mov rdx, r8 ; jmp 0x4c7b82
0x0000000000495fe9 : mov rdx, r8 ; mov rsi, r8 ; call rax
0x0000000000495f9b : mov rdx, r8 ; mov rsi, r8 ; mov rdi, rbp ; call rax
0x00000000004c767e : mov rdx, rax ; call r11
0x0000000000496a25 : mov rdx, rax ; call r15
0x000000000041de2e : mov rdx, rax ; jmp 0x41ddff
0x000000000043b7a5 : mov rdx, rax ; jmp 0x43b77a
0x0000000000497885 : mov rdx, rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000494121 : mov rdx, rbp ; call r12
0x0000000000406ce0 : mov rdx, rbp ; mov esi, ebx ; mov rdi, rax ; call r9
0x0000000000406cb0 : mov rdx, rbp ; mov esi, ebx ; xor edi, edi ; call rax
0x00000000004c6ef9 : mov rdx, rbp ; mov rdi, rbx ; call r12
0x00000000004c6eed : mov rdx, rbp ; mov rsi, rdi ; call r12
0x000000000040d847 : mov rdx, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000043f9e4 : mov rdx, rbx ; mov rsi, r12 ; call r14
0x00000000004960be : mov rdx, rbx ; mov rsi, r14 ; mov rdi, rbp ; call rcx
0x00000000004ab7f0 : mov rdx, rbx ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000040ff76 : mov rdx, rdi ; div rcx ; ret
0x00000000004c5e85 : mov rdx, rdi ; lea rdi, qword ptr [r15 + 0x40] ; call rax
0x0000000000403069 : mov rdx, rdi ; mov edi, ecx ; jmp rax
0x0000000000496a86 : mov rdx, rsi ; call r15
0x0000000000496aab : mov rdx, rsi ; call rax
0x000000000043be6b : mov rdx, rsp ; call rax
0x0000000000498445 : mov rsi, qword ptr [rbx] ; mov rdi, r13 ; call rax
0x000000000041e258 : mov rsi, qword ptr [rcx] ; test rsi, rsi ; jne 0x41e253 ; ret
0x0000000000468b73 : mov rsi, qword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x10] ; jmp 0x468b49
0x000000000043b80b : mov rsi, qword ptr [rdi + 8] ; mov edi, dword ptr [rdi] ; jmp rax
0x000000000043e7b9 : mov rsi, qword ptr [rsi] ; test rsi, rsi ; je 0x43e7f8 ; call rax
0x000000000043e949 : mov rsi, qword ptr [rsi] ; test rsi, rsi ; je 0x43e988 ; call rdx
0x00000000004c6e38 : mov rsi, qword ptr [rsp + 0x10] ; call r12
0x00000000004cc1cf : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rax
0x00000000004969cd : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r15
0x0000000000497e57 : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, rbp ; call r15
0x0000000000496748 : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, rbp ; call rax
0x000000000049748c : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, rbx ; call r15
0x00000000004c7196 : mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000004b3ea3 : mov rsi, qword ptr [rsp + 8] ; jmp 0x4b3e73
0x00000000004c70d4 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r15 ; call r14
0x0000000000496bde : mov rsi, qword ptr [rsp + 8] ; mov rdi, rbp ; call r15
0x00000000004986f1 : mov rsi, qword ptr [rsp + 8] ; mov rdi, rbp ; call rax
0x0000000000407117 : mov rsi, r10 ; jmp r9
0x000000000043f9e7 : mov rsi, r12 ; call r14
0x0000000000496bae : mov rsi, r12 ; call r15
0x000000000043fa17 : mov rsi, r12 ; mov edi, 1 ; call r14
0x0000000000440222 : mov rsi, r12 ; mov rdi, qword ptr [rbx] ; call rax
0x000000000041ddf0 : mov rsi, r12 ; mov rdi, r14 ; call r10
0x00000000004c677a : mov rsi, r12 ; mov rdi, r15 ; call r14
0x0000000000496340 : mov rsi, r12 ; mov rdi, r15 ; call rax
0x000000000047c73d : mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000004a7e9e : mov rsi, r12 ; mov rdi, rbx ; mov rbp, rbx ; call rax
0x000000000047c7f3 : mov rsi, r12 ; mov rdi, rbx ; xor ebp, ebp ; call rax
0x000000000045a273 : mov rsi, r12 ; mov rdi, rcx ; call r15
0x00000000004b028e : mov rsi, r13 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004c76b9 : mov rsi, r13 ; mov rdi, r12 ; call r10
0x0000000000497106 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000004a9b43 : mov rsi, r13 ; mov rdi, rbx ; call r11
0x0000000000406fbb : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004b4fa9 : mov rsi, r13 ; mov rdx, r12 ; mov rdi, rbx ; call rax
0x00000000004aa347 : mov rsi, r14 ; lea rdi, qword ptr [rsp + 0x10] ; call rax
0x000000000041c980 : mov rsi, r14 ; mov rdi, qword ptr [rbx] ; call r15
0x000000000049607c : mov rsi, r14 ; mov rdi, rbp ; call rax
0x00000000004960c1 : mov rsi, r14 ; mov rdi, rbp ; call rcx
0x000000000041e873 : mov rsi, r15 ; call r12
0x00000000004b00e4 : mov rsi, r15 ; call r14
0x00000000004974be : mov rsi, r15 ; call rax
0x00000000004965ca : mov rsi, r15 ; mov rdi, rbp ; call rax
0x00000000004c6f46 : mov rsi, r15 ; mov rdi, rbx ; call r12
0x0000000000495fec : mov rsi, r8 ; call rax
0x00000000004c73c2 : mov rsi, r8 ; mov qword ptr [rsp + 0x10], r8 ; call r15
0x00000000004c7752 : mov rsi, r8 ; mov qword ptr [rsp + 0x20], r8 ; call r11
0x0000000000495f9e : mov rsi, r8 ; mov rdi, rbp ; call rax
0x00000000004c7623 : mov rsi, r8 ; mov rdi, rbx ; call r11
0x00000000004c7413 : mov rsi, r8 ; mov rdi, rbx ; call r15
0x00000000004228a7 : mov rsi, r8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004b0432 : mov rsi, rax ; call r12
0x0000000000406edd : mov rsi, rax ; mov rdi, rbx ; call r10
0x00000000004c4a28 : mov rsi, rbp ; call r15
0x00000000004c56d0 : mov rsi, rbp ; call r8
0x000000000046abe6 : mov rsi, rbp ; call rax
0x00000000004ab88e : mov rsi, rbp ; mov edi, 8 ; call r15
0x00000000004abe08 : mov rsi, rbp ; mov edi, 9 ; call r15
0x00000000004ab7f3 : mov rsi, rbp ; mov rdi, r12 ; call rax
0x00000000004660f8 : mov rsi, rbp ; mov rdi, r15 ; call rax
0x00000000004724d1 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000043d13e : mov rsi, rbp ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000495101 : mov rsi, rbx ; call r14
0x000000000046d1f2 : mov rsi, rbx ; call rax
0x00000000004aebfa : mov rsi, rbx ; mov edi, 1 ; call r14
0x00000000004400d7 : mov rsi, rbx ; mov edi, 7 ; call rax
0x00000000004afe94 : mov rsi, rbx ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000043f99d : mov rsi, rbx ; mov rdi, r12 ; call rax
0x00000000004954bb : mov rsi, rbx ; mov rdi, rbp ; call r14
0x000000000046fafb : mov rsi, rbx ; mov rdi, rbp ; call rax
0x00000000004c48ec : mov rsi, rbx ; mov rdi, rbx ; call r12
0x000000000045a2ac : mov rsi, rbx ; mov rdi, rbx ; call r15
0x000000000045a346 : mov rsi, rcx ; mov qword ptr [rsp + 0x20], rcx ; call r15
0x00000000004c779f : mov rsi, rdi ; call r11
0x00000000004c6ef0 : mov rsi, rdi ; call r12
0x000000000044a810 : mov rsi, rdi ; call rax
0x00000000004c6e25 : mov rsi, rdi ; mov rdx, qword ptr [rsp + 8] ; call r12
0x0000000000449208 : mov rsi, rdx ; jmp rax
0x000000000043bfa1 : mov rsi, rsp ; call rax
0x00000000004aafd0 : mov rsi, rsp ; mov rdi, rbx ; call rcx
0x00000000004b683c : mov rsi, rsp ; mov rdi, rdx ; call rcx
0x000000000040fec5 : mov ss, word ptr [rbp - 0x9000000] ; ret 0xfffc
0x00000000004a6a96 : mov ss, word ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f4c42 : mov word ptr [rax - 0x30], cs ; ret 0xfb9
0x0000000000548064 : mov word ptr [rax - 0x3307ffff], ss ; call qword ptr [rax]
0x0000000000514d7a : mov word ptr [rax], fs ; rol dword ptr [rsi*8 - 0x5f11bcdb], cl ; ret
0x000000000055182a : mov word ptr [rbx], es ; lea eax, dword ptr [rdx] ; add bh, byte ptr [rsi + rcx + 0x28] ; ret
0x000000000052ecbc : mov word ptr [rcx + 0xa840002], dr1 ; stc ; jmp rsp
0x0000000000545164 : mov word ptr [rcx + 1], fs ; add al, ch ; call qword ptr [rax]
0x000000000052b304 : mov word ptr [rcx + rax - 0xbd3fc00], es ; call rsp
0x0000000000507c93 : mov word ptr [rcx - 0x30], ds ; rol bh, 0xa9 ; mov dl, 0x58 ; ret
0x0000000000513ea8 : mov word ptr [rdi - 0x16ce7fba], ds ; ret 0xa287
0x00000000005084e0 : mov word ptr [rdi - 0x27], ds ; sbb eax, 0xda4fc7b5 ; push rbp ; ret 0xcea5
0x000000000050f79d : mov word ptr [rdi - 0x69], fs ; ret
0x0000000000517895 : mov word ptr [rdx - 0x41d0a4f7], cs ; cmp dh, cl ; ret
0x00000000005085d5 : mov word ptr [rdx - 0x58], fs ; push rsi ; push rsi ; lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x0000000000502026 : mov word ptr [rip + 0x5de91ef7], dr0 ; ret
0x00000000004f93b7 : mov word ptr [rip - 0x60ae2af2], es ; ret 0xe1a9
0x00000000004ed036 : mov word ptr [rsi + 0x31], es ; jmp 0x4ed09e
0x00000000004fb797 : mov word ptr [rsi + 0x44], ss ; ret 0x7461
0x000000000041b772 : mov word ptr [rsi + 0xf000002], gs ; lahf ; ret 0x854d
0x0000000000545664 : mov word ptr [rsi + 1], fs ; add al, ch ; call qword ptr [rax]
0x00000000004c7859 : mov word ptr [rsi + rax - 2], dx ; ret
0x0000000000517b75 : mov word ptr [rsi - 0x46c54733], dr1 ; ret
0x0000000000502025 : mov word ptr ds:[rip + 0x5de91ef7], dr0 ; ret
0x0000000000455c07 : movabs al, byte ptr [0x149e1f749d41149] ; ret
0x0000000000455ae1 : movabs al, byte ptr [0x149e2f749d41149] ; ret
0x00000000004559bd : movabs al, byte ptr [0x149e5f749d41149] ; ret
0x0000000000455a4f : movabs al, byte ptr [0x149e6f749d41149] ; ret
0x000000000045592b : movabs al, byte ptr [0x149e7f749d41149] ; ret
0x000000000043a733 : movabs al, byte ptr [0x1b8000000] ; ret
0x000000000044a387 : movabs al, byte ptr [0x1b8000002] ; ret
0x00000000005160ed : movabs al, byte ptr [0x4299552f00cbaddd] ; ret
0x0000000000506c29 : movabs al, byte ptr [0x4bfbc89442014d89] ; ret 0x5ef0
0x00000000004b01fb : movabs al, byte ptr [0x59e801eb83000000] ; ret
0x000000000046f731 : movabs al, byte ptr [0x5c415d5bd889fffa] ; ret
0x000000000048741c : movabs al, byte ptr [0x831c74c085fff981] ; ret
0x00000000004ba8a3 : movabs al, byte ptr [0x8944d1314100527a] ; ret 0xeac1
0x0000000000488f9c : movabs al, byte ptr [0x8948c08548ffff02] ; ret
0x000000000043c0cc : movabs al, byte ptr [0x8948c08548ffffe7] ; ret
0x000000000046254c : movabs al, byte ptr [0x8948c08548fffffd] ; ret
0x0000000000454bdd : movabs al, byte ptr [0x8948c78948000000] ; ret
0x000000000043cdc0 : movabs al, byte ptr [0xa74c08548000000] ; call rax
0x00000000004d1b68 : movabs al, byte ptr [0xb0000000000040c6] ; ret
0x00000000004ec72c : movabs byte ptr [0x4d58089446fecc08], al ; ret 0x91b2
0x00000000004629e1 : movabs byte ptr [0x5b3274c08548fffd], al ; ret
0x000000000046b38c : movabs byte ptr [0x5c415dc0315bfff9], al ; ret
0x000000000050acd1 : movabs byte ptr [0x67b199c56aee9032], al ; ret
0x0000000000501aab : movabs byte ptr [0x6b8fe4c7a0f45f17], al ; ret 0xf0d2
0x00000000005123ce : movabs byte ptr [0x8659c3f091d9aa14], al ; ret
0x0000000000506e34 : movabs byte ptr [0x956af259cb47d402], al ; ret 0x4551
0x00000000004c9862 : movabs byte ptr [0xaac268c726c6e4c4], al ; ret
0x0000000000503c66 : movabs byte ptr [0xde68ddecd5c1da1d], al ; ret
0x0000000000502ddf : movabs byte ptr [0xeb911ecfe469b17a], al ; ret 0x2d3e
0x000000000050db61 : movabs dword ptr [0x1a5456b3b871effe], eax ; ret 0x6df0
0x0000000000493b19 : movabs dword ptr [0x1d165f40a3c25f40], eax ; ret
0x0000000000493b1d : movabs dword ptr [0x1d1672c31d165f40], eax ; ret
0x0000000000512bb6 : movabs dword ptr [0x412057c36eda1f9d], eax ; ret
0x00000000004aed66 : movabs dword ptr [0x41de8948000000c0], eax ; call rsi
0x0000000000517232 : movabs dword ptr [0x4ae980d936bf1986], eax ; ret
0x0000000000514825 : movabs dword ptr [0x4d7c641fcb56c65e], eax ; ret 0x5767
0x00000000004c6b58 : movabs dword ptr [0x83d189d231f8e083], eax ; ret 0x4c08
0x000000000046f1c9 : movabs dword ptr [0x8948c08548fff97b], eax ; ret
0x00000000004b6399 : movabs dword ptr [0x8948e6894cfff664], eax ; ret 0x8948
0x00000000004f90d6 : movabs dword ptr [0xc3a8e9a768638151], eax ; ret
0x000000000046aedb : movabs eax, dword ptr [0x10478b4890fffd0c] ; ret
0x000000000046afdb : movabs eax, dword ptr [0x18478b4890fffd0b] ; ret
0x000000000046b0db : movabs eax, dword ptr [0x20478b4890fffd0a] ; ret
0x000000000046b1db : movabs eax, dword ptr [0x28478b4890fffd09] ; ret
0x0000000000507571 : movabs eax, dword ptr [0x4be0e8018980f889] ; ret 0xe976
0x000000000046b47c : movabs eax, dword ptr [0x5c415dc0315bfff9] ; ret
0x000000000042271b : movabs eax, dword ptr [0x8944c9894c000000] ; ret 0xee89
0x000000000048e2eb : movabs eax, dword ptr [0x8948c08548fffb18] ; ret
0x000000000049b480 : movabs eax, dword ptr [0x8c48348c031fff6] ; ret
0x000000000044b451 : movabs eax, dword ptr [0x8c48348c031fffb] ; ret
0x0000000000517323 : movaps xmm1, xmmword ptr [rbx] ; sbb byte ptr [rbx + 0x6c], dh ; ret 0xeeb6
0x00000000004274cf : movd dword ptr [rdi + 0x10], mm1 ; ret
0x00000000004274ce : movd dword ptr [rdi + 0x10], xmm1 ; ret
0x00000000004f6961 : movd mm6, dword ptr [rcx + 0x20] ; adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x00000000004bdbb6 : movdqa xmm0, xmm6 ; movhlps xmm6, xmm1 ; ret
0x00000000004bdf0a : movdqa xmm14, xmmword ptr [r10 + 0x60] ; ret
0x00000000004bdc78 : movdqa xmm7, xmm0 ; ret
0x00000000004bf590 : movdqa xmm7, xmmword ptr [r11 + 0x50] ; ret
0x00000000004bded4 : movdqu xmmword ptr [r8], xmm6 ; ret
0x00000000004cf024 : movdqu xmmword ptr [rdi + 0x10], xmm0 ; ret
0x000000000042c2f7 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000045d50b : movdqu xmmword ptr [rdi + 0x30], xmm5 ; ret
0x00000000004c86a1 : movdqu xmmword ptr [rdi + 0x50], xmm4 ; ret
0x000000000045d455 : movdqu xmmword ptr [rdi + 0x50], xmm7 ; ret
0x00000000004c8764 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004bdda3 : movdqu xmmword ptr [rdx], xmm3 ; ret
0x00000000004bde2e : movdqu xmmword ptr [rsi], xmm0 ; ret
0x00000000004bdbba : movhlps xmm6, xmm1 ; ret
0x00000000004bdbb7 : movq mm0, mm6 ; movhlps xmm6, xmm1 ; ret
0x00000000004bdf0b : movq mm6, qword ptr [r10 + 0x60] ; ret
0x00000000004bdf0c : movq mm6, qword ptr [rdx + 0x60] ; ret
0x00000000004bdc79 : movq mm7, mm0 ; ret
0x00000000004bf591 : movq mm7, qword ptr [r11 + 0x50] ; ret
0x00000000004bf592 : movq mm7, qword ptr [rbx + 0x50] ; ret
0x00000000004bded5 : movq qword ptr [r8], mm6 ; ret
0x00000000004bded6 : movq qword ptr [rax], mm6 ; ret
0x00000000004cf025 : movq qword ptr [rdi + 0x10], mm0 ; ret
0x000000000042c2f8 : movq qword ptr [rdi + 0x10], mm2 ; ret
0x000000000045d50c : movq qword ptr [rdi + 0x30], mm5 ; ret
0x00000000004c86a2 : movq qword ptr [rdi + 0x50], mm4 ; ret
0x000000000045d456 : movq qword ptr [rdi + 0x50], mm7 ; ret
0x00000000004274cb : movq qword ptr [rdi], mm0 ; movd dword ptr [rdi + 0x10], xmm1 ; ret
0x00000000004c8765 : movq qword ptr [rdi], mm0 ; ret
0x000000000042c2f4 : movq qword ptr [rdi], mm1 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004cf021 : movq qword ptr [rdi], mm2 ; movdqu xmmword ptr [rdi + 0x10], xmm0 ; ret
0x00000000004bdda4 : movq qword ptr [rdx], mm3 ; ret
0x00000000004bde2f : movq qword ptr [rsi], mm0 ; ret
0x000000000052a518 : movsb byte ptr [rdi], byte ptr [rsi] ; adc dh, dl ; jmp rsp
0x000000000053037c : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], dl ; pop rsi ; in eax, dx ; call qword ptr [rax]
0x000000000052e19c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rdx], 0 ; in al, 0x34 ; clc ; jmp rsp
0x00000000004cf10f : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000050be4f : movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x000000000052e5b1 : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; call rsp
0x000000000052eae0 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; clc ; jmp rsp
0x00000000005143c0 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp bl, byte ptr [rip + 0x7e2c2e42] ; ret
0x00000000004f875d : movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rbp - 0x31], esp ; jg 0x4f87a5 ; ret
0x0000000000513b16 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rbp - 0x59], edi ; ret
0x00000000004fd4e8 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, ebx ; xor eax, 0xfd90d0ad ; ret 0x9661
0x000000000054cf7c : movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rcx] ; add al, dl ; sub dh, ch ; jmp rcx
0x0000000000527fe1 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; call rsp
0x000000000051192f : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x0000000000529878 : movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call rsp
0x00000000004f7732 : movsb byte ptr [rdi], byte ptr [rsi] ; jge 0x4f76dc ; ret 0xaeee
0x00000000004fef32 : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x4fef6b ; ret 0xc109
0x00000000004fef31 : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x4fef6c ; ret 0xc109
0x00000000004fef30 : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x4fef6d ; ret 0xc109
0x00000000005280d4 : movsb byte ptr [rdi], byte ptr [rsi] ; js 0x5280dc ; add ah, ah ; ret 0xffed
0x0000000000529ee0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 0xf1 ; jmp rsp
0x0000000000503ffe : movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rdx ; loop 0x504068 ; ret
0x00000000004f7bee : movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x4e1c
0x000000000052bcf8 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, 0xf5 ; call rsp
0x000000000054f97c : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rdx], eax ; add byte ptr [rax], dl ; sahf ; cmc ; call qword ptr [rdi]
0x0000000000507290 : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, 0xe5ca1881 ; ret 0x995d
0x0000000000529c54 : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, dword ptr [rcx] ; add byte ptr [rbp + rdi*2 - 0xf], ah ; call rsp
0x0000000000511d88 : movsb byte ptr [rdi], byte ptr [rsi] ; or ebp, dword ptr [rbx + 0x55] ; xchg bh, cl ; ret
0x0000000000493392 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000458265 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000452df8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004519df : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4828
0x00000000004f47f8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x9591
0x00000000004f4df3 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x9a5b
0x00000000004f7734 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xaeee
0x00000000005280d0 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffed
0x000000000052a058 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff1
0x000000000054b27c : movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000052eddc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 2
0x000000000052dcb0 : movsb byte ptr [rdi], byte ptr [rsi] ; sal edi, -1 ; mov ah, 0x66 ; add al, byte ptr [rax] ; ret 0xfff7
0x000000000054c67c : movsb byte ptr [rdi], byte ptr [rsi] ; salc ; add dword ptr [rax], eax ; adc al, bh ; hlt ; jmp qword ptr [rax]
0x0000000000529de0 : movsb byte ptr [rdi], byte ptr [rsi] ; scasb al, byte ptr [rdi] ; int1 ; jmp rsp
0x000000000047f62b : movsb byte ptr [rdi], byte ptr [rsi] ; stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004f9431 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; xlatb ; push rcx ; push rax ; ret
0x00000000005134ef : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0x57e9c835 ; ret
0x0000000000504fe3 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebx ; and al, 0xa5 ; ret 0x33c5
0x00000000005285a4 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ecx ; add byte ptr [rax], al ; xchg eax, esp ; cmp esi, ebp ; jmp rsp
0x00000000004ed203 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, edi ; in eax, -0x2b ; ret 0x7870
0x000000000050ae79 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg rax, r12 ; ret
0x000000000052b3f0 : movsb byte ptr [rdi], byte ptr [rsi] ; xor esp, esi ; call rsp
0x000000000050ae78 : movsb byte ptr [rdi], byte ptr ss:[rsi] ; xchg rax, r12 ; ret
0x0000000000528875 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; and al, 0x1e ; out dx, eax ; call rsp
0x000000000052b975 : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; je 0x52b918 ; hlt ; jmp rsp
0x00000000004871c5 : movsd dword ptr [rdi], dword ptr [rsi] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000054faf9 : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp rbx
0x00000000004f5d89 : movsd dword ptr [rdi], dword ptr [rsi] ; jle 0x4f5dce ; insb byte ptr [rdi], dx ; ret
0x0000000000516293 : movsd dword ptr [rdi], dword ptr [rsi] ; jns 0x516227 ; ret
0x00000000005139ad : movsd dword ptr [rdi], dword ptr [rsi] ; mov dword ptr [rbx - 0x3f90d47a], ecx ; ret
0x000000000044f927 : movsd dword ptr [rdi], dword ptr [rsi] ; mov esp, 0x85480004 ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000447aa8 : movsd dword ptr [rdi], dword ptr [rsi] ; nop dword ptr [rax] ; ret
0x0000000000501556 : movsd dword ptr [rdi], dword ptr [rsi] ; pop rax ; std ; pop rax ; push rsp ; std ; ret
0x0000000000503fff : movsd dword ptr [rdi], dword ptr [rsi] ; pop rdx ; loop 0x504067 ; ret
0x0000000000509f56 : movsd dword ptr [rdi], dword ptr [rsi] ; push 0xd3 ; jnp 0x509f2c ; push rcx ; pop rdx ; ret 0xd378
0x0000000000446c57 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000504fe6 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x33c5
0x00000000004f7bef : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x4e1c
0x000000000047c8e0 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x51
0x00000000004fa0f2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x903
0x0000000000511a3f : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xcec9
0x00000000004ee4ce : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xeec8
0x00000000004f9f29 : movsd dword ptr [rdi], dword ptr [rsi] ; sti ; outsb dx, byte ptr [rsi] ; mov ah, 0x19 ; jmp rcx
0x00000000005027b3 : movsd dword ptr [rdi], dword ptr [rsi] ; stosd dword ptr [rdi], eax ; mov dh, 0x57 ; mov esp, 0xa7c1baa ; ret
0x0000000000484d71 : movsx eax, dh ; sub eax, 0x30 ; ret
0x0000000000484d70 : movsx eax, sil ; sub eax, 0x30 ; ret
0x000000000046a790 : movsxd rax, dword ptr [rdi + 0x14] ; add rsp, 8 ; ret
0x000000000041d360 : movsxd rax, dword ptr [rdi] ; ret
0x00000000004b6694 : movsxd rax, esi ; shl rax, 5 ; add rax, qword ptr [rdi] ; ret
0x000000000050b1c8 : movsxd rcx, eax ; jnp 0x50b1fc ; ret
0x00000000004021f1 : movsxd rdi, edi ; movzx eax, byte ptr [rdi + 0x4d0120] ; ret
0x00000000004491b4 : movsxd rdx, dword ptr [rbx] ; pop rbx ; xor rax, rdx ; ret
0x0000000000476835 : movsxd rdx, dword ptr [rdi] ; xor edi, edi ; call rax
0x000000000046e1bd : movsxd rdx, eax ; call rbx
0x00000000004fedc5 : movsxd rdx, esi ; cmp byte ptr [r9 + rdi*8 - 0x19], dl ; mov ah, 0x2d ; ret
0x000000000048c351 : movsxd rdx, esi ; mov esi, 5 ; call rax
0x000000000048e09b : movsxd rdx, esi ; mov esi, 7 ; call rax
0x0000000000538651 : movsxd rsi, eax ; call qword ptr [rbx]
0x000000000052a8c1 : movsxd rsi, edx ; jmp rsp
0x0000000000421ef3 : movsxd rsi, esi ; and qword ptr [rdi + 0x10], rsi ; ret
0x0000000000421f23 : movsxd rsi, esi ; and qword ptr [rdi + 0x70], rsi ; ret
0x000000000043ea65 : movsxd rsi, esi ; mov eax, dword ptr [rax + rsi*4] ; ret
0x000000000041c887 : movsxd rsi, esi ; mov qword ptr [rax + rsi*8], rdx ; mov rax, rdx ; ret
0x000000000041c857 : movsxd rsi, esi ; mov rax, qword ptr [rax + rsi*8] ; ret
0x0000000000421ee1 : movsxd rsi, esi ; or qword ptr [rdi + 0x10], rsi ; ret
0x0000000000421f11 : movsxd rsi, esi ; or qword ptr [rdi + 0x70], rsi ; ret
0x000000000050fb91 : movsxd rsp, dword ptr [rax] ; push rbx ; ret 0x6202
0x0000000000507ed4 : movsxd rsp, dword ptr [rdx + 0x439a43a9] ; ret
0x00000000004c5c87 : movups xmm1, xmmword ptr [rax - 0x7d] ; mov byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000004c5c86 : movups xmm9, xmmword ptr [rax - 0x7d] ; mov byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000004c1034 : movups xmmword ptr [rsi], xmm2 ; pxor xmm2, xmm2 ; ret
0x0000000000470609 : movzx eax, al ; add eax, eax ; ret
0x00000000004864bd : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004b3e7a : movzx eax, al ; add rsp, 0x18 ; ret
0x00000000004486e2 : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048b9a5 : movzx eax, al ; add rsp, 8 ; ret
0x000000000043b43f : movzx eax, al ; js 0x43b459 ; add rsp, 8 ; ret
0x00000000004495ff : movzx eax, al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043494b : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000044614c : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000424df6 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000424bd5 : movzx eax, al ; pop rbx ; ret
0x00000000004068d9 : movzx eax, al ; ret
0x0000000000401dbd : movzx eax, byte ptr [rbp - 1] ; leave ; ret
0x00000000004021f3 : movzx eax, byte ptr [rdi + 0x4d0120] ; ret
0x000000000045264a : movzx eax, byte ptr [rdi + rax] ; sar eax, cl ; and eax, 1 ; ret
0x000000000043f818 : movzx eax, dl ; pop rbx ; pop rbp ; ret
0x0000000000484d68 : movzx eax, word ptr [rax + rsi*2] ; and eax, 1 ; ret
0x00000000004fdd01 : mul byte ptr [rbx + 0x114806f6] ; sub bl, ch ; push rcx ; ret 0x2f85
0x00000000004bdb92 : mul byte ptr [rsi + 0xf] ; out dx, eax ; push rbx ; ret
0x000000000050a0eb : mul dword ptr [rdi + 0x6439d75e] ; ret
0x00000000004fc528 : neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x00000000004938f6 : neg dword ptr [rsi - 0x7e] ; ret
0x000000000048491e : neg eax ; pop rbx ; pop rbp ; ret
0x00000000004133f1 : neg ecx ; ret
0x000000000043eb5f : neg edx ; test ebx, ebx ; cmovne eax, edx ; pop rbx ; ret
0x000000000043f357 : neg edx ; test r8d, r8d ; cmovne rax, rdx ; ret
0x00000000004133f0 : neg r9 ; ret
0x000000000043f356 : neg rdx ; test r8d, r8d ; cmovne rax, rdx ; ret
0x000000000052e455 : nop ; add al, byte ptr [rax] ; mov ah, 0x90 ; clc ; call rsp
0x00000000004638d4 : nop ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000418b7b : nop ; add byte ptr [rax], al ; add byte ptr [rbp + 0xf], cl ; lodsb al, byte ptr [rsi] ; ret
0x000000000048d3b0 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465052 : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000547fe5 : nop ; add dword ptr [rax], eax ; cmp ah, cl ; call rbx
0x000000000052b58d : nop ; add dword ptr [rax], eax ; xor al, 0x54 ; hlt ; call rsp
0x00000000004a429a : nop ; add eax, 0xf48004c ; ret 0x8948
0x000000000044ba0f : nop ; add rsp, 8 ; jmp r9
0x000000000044bd0f : nop ; add rsp, 8 ; jmp rcx
0x000000000044bd8f : nop ; add rsp, 8 ; jmp rdx
0x000000000041db2f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040a15d : nop ; call 0x4149e7
0x00000000005425b0 : nop ; call qword ptr [rcx]
0x000000000052e459 : nop ; clc ; call rsp
0x00000000004fd2fb : nop ; hlt ; stosb byte ptr [rdi], al ; mov esi, 0x76a27f2 ; ret
0x00000000005027d1 : nop ; in al, -0x77 ; ret
0x0000000000553bf0 : nop ; jl 0x553bec ; jmp qword ptr [rbx]
0x00000000004b244f : nop ; jmp rax
0x0000000000546721 : nop ; jmp rsp
0x0000000000509ffd : nop ; jo 0x509f96 ; ret 0xd298
0x000000000054eb10 : nop ; jo 0x54eb0b ; call qword ptr [rsi]
0x0000000000401d60 : nop ; leave ; ret
0x0000000000518579 : nop ; leave ; ret 0x9a60
0x0000000000494b1f : nop ; mov eax, 0x521240 ; ret
0x00000000004990cf : nop ; mov eax, 0x521940 ; ret
0x00000000004662af : nop ; mov eax, 0x756a40 ; ret
0x00000000004a08cf : nop ; mov eax, 0x757580 ; ret
0x0000000000421b2f : nop ; mov eax, 0xffffffff ; ret
0x000000000041a3df : nop ; mov eax, 1 ; ret
0x00000000004498cf : nop ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x000000000040213f : nop ; mov eax, dword ptr [rip + 0x355b92] ; ret
0x000000000041e1ef : nop ; mov eax, edx ; ret
0x00000000004ef1ae : nop ; mov ecx, 0xd3c1034a ; push rsi ; ret 0x2211
0x000000000046b33f : nop ; mov qword ptr [rdi], rsi ; mov eax, esi ; ret
0x0000000000464f8f : nop ; mov qword ptr [rip + 0x2f5011], rdi ; ret
0x000000000045ffcf : nop ; mov qword ptr [rip + 0x2f9fc9], rdi ; ret
0x000000000043722f : nop ; mov rax, qword ptr [rcx + 0x10] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000046aedf : nop ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000046afdf : nop ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000046b0df : nop ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000046b1df : nop ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000043bdff : nop ; mov rax, qword ptr [rdi + 0x30] ; ret
0x000000000042030f : nop ; mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000048c5df : nop ; mov rax, qword ptr [rdi + 0x78] ; ret
0x00000000004060df : nop ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000479d6f : nop ; mov rax, qword ptr [rip + 0x2dce71] ; ret
0x000000000048d18f : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041944f : nop ; mov rax, rdx ; sub rax, rdi ; ret
0x000000000041a01f : nop ; mov rax, rsi ; ret
0x0000000000419f6f : nop ; mov rdx, qword ptr [rsp + 8] ; call rax
0x000000000043b7df : nop ; movsxd rax, dword ptr [rdi] ; ret
0x0000000000551740 : nop ; or al, 0xf6 ; jmp qword ptr [rbx]
0x0000000000551620 : nop ; or dh, dh ; call qword ptr [rbx]
0x000000000050acd3 : nop ; out dx, al ; push 0xc5 ; cdq ; mov cl, 0x67 ; ret
0x000000000043951f : nop ; pop rbx ; ret
0x000000000047d942 : nop ; pop rsi ; push rdx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051574f : nop ; pop rsi ; ret
0x0000000000404764 : nop ; ret
0x0000000000505d0c : nop ; ret 0x18b4
0x00000000004f5d2a : nop ; ret 0x40fb
0x0000000000512dc7 : nop ; ret 0x62b7
0x000000000050c5f7 : nop ; ret 0xc26a
0x0000000000531830 : nop ; ret 0xffed
0x0000000000547a10 : nop ; ret 0xfff3
0x000000000050bc3f : nop ; sbb dword ptr [rdi], esp ; ret 0xcac0
0x00000000004fd4ee : nop ; std ; ret 0x9661
0x0000000000518a71 : nop ; test al, 0xb1 ; ret 0xf0ad
0x000000000047a9bf : nop ; test rdi, rdi ; je 0x47a9d9 ; mov rax, qword ptr [rdi] ; ret
0x00000000004c6baf : nop ; test rdx, rdx ; jne 0x4c6bc6 ; ret
0x00000000004c6bae : nop ; test rdx, rdx ; jne 0x4c6bc7 ; ret
0x0000000000449254 : nop ; xchg eax, ecx ; add al, r13b ; ret
0x0000000000405eaf : nop ; xor eax, eax ; pop rbx ; ret
0x000000000040708f : nop ; xor eax, eax ; ret
0x000000000041a85f : nop ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x000000000040fdaf : nop ; xor r10d, r10d ; mov rax, r10 ; ret
0x000000000044b88b : nop dword ptr [rax + rax] ; add rsp, 8 ; jmp rdx
0x0000000000446b03 : nop dword ptr [rax + rax] ; mov dword ptr [rdi], esi ; ret
0x000000000044edeb : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000004b44bb : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000043ea73 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x48] ; ret
0x0000000000481673 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi] ; ret
0x000000000048045b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; ret
0x00000000004ae2ab : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x0000000000402953 : nop dword ptr [rax + rax] ; mov eax, r9d ; ret
0x0000000000419863 : nop dword ptr [rax + rax] ; mov edx, eax ; jmp 0x4197fc
0x000000000043d25b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000044ad8b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x50] ; ret
0x0000000000421d8b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi] ; ret
0x0000000000401c58 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000406d63 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000041f5d8 : nop dword ptr [rax + rax] ; ret
0x000000000040bb83 : nop dword ptr [rax + rax] ; sub edx, 1 ; jmp 0x40bb59
0x000000000043472b : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000402b63 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000049da2c : nop dword ptr [rax] ; add rsp, 8 ; jmp r10
0x000000000049d8ac : nop dword ptr [rax] ; add rsp, 8 ; jmp r9
0x000000000044ac9c : nop dword ptr [rax] ; mov dword ptr [rdi + 0x40], esi ; ret
0x0000000000421d0d : nop dword ptr [rax] ; mov eax, 0x1a9 ; pop rbx ; ret
0x00000000004490cd : nop dword ptr [rax] ; mov eax, 0x20 ; ret
0x000000000045c4ec : nop dword ptr [rax] ; mov eax, 0x4f3000 ; ret
0x000000000042099d : nop dword ptr [rax] ; mov eax, 0x7568c0 ; ret
0x000000000046a2bd : nop dword ptr [rax] ; mov eax, 0x756b00 ; ret
0x00000000004a664c : nop dword ptr [rax] ; mov eax, 0x757700 ; ret
0x00000000004a7d6c : nop dword ptr [rax] ; mov eax, 0x7577c0 ; ret
0x000000000044318d : nop dword ptr [rax] ; mov eax, 0xc ; ret
0x00000000004a54bd : nop dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000043d0dd : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000402ce4 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x00000000004b459d : nop dword ptr [rax] ; mov eax, 5 ; ret
0x00000000004b35cd : nop dword ptr [rax] ; mov eax, 8 ; ret
0x00000000004808ed : nop dword ptr [rax] ; mov eax, 9 ; ret
0x000000000042363d : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 8] ; sub eax, dword ptr [rsi + 8] ; ret
0x00000000004246fd : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x0000000000419859 : nop dword ptr [rax] ; mov eax, edx ; ret
0x00000000004029ec : nop dword ptr [rax] ; mov eax, r8d ; ret
0x00000000004b185c : nop dword ptr [rax] ; mov qword ptr [rdi + 0x40], rsi ; ret
0x00000000004875d4 : nop dword ptr [rax] ; mov rax, qword ptr [rbx + 0x20] ; pop rbx ; ret
0x00000000004b3e0d : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000043a73d : nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x000000000040709d : nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; sub rax, qword ptr [rsi] ; ret
0x0000000000401ca5 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000434b4c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000466985 : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043a2ec : nop dword ptr [rax] ; push rbx ; mov rbx, rdi ; call qword ptr [rdi]
0x0000000000406484 : nop dword ptr [rax] ; ret
0x000000000040bb8d : nop dword ptr [rax] ; sub eax, 1 ; mov dword ptr [rdi + 0x34], eax ; ret
0x000000000041d34d : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000041e195 : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000402535 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000044835d : nop dword ptr [rax] ; xor ebx, ebx ; jmp 0x44832c
0x00000000004b6714 : nop dword ptr [rax] ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x000000000047a3ac : nop dword ptr [rax] ; xor ecx, ecx ; mov rax, rcx ; ret
0x0000000000446b02 : nop word ptr [rax + rax] ; mov dword ptr [rdi], esi ; ret
0x000000000043ea72 : nop word ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x48] ; ret
0x0000000000481672 : nop word ptr [rax + rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000004ae2aa : nop word ptr [rax + rax] ; mov eax, edi ; ret
0x0000000000483282 : nop word ptr [rax + rax] ; ret
0x000000000041953a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004f6878 : not dword ptr [rdi] ; jmp 0xffffffff9dc42b2c
0x00000000004f6877 : not dword ptr es:[rdi] ; jmp 0xffffffff9dc42b2d
0x0000000000406597 : not eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004655a6 : not eax ; and eax, 2 ; pop rbx ; ret
0x00000000004806af : not eax ; and eax, 2 ; ret
0x00000000004804d4 : not eax ; and eax, 5 ; ret
0x000000000045a5ec : not eax ; shr rax, 0x3f ; ret
0x0000000000480505 : not edx ; and edx, 5 ; mov eax, edx ; ret
0x0000000000419880 : not esi ; and dword ptr [rdi + 0x20], esi ; ret
0x000000000044efb0 : not esi ; and dword ptr [rdi + 0x2c], esi ; ret
0x0000000000421ef0 : not esi ; movsxd rsi, esi ; and qword ptr [rdi + 0x10], rsi ; ret
0x0000000000421f20 : not esi ; movsxd rsi, esi ; and qword ptr [rdi + 0x70], rsi ; ret
0x000000000045a5eb : not rax ; shr rax, 0x3f ; ret
0x0000000000531bc0 : or ah, 0xed ; jmp qword ptr [rcx]
0x00000000004ca4ce : or ah, al ; and r15d, ebp ; fadd st(4), st(0) ; ret
0x0000000000417f66 : or ah, al ; cmp eax, 0x8948c4d4 ; ret 0xf48
0x00000000004ca418 : or ah, al ; ret
0x000000000042be22 : or ah, byte ptr [rbp - 0x45] ; or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x00000000004ec72d : or ah, cl ; inc byte ptr [rsi - 0x6c] ; or byte ptr [rax + 0x4d], bl ; ret 0x91b2
0x0000000000549271 : or ah, dh ; call rsp
0x00000000004755bd : or al, 0 ; add byte ptr [rax], al ; mov rdx, r14 ; call rax
0x0000000000443191 : or al, 0 ; add byte ptr [rax], al ; ret
0x00000000004c6778 : or al, 0x24 ; mov rsi, r12 ; mov rdi, r15 ; call r14
0x000000000050d68d : or al, 0x25 ; ret 0xe942
0x0000000000429ae0 : or al, 0x31 ; ret 0xf789
0x0000000000450304 : or al, 0x31 ; rol byte ptr [rbx - 0x6bf0fe08], cl ; ret 0x548d
0x000000000043cb6b : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004242d6 : or al, 0x3d ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004f4ddd : or al, 0x3f ; mov edx, 0x1f9af32a ; pop rbx ; ret 0xdfca
0x0000000000516aec : or al, 0x43 ; ret 0x1595
0x000000000041a813 : or al, 0x44 ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000403094 : or al, 0x44 ; mov edi, eax ; call r9
0x000000000042275e : or al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x000000000041972c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405f03 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000044373f : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040309e : or al, 0x48 ; add esp, 0x18 ; ret
0x000000000043b443 : or al, 0x48 ; add esp, 8 ; ret
0x00000000004a6226 : or al, 0x48 ; lea esi, dword ptr [rsp + 0x40] ; mov edi, dword ptr [rdi] ; call rax
0x00000000004a9223 : or al, 0x48 ; mov dword ptr [rdx], ecx ; ret
0x000000000041d8cb : or al, 0x48 ; mov eax, dword ptr [rax + 0x10] ; jmp rax
0x000000000041d973 : or al, 0x48 ; mov eax, dword ptr [rax + 0x18] ; add rsp, 0x28 ; jmp rax
0x000000000041d93b : or al, 0x48 ; mov eax, dword ptr [rax + 0x18] ; jmp rax
0x000000000041d9c3 : or al, 0x48 ; mov eax, dword ptr [rax + 0x20] ; add rsp, 0x28 ; jmp rax
0x000000000041d98b : or al, 0x48 ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000041da0b : or al, 0x48 ; mov eax, dword ptr [rax + 0x28] ; add rsp, 0x28 ; jmp rax
0x0000000000404feb : or al, 0x48 ; mov eax, dword ptr [rax + 0x28] ; xor edi, edi ; jmp rax
0x0000000000405b1b : or al, 0x48 ; mov eax, dword ptr [rax + 0x50] ; jmp rax
0x000000000041d85b : or al, 0x48 ; mov eax, dword ptr [rax] ; jmp rax
0x0000000000404fab : or al, 0x48 ; mov eax, dword ptr [rax] ; xor edi, edi ; jmp rax
0x00000000004020a8 : or al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004601a3 : or al, 0x48 ; mov edi, ebx ; call rax
0x000000000044c323 : or al, 0x4c ; mov dword ptr [rsp + 8], edx ; jmp rax
0x00000000004c64ed : or al, 0x4c ; mov edx, esp ; call rax
0x000000000050ff25 : or al, 0x53 ; in al, -0xd ; fcmovbe st(0), st(3) ; std ; ret 0x488a
0x0000000000504b7e : or al, 0x5c ; sbb eax, 0xf5606b8 ; ret 0x5232
0x00000000004f8c24 : or al, 0x64 ; cdq ; ret 0x66eb
0x00000000004fb99a : or al, 0x6b ; ret 0x1320
0x00000000004b8b9f : or al, 0x76 ; push rsp ; xor dl, byte ptr [rax] ; ret
0x0000000000512472 : or al, 0x79 ; mov edx, 0x8ba3091f ; jo 0x512493 ; ret 0xfd78
0x00000000004023e2 : or al, 0x7c ; or ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000546ee4 : or al, 0x7f ; add dword ptr [rax], eax ; clc ; popfq ; call rbx
0x00000000004372b6 : or al, 0x80 ; mov dword ptr [rbx + 0x74], eax ; pop rbx ; ret
0x000000000041c4e9 : or al, 0x83 ; ret 0x3901
0x00000000005374e4 : or al, 0x85 ; add byte ptr [rax], al ; sbb byte ptr [rbx - 0x10], al ; call qword ptr [rbx]
0x00000000004a7b8d : or al, 0x85 ; ror byte ptr [rdi], 0x85 ; ret 1
0x000000000040e9fd : or al, 0x89 ; ret
0x0000000000547be4 : or al, 0x8c ; add dword ptr [rax], eax ; or bh, al ; call qword ptr [rdx]
0x0000000000547fe4 : or al, 0x90 ; add dword ptr [rax], eax ; cmp ah, cl ; call rbx
0x0000000000512dc4 : or al, 0xa7 ; jbe 0x512d5c ; ret 0x62b7
0x0000000000518c70 : or al, 0xaf ; lahf ; popfq ; xchg eax, ebp ; push rax ; in eax, dx ; ret
0x000000000052bb84 : or al, 0xb1 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b8a9c : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x00000000004456f3 : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000408144 : or al, 0xb8 ; jmp rdi
0x000000000054a8e4 : or al, 0xb9 ; add dword ptr [rax], eax ; sbb byte ptr [rsi], ch ; hlt ; call qword ptr [rcx]
0x00000000004fa102 : or al, 0xc0 ; pop rbx ; in eax, dx ; jl 0x4fa0eb ; ret 0x278f
0x00000000004584e3 : or al, 0xd0 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x3349
0x000000000041de27 : or al, 0xdf ; test rcx, rcx ; jne 0x41dde1 ; mov rdx, rax ; jmp 0x41de06
0x0000000000462497 : or al, 0xe8 ; ret
0x0000000000507bb2 : or al, 0xe9 ; insd dword ptr [rdi], dx ; retfq 0x5ce5 ; jmp rsp
0x0000000000408eb7 : or al, 0xe9 ; ret 0xfffe
0x000000000052fee4 : or al, 0xf ; add byte ptr [rax], al ; clc ; pop rdx ; in eax, dx ; call qword ptr [rsi]
0x000000000053e1e4 : or al, 0xf2 ; add byte ptr [rax], al ; mov dl, al ; int1 ; jmp qword ptr [rdi]
0x00000000004fbff7 : or al, 0xf2 ; mov al, bh ; ret 0xa3b3
0x0000000000420983 : or al, 0xf3 ; ret
0x000000000052bcf9 : or al, 0xf5 ; call rsp
0x0000000000551729 : or al, 0xf6 ; jmp qword ptr [rbx]
0x0000000000551771 : or al, 0xf6 ; jmp qword ptr [rdx]
0x0000000000425c7e : or al, 0xf6 ; ret 0xc602
0x000000000052d5c1 : or al, 0xf7 ; call rsp
0x000000000054ebe4 : or al, 0xfc ; add dword ptr [rax], eax ; fdiv dword ptr [rax - 0xb] ; call qword ptr [rsi]
0x000000000053fc85 : or al, 1 ; add byte ptr [rax - 0x78], ch ; jmp rbx
0x000000000053fbf5 : or al, 1 ; add byte ptr [rax - 0x78], cl ; jmp qword ptr [rsi]
0x000000000054fbed : or al, 2 ; add byte ptr [rax], ah ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rax]
0x00000000004c7b6d : or al, 6 ; and bl, 0xf0 ; mov rdx, r8 ; jmp 0x4c7b87
0x00000000004c7835 : or al, 7 ; jb 0x4c782c ; ret
0x000000000050b1db : or al, ah ; leave ; outsd dx, dword ptr [rsi] ; ret 0xcea3
0x00000000005049f5 : or al, bl ; ret 0x1878
0x000000000052fa2d : or al, byte ptr [rax] ; add byte ptr [rax], ah ; in eax, dx ; call qword ptr [rsi]
0x00000000004e29e4 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004ddc64 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x4e37
0x00000000004b9272 : or al, byte ptr [rcx + 0x31] ; fild dword ptr [rcx] ; ret 0x8d42
0x00000000004a29f5 : or al, byte ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000053fac5 : or al, byte ptr [rcx] ; add byte ptr [rax], bh ; test dh, dl ; jmp rax
0x000000000050b823 : or al, byte ptr [rsi - 0x57cb9399] ; clc ; ret 0xc375
0x00000000004f5380 : or al, byte ptr [rsp + rsi*2] ; pop rdi ; ret
0x00000000004a0536 : or al, ch ; hlt ; ret 0xfff7
0x000000000047e96e : or al, ch ; mov esp, 0x39fff9de ; ret
0x00000000004897f2 : or al, ch ; or byte ptr [rbp - 0x76b70005], dl ; ret
0x00000000004347a7 : or al, ch ; ret
0x0000000000469228 : or al, ch ; ret 0xffec
0x00000000004c44c8 : or al, ch ; ret 1
0x00000000004a7697 : or al, ch ; sal esi, cl ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005040a2 : or bh, ah ; add eax, 0xd04ee144 ; ret
0x0000000000547be8 : or bh, al ; call qword ptr [rdx]
0x00000000004f81dc : or bh, byte ptr [rax + 0x46] ; ret 0x9fc2
0x0000000000448775 : or bh, byte ptr [rax + 1] ; pop rbx ; ret
0x0000000000471815 : or bh, byte ptr [rax + 1] ; ret
0x000000000043a812 : or bh, byte ptr [rsp + rdi*8 - 0x2776b701] ; pop rbx ; ret
0x000000000052ecc1 : or bh, cl ; jmp rsp
0x000000000048491d : or bh, dh ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000052d599 : or bh, dh ; jmp rsp
0x000000000043785b : or bh, dh ; ret 0xfeff
0x0000000000513514 : or bh, dl ; jbe 0x513578 ; mov eax, dword ptr [rdx - 0x2d] ; jge 0x51355f ; ret 0xf356
0x000000000044ba0c : or bl, al ; nop ; add rsp, 8 ; jmp r9
0x000000000044bd0c : or bl, al ; nop ; add rsp, 8 ; jmp rcx
0x000000000044bd8c : or bl, al ; nop ; add rsp, 8 ; jmp rdx
0x00000000004060dd : or bl, al ; nop ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000471611 : or bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004b675b : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000446b33 : or bl, al ; xor eax, eax ; ret
0x000000000040d875 : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004525ad : or bl, byte ptr [rbx - 0xd] ; ret
0x0000000000512ce3 : or bl, byte ptr [rcx - 0x37] ; std ; ret
0x00000000004fdb6d : or bl, byte ptr [rcx] ; ret
0x00000000005053ac : or bl, byte ptr [rdx - 0x78725df1] ; sbb al, 0x36 ; ret
0x00000000004fdb6c : or bl, byte ptr ss:[rcx] ; ret
0x00000000004b3ea7 : or bl, ch ; ret
0x0000000000461d60 : or bl, ch ; ret 0x1f0f
0x00000000004c86a0 : or bl, dh ; movq qword ptr [rdi + 0x50], mm4 ; ret
0x00000000005080bf : or bl, dh ; push rsi ; or eax, 0x22653a4f ; ret 0xb805
0x0000000000408224 : or bl, dh ; ret
0x0000000000449902 : or bl, sil ; ret
0x000000000048b40a : or byte ptr [r11 + 0x48], bl ; add eax, 0x18 ; ret
0x000000000048b472 : or byte ptr [r11 + 0x48], bl ; add eax, 0x20 ; ret
0x000000000048b38a : or byte ptr [r11 + 0x48], bl ; mov eax, dword ptr [rax + 0x10] ; ret
0x000000000048b37c : or byte ptr [r11 + 0x48], bl ; mov eax, dword ptr [rax + 0x18] ; ret
0x000000000048b39a : or byte ptr [r11 + 0x48], bl ; mov eax, dword ptr [rax + 0x28] ; ret
0x000000000048b3aa : or byte ptr [r11 + 0x48], bl ; mov eax, dword ptr [rax + 8] ; ret
0x00000000004498ff : or byte ptr [r11], bpl ; or bl, sil ; ret
0x0000000000402bb1 : or byte ptr [r8 + 1], r15b ; ret
0x000000000049579a : or byte ptr [r8 - 0x3f], cl ; clc ; and byte ptr [rax + 1], cl ; ret 0x438b
0x000000000048b542 : or byte ptr [r8 - 0x75], cl ; push rax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000048e19f : or byte ptr [r8 - 0x75], r9b ; sub bl, sil ; ret
0x0000000000490c89 : or byte ptr [r8 - 0x7d], r9b ; sal byte ptr [rax], 0xf3 ; ret
0x0000000000491649 : or byte ptr [r9 + 0x33], r8b ; push rdi ; or al, 0xf3 ; ret
0x0000000000402a1b : or byte ptr [r9], r15b ; ret
0x0000000000412f1c : or byte ptr [rax + 0x11], cl ; ret
0x00000000004070e1 : or byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000484954 : or byte ptr [rax + 0x31], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000505ee2 : or byte ptr [rax + 0x39], al ; ret
0x000000000040db32 : or byte ptr [rax + 0x39], cl ; div dword ptr [rax + rdx - 0x18] ; ret
0x0000000000425024 : or byte ptr [rax + 0x39], cl ; ret 0xef72
0x000000000040e3fb : or byte ptr [rax + 0x39], cl ; ret 0xef75
0x0000000000409dca : or byte ptr [rax + 0x39], cl ; ret 0xf075
0x00000000004a9643 : or byte ptr [rax + 0x3b80147], 0 ; add byte ptr [rax], al ; ret
0x00000000004a9609 : or byte ptr [rax + 0x4b80247], 0 ; add byte ptr [rax], al ; ret
0x00000000004ec732 : or byte ptr [rax + 0x4d], bl ; ret 0x91b2
0x00000000004a96ec : or byte ptr [rax + 0x5b80347], 0 ; add byte ptr [rax], al ; ret
0x000000000047810b : or byte ptr [rax + 0x63], cl ; ret
0x000000000048c34f : or byte ptr [rax + 0x63], cl ; salc ; mov esi, 5 ; call rax
0x00000000004a975e : or byte ptr [rax + 0x6b80447], 0 ; add byte ptr [rax], al ; ret
0x0000000000425b04 : or byte ptr [rax + 0xc695], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000425aa2 : or byte ptr [rax + 0xce95], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004026ae : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000048bf27 : or byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000402b12 : or byte ptr [rax + 1], bh ; ret
0x00000000004240dd : or byte ptr [rax + 9], cl ; ret 0x394c
0x0000000000458327 : or byte ptr [rax + rax], al ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x000000000049579b : or byte ptr [rax - 0x3f], cl ; clc ; and byte ptr [rax + 1], cl ; ret 0x438b
0x000000000040612c : or byte ptr [rax - 0x68], cl ; ret
0x0000000000404760 : or byte ptr [rax - 0x73], cl ; add al, 0x90 ; ret
0x000000000048b543 : or byte ptr [rax - 0x75], cl ; push rax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000048e1a0 : or byte ptr [rax - 0x75], cl ; sub bl, sil ; ret
0x00000000004ba1e4 : or byte ptr [rax - 0x7686dbac], cl ; ret 0xe8c1
0x00000000004c68d7 : or byte ptr [rax - 0x77], cl ; adc al, 0x24 ; mov rdi, r13 ; call rdx
0x0000000000446bb3 : or byte ptr [rax - 0x77], cl ; add bh, byte ptr [rax + 1] ; ret
0x000000000046f9a5 : or byte ptr [rax - 0x77], cl ; add dh, bl ; ret
0x000000000048c581 : or byte ptr [rax - 0x77], cl ; add dword ptr [rax + 1], edi ; ret
0x000000000041977a : or byte ptr [rax - 0x77], cl ; clc ; pop rbx ; pop rbp ; ret
0x00000000004af6d7 : or byte ptr [rax - 0x77], cl ; fbstp dword ptr [rcx] ; in eax, dx ; call rax
0x000000000040432f : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000043d13d : or byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000496be2 : or byte ptr [rax - 0x77], cl ; out dx, eax ; call r15
0x00000000004986f5 : or byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000497f1e : or byte ptr [rax - 0x77], cl ; out dx, eax ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000496e6b : or byte ptr [rax - 0x77], cl ; out dx, eax ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000004228a3 : or byte ptr [rax - 0x77], cl ; out dx, eax ; mov rsi, r8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004b2300 : or byte ptr [rax - 0x77], cl ; pop rax ; or byte ptr [rax - 0x77], cl ; ret
0x000000000046e1b6 : or byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x10 ; movsxd rdx, eax ; call rbx
0x0000000000422137 : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000437e36 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000439d61 : or byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000040ab46 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000048521e : or byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000437549 : or byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000040bfb9 : or byte ptr [rax - 0x77], cl ; ret 0x920f
0x0000000000425b8b : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000449207 : or byte ptr [rax - 0x77], cl ; salc ; jmp rax
0x000000000040bf5d : or byte ptr [rax - 0x77], r9b ; ret 0x920f
0x0000000000449206 : or byte ptr [rax - 0x77], r9b ; salc ; jmp rax
0x000000000047e400 : or byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0x854d
0x000000000045340a : or byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000041f872 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000043f346 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041c714 : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000048b5a8 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000401f86 : or byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000402456 : or byte ptr [rax - 0x7d], cl ; ret 0x4c20
0x000000000043f256 : or byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000490c8a : or byte ptr [rax - 0x7d], cl ; sal byte ptr [rax], 0xf3 ; ret
0x00000000004b3e53 : or byte ptr [rax - 0x7d], cl ; sbb byte ptr [r10], r8b ; ret
0x00000000004f701c : or byte ptr [rax - 0xdb17a39], 0xbd ; ret
0x000000000041d2e3 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000437893 : or byte ptr [rax - 2], bh ; pop rbx ; pop rbp ; ret
0x00000000005514f0 : or byte ptr [rax], 0xf6 ; call qword ptr [rsi]
0x000000000053b364 : or byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000051dff8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x000000000051d238 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51ce
0x00000000004717b0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000044937b : or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x405626
0x00000000004ab892 : or byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x000000000048f564 : or byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048e334 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x000000000046c529 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; jmp rax
0x00000000004b35d1 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004df94c : or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e3b
0x00000000004e0f54 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e3e
0x00000000004dc864 : or byte ptr [rax], al ; add byte ptr [rax], al ; sysenter
0x000000000041bfb6 : or byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401dba : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x45 ; dec ecx ; ret
0x0000000000484813 : or byte ptr [rax], al ; je 0x484825 ; ret
0x0000000000423503 : or byte ptr [rax], al ; mov eax, dword ptr [rdi] ; je 0x423517 ; ret
0x0000000000484737 : or byte ptr [rbp + 0x1a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000491b3c : or byte ptr [rbp + 0x31], cl ; in eax, -0x3f ; ret 0x4408
0x0000000000544c06 : or byte ptr [rbp + 0xb], al ; push 0x41380e0a ; ret
0x000000000053a5e5 : or byte ptr [rbp + 0xb], cl ; add al, byte ptr [rsi + rcx + 0x38] ; ret
0x00000000004b5ada : or byte ptr [rbp + 3], dh ; ret
0x000000000043c79d : or byte ptr [rbp + 6], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004b5936 : or byte ptr [rbp + 7], dh ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000408e73 : or byte ptr [rbp + r9*4 + 0x59], r8b ; add dword ptr [rcx + 0x39], eax ; ret
0x0000000000408d83 : or byte ptr [rbp + rcx*4 + 0x4a], al ; add dword ptr [rax + 0x63], ecx ; ret 0x8b48
0x0000000000408e74 : or byte ptr [rbp + rcx*4 + 0x59], al ; add dword ptr [rcx + 0x39], eax ; ret
0x0000000000460523 : or byte ptr [rbp + rcx*4 + 0x60], cl ; adc ecx, dword ptr [rax - 0x77] ; ret
0x00000000004c5335 : or byte ptr [rbp - 0x3dfefebd], cl ; jmp 0x4c5348
0x00000000004a053f : or byte ptr [rbp - 0x7170090], cl ; ret 0xfff7
0x00000000004897f4 : or byte ptr [rbp - 0x76b70005], dl ; ret
0x000000000041896f : or byte ptr [rbp - 0x77], cl ; ret
0x00000000004106b0 : or byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x000000000041896e : or byte ptr [rbp - 0x77], r9b ; ret
0x00000000004fc4d1 : or byte ptr [rbp - 0x79f03ba0], bh ; sbb al, byte ptr [rcx] ; int 0x80
0x0000000000471a84 : or byte ptr [rbp - 0x7cc48001], al ; ret
0x0000000000517196 : or byte ptr [rbx + 0x2b315e11], al ; jrcxz 0x517170 ; push rdi ; ret
0x00000000004cc733 : or byte ptr [rbx + 0x480f07c0], al ; ret 0xf8c1
0x000000000048b40b : or byte ptr [rbx + 0x48], bl ; add eax, 0x18 ; ret
0x000000000048b473 : or byte ptr [rbx + 0x48], bl ; add eax, 0x20 ; ret
0x000000000048b38b : or byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rax + 0x10] ; ret
0x000000000048b37d : or byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rax + 0x18] ; ret
0x000000000048b39b : or byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rax + 0x28] ; ret
0x000000000048b3ab : or byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rax + 8] ; ret
0x000000000043f794 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044a3d1 : or byte ptr [rbx + 0x5d], bl ; mov rax, rdx ; ret
0x0000000000438fd7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; jmp rax
0x00000000004024b2 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401fd3 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000408eb1 : or byte ptr [rbx + 0x708b0850], cl ; or al, 0xe9 ; ret 0xfffe
0x0000000000545c15 : or byte ptr [rbx + 0xb], cl ; push rbp ; ret
0x0000000000551699 : or byte ptr [rbx + 0xb], cl ; ret
0x000000000053535a : or byte ptr [rbx + rcx + 0x49], cl ; ret
0x000000000053036a : or byte ptr [rbx + rcx + 0x4a], al ; ret
0x0000000000537c8a : or byte ptr [rbx + rcx + 0x5a], al ; ret
0x00000000004a4999 : or byte ptr [rbx + rcx*4 + 4], cl ; xor dword ptr [rcx], edi ; ret 0x894c
0x00000000004c7fe2 : or byte ptr [rbx + rsi + 0x44], cl ; int 0x80
0x00000000004fad96 : or byte ptr [rbx - 0x28698f33], 0x4f ; stosb byte ptr [rdi], al ; ret
0x0000000000553328 : or byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x0000000000449900 : or byte ptr [rbx], ch ; or bl, sil ; ret
0x000000000049164a : or byte ptr [rcx + 0x33], al ; push rdi ; or al, 0xf3 ; ret
0x00000000004244cd : or byte ptr [rcx + 0x415d5b2b], cl ; pop rsp ; ret
0x0000000000445637 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x0000000000421aa8 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000403090 : or byte ptr [rcx + 0x440c2444], cl ; mov edi, eax ; call r9
0x00000000004a5aed : or byte ptr [rcx + 0x52], 0 ; cmove rax, rdx ; ret
0x0000000000455ef8 : or byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000053509d : or byte ptr [rcx + 0xb], al ; ret
0x000000000054f3f7 : or byte ptr [rcx + 0xb], bl ; ret
0x0000000000541a55 : or byte ptr [rcx + 0xb], cl ; insd dword ptr [rdi], dx ; ret
0x000000000041002b : or byte ptr [rcx + 1], cl ; ret
0x000000000041073d : or byte ptr [rcx + 1], cl ; ret 0x1148
0x00000000004100b3 : or byte ptr [rcx + 1], cl ; ret 0x1149
0x000000000040fd76 : or byte ptr [rcx + 1], cl ; ret 0x8348
0x00000000004a98bb : or byte ptr [rcx + rcx*4 + 0x64], cl ; and al, 0x28 ; call r15
0x000000000046a24d : or byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000497ad1 : or byte ptr [rcx + rcx*4 - 0x11], cl ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000497aac : or byte ptr [rcx + rcx*4 - 0x11], cl ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000496bad : or byte ptr [rcx + rcx*4 - 0x1a], cl ; call r15
0x00000000004c7622 : or byte ptr [rcx + rcx*4 - 0x3a], cl ; mov rdi, rbx ; call r11
0x00000000004c7412 : or byte ptr [rcx + rcx*4 - 0x3a], cl ; mov rdi, rbx ; call r15
0x00000000004c70d8 : or byte ptr [rcx + rcx*4 - 1], cl ; call r14
0x0000000000447a0d : or byte ptr [rcx + rcx*4 - 1], cl ; lea esi, dword ptr [rbx + 1] ; call r14
0x00000000004c71fa : or byte ptr [rcx + rcx*4 - 1], cl ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000041e872 : or byte ptr [rcx + rcx*4 - 2], cl ; call r12
0x00000000004c6f45 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, rbx ; call r12
0x00000000004b26bd : or byte ptr [rcx + rdi - 0x7d], dh ; ret
0x000000000041d240 : or byte ptr [rcx - 0x2076b712], cl ; pop rbx ; pop rbp ; jmp rax
0x0000000000509617 : or byte ptr [rcx - 0x3f], ch ; call rdi
0x00000000004bd6cd : or byte ptr [rcx - 0x77], al ; ret
0x000000000048e9f5 : or byte ptr [rcx - 0x77], cl ; add dword ptr [rax + 1], edi ; ret
0x000000000041fa55 : or byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x000000000054ec78 : or byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000053f388 : or byte ptr [rcx - 0xe], ch ; jmp rdi
0x000000000042ab11 : or byte ptr [rcx - 9], al ; ret
0x000000000042f511 : or byte ptr [rcx - 9], al ; ret 0x800
0x0000000000410039 : or byte ptr [rcx - 9], cl ; and byte ptr [rcx + 1], cl ; ret
0x0000000000410038 : or byte ptr [rcx - 9], r9b ; and byte ptr [rcx + 1], cl ; ret
0x000000000044accd : or byte ptr [rcx], 0xc6 ; mov dword ptr [rdi + 0x44], esi ; ret
0x000000000053f8bd : or byte ptr [rcx], al ; add al, al ; jge 0x53f8bb ; jmp qword ptr [rsi]
0x0000000000402a1c : or byte ptr [rcx], bh ; ret
0x0000000000472b71 : or byte ptr [rcx], bh ; ret 0x3ab8
0x00000000004251c7 : or byte ptr [rcx], bh ; ret 0xc748
0x0000000000407467 : or byte ptr [rcx], ch ; fidivr dword ptr [rcx] ; ret 0x8c0f
0x00000000004ae615 : or byte ptr [rcx], dh ; lcall ptr [rbx + 0x5d] ; jmp rax
0x0000000000407924 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000486e87 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000044ac57 : or byte ptr [rcx], dh ; rcr byte ptr [rbx - 0x7b], 0xd2 ; setne al ; ret
0x00000000004bcb00 : or byte ptr [rcx], dh ; ret 0xe281
0x00000000004601f9 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000513a2f : or byte ptr [rdi + 0x1fcfe49e], dh ; ret 0xd955
0x0000000000546f1b : or byte ptr [rdi + 0xb], al ; jno 0x546f2f ; ret
0x000000000054c4b6 : or byte ptr [rdi + 0xb], al ; ret
0x00000000005489ea : or byte ptr [rdi + 0xb], cl ; ret
0x0000000000545108 : or byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x0000000000470608 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, eax ; ret
0x0000000000424df5 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000424d89 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000043f817 : or byte ptr [rdi], cl ; mov dh, 0xc2 ; pop rbx ; pop rbp ; ret
0x000000000050fb58 : or byte ptr [rdi], cl ; ret
0x000000000045101e : or byte ptr [rdi], cl ; ret 0xf8c1
0x00000000004729e4 : or byte ptr [rdi], cl ; test byte ptr [rbp - 0x9ffffff], dh ; ret
0x00000000004891eb : or byte ptr [rdi], cl ; test byte ptr [rsi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004b6700 : or byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000004b68b9 : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8944
0x000000000040c4ba : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8444
0x000000000050aad4 : or byte ptr [rdx + 0x69], bh ; ret
0x00000000005302b2 : or byte ptr [rdx + 0xb], al ; ret
0x00000000005430d4 : or byte ptr [rdx + 0xb], cl ; push rax ; ret
0x0000000000532576 : or byte ptr [rdx + 0xb], cl ; ret
0x000000000054e578 : or byte ptr [rdx - 0xb], bl ; jmp qword ptr [rdi]
0x000000000053cd48 : or byte ptr [rdx], ah ; int1 ; call qword ptr [rdx]
0x00000000005151a9 : or byte ptr [rdx], al ; lahf ; adc eax, dword ptr [rax - 2] ; ret
0x00000000004f67f3 : or byte ptr [rdx], dl ; pop rdx ; ret
0x0000000000505590 : or byte ptr [rsi + 0x48], ch ; ret
0x00000000004fea5b : or byte ptr [rsi + 0x4d], ch ; ret
0x00000000004f64b6 : or byte ptr [rsi + 0x4e], ch ; leave ; call 0xffffffff847726e7
0x0000000000553a74 : or byte ptr [rsi + 0xb], al ; ret
0x000000000046e808 : or byte ptr [rsi + 5], bh ; ret
0x0000000000419f30 : or byte ptr [rsi + 6], bh ; call r12
0x000000000053e291 : or byte ptr [rsi + rcx + 0x10], al ; add dword ptr [rdx], 0x52 ; ret
0x0000000000538189 : or byte ptr [rsi + rcx + 0x10], al ; add dword ptr [rdx], 0x5f ; ret
0x000000000053c9b9 : or byte ptr [rsi + rcx + 0x10], al ; add dword ptr [rdx], 2 ; ret
0x000000000053fad9 : or byte ptr [rsi + rcx + 0x10], al ; add dword ptr [rdx], 2 ; stosd dword ptr [rdi], eax ; ret
0x0000000000506115 : or byte ptr [rsi - 0x3e], dh ; ret
0x00000000004feace : or byte ptr [rsi - 0xd], dh ; out dx, eax ; ret
0x00000000004f209d : or byte ptr [rsi], al ; add byte ptr [rdi], cl ; ret 0x73d1
0x0000000000516ba1 : or byte ptr [rsi], al ; jo 0x516b5e ; mov dl, 0xf9 ; ret 0xbf6e
0x000000000050558f : or byte ptr ss:[rsi + 0x48], ch ; ret
0x00000000004c8e9a : or ch, al ; fnstenv dword ptr [rbx - 0x24] ; or ch, al ; stc ; out dx, eax ; ret
0x00000000004c8e9f : or ch, al ; stc ; out dx, eax ; ret
0x000000000051068b : or ch, byte ptr [rbp - 0xab5d86d] ; ret
0x000000000042be25 : or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x00000000004309dd : or ch, byte ptr [rdx + 0x76] ; out 0xae, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000048527c : or cl, byte ptr [rax + 0x29] ; ret 0xc984
0x000000000044e2f1 : or cl, byte ptr [rax - 0x7d] ; ret 0x3910
0x0000000000407538 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000401f82 : or cl, byte ptr [rbx + rcx*4 + 0x42] ; or byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000418a81 : or cl, byte ptr [rcx + 0x21] ; ret
0x00000000004b351d : or cl, byte ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x0000000000492fe3 : or cl, byte ptr [rcx + 6] ; and al, 0x5c ; ret 0xacd3
0x00000000004380e5 : or dh, bl ; ret
0x0000000000531c68 : or dh, cl ; in eax, dx ; call qword ptr [rsi]
0x0000000000551621 : or dh, dh ; call qword ptr [rbx]
0x00000000005514f1 : or dh, dh ; call qword ptr [rsi]
0x000000000052cd29 : or dh, dh ; call rsp
0x000000000052a489 : or dh, dl ; call rsp
0x00000000004f863e : or dh, dl ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x000000000053acc0 : or dl, 0xf0 ; call qword ptr [rdi]
0x00000000004fd714 : or dl, bl ; and al, 0x4f ; ret
0x000000000043094a : or dl, byte ptr [rbx - 0x2a586eb9] ; ret 0xa88f
0x000000000050b432 : or dl, cl ; ret 0x4a54
0x00000000004a9576 : or dword ptr [rax + 0x1b817], ecx ; add byte ptr [rax], al ; ret
0x000000000041e06b : or dword ptr [rax + 0x20], 0xd ; ret
0x00000000004fc273 : or dword ptr [rax + 0x26fc7c73], eax ; ret
0x0000000000471096 : or dword ptr [rax + 1], edi ; pop rbx ; ret
0x00000000004f1139 : or dword ptr [rax + rdi*2 + 0x25], ebx ; ret 0xc4
0x00000000004feacd : or dword ptr [rax], 0x76 ; out dx, eax ; ret
0x00000000004abe0c : or dword ptr [rax], eax ; add byte ptr [rax], al ; call r15
0x00000000004808f1 : or dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004fe2cd : or dword ptr [rax], eax ; pushfq ; ret 0x51d8
0x0000000000407083 : or dword ptr [rax], ebp ; xor eax, 0xc0854800 ; je 0x407099 ; jmp rax
0x000000000050ea8c : or dword ptr [rax], ebx ; mov edx, 0x31be70df ; ret
0x0000000000447401 : or dword ptr [rbp + 0x480574db], eax ; mov edi, ebp ; call rax
0x00000000004ae496 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000004f4c08 : or dword ptr [rcx - 0x24], ebp ; push rbx ; test byte ptr [rdi], al ; jmp qword ptr [rdi]
0x00000000004b8e3c : or dword ptr [rcx], eax ; ret 0xf741
0x00000000005160fa : or dword ptr [rcx], ebp ; fcomp st(0), st(1) ; ret
0x0000000000480977 : or dword ptr [rcx], edi ; ret
0x0000000000421ee4 : or dword ptr [rdi + 0x10], esi ; ret
0x000000000046a780 : or dword ptr [rdi + 0x14], edx ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004b3e55 : or dword ptr [rdi + 0x18], 2 ; ret
0x000000000041a29a : or dword ptr [rdi + 0x20], eax ; mov eax, dword ptr [rdx + 0x24] ; mov dword ptr [rdi + 0x24], eax ; ret
0x00000000004198a0 : or dword ptr [rdi + 0x20], esi ; ret
0x000000000044efa0 : or dword ptr [rdi + 0x2c], esi ; ret
0x0000000000467670 : or dword ptr [rdi + 0x30], 1 ; mov eax, 1 ; ret
0x00000000004658d0 : or dword ptr [rdi + 0x50], 1 ; mov eax, 1 ; ret
0x0000000000421f14 : or dword ptr [rdi + 0x70], esi ; ret
0x000000000049db30 : or dword ptr [rdi + 0x74], 6 ; mov eax, 1 ; ret
0x0000000000504ec6 : or dword ptr [rdi], 0x294f3319 ; ret 0x35cc
0x000000000047262f : or dword ptr [rdi], ecx ; xchg edx, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000054f8fd : or dword ptr [rdx], eax ; add byte ptr [rax], dh ; xchg eax, esi ; cmc ; call rsp
0x000000000054f97d : or dword ptr [rdx], eax ; add byte ptr [rax], dl ; sahf ; cmc ; call qword ptr [rdi]
0x000000000050fb8e : or dword ptr [rip + 0x206348b8], edi ; push rbx ; ret 0x6202
0x00000000004ece70 : or dword ptr [rsi + 0x2c], edi ; push rsi ; ret 0x3a22
0x000000000050d788 : or dword ptr [rsi + 0x5f1f7674], ecx ; xor ch, ch ; ret 0xa9bd
0x000000000050ed44 : or dword ptr [rsi], esp ; jg 0x50ed6a ; ja 0x50ed54 ; out 0xfa, al ; ret
0x000000000044625b : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ab29a : or eax, 0x18c48348 ; pop rbx ; pop rbp ; jmp rdx
0x00000000004fd164 : or eax, 0x21b1e95d ; int 0
0x00000000005080c2 : or eax, 0x22653a4f ; ret 0xb805
0x00000000004b3ea2 : or eax, 0x24748b48 ; or bl, ch ; ret
0x00000000004849a6 : or eax, 0x28c48348 ; ret
0x000000000040db5f : or eax, 0x29ffff47 ; ret
0x00000000004a2a5d : or eax, 0x2b76 ; add rsp, 8 ; ret
0x000000000040210f : or eax, 0x355bb8 ; ret
0x00000000004f5e10 : or eax, 0x471cc98e ; ret
0x000000000052fd0d : or eax, 0x55000000 ; in eax, dx ; call rbx
0x000000000052fd6d : or eax, 0x56800000 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000004f9298 : or eax, 0x569ad4d1 ; scasb al, byte ptr [rdi] ; ret 0x2687
0x0000000000439bda : or eax, 0x5bd88948 ; ret
0x00000000004a39da : or eax, 0x5be08944 ; pop rbp ; pop r12 ; ret
0x00000000004449e2 : or eax, 0x5be88948 ; pop rbp ; pop r12 ; ret
0x00000000004348f2 : or eax, 0x5d5bc031 ; pop r12 ; ret
0x0000000000472565 : or eax, 0x63486874 ; ret 0x4c6
0x00000000004fee00 : or eax, 0x6d4caed ; sbb cl, byte ptr [rdi] ; ret 0x22b3
0x00000000004893e2 : or eax, 0x8408b48 ; add rsp, 8 ; ret
0x00000000004f8638 : or eax, 0x884f6857 ; xchg eax, edi ; or dh, dl ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x00000000004c7ec9 : or eax, 0x88d3094c ; ret 0xc148
0x00000000004a0aad : or eax, 0x8b48fff6 ; ret
0x00000000004b5ba2 : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048c152 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000048973a : or eax, 0x8c48348 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000054fcf5 : or eax, 0xb0b80002 ; cmc ; call qword ptr [rbx]
0x000000000047a4aa : or eax, 0xb9000001 ; pop rsp ; ret 0x51
0x00000000004f675f : or eax, 0xc8e347f8 ; mov byte ptr [rdi - 0x22], ch ; outsd dx, dword ptr [rsi] ; ret
0x000000000050be4a : or eax, 0xcb2412ea ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x000000000050a68e : or eax, 0xd855591f ; ret
0x0000000000507291 : or eax, 0xe5ca1881 ; ret 0x995d
0x0000000000442555 : or eax, 0xe8000000 ; ret 0xfc30
0x0000000000442455 : or eax, 0xe8000000 ; ret 0xfc31
0x0000000000441355 : or eax, 0xe8000000 ; ret 0xfc42
0x00000000005128e6 : or eax, 0xeb00e968 ; ret
0x0000000000507a3b : or eax, 0xed2a2bf9 ; ret
0x00000000004f8d29 : or eax, 0xf276037b ; ret
0x0000000000544a8c : or eax, dword ptr [r14 + r9 + 0x28] ; ret
0x000000000053a42b : or eax, dword ptr [r14 + rcx + 0x18] ; ret
0x000000000055145c : or eax, dword ptr [r14 + rcx + 0x28] ; ret
0x000000000053a7b7 : or eax, dword ptr [r14 + rcx + 8] ; ret
0x000000000052fbb5 : or eax, dword ptr [rax] ; add al, bh ; push rax ; in eax, dx ; jmp qword ptr [rax]
0x000000000053b235 : or eax, dword ptr [rax] ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x000000000054b274 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000004db93c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0x4e30
0x0000000000479338 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; xor ebp, ebp ; call 0x405628
0x00000000005430c7 : or eax, dword ptr [rcx + 0xa] ; ret
0x00000000004b908c : or eax, dword ptr [rcx - 0x77] ; ret
0x0000000000529c55 : or eax, dword ptr [rcx] ; add byte ptr [rbp + rdi*2 - 0xf], ah ; call rsp
0x0000000000493bab : or eax, dword ptr [rdx - 6] ; ret
0x000000000054fba5 : or eax, dword ptr [rdx] ; add byte ptr [rax], cl ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000005322d4 : or eax, dword ptr [rdx] ; pop rax ; ret
0x0000000000502219 : or eax, dword ptr [rdx] ; ret
0x0000000000505282 : or eax, dword ptr [rip - 0xd473bfb] ; and ecx, dword ptr [rax - 0x56] ; ret 0x426d
0x0000000000530c34 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000005443ae : or eax, dword ptr [rsi + rcx + 0x28] ; ret
0x000000000053a7b8 : or eax, dword ptr [rsi + rcx + 8] ; ret
0x000000000041e11a : or eax, eax ; pop rbx ; ret
0x000000000040815c : or eax, ecx ; ret
0x0000000000451d15 : or eax, ecx ; shr rax, 0x3f ; ret
0x000000000041d0f3 : or eax, ecx ; xor eax, dword ptr [rax] ; test rax, rax ; je 0x41d109 ; ret
0x000000000045a5e9 : or eax, edx ; not rax ; shr rax, 0x3f ; ret
0x0000000000451d12 : or eax, edx ; or rax, rcx ; shr rax, 0x3f ; ret
0x0000000000407fd7 : or eax, edx ; ret
0x0000000000511d89 : or ebp, dword ptr [rbx + 0x55] ; xchg bh, cl ; ret
0x00000000004fe23a : or ebp, dword ptr [rsi + 0x5b] ; insd dword ptr [rdi], dx ; enter 0x405a, -0xc ; insb byte ptr [rdi], dx ; ret
0x0000000000517325 : or ebx, dword ptr [rax] ; jae 0x517399 ; ret 0xeeb6
0x0000000000480d14 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000423214 : or ebx, dword ptr [rbx - 0xd] ; ret
0x00000000005014cc : or ebx, dword ptr [rbx] ; ret
0x0000000000545bae : or ebx, dword ptr [rcx + 0xa] ; ret
0x00000000005070ee : or ebx, dword ptr [rdx] ; pop rsp ; enter -0x6f25, -0x2e ; ret
0x0000000000423b3e : or ebx, esi ; ret
0x0000000000545be9 : or ecx, dword ptr [r13 + 0xa] ; ret
0x000000000041a314 : or ecx, dword ptr [rax - 0x75] ; pop r8 ; ret
0x000000000041a2f4 : or ecx, dword ptr [rax - 0x75] ; push r8 ; ret
0x00000000004023e4 : or ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000439a6f : or ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004738a5 : or ecx, dword ptr [rax - 0x7d] ; ret 0xc101
0x0000000000545bbd : or ecx, dword ptr [rbp + 0xa] ; ret
0x00000000004f43ea : or ecx, dword ptr [rbx + 0x19] ; ret
0x00000000004189de : or ecx, dword ptr [rcx + 0x21] ; ret 0x894c
0x000000000047739b : or ecx, dword ptr [rdi] ; xchg eax, edx ; ret 0x970f
0x000000000053f06b : or ecx, dword ptr [rsi + r9 + 0x18] ; ret
0x000000000053a983 : or ecx, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000055211a : or ecx, dword ptr [rsi + rcx + 0x28] ; ret
0x00000000004f43e9 : or ecx, dword ptr gs:[rbx + 0x19] ; ret
0x00000000004fbc74 : or ecx, esi ; lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x0000000000478c4c : or edi, dword ptr [rax + 0x39] ; ret
0x00000000004f84e8 : or edi, dword ptr [rax + 0x7966c077] ; imul esp, eax, 0x6c ; ret 0xda27
0x0000000000425554 : or edi, dword ptr [rax + 1] ; ret
0x0000000000516c0d : or edi, dword ptr [rsi + rbp*4] ; leave ; add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x00000000004faa73 : or edi, eax ; xchg eax, edx ; sahf ; pop rcx ; jne 0x4faadf ; ret
0x0000000000434ae4 : or edi, ebp ; dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x0000000000420006 : or edi, edi ; rol byte ptr [rbp + 0x5b1a75c0], 1 ; ret
0x00000000004f9e3d : or edi, edx ; int1 ; adc ch, dh ; ret
0x0000000000438033 : or edx, 2 ; mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x0000000000545bda : or edx, dword ptr [r13 + 0xa] ; ret
0x0000000000545bcc : or edx, dword ptr [rbp + 0xa] ; ret
0x00000000004c6a6f : or edx, eax ; mov byte ptr [rdi], dl ; ret
0x00000000004380c0 : or esi, 2 ; mov dword ptr [rdi + 0x20], esi ; ret
0x00000000004c6950 : or esi, dword ptr [rbp + 0x6d] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000546f1d : or esi, dword ptr [rcx + 0xa] ; ret
0x000000000047203c : or esi, dword ptr [rcx] ; leave ; jmp rax
0x00000000004816ec : or esi, dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000468aa4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000050ae77 : or esi, dword ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg rax, r12 ; ret
0x000000000044acce : or esi, eax ; mov dword ptr [rdi + 0x44], esi ; ret
0x00000000004496d4 : or esi, ebx ; ret
0x0000000000553d49 : or esi, edi ; call rsi
0x0000000000551531 : or esi, esi ; jmp rbx
0x00000000004a2913 : or esi, esi ; ret 0xf03
0x00000000004f5a8b : or esp, 0x69 ; ret 0x898e
0x000000000053eb94 : or esp, dword ptr [r10 + 0xa] ; ret
0x0000000000540884 : or esp, dword ptr [rax + 0xa] ; ret
0x00000000004f81ae : or esp, dword ptr [rax - 0x60] ; outsb dx, byte ptr [rsi] ; push r10 ; lahf ; pop rsp ; ret
0x000000000050d971 : or esp, dword ptr [rbx] ; jmp rcx
0x0000000000546f0e : or esp, dword ptr [rcx + 0xa] ; ret
0x0000000000532561 : or esp, dword ptr [rdi + 0xa] ; ret
0x000000000050d687 : or esp, dword ptr [rdi] ; sar dword ptr [rbp + 0x250c8422], 1 ; ret 0xe942
0x000000000053eb95 : or esp, dword ptr [rdx + 0xa] ; ret
0x000000000053a17c : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x0000000000421ee3 : or qword ptr [rdi + 0x10], rsi ; ret
0x00000000004b3e54 : or qword ptr [rdi + 0x18], 2 ; ret
0x0000000000421f13 : or qword ptr [rdi + 0x70], rsi ; ret
0x0000000000446b32 : or r11b, r8b ; xor eax, eax ; ret
0x0000000000545bad : or r11d, dword ptr [r9 + 0xa] ; ret
0x000000000053a17b : or r12, qword ptr [rsi + rcx + 0x18] ; ret
0x0000000000532560 : or r12d, dword ptr [r15 + 0xa] ; ret
0x0000000000546f0d : or r12d, dword ptr [r9 + 0xa] ; ret
0x0000000000546f1c : or r14d, dword ptr [r9 + 0xa] ; ret
0x00000000005322d3 : or r8d, dword ptr [r10] ; pop rax ; ret
0x00000000005352ca : or r8d, dword ptr [r14 + r9 + 0x18] ; ret
0x0000000000537f92 : or r8d, dword ptr [r14 + rcx + 0x18] ; ret
0x000000000053354a : or r8d, dword ptr [rsi + r9 + 0x18] ; ret
0x0000000000545bbc : or r9d, dword ptr [r13 + 0xa] ; ret
0x000000000053a982 : or r9d, dword ptr [r14 + rcx + 0x18] ; ret
0x0000000000552119 : or r9d, dword ptr [rsi + r9 + 0x28] ; ret
0x0000000000544b0a : or rax, qword ptr [r14 + r9 + 0x18] ; ret
0x00000000005443ad : or rax, qword ptr [r14 + r9 + 0x28] ; ret
0x0000000000530c33 : or rax, qword ptr [r14 + rcx + 0x18] ; ret
0x000000000053b234 : or rax, qword ptr [rax] ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000005430c6 : or rax, qword ptr [rcx + 0xa] ; ret
0x000000000054442a : or rax, qword ptr [rsi + rcx + 0x18] ; ret
0x000000000041e119 : or rax, r8 ; pop rbx ; ret
0x000000000040815b : or rax, r9 ; ret
0x0000000000451d14 : or rax, rcx ; shr rax, 0x3f ; ret
0x0000000000407fd6 : or rax, rdx ; ret
0x0000000000545c07 : or rcx, qword ptr [rbp + 0xa] ; ret
0x000000000053c31a : or rcx, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000545bcb : or rdx, qword ptr [r13 + 0xa] ; ret
0x0000000000545bf8 : or rsp, qword ptr [r8 + 0xa] ; ret
0x000000000053baf1 : out -0x10, eax ; jmp rbx
0x0000000000502a3d : out -0x15, eax ; fdivp st(7) ; cwde ; ret 0x98e5
0x000000000041e4c2 : out -0x18, eax ; cmp byte ptr [rbx - 0x7cb70002], cl ; ret
0x00000000004ab60b : out -0x18, eax ; jmp rsp
0x0000000000470672 : out -0x18, eax ; mov eax, 0x39fffac1 ; ret
0x00000000004cb5d7 : out -0x18, eax ; ret
0x000000000047920d : out -0x18, eax ; sbb eax, 0x39fffa36 ; ret
0x00000000004461f5 : out -0x18, eax ; xor eax, 0x39fffd66 ; ret
0x00000000004454f5 : out -0x18, eax ; xor eax, 0x39fffd73 ; ret
0x0000000000515eba : out -0x27, eax ; ret
0x00000000004f4d63 : out -0x2e, eax ; jo 0x4f4cfa ; ret 0x65aa
0x000000000044d385 : out -0x67, eax ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000424cce : out -0x77, eax ; ret
0x0000000000516290 : out -0x78, eax ; jge 0x51623f ; jns 0x51622a ; ret
0x000000000051628f : out -0x78, eax ; jge 0x516240 ; jns 0x51622b ; ret
0x000000000051628e : out -0x78, eax ; jge 0x516241 ; jns 0x51622c ; ret
0x000000000047a554 : out -0x7d, eax ; ret
0x00000000004ae083 : out -0xa, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000046d4d7 : out -1, eax ; push rax ; js 0x46d46a ; ret
0x00000000004f875b : out -5, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rbp - 0x31], esp ; jg 0x4f87a7 ; ret
0x00000000004a2d28 : out -9, eax ; inc dword ptr [rbp - 0x7ce08b40] ; ret
0x00000000004faa08 : out -9, eax ; xchg eax, esi ; ret
0x00000000004f69b4 : out 0x10, eax ; ret
0x0000000000491565 : out 0x1b, eax ; sbb ebx, dword ptr [rbx] ; sbb eax, dword ptr [rcx - 0x77] ; ret 0x8941
0x000000000050707e : out 0x27, al ; ret 0xd2db
0x00000000004b9372 : out 0x2c, al ; inc byte ptr [rcx + 9] ; ret
0x000000000046d4b6 : out 0x31, eax ; fucomi st(0) ; ret 0xfff1
0x0000000000496bb0 : out 0x41, al ; call rdi
0x000000000043f9e9 : out 0x41, al ; call rsi
0x00000000004c76be : out 0x41, eax ; call rdx
0x000000000041c4a8 : out 0x44, eax ; mov dword ptr [rdi], edx ; ret
0x00000000004517e4 : out 0x48, al ; mov dword ptr [rdi + 0x60], eax ; mov qword ptr [rdi + 0x68], rdx ; ret
0x000000000044b021 : out 0x48, al ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000440224 : out 0x48, al ; mov edi, dword ptr [rbx] ; call rax
0x00000000004b28ba : out 0x48, al ; mov edi, eax ; call r8
0x0000000000478b6e : out 0x48, al ; mov edi, ebp ; mov qword ptr [rsp], rax ; call rbx
0x000000000047c73f : out 0x48, al ; mov edi, ebx ; call rax
0x00000000004aafd2 : out 0x48, al ; mov edi, ebx ; call rcx
0x00000000004a7ea0 : out 0x48, al ; mov edi, ebx ; mov rbp, rbx ; call rax
0x000000000047c7f5 : out 0x48, al ; mov edi, ebx ; xor ebp, ebp ; call rax
0x000000000045a275 : out 0x48, al ; mov edi, ecx ; call r15
0x00000000004b683e : out 0x48, al ; mov edi, edx ; call rcx
0x000000000041a168 : out 0x48, eax ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a9f89 : out 0x48, eax ; mov dword ptr [rsp + 0x10], eax ; call r15
0x00000000004c4a27 : out 0x48, eax ; mov esi, ebp ; call r15
0x0000000000507de3 : out 0x48, eax ; push rax ; lea ebp, dword ptr [rbx - 0x2e] ; mov bl, 0x3c ; ret
0x00000000004c677c : out 0x4c, al ; mov edi, edi ; call r14
0x0000000000496342 : out 0x4c, al ; mov edi, edi ; call rax
0x000000000041ddf2 : out 0x4c, al ; mov edi, esi ; call r10
0x00000000004faffb : out 0x65, al ; push 0xa8 ; outsb dx, byte ptr [rsi] ; int1 ; ret
0x00000000004ef995 : out 0x6b, eax ; push rbp ; stc ; ret 0x98f0
0x000000000049396a : out 0x7e, al ; stosb byte ptr [rdi], al ; jmp rsi
0x000000000043a02c : out 0x83, al ; ret
0x0000000000511753 : out 0x8e, al ; fisubr dword ptr [rdi - 0x5f] ; pop rax ; sbb edi, ecx ; jmp qword ptr [rsi]
0x0000000000493960 : out 0x95, al ; outsb dx, byte ptr [rsi] ; out 0x95, al ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x0000000000493964 : out 0x95, al ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x00000000004309e0 : out 0xae, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000041e332 : out 0xb5, al ; xor eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000043fa19 : out 0xbf, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000050e3e1 : out 0xdc, al ; test byte ptr [rbx - 0x18], 0x27 ; fcmovbe st(0), st(1) ; ret 0x13e6
0x000000000051260f : out 0xe4, al ; ret
0x00000000005064bb : out 0xeb, al ; ret 0x6449
0x0000000000518b1a : out 0xee, al ; cmp al, 0x8b ; ret
0x0000000000507e51 : out 0xee, al ; test eax, 0x3c37951e ; ret
0x00000000004068d8 : out 0xf, eax ; mov dh, 0xc0 ; ret
0x0000000000541d41 : out 0xf2, al ; call qword ptr [rdi]
0x000000000046b539 : out 0xf3, al ; ret
0x000000000050ed4a : out 0xfa, al ; ret
0x00000000005084cd : out 0xfa, al ; ret 0x9cc7
0x000000000052c595 : out 1, al ; add ah, ah ; jne 0x52c596 ; call rsp
0x000000000054d795 : out 1, eax ; add byte ptr [rax + 0x37], bh ; cmc ; jmp qword ptr [rdi]
0x00000000004bf5e3 : out dx, al ; add al, 0x89 ; ret 0xc148
0x00000000004489a2 : out dx, al ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000000004c7512 : out dx, al ; add dword ptr [rax - 0x3f], ecx ; call 0xffffffffc24dc12b
0x00000000004c771e : out dx, al ; add dword ptr [rax - 0x3f], ecx ; call 0xffffffffc24dc337
0x0000000000408173 : out dx, al ; add dword ptr [rax - 0x73], ecx ; jg 0x408183 ; jne 0x408178 ; ret
0x000000000054ded5 : out dx, al ; add dword ptr [rax], eax ; test al, 0x4b ; cmc ; call qword ptr [rsi]
0x00000000004149bb : out dx, al ; add dword ptr [rbp - 0x16], esi ; ret
0x00000000004b84ba : out dx, al ; add dword ptr [rcx - 0x7f], eax ; ret 0x5180
0x000000000040a57b : out dx, al ; add eax, ebp ; mov esi, 0x1ffff85 ; ret
0x000000000044c2b9 : out dx, al ; add rsp, 8 ; jmp r10
0x00000000004b05b4 : out dx, al ; call 0x41c843
0x000000000053369a : out dx, al ; call qword ptr [rax]
0x00000000005326fa : out dx, al ; call qword ptr [rbx]
0x00000000005351c2 : out dx, al ; call qword ptr [rdi]
0x0000000000533f4a : out dx, al ; call qword ptr [rdx]
0x00000000005327ba : out dx, al ; call qword ptr [rsi]
0x0000000000422726 : out dx, al ; call r11
0x00000000004c4a2a : out dx, al ; call r15
0x00000000004c56d2 : out dx, al ; call r8
0x000000000046abe8 : out dx, al ; call rax
0x000000000053252a : out dx, al ; call rbx
0x0000000000534e42 : out dx, al ; call rcx
0x00000000005285d2 : out dx, al ; call rsp
0x0000000000518b1b : out dx, al ; cmp al, 0x8b ; ret
0x0000000000528542 : out dx, al ; inc dword ptr [rbp + rcx*4 + 0x6840000] ; out dx, al ; jmp rsp
0x000000000050672a : out dx, al ; jbe 0x50673e ; ret 0x6dd1
0x00000000005151f2 : out dx, al ; je 0x515251 ; ret
0x00000000005355f2 : out dx, al ; jmp qword ptr [rax]
0x00000000005321b2 : out dx, al ; jmp qword ptr [rbx]
0x000000000053418a : out dx, al ; jmp qword ptr [rcx]
0x000000000053327a : out dx, al ; jmp qword ptr [rdi]
0x0000000000532d92 : out dx, al ; jmp qword ptr [rdx]
0x000000000053581a : out dx, al ; jmp qword ptr [rsi]
0x00000000005339da : out dx, al ; jmp rcx
0x0000000000532462 : out dx, al ; jmp rsi
0x000000000052854a : out dx, al ; jmp rsp
0x000000000050925a : out dx, al ; jp 0x50921e ; ret 0x50e7
0x0000000000528632 : out dx, al ; ljmp ptr [rdi + rdx*4 + 0x59f40000] ; out dx, al ; jmp rsp
0x00000000004ab890 : out dx, al ; mov edi, 8 ; call r15
0x00000000004abe0a : out dx, al ; mov edi, 9 ; call r15
0x00000000004b0290 : out dx, al ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004c76bb : out dx, al ; mov rdi, r12 ; call r10
0x0000000000497108 : out dx, al ; mov rdi, r12 ; call rax
0x00000000004660fa : out dx, al ; mov rdi, r15 ; call rax
0x00000000004a9b45 : out dx, al ; mov rdi, rbx ; call r11
0x0000000000406fbd : out dx, al ; mov rdi, rbx ; call rax
0x000000000041d242 : out dx, al ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004b4fab : out dx, al ; mov rdx, r12 ; mov rdi, rbx ; call rax
0x0000000000509616 : out dx, al ; or byte ptr [rcx - 0x3f], ch ; call rdi
0x00000000004b3588 : out dx, al ; pop rbp ; pop r12 ; mov rax, qword ptr [rdi + 8] ; jmp rax
0x00000000004814ce : out dx, al ; pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rdi + 0x10] ; jmp rax
0x000000000050919a : out dx, al ; pop rcx ; ret
0x000000000050b764 : out dx, al ; pop rcx ; xchg eax, esp ; sub al, 0xdd ; stosb byte ptr [rdi], al ; ret 0x6595
0x000000000050ee60 : out dx, al ; pop rdx ; pop rbx ; ja 0x50ee38 ; jno 0x50eede ; call qword ptr [rax]
0x000000000050acd4 : out dx, al ; push 0xc5 ; cdq ; mov cl, 0x67 ; ret
0x00000000005285e2 : out dx, al ; push qword ptr [rbx + rdx*4] ; add byte ptr [rbx + rax*2 - 0x12], al ; call rsp
0x00000000005027a5 : out dx, al ; push rax ; ret
0x00000000004c7838 : out dx, al ; ret
0x00000000004f55dd : out dx, al ; ret 0x21f7
0x0000000000502329 : out dx, al ; ret 0x708c
0x00000000005001e2 : out dx, al ; ret 0x89e3
0x0000000000501d89 : out dx, al ; ret 0xb687
0x00000000004f1818 : out dx, al ; ret 0xd8d1
0x000000000040ffa1 : out dx, al ; sbb rax, rax ; and eax, 1 ; ret
0x000000000051598e : out dx, al ; scasd eax, dword ptr [rdi] ; test al, 0x54 ; cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x00000000004f4940 : out dx, al ; shl byte ptr [rbx + 0x4d], 0xca ; ret
0x0000000000507058 : out dx, al ; sti ; scasd eax, dword ptr [rdi] ; stosd dword ptr [rdi], eax ; xor eax, 0x8e7c1367 ; ret
0x0000000000419449 : out dx, al ; sub rax, rdi ; ret
0x0000000000507e52 : out dx, al ; test eax, 0x3c37951e ; ret
0x0000000000493ba8 : out dx, al ; xchg rax, rbp ; or eax, dword ptr [rdx - 6] ; ret
0x0000000000453a86 : out dx, eax ; add ecx, ebp ; ret
0x000000000043acf0 : out dx, eax ; add rsp, 8 ; ret
0x00000000004c9eb2 : out dx, eax ; and al, 0x18 ; vpxor xmm8, xmm8, xmm4 ; ret
0x000000000050a533 : out dx, eax ; and al, 0x9c ; ret 0xba5c
0x0000000000474fda : out dx, eax ; call 0x419fe7
0x000000000047d6e3 : out dx, eax ; call 0x41c527
0x000000000047eacc : out dx, eax ; call 0x47e867
0x0000000000535a0a : out dx, eax ; call qword ptr [rbx]
0x000000000047788e : out dx, eax ; call r12
0x00000000004954c0 : out dx, eax ; call r14
0x00000000004969d4 : out dx, eax ; call r15
0x0000000000447408 : out dx, eax ; call rax
0x000000000043c649 : out dx, eax ; call rbx
0x00000000004960c6 : out dx, eax ; call rcx
0x00000000004c6891 : out dx, eax ; call rdx
0x000000000052887a : out dx, eax ; call rsp
0x00000000004cec92 : out dx, eax ; cmp dword ptr [rdx + 0x10], 0 ; cmove rax, rcx ; call rax
0x00000000004fa1d7 : out dx, eax ; cmp edx, edi ; ret
0x00000000004c2825 : out dx, eax ; dec dword ptr [rax - 0x73] ; add byte ptr gs:[rbp - 0xd], bl ; ret
0x0000000000528cc2 : out dx, eax ; dec esp ; mov ebp, 0x80a40000 ; out dx, eax ; jmp rsp
0x0000000000528cfa : out dx, eax ; dec esp ; mov esi, 0x83440000 ; out dx, eax ; jmp rsp
0x0000000000529042 : out dx, eax ; dec esp ; retf ; add byte ptr [rax], al ; xchg eax, esp ; stosb byte ptr [rdi], al ; out dx, eax ; jmp rsp
0x0000000000528d9a : out dx, eax ; dec esp ; rol dword ptr [rax], 0 ; push rsp ; xchg eax, ebp ; out dx, eax ; jmp rsp
0x00000000004c1d54 : out dx, eax ; div bl ; ret
0x00000000004ca3ac : out dx, eax ; enter -0x163b, -0x11 ; rol esp, 1 ; ret
0x00000000004ca513 : out dx, eax ; enter 0x41c4, 0x29 ; out dx, eax ; rol esp, cl ; ret
0x00000000004ca4d2 : out dx, eax ; fadd st(4), st(0) ; ret
0x0000000000433350 : out dx, eax ; fcmovb st(0), st(4) ; ret
0x00000000004bdd8a : out dx, eax ; fimul dword ptr [rax - 0x7d] ; ret 0x66f0
0x00000000004c443a : out dx, eax ; fldenv dword ptr [rsi + 0xf] ; out dx, eax ; ret 0xf66
0x00000000004c348b : out dx, eax ; fmul dword ptr [rax - 0x7d] ; ret 0xf60
0x000000000042e4b4 : out dx, eax ; in eax, -0x3c ; ret
0x00000000004c45fd : out dx, eax ; in eax, dx ; add rsp, 8 ; ret
0x00000000004ca561 : out dx, eax ; inc ah ; ret
0x0000000000528b8a : out dx, eax ; inc dword ptr [rbp + rsi*4 + 0x5bb40000] ; out dx, eax ; call rsp
0x00000000004b930a : out dx, eax ; inc dword ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x0000000000528c6a : out dx, eax ; inc dword ptr [rdx + rdi*4 + 0x72f40000] ; out dx, eax ; call rsp
0x0000000000528c1a : out dx, eax ; inc esp ; mov eax, 0x67d40000 ; out dx, eax ; jmp rsp
0x00000000004f793d : out dx, eax ; jbe 0x4f792e ; jae 0x4f796a ; ret
0x00000000004770be : out dx, eax ; je 0x4771f7 ; call rax
0x00000000004291e0 : out dx, eax ; jmp 0xffffffffc431cfb0
0x000000000042a6a3 : out dx, eax ; jmp 0xffffffffc431e473
0x00000000004ca307 : out dx, eax ; jmp 0xfffffffff83c6cd9
0x0000000000528dd2 : out dx, eax ; jmp qword ptr [rbx + rax*8]
0x0000000000535c3a : out dx, eax ; jmp qword ptr [rdi]
0x0000000000535ae2 : out dx, eax ; jmp qword ptr [rdx]
0x0000000000528792 : out dx, eax ; jmp rsp
0x0000000000528872 : out dx, eax ; lcall ptr [rbp + 0x1e240000] ; out dx, eax ; call rsp
0x00000000005290d2 : out dx, eax ; lcall ptr [rsi + rcx*8 - 0x494c0000] ; out dx, eax ; call rsp
0x0000000000496ba9 : out dx, eax ; lea r12, qword ptr [rax + 8] ; mov rsi, r12 ; call r15
0x00000000004c40f7 : out dx, eax ; leave ; lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x00000000004c1c79 : out dx, eax ; leave ; ret
0x0000000000529182 : out dx, eax ; ljmp ptr [rdx + rdx*8] ; add ah, dl ; ret 0xffef
0x0000000000496b2c : out dx, eax ; mov dword ptr [rax + 0x50], 0 ; call r15
0x00000000004473a4 : out dx, eax ; mov ebx, 1 ; call rax
0x000000000046f400 : out dx, eax ; mov edx, r12d ; call rbx
0x000000000043093a : out dx, eax ; mov esi, 0xbf597fc7 ; ret 0xa88f
0x00000000004aa145 : out dx, eax ; mov qword ptr [rsp + 0x18], rax ; call r12
0x0000000000478b71 : out dx, eax ; mov qword ptr [rsp], rax ; call rbx
0x000000000043f705 : out dx, eax ; mov rax, qword ptr [rsi + 0x28] ; mov dword ptr [rdi], eax ; ret
0x0000000000497e78 : out dx, eax ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000497efa : out dx, eax ; mov rax, qword ptr [rsp + 0x10] ; mov rdx, rsi ; call rax
0x0000000000497ad4 : out dx, eax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000496b51 : out dx, eax ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000496c3c : out dx, eax ; mov rax, qword ptr [rsp + 0x28] ; mov rcx, rsi ; call rax
0x0000000000496aa5 : out dx, eax ; mov rax, qword ptr [rsp + 0x28] ; mov rdx, rsi ; call rax
0x00000000004978a6 : out dx, eax ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000497bb2 : out dx, eax ; mov rax, qword ptr [rsp + 0x30] ; mov rcx, rsi ; call rax
0x0000000000497989 : out dx, eax ; mov rax, qword ptr [rsp + 0x30] ; mov rdx, rsi ; call rax
0x000000000049c6be : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000495fe8 : out dx, eax ; mov rdx, r8 ; mov rsi, r8 ; call rax
0x0000000000496a85 : out dx, eax ; mov rdx, rsi ; call r15
0x000000000049851b : out dx, eax ; mov rdx, rsi ; call rax
0x00000000004228a6 : out dx, eax ; mov rsi, r8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004b0431 : out dx, eax ; mov rsi, rax ; call r12
0x00000000004c56cf : out dx, eax ; mov rsi, rbp ; call r8
0x00000000004bdb91 : out dx, eax ; mul byte ptr [rsi + 0xf] ; out dx, eax ; push rbx ; ret
0x0000000000502a3c : out dx, eax ; out -0x15, eax ; fdivp st(7) ; cwde ; ret 0x98e5
0x0000000000535c39 : out dx, eax ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000505a3e : out dx, eax ; outsb dx, byte ptr [rsi] ; ret
0x0000000000421713 : out dx, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000506110 : out dx, eax ; pop rdi ; xchg eax, ecx ; loop 0x506125 ; jbe 0x5060e1 ; ret
0x0000000000506110 : out dx, eax ; pop rdi ; xchg eax, ecx ; loop 0x506126 ; jbe 0x5060e2 ; ret
0x0000000000515be9 : out dx, eax ; push 0xfb ; jmp 0xffffffffc40573f4
0x000000000050a686 : out dx, eax ; push rbp ; xchg eax, edi ; jrcxz 0x50a63a ; pop rdx ; ret 0xd69
0x00000000004bdb95 : out dx, eax ; push rbx ; ret
0x00000000004284b1 : out dx, eax ; ret
0x000000000050a9d5 : out dx, eax ; ret 0x1b5a
0x0000000000433065 : out dx, eax ; ret 0x214c
0x00000000004c2147 : out dx, eax ; ret 0x280f
0x0000000000430eba : out dx, eax ; ret 0x3148
0x0000000000432095 : out dx, eax ; ret 0x3149
0x0000000000430fc2 : out dx, eax ; ret 0x314c
0x0000000000431e18 : out dx, eax ; ret 0x314d
0x000000000041d619 : out dx, eax ; ret 0x33
0x00000000004fa8d0 : out dx, eax ; ret 0x3a29
0x00000000004be7f3 : out dx, eax ; ret 0x4166
0x00000000004ca585 : out dx, eax ; ret 0x42c4
0x0000000000433186 : out dx, eax ; ret 0x43c4
0x00000000004be416 : out dx, eax ; ret 0x4466
0x00000000004be584 : out dx, eax ; ret 0x4566
0x0000000000433032 : out dx, eax ; ret 0x63c4
0x00000000004bd8ff : out dx, eax ; ret 0x8349
0x00000000004bd78c : out dx, eax ; ret 0x8d4c
0x00000000004283fe : out dx, eax ; ret 0xac0f
0x0000000000429195 : out dx, eax ; ret 0xc1c4
0x00000000004ca571 : out dx, eax ; ret 0xc3c4
0x00000000004bdcaa : out dx, eax ; ret 0xc3f3
0x00000000004275da : out dx, eax ; ret 0xcf31
0x0000000000518063 : out dx, eax ; ret 0xd875
0x000000000042a5bb : out dx, eax ; ret 0xee31
0x00000000004bd7f0 : out dx, eax ; ret 0xf66
0x00000000004c42b4 : out dx, eax ; ret 0xff3
0x00000000004ca55d : out dx, eax ; rol ebp, -0x3f ; out dx, eax ; inc ah ; ret
0x00000000004ca3b0 : out dx, eax ; rol esp, 1 ; ret
0x00000000004ca518 : out dx, eax ; rol esp, cl ; ret
0x00000000004c415f : out dx, eax ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, dh ; ret
0x00000000004c2ce6 : out dx, eax ; ror byte ptr [rax - 0x7d], 1 ; ret 0xf60
0x00000000004c1039 : out dx, eax ; sal bl, cl ; ret
0x00000000004c4665 : out dx, eax ; sal ebx, cl ; ret
0x00000000004c1d50 : out dx, eax ; shl byte ptr [rsi + 0xf], 0xef ; div bl ; ret
0x00000000004c8db8 : out dx, eax ; shl dword ptr [rsi + 0x41], 0xf ; cmp byte ptr [rax], al ; ret 0xff3
0x00000000004c42b0 : out dx, eax ; shl dword ptr [rsi + 0xf], cl ; out dx, eax ; ret 0xff3
0x000000000041c4f0 : out dx, eax ; xor eax, eax ; ret
0x000000000046603f : out dx, eax ; xor ebp, ebp ; call 0x402295
0x00000000004911ce : outsb dx, byte ptr [rsi] ; add byte ptr cs:[rax], al ; add rsp, 8 ; ret
0x000000000050ee67 : outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x000000000048e807 : outsb dx, byte ptr [rsi] ; idiv edi ; jmp 0x48e7d2
0x00000000004fb001 : outsb dx, byte ptr [rsi] ; int1 ; ret
0x000000000053f451 : outsb dx, byte ptr [rsi] ; jmp qword ptr [rsi]
0x0000000000480917 : outsb dx, byte ptr [rsi] ; jne 0x48091d ; ret
0x00000000004f6962 : outsb dx, byte ptr [rsi] ; jno 0x4f698b ; adc byte ptr [rbx - 0x74], al ; ret 0xc095
0x00000000004f64b7 : outsb dx, byte ptr [rsi] ; leave ; call 0xffffffff847726e6
0x00000000004f9f2b : outsb dx, byte ptr [rsi] ; mov ah, 0x19 ; jmp rcx
0x0000000000518a6e : outsb dx, byte ptr [rsi] ; mov ecx, 0xb1a8908e ; ret 0xf0ad
0x00000000004f8469 : outsb dx, byte ptr [rsi] ; mov r8b, 0x34 ; stc ; ret 0x1ede
0x0000000000504b7d : outsb dx, byte ptr [rsi] ; or al, 0x5c ; sbb eax, 0xf5606b8 ; ret 0x5232
0x0000000000493962 : outsb dx, byte ptr [rsi] ; out 0x95, al ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x00000000004fe23b : outsb dx, byte ptr [rsi] ; pop rbx ; insd dword ptr [rdi], dx ; enter 0x405a, -0xc ; insb byte ptr [rdi], dx ; ret
0x00000000004f81b1 : outsb dx, byte ptr [rsi] ; push r10 ; lahf ; pop rsp ; ret
0x00000000004b9757 : outsb dx, byte ptr [rsi] ; push rdx ; add byte ptr [rbp - 0x77], al ; ret 0x8941
0x0000000000465fde : outsb dx, byte ptr [rsi] ; ret
0x0000000000417043 : outsb dx, byte ptr [rsi] ; ret 0xf66
0x0000000000493966 : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x00000000004ee182 : outsb dx, byte ptr [rsi] ; sub dword ptr [rdx - 3], ecx ; sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x00000000004f95cb : outsb dx, byte ptr [rsi] ; wait ; call qword ptr [rdi]
0x000000000050441d : outsb dx, byte ptr [rsi] ; wait ; ret 0x8463
0x0000000000511a25 : outsb dx, byte ptr [rsi] ; xchg eax, ebp ; ret
0x0000000000430d85 : outsd dx, dword ptr [rsi] ; adc bpl, r8b ; cli ; outsd dx, dword ptr [rsi] ; push rsi ; and ah, al ; ret 0x79
0x000000000045196e : outsd dx, dword ptr [rsi] ; adc byte ptr [r9 - 0x77], r9b ; ret
0x000000000048a1cb : outsd dx, dword ptr [rsi] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000042c01a : outsd dx, dword ptr [rsi] ; and byte ptr [r14 + 0xf], 0xfe ; ret
0x000000000047e63c : outsd dx, dword ptr [rsi] ; clc ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004bdc7a : outsd dx, dword ptr [rsi] ; clc ; ret
0x000000000054e9c1 : outsd dx, dword ptr [rsi] ; cmc ; call rsp
0x000000000050be43 : outsd dx, dword ptr [rsi] ; cmp eax, 0xdd6d2a48 ; ret 0xea0d
0x000000000042791d : outsd dx, dword ptr [rsi] ; enter -0x3acf, -0x3f ; ret 0x6605
0x000000000042749f : outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0x4103
0x00000000004272e3 : outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf00
0x0000000000427347 : outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf01
0x00000000004273dd : outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf02
0x0000000000427441 : outsd dx, dword ptr [rsi] ; enter 0x3a0f, -0x34 ; ret 0xf03
0x000000000048e6b8 : outsd dx, dword ptr [rsi] ; idiv edi ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000518867 : outsd dx, dword ptr [rsi] ; in eax, dx ; jmp 0xfffffffffa544a74
0x00000000004bdf0d : outsd dx, dword ptr [rsi] ; jb 0x4bdf74 ; ret
0x00000000004bf593 : outsd dx, dword ptr [rsi] ; jnp 0x4bf5ea ; ret
0x00000000004ed32e : outsd dx, dword ptr [rsi] ; lea ebx, dword ptr [rdi - 0x5e] ; ret 0x7455
0x00000000004fc3c6 : outsd dx, dword ptr [rsi] ; leave ; ret 0xe867
0x0000000000427727 : outsd dx, dword ptr [rsi] ; loopne 0x4276f0 ; ret 0x105
0x0000000000417a1d : outsd dx, dword ptr [rsi] ; pop rbp ; sub byte ptr [rcx + 1], cl ; ret 0x8948
0x0000000000430d94 : outsd dx, dword ptr [rsi] ; pop rsi ; xor ah, al ; ret 0x71
0x00000000004179dd : outsd dx, dword ptr [rsi] ; push rbp ; call 0x4a040331
0x0000000000430d8a : outsd dx, dword ptr [rsi] ; push rsi ; and ah, al ; ret 0x79
0x00000000004275ad : outsd dx, dword ptr [rsi] ; ret
0x00000000005129db : outsd dx, dword ptr [rsi] ; ret 0x2167
0x00000000005035b3 : outsd dx, dword ptr [rsi] ; ret 0x2eae
0x00000000005051d3 : outsd dx, dword ptr [rsi] ; ret 0x53a0
0x00000000005176a7 : outsd dx, dword ptr [rsi] ; ret 0x7a53
0x00000000004c8e1e : outsd dx, dword ptr [rsi] ; ret 0xc9c5
0x0000000000427aaf : outsd dx, dword ptr [rsi] ; ret 0xcac1
0x000000000050b1de : outsd dx, dword ptr [rsi] ; ret 0xcea3
0x00000000004278ff : outsd dx, dword ptr [rsi] ; ret 0xd831
0x0000000000427c5e : outsd dx, dword ptr [rsi] ; ret 0xdf31
0x0000000000427e50 : outsd dx, dword ptr [rsi] ; ret 0xef31
0x00000000005039ad : outsd dx, dword ptr [rsi] ; ret 0xf479
0x00000000004c8490 : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000427a40 : outsd dx, dword ptr [rsi] ; ret 0xfd01
0x000000000050ce52 : outsd dx, dword ptr [rsi] ; sub bh, byte ptr [rdx] ; push rsp ; ret 0x5ec7
0x00000000004f5e4a : outsd dx, dword ptr [rsi] ; sub dword ptr [rbx - 0x5cfe06a6], esp ; ret
0x00000000005057e2 : outsd dx, dword ptr [rsi] ; xor al, 0x44 ; outsd dx, dword ptr [rsi] ; xor al, 4 ; ret 0x14db
0x00000000005057e6 : outsd dx, dword ptr [rsi] ; xor al, 4 ; ret 0x14db
0x000000000045d50e : outsd dx, dword ptr [rsi] ; xor bl, dh ; ret
0x00000000004fcefc : outsd dx, dword ptr [rsi] ; xor eax, 0x316bc474 ; ret 0xdc5a
0x00000000005039ab : outsd dx, dword ptr fs:[rsi] ; ret 0xf479
0x00000000004f803d : packsswb mm1, qword ptr [rbx + rdi + 0x70] ; ret 0x7a1a
0x00000000004c869e : pavgw mm1, qword ptr [rax] ; movdqu xmmword ptr [rdi + 0x50], xmm4 ; ret
0x000000000044e301 : pcmpeqw mm5, mm4 ; xor eax, eax ; ret
0x00000000005178d3 : pop qword ptr [rax - 0x1289af4a] ; ret
0x0000000000510104 : pop qword ptr [rbx - 0x72] ; ret
0x00000000004622bc : pop qword ptr [rbx] ; add byte ptr [rax], al ; call 0x41e566
0x00000000004b92e8 : pop qword ptr [rcx + 9] ; ret
0x000000000052e40d : pop qword ptr [rdx] ; add ah, ah ; mov dr1, eax ; call rsp
0x00000000004a2605 : pop r12 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000050a91f : pop r12 ; jmp 0xffffffffc301e170
0x0000000000421716 : pop r12 ; jmp rax
0x0000000000481443 : pop r12 ; mov rax, qword ptr [rdi + 0x10] ; jmp rax
0x00000000004b34fc : pop r12 ; mov rax, qword ptr [rdi + 8] ; jmp rax
0x0000000000419ca6 : pop r12 ; pop r13 ; jmp rax
0x0000000000419e32 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000043b0b6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp r9
0x0000000000423979 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004098a1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040303c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004a2290 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000402754 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004024b5 : pop r12 ; pop r13 ; ret
0x000000000040e44e : pop r12 ; pop r14 ; ret
0x000000000045c9a4 : pop r12 ; pop rbx ; pop rbp ; ret
0x00000000004020ae : pop r12 ; ret
0x0000000000419ca8 : pop r13 ; jmp rax
0x0000000000451671 : pop r13 ; mov qword ptr [rdi + 0x68], rdx ; pop r14 ; ret
0x000000000045c9a2 : pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000000000045c626 : pop r13 ; pop r12 ; ret
0x0000000000419e34 : pop r13 ; pop r14 ; jmp rax
0x0000000000419ded : pop r13 ; pop r14 ; mov esi, 0x86 ; jmp rax
0x0000000000438ebb : pop r13 ; pop r14 ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000043b0b8 : pop r13 ; pop r14 ; pop r15 ; jmp r9
0x000000000042397b : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004098a3 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040303e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004a2292 : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000402756 : pop r13 ; pop r14 ; ret
0x00000000004024b7 : pop r13 ; ret
0x0000000000419e36 : pop r14 ; jmp rax
0x000000000050fe2e : pop r14 ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x0000000000419def : pop r14 ; mov esi, 0x86 ; jmp rax
0x0000000000438ebd : pop r14 ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000045c9a0 : pop r14 ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000000000043b0ba : pop r14 ; pop r15 ; jmp r9
0x000000000042397d : pop r14 ; pop r15 ; jmp rax
0x000000000045ad3f : pop r14 ; pop r15 ; pop rbp ; lea rsp, qword ptr [r10 - 8] ; ret
0x00000000004098a5 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000403040 : pop r14 ; pop r15 ; ret
0x00000000004a2294 : pop r14 ; pop rbp ; ret
0x0000000000402758 : pop r14 ; ret
0x00000000004f1272 : pop r15 ; int1 ; jae 0x4f12d7 ; add dl, ch ; ret
0x000000000043b0bc : pop r15 ; jmp r9
0x000000000042397f : pop r15 ; jmp rax
0x00000000004ec993 : pop r15 ; mov al, 0xd2 ; ret
0x000000000045ad41 : pop r15 ; pop rbp ; lea rsp, qword ptr [r10 - 8] ; ret
0x00000000004098a7 : pop r15 ; pop rbp ; ret
0x0000000000403042 : pop r15 ; ret
0x00000000004fcdc3 : pop r15 ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x00000000004a22ce : pop r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000443867 : pop r8 ; mov qword ptr [rdi + 0x60], rax ; ret
0x000000000041a317 : pop r8 ; ret
0x00000000004f776f : pop r8 ; ret 0x2297
0x00000000004a22cf : pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000452e1b : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000406258 : pop rax ; add dword ptr [rcx], esi ; rol byte ptr [rax - 0x6bf08105], cl ; ret 0xf631
0x00000000004b1a9c : pop rax ; and al, 0x83 ; ret
0x0000000000545018 : pop rax ; call qword ptr [eax]
0x000000000052a8a1 : pop rax ; call rsp
0x0000000000548df8 : pop rax ; clc ; jmp rdi
0x000000000052e2c1 : pop rax ; clc ; jmp rsp
0x00000000004c9fe7 : pop rax ; clc ; lea rsp, qword ptr [rax] ; mov rax, r10 ; ret
0x0000000000415fa1 : pop rax ; clc ; lea rsp, qword ptr [rax] ; ret
0x000000000043bfed : pop rax ; cld ; dec dword ptr [rax - 0x75] ; push r8 ; ret
0x0000000000547158 : pop rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rdi
0x000000000050c7dc : pop rax ; jb 0x50c815 ; mov al, 0xc4 ; ret 0xc5cc
0x0000000000480787 : pop rax ; je 0x4807c4 ; ret
0x00000000004fe2c8 : pop rax ; jmp 0x95d60d0
0x000000000040642f : pop rax ; jmp rax
0x000000000054ea68 : pop rax ; jo 0x54ea63 ; call qword ptr [rsi]
0x000000000043c1f3 : pop rax ; mov eax, 1 ; ret
0x0000000000507426 : pop rax ; mov ecx, esp ; ret
0x0000000000443868 : pop rax ; mov qword ptr [rdi + 0x60], rax ; ret
0x000000000044ad72 : pop rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048bf26 : pop rax ; or byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000004b2303 : pop rax ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004b68b8 : pop rax ; or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8944
0x00000000004f493f : pop rax ; out dx, al ; shl byte ptr [rbx + 0x4d], 0xca ; ret
0x00000000004f4361 : pop rax ; pop rbp ; cdq ; mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x00000000004a8655 : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000452774 : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000501559 : pop rax ; push rsp ; std ; ret
0x000000000051340b : pop rax ; rcr byte ptr [rsi - 0x52], 1 ; mov cl, 0x4d ; ret
0x000000000041a318 : pop rax ; ret
0x0000000000505576 : pop rax ; ret 0x1953
0x00000000004f7770 : pop rax ; ret 0x2297
0x00000000004ffa4b : pop rax ; ret 0x2910
0x00000000004ec733 : pop rax ; ret 0x91b2
0x00000000004f6574 : pop rax ; ret 0xe466
0x0000000000407f9c : pop rax ; sbb dword ptr [rip + 0x100], esi ; add bl, dh ; ret
0x0000000000511758 : pop rax ; sbb edi, ecx ; jmp qword ptr [rsi]
0x0000000000501557 : pop rax ; std ; pop rax ; push rsp ; std ; ret
0x00000000005057e0 : pop rax ; sti ; outsd dx, dword ptr [rsi] ; xor al, 0x44 ; outsd dx, dword ptr [rsi] ; xor al, 4 ; ret 0x14db
0x0000000000540848 : pop rax ; stosb byte ptr [rdi], al ; call qword ptr [rdi]
0x00000000004fbf4b : pop rax ; sub eax, dword ptr [rdx - 0x497ce1e5] ; ret
0x0000000000508a80 : pop rax ; test dword ptr [rax - 0x45], esp ; jno 0x508a67 ; and edi, edx ; wait ; call rsp
0x00000000004355b8 : pop rax ; test rax, rax ; je 0x4355ee ; call rax
0x00000000004355b7 : pop rax ; test rax, rax ; je 0x4355ef ; call rax
0x000000000043cfa1 : pop rax ; test rax, rax ; je 0x43cfb6 ; jmp rax
0x000000000043cfa0 : pop rax ; test rax, rax ; je 0x43cfb7 ; jmp rax
0x000000000044b32f : pop rax ; test rax, rax ; je 0x44b359 ; mov rdi, rbx ; call rax
0x0000000000464e16 : pop rax ; test rax, rax ; je 0x464e46 ; call rax
0x0000000000464e15 : pop rax ; test rax, rax ; je 0x464e47 ; call rax
0x00000000004ffe87 : pop rax ; xchg eax, ebx ; xor al, 0xcc ; ret
0x00000000004f8138 : pop rax ; xchg eax, ecx ; mov dword ptr [rax + rbp*2 - 0x67], eax ; ret 0xef10
0x00000000004f569b : pop rax ; xchg eax, edi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000445b3c : pop rax ; xor eax, eax ; pop rdx ; pop rbx ; ret
0x00000000004fea3d : pop rbp ; adc eax, 0xa72d001e ; ret
0x000000000046b335 : pop rbp ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000047c6f7 : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047ddeb : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x7c], al ; in al, 0xf ; xchg eax, ebp ; ret 0xc284
0x0000000000544dc5 : pop rbp ; add dword ptr [rax], eax ; fsub dword ptr [rbp - 0xd] ; jmp qword ptr [rcx]
0x000000000048bb7d : pop rbp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000544361 : pop rbp ; call qword ptr [rbx]
0x00000000004f4362 : pop rbp ; cdq ; mov bh, 0x2d ; mov ch, 0x27 ; ret 0x2237
0x0000000000432f27 : pop rbp ; cmp byte ptr [rsp + 0x40], ah ; add esp, eax ; ret 0x65
0x00000000004f5565 : pop rbp ; div ecx ; ret 0xa995
0x00000000004299dc : pop rbp ; in al, 0x31 ; ret 0xf5c5
0x000000000042a44d : pop rbp ; in al, 0x31 ; ret 0xf789
0x0000000000530209 : pop rbp ; in eax, dx ; call qword ptr [rdx]
0x0000000000530341 : pop rbp ; in eax, dx ; jmp qword ptr [rax]
0x00000000004f5ae5 : pop rbp ; jg 0x4f5b1f ; ret
0x00000000004fd165 : pop rbp ; jmp 0x11cf324
0x0000000000544331 : pop rbp ; jmp qword ptr [rbx]
0x000000000040d84b : pop rbp ; jmp rax
0x00000000004ab2a0 : pop rbp ; jmp rdx
0x000000000050771f : pop rbp ; jne 0x50776e ; xchg eax, esi ; test eax, 0x68206634 ; call rax
0x0000000000492c83 : pop rbp ; lahf ; ret 0x5dc2
0x000000000045ad43 : pop rbp ; lea rsp, qword ptr [r10 - 8] ; ret
0x0000000000401cc2 : pop rbp ; mov byte ptr [rip + 0x355ffe], 1 ; ret
0x00000000004ef904 : pop rbp ; mov ch, 0xed ; je 0x4ef90a ; ret
0x0000000000511d85 : pop rbp ; mov cl, 0x1e ; movsb byte ptr [rdi], byte ptr [rsi] ; or ebp, dword ptr [rbx + 0x55] ; xchg bh, cl ; ret
0x0000000000401c4f : pop rbp ; mov edi, 0x757c98 ; jmp rax
0x0000000000451672 : pop rbp ; mov qword ptr [rdi + 0x68], rdx ; pop r14 ; ret
0x000000000044a3d3 : pop rbp ; mov rax, rdx ; ret
0x00000000004a0532 : pop rbp ; mov rdi, qword ptr [rbx + 8] ; call 0x41c837
0x00000000004f5d29 : pop rbp ; nop ; ret 0x40fb
0x0000000000429adf : pop rbp ; or al, 0x31 ; ret 0xf789
0x0000000000421715 : pop rbp ; pop r12 ; jmp rax
0x0000000000481442 : pop rbp ; pop r12 ; mov rax, qword ptr [rdi + 0x10] ; jmp rax
0x00000000004b34fb : pop rbp ; pop r12 ; mov rax, qword ptr [rdi + 8] ; jmp rax
0x0000000000419ca5 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000419e31 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000423978 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040303b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000402753 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004024b4 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040e44d : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000045c9a3 : pop rbp ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000000004020ad : pop rbp ; pop r12 ; ret
0x0000000000419e35 : pop rbp ; pop r14 ; jmp rax
0x0000000000419dee : pop rbp ; pop r14 ; mov esi, 0x86 ; jmp rax
0x0000000000438ebc : pop rbp ; pop r14 ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000043b0b9 : pop rbp ; pop r14 ; pop r15 ; jmp r9
0x000000000042397c : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004098a4 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040303f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004a2293 : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000402757 : pop rbp ; pop r14 ; ret
0x0000000000501a49 : pop rbp ; push rdx ; ret
0x0000000000505f5b : pop rbp ; push rsp ; pop rsp ; ret
0x0000000000401c60 : pop rbp ; ret
0x00000000005108aa : pop rbp ; ret 0xe4b6
0x00000000004b05cf : pop rbp ; ret 0xfff6
0x000000000050b054 : pop rbp ; sbb rax, 0x7a233fff ; ret
0x00000000004fb58d : pop rbp ; stosd dword ptr [rdi], eax ; cmp edx, dword ptr [rbp - 0x59e6c243] ; ret
0x0000000000417a1e : pop rbp ; sub byte ptr [rcx + 1], cl ; ret 0x8948
0x0000000000406e5f : pop rbp ; test eax, 0x8948ffff ; ret 0x485b
0x000000000050c944 : pop rbx ; adc ah, byte ptr [rbx + rcx*8 + 6] ; push rcx ; shl byte ptr [rdx + 0x56], 1 ; ret 0x3451
0x0000000000509bbc : pop rbx ; add byte ptr [rsi + rbx], bl ; ret
0x000000000048b40c : pop rbx ; add rax, 0x18 ; ret
0x000000000048b474 : pop rbx ; add rax, 0x20 ; ret
0x000000000052c409 : pop rbx ; cmc ; call rsp
0x000000000050fb8c : pop rbx ; cmp cl, byte ptr [rcx] ; cmp eax, 0x206348b8 ; push rbx ; ret 0x6202
0x00000000004fbc1e : pop rbx ; fisubr word ptr [rsi - 0x4d] ; ret 0xaed3
0x000000000052ff31 : pop rbx ; in eax, dx ; call qword ptr [rbx]
0x00000000004fa104 : pop rbx ; in eax, dx ; jl 0x4fa0e9 ; ret 0x278f
0x00000000004fe23c : pop rbx ; insd dword ptr [rdi], dx ; enter 0x405a, -0xc ; insb byte ptr [rdi], dx ; ret
0x0000000000529ad9 : pop rbx ; int1 ; jmp rsp
0x000000000050ee63 : pop rbx ; ja 0x50ee35 ; jno 0x50eedb ; call qword ptr [rax]
0x000000000050ee62 : pop rbx ; ja 0x50ee36 ; jno 0x50eedc ; call qword ptr [rax]
0x000000000046c703 : pop rbx ; jmp r9
0x000000000043d03f : pop rbx ; jmp rax
0x000000000046d0e8 : pop rbx ; jmp rcx
0x0000000000501e25 : pop rbx ; jno 0x501dcc ; ret
0x0000000000516725 : pop rbx ; lahf ; ret 0xbf2e
0x0000000000517de8 : pop rbx ; mov cl, cl ; ret 0x90cf
0x000000000042553f : pop rbx ; mov dword ptr [rdx + 0x6c], 0x20 ; ret
0x0000000000480d40 : pop rbx ; mov eax, 0x1f ; pop rbp ; pop r12 ; ret
0x00000000004b9880 : pop rbx ; mov eax, 0xfffffffe ; pop rbp ; pop r12 ; ret
0x000000000047a2d0 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000402a37 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000004b3350 : pop rbx ; mov eax, 2 ; pop rbp ; pop r12 ; ret
0x00000000004b3340 : pop rbx ; mov eax, 3 ; pop rbp ; pop r12 ; ret
0x0000000000421ad6 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000450311 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004353c7 : pop rbx ; mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000421300 : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000404a44 : pop rbx ; mov edi, 1 ; call qword ptr [rax]
0x000000000050aa69 : pop rbx ; mov edx, ss ; sub al, ch ; test dword ptr [rsi], edi ; wait ; ret
0x0000000000406d59 : pop rbx ; mov esi, 1 ; xor edi, edi ; jmp rax
0x0000000000424132 : pop rbx ; mov qword ptr [rdi], rax ; ret
0x000000000048b38c : pop rbx ; mov rax, qword ptr [rax + 0x10] ; ret
0x000000000048b37e : pop rbx ; mov rax, qword ptr [rax + 0x18] ; ret
0x0000000000486d90 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; ret
0x000000000048b39c : pop rbx ; mov rax, qword ptr [rax + 0x28] ; ret
0x000000000048b43a : pop rbx ; mov rax, qword ptr [rax + 8] ; add rax, 8 ; ret
0x000000000048b3ac : pop rbx ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000406e66 : pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000004495fe : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043494a : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000042ab10 : pop rbx ; or byte ptr [rcx - 9], al ; ret
0x000000000042f510 : pop rbx ; or byte ptr [rcx - 9], al ; ret 0x800
0x0000000000528b91 : pop rbx ; out dx, eax ; call rsp
0x00000000004a228f : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040d84a : pop rbx ; pop rbp ; jmp rax
0x00000000004ab29f : pop rbx ; pop rbp ; jmp rdx
0x000000000044a3d2 : pop rbx ; pop rbp ; mov rax, rdx ; ret
0x0000000000421714 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004814cf : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rdi + 0x10] ; jmp rax
0x0000000000419ca4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000419e30 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000402752 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004024b3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040e44c : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004020ac : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401ed0 : pop rbx ; pop rbp ; ret
0x0000000000402329 : pop rbx ; ret
0x000000000042bd20 : pop rbx ; ret 0x3956
0x00000000005138e9 : pop rbx ; ret 0x748b
0x000000000050182d : pop rbx ; ret 0x958e
0x00000000004f4de4 : pop rbx ; ret 0xdfca
0x00000000004f64b4 : pop rbx ; stc ; or byte ptr [rsi + 0x4e], ch ; leave ; call 0xffffffff847726e9
0x00000000004f64b3 : pop rbx ; stc ; or byte ptr [rsi + 0x4e], ch ; leave ; call 0xffffffff847726ea
0x00000000004f8591 : pop rbx ; sub dword ptr [rdi - 0xe], 0xf ; ret
0x00000000004786d4 : pop rbx ; sub edx, ebp ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000044ac5a : pop rbx ; test edx, edx ; setne al ; ret
0x000000000040d876 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004047e4 : pop rbx ; xor edi, edi ; call qword ptr [rax]
0x00000000004491b7 : pop rbx ; xor rax, rdx ; ret
0x000000000053496d : pop rcx ; add byte ptr [rax], al ; sbb dh, 0xee ; jmp rsi
0x00000000004f1276 : pop rcx ; add dl, ch ; ret
0x0000000000408e77 : pop rcx ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000004f6f6c : pop rcx ; cwde ; ret 0x978
0x000000000049fc42 : pop rcx ; idiv bh ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000049fce4 : pop rcx ; idiv bh ; xor eax, eax ; add rsp, 8 ; ret
0x000000000048fcf4 : pop rcx ; idiv edi ; xor eax, eax ; pop rbx ; ret
0x00000000004faa77 : pop rcx ; jne 0x4faadb ; ret
0x0000000000512ce4 : pop rcx ; leave ; std ; ret
0x00000000005049f4 : pop rcx ; or al, bl ; ret 0x1878
0x0000000000528639 : pop rcx ; out dx, al ; jmp rsp
0x0000000000448a7b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000506e39 : pop rcx ; push 0x95 ; ret 0x4551
0x00000000004180bf : pop rcx ; push rbp ; adc byte ptr [rax - 0x77], cl ; ret 0xf48
0x000000000050b796 : pop rcx ; push rbx ; ret 0xf9bc
0x00000000004892c3 : pop rcx ; ret
0x000000000050d891 : pop rcx ; ret 0x49bd
0x00000000005041d2 : pop rcx ; ret 0xbbd7
0x000000000041b445 : pop rcx ; ret 0xf775
0x00000000004b46a4 : pop rcx ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000050b765 : pop rcx ; xchg eax, esp ; sub al, 0xdd ; stosb byte ptr [rdi], al ; ret 0x6595
0x0000000000505a3b : pop rcx ; xor cl, byte ptr [rdi + rbp*8 + 0x6e] ; ret
0x00000000004c97ff : pop rdi ; add cl, ah ; ret 0x84e0
0x00000000004ae67c : pop rdi ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000045d6de : pop rdi ; and ch, al ; clc ; ja 0x45d6dd ; ret
0x000000000050db34 : pop rdi ; cmc ; ret
0x0000000000517566 : pop rdi ; frstor dword ptr [rdi + 0x7e55ea46] ; ret 0xc2c2
0x00000000005084e1 : pop rdi ; fstp dword ptr [rip - 0x25b0384b] ; push rbp ; ret 0xcea5
0x000000000049f698 : pop rdi ; idiv bh ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004f1273 : pop rdi ; int1 ; jae 0x4f12d6 ; add dl, ch ; ret
0x00000000004be107 : pop rdi ; ja 0x4be12e ; popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x00000000004be106 : pop rdi ; ja 0x4be12f ; popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x00000000005160a5 : pop rdi ; jmp 0x51606c
0x000000000043b0bd : pop rdi ; jmp r9
0x0000000000423980 : pop rdi ; jmp rax
0x00000000004ec994 : pop rdi ; mov al, 0xd2 ; ret
0x0000000000512ce2 : pop rdi ; or bl, byte ptr [rcx - 0x37] ; std ; ret
0x0000000000412f1b : pop rdi ; or byte ptr [rax + 0x11], cl ; ret
0x000000000050a91e : pop rdi ; pop r12 ; jmp 0xffffffffc301e171
0x000000000045ad42 : pop rdi ; pop rbp ; lea rsp, qword ptr [r10 - 8] ; ret
0x00000000004098a8 : pop rdi ; pop rbp ; ret
0x0000000000518b17 : pop rdi ; popfq ; insb byte ptr [rdi], dx ; out 0xee, al ; cmp al, 0x8b ; ret
0x0000000000403043 : pop rdi ; ret
0x0000000000493b1b : pop rdi ; ret 0x40a3
0x00000000004f7b03 : pop rdi ; ret 0xd710
0x000000000045c624 : pop rdi ; sbb byte ptr [rcx + 0x5d], al ; pop r12 ; ret
0x0000000000515a44 : pop rdi ; scasb al, byte ptr [rdi] ; sbb eax, 0xbff8fc48 ; ret 0x4fd8
0x0000000000412e87 : pop rdi ; sub byte ptr [rax + 0x11], cl ; ret
0x00000000004fcdc4 : pop rdi ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x000000000051171b : pop rdi ; sub dword ptr [rax - 0x1354ddd], eax ; ret
0x0000000000506112 : pop rdi ; xchg eax, ecx ; loop 0x506123 ; jbe 0x5060df ; ret
0x0000000000506112 : pop rdi ; xchg eax, ecx ; loop 0x506124 ; jbe 0x5060e0 ; ret
0x0000000000506111 : pop rdi ; xchg eax, ecx ; loop 0x506125 ; jbe 0x5060e1 ; ret
0x0000000000511104 : pop rdi ; xchg eax, edi ; xchg esp, edi ; shr edx, cl ; ret
0x00000000004fea3b : pop rdi ; xchg eax, esi ; pop rbp ; adc eax, 0xa72d001e ; ret
0x000000000050d78d : pop rdi ; xor ch, ch ; ret 0xa9bd
0x0000000000517062 : pop rdi ; xor cl, byte ptr [rsi - 0x4dea093b] ; ret
0x000000000052ab85 : pop rdx ; add dword ptr [rax], eax ; hlt ; sal dl, 1 ; jmp rsp
0x0000000000472a02 : pop rdx ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x000000000046a630 : pop rdx ; add rsp, 8 ; ret
0x000000000054e579 : pop rdx ; cmc ; jmp qword ptr [rdi]
0x0000000000490a25 : pop rdx ; cmp r10d, 2 ; je 0x490a69 ; xor eax, eax ; ret
0x00000000004bdf73 : pop rdx ; cwde ; call 0x7854a230
0x00000000004fe23f : pop rdx ; hlt ; insb byte ptr [rdi], dx ; ret
0x000000000049fbca : pop rdx ; idiv bh ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000052fee9 : pop rdx ; in eax, dx ; call qword ptr [rsi]
0x000000000051574d : pop rdx ; jb 0x5156e5 ; pop rsi ; ret
0x0000000000544129 : pop rdx ; jmp qword ptr [rbx]
0x0000000000504000 : pop rdx ; loop 0x504066 ; ret
0x00000000004fccc1 : pop rdx ; mov ah, 0x9e ; std ; ret
0x0000000000516ba0 : pop rdx ; or byte ptr [rsi], al ; jo 0x516b5f ; mov dl, 0xf9 ; ret 0xbf6e
0x000000000050ee61 : pop rdx ; pop rbx ; ja 0x50ee37 ; jno 0x50eedd ; call qword ptr [rax]
0x0000000000445b3f : pop rdx ; pop rbx ; ret
0x00000000004ef993 : pop rdx ; pop rsi ; out 0x6b, eax ; push rbp ; stc ; ret 0x98f0
0x00000000004f67f5 : pop rdx ; ret
0x0000000000509f5c : pop rdx ; ret 0xd378
0x000000000050a68b : pop rdx ; ret 0xd69
0x00000000005032ff : pop rdx ; sbb bh, byte ptr es:[rcx - 0x47] ; ret
0x0000000000500f5c : pop rdx ; sub al, 0x3f ; cld ; ret 0xeb49
0x000000000052db6d : pop rsi ; add al, byte ptr [rax] ; test al, 0xf7 ; jmp rsp
0x0000000000534e3d : pop rsi ; add byte ptr [rax], al ; and al, ch ; out dx, al ; call rcx
0x0000000000544ddd : pop rsi ; add dword ptr [rax], eax ; call qword ptr gs:[rbx]
0x00000000005051cd : pop rsi ; add esp, dword ptr [rbp - 0x47] ; pushfq ; outsd dx, dword ptr [rsi] ; ret 0x53a0
0x0000000000478d66 : pop rsi ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000005444a9 : pop rsi ; call rsi
0x000000000041151d : pop rsi ; clc ; lea rsp, qword ptr [rsi] ; ret
0x0000000000518ed4 : pop rsi ; clc ; ret 0xe28e
0x0000000000460e8e : pop rsi ; cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000518127 : pop rsi ; cmp eax, dword ptr [rdi + 0x63] ; ret
0x000000000050b730 : pop rsi ; cmp edx, dword ptr [rbx] ; mov bh, 4 ; ret
0x0000000000515e1f : pop rsi ; fbld dword ptr [rsi] ; ret 0x4d11
0x00000000004f9e3b : pop rsi ; fimul dword ptr [rbx] ; cli ; int1 ; adc ch, dh ; ret
0x000000000049f720 : pop rsi ; idiv bh ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000530381 : pop rsi ; in eax, dx ; call qword ptr [rax]
0x0000000000500ee8 : pop rsi ; jmp 0xffffffff8912faa5
0x0000000000419e37 : pop rsi ; jmp rax
0x000000000050fe2f : pop rsi ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x0000000000419df0 : pop rsi ; mov esi, 0x86 ; jmp rax
0x0000000000451904 : pop rsi ; mov qword ptr [rdi + 0x60], rax ; mov qword ptr [rdi + 0x68], rdx ; ret
0x0000000000438ebe : pop rsi ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000004ef994 : pop rsi ; out 0x6b, eax ; push rbp ; stc ; ret 0x98f0
0x000000000045c9a1 : pop rsi ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000000000043b0bb : pop rsi ; pop r15 ; jmp r9
0x000000000042397e : pop rsi ; pop r15 ; jmp rax
0x000000000045ad40 : pop rsi ; pop r15 ; pop rbp ; lea rsp, qword ptr [r10 - 8] ; ret
0x00000000004098a6 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000403041 : pop rsi ; pop r15 ; ret
0x0000000000505f5a : pop rsi ; pop rbp ; push rsp ; pop rsp ; ret
0x00000000004a2295 : pop rsi ; pop rbp ; ret
0x00000000004928db : pop rsi ; popfq ; ret
0x000000000047d943 : pop rsi ; push rdx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000402759 : pop rsi ; ret
0x000000000042bd2d : pop rsi ; sbb al, 0xab ; pop rbx ; ret 0x3956
0x000000000051340d : pop rsi ; scasb al, byte ptr [rdi] ; mov cl, 0x4d ; ret
0x0000000000406a4e : pop rsi ; std ; xor al, 0 ; ret
0x0000000000410e27 : pop rsi ; sub byte ptr [rax - 0x73], cl ; xor bl, dh ; ret
0x0000000000430d95 : pop rsi ; xor ah, al ; ret 0x71
0x0000000000517199 : pop rsi ; xor dword ptr [rbx], ebp ; jrcxz 0x51716d ; push rdi ; ret
0x00000000004048bd : pop rsi ; xor rax, 0x89480100 ; ret
0x0000000000551634 : pop rsp ; add al, byte ptr es:[rax] ; cwde ; or dh, dh ; call qword ptr [rbx]
0x00000000004a2606 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000533834 : pop rsp ; add byte ptr [rax], al ; call 0xffffffffd55326f2
0x0000000000543e34 : pop rsp ; add qword ptr [rax], r8 ; js 0x543e92 ; call qword ptr [rbx]
0x000000000046dcc6 : pop rsp ; and al, 0x10 ; call r12
0x00000000004c7c3b : pop rsp ; and al, 0x10 ; lea rsp, qword ptr [rsp + 0x18] ; ret
0x00000000004c74a9 : pop rsp ; and al, 0x28 ; call rax
0x0000000000432f1c : pop rsp ; and al, 0x30 ; add esp, eax ; ret 0x6d
0x0000000000491cca : pop rsp ; and al, 0x30 ; add rsp, 0x38 ; ret
0x00000000004f6454 : pop rsp ; call qword ptr [rcx]
0x000000000052ef39 : pop rsp ; cli ; call rsp
0x000000000047e854 : pop rsp ; cli ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000005070f0 : pop rsp ; enter -0x6f25, -0x2e ; ret
0x0000000000420d83 : pop rsp ; enter 0xf66, 0x28 ; sal edx, 0xf ; ret 0x7e05
0x0000000000511928 : pop rsp ; fldenv dword ptr [rbp - 0x22] ; fld dword ptr [rbx - 0x2a] ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x000000000054b011 : pop rsp ; hlt ; call qword ptr [rcx]
0x000000000054b029 : pop rsp ; hlt ; jmp rsp
0x0000000000492c7a : pop rsp ; in al, -0x48 ; pop rsp ; pop rsp ; in al, -0x61 ; ret 0x5dc2
0x0000000000492c7e : pop rsp ; in al, -0x61 ; ret 0x5dc2
0x0000000000535c34 : pop rsp ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; sub bh, ch ; out dx, eax ; jmp qword ptr [rdi]
0x00000000004f09b8 : pop rsp ; jb 0x4f0945 ; pop rsp ; mov ah, 0x91 ; ret
0x00000000005134c5 : pop rsp ; jge 0x513452 ; ret
0x00000000004fe8ba : pop rsp ; jle 0x4fe8c2 ; ret 0x25f3
0x000000000050a920 : pop rsp ; jmp 0xffffffffc301e16f
0x0000000000421717 : pop rsp ; jmp rax
0x0000000000507bb8 : pop rsp ; jmp rsp
0x00000000004f113a : pop rsp ; js 0x4f1165 ; ret 0xc4
0x00000000004f09bb : pop rsp ; mov ah, 0x91 ; ret
0x0000000000481444 : pop rsp ; mov rax, qword ptr [rdi + 0x10] ; jmp rax
0x00000000004b34fd : pop rsp ; mov rax, qword ptr [rdi + 8] ; jmp rax
0x00000000004a7fd3 : pop rsp ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000503b89 : pop rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000050b431 : pop rsp ; or dl, cl ; ret 0x4a54
0x0000000000419ca7 : pop rsp ; pop r13 ; jmp rax
0x0000000000419e33 : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x0000000000438eba : pop rsp ; pop r13 ; pop r14 ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000043b0b7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp r9
0x000000000042397a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004098a2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040303d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004a2291 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000402755 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004024b6 : pop rsp ; pop r13 ; ret
0x000000000040e44f : pop rsp ; pop r14 ; ret
0x000000000045c9a5 : pop rsp ; pop rbx ; pop rbp ; ret
0x0000000000492c79 : pop rsp ; pop rsp ; in al, -0x48 ; pop rsp ; pop rsp ; in al, -0x61 ; ret 0x5dc2
0x0000000000492c7d : pop rsp ; pop rsp ; in al, -0x61 ; ret 0x5dc2
0x00000000004020af : pop rsp ; ret
0x0000000000528dbc : pop rsp ; ret 0
0x000000000047a4af : pop rsp ; ret 0x51
0x0000000000492fe7 : pop rsp ; ret 0xacd3
0x0000000000530d34 : pop rsp ; sbb eax, 0x78980000 ; in eax, dx ; call rsp
0x0000000000504b7f : pop rsp ; sbb eax, 0xf5606b8 ; ret 0x5232
0x000000000041b4ae : pop rsp ; shl dword ptr [rsi + 0xf], 0x2e ; ret
0x000000000050fe2a : pop rsp ; test eax, 0x5e4fdc3c ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x0000000000518060 : popfq ; adc edx, edx ; out dx, eax ; ret 0xd875
0x000000000052e6e5 : popfq ; add al, byte ptr [rax] ; xchg eax, esp ; mov dh, 0xf8 ; call rsp
0x000000000048b517 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004b9755 : popfq ; add byte ptr [rsi + 0x52], ch ; add byte ptr [rbp - 0x77], al ; ret 0x8941
0x000000000048fed7 : popfq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xbe08
0x0000000000546ee9 : popfq ; call rbx
0x000000000052e529 : popfq ; clc ; call rsp
0x00000000004385e7 : popfq ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000510ccb : popfq ; cli ; sbb byte ptr [rcx + 0x7f62a6fd], dh ; ret 0x8b90
0x00000000004f507e : popfq ; cmp ebp, ecx ; xchg eax, ebx ; ret 0x6d6e
0x0000000000502736 : popfq ; fmul qword ptr [rax + 0xf138c19] ; ret 0x3453
0x00000000004be10a : popfq ; hlt ; stosd dword ptr [rdi], eax ; ret 0x2841
0x0000000000508be5 : popfq ; in al, dx ; jl 0x508c2b ; lea edi, dword ptr [rsi] ; in al, dx ; ret
0x0000000000518b18 : popfq ; insb byte ptr [rdi], dx ; out 0xee, al ; cmp al, 0x8b ; ret
0x0000000000511a3d : popfq ; insd dword ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xcec9
0x00000000004fb6af : popfq ; int 0xc
0x0000000000503927 : popfq ; jb 0x50392e ; ret 0x4a9d
0x0000000000506226 : popfq ; jmp 0x2db8c68d
0x00000000004f607d : popfq ; mov eax, 0x2e34d45f ; idiv dword ptr [rdx] ; ret
0x00000000004faa07 : popfq ; out -9, eax ; xchg eax, esi ; ret
0x00000000005040f5 : popfq ; pushfq ; ret
0x000000000047d5c3 : popfq ; ret
0x00000000004f5794 : popfq ; ret 0x22da
0x0000000000515909 : popfq ; ret 0xabbd
0x000000000048a435 : popfq ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000048763f : popfq ; sub ecx, edi ; dec dword ptr [rax - 0x77] ; ret 0x1b8
0x0000000000518c73 : popfq ; xchg eax, ebp ; push rax ; in eax, dx ; ret
0x0000000000505d0a : popfq ; xchg eax, r8d ; ret 0x18b4
0x00000000004bdca4 : pshufb mm0, mm1 ; pxor xmm0, xmm2 ; ret
0x00000000004bd89a : pshufb mm0, mm1 ; ret
0x00000000004c8dbc : pshufb mm0, mm2 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004bda30 : pshufb mm0, mm2 ; ret
0x00000000004c8760 : pshufb mm0, mm5 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004c1cb7 : pshufb mm6, mm7 ; sub r10, rax ; jmp 0x4c1cc6
0x00000000004bdca3 : pshufb xmm0, xmm1 ; pxor xmm0, xmm2 ; ret
0x00000000004bd899 : pshufb xmm0, xmm1 ; ret
0x00000000004bda2f : pshufb xmm0, xmm2 ; ret
0x00000000004c1cb6 : pshufb xmm6, xmm7 ; sub r10, rax ; jmp 0x4c1cc7
0x00000000004c465f : pshufw mm3, mm0, -1 ; pxor xmm2, xmm3 ; ret
0x000000000042c2f6 : psllq mm1, qword ptr [rdi] ; jg 0x42c359 ; adc bl, dh ; ret
0x00000000004f1f80 : push -0x15e4f6ea ; push rbp ; xor eax, dword ptr [rdx] ; ret
0x000000000041bf94 : push -0x17000150 ; ret
0x000000000050cc3e : push -0x1f1152a8 ; jnp 0x50cc27 ; ret 0x9f85
0x0000000000535815 : push -0x2980000 ; out dx, al ; jmp qword ptr [rsi]
0x00000000005357fd : push -0x2b00000 ; out dx, al ; jmp qword ptr [rbx]
0x0000000000505ac5 : push -0x2c6d761c ; xchg eax, ebx ; ret
0x0000000000449880 : push -0x3b7cb7d0 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004f90da : push -0x3c571659 ; ret
0x000000000050c0ee : push -0x5cb70ed8 ; call rax
0x000000000051574b : push -0x6f8da5a0 ; pop rsi ; ret
0x000000000050e747 : push -0x7067e997 ; js 0x50e7cb ; ret
0x0000000000518a6c : push -0x7146916a ; nop ; test al, 0xb1 ; ret 0xf0ad
0x000000000047e5e4 : push -0x760007ce ; ret
0x000000000049f2c4 : push -0x760009cb ; fisubr dword ptr [rcx] ; ret 0xd285
0x000000000040b9bb : push -0x7cb70001 ; ret
0x00000000004b26bc : push -0x7cc68bf8 ; ret
0x000000000051776f : push -0x7fbeb07a ; ret 0xdcb0
0x000000000041c97e : push -0x976b3ff ; mov rdi, qword ptr [rbx] ; call r15
0x00000000005184c6 : push -0xe6dfcd7 ; ret 0x250d
0x0000000000535a05 : push 0 ; add byte ptr [rax + 5], ch ; out dx, eax ; call qword ptr [rbx]
0x0000000000535a2d : push 0 ; add byte ptr [rax + 6], ah ; out dx, eax ; call qword ptr [rbx]
0x000000000050b9f1 : push 0x14277525 ; sub ah, byte ptr [rdx] ; ret
0x0000000000517322 : push 0x180b280f ; jae 0x51739c ; ret 0xeeb6
0x00000000005108ce : push 0x2257188a ; jle 0x5108dc ; ret
0x00000000004c4e7c : push 0x245c8b44 ; adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000472585 : push 0x31 ; rol byte ptr [rbx - 0x7cb7fe3b], cl ; ret
0x00000000004faa02 : push 0x32 ; cwde ; ja 0x4faa55 ; popfq ; out -9, eax ; xchg eax, esi ; ret
0x0000000000503b93 : push 0x35846b95 ; fdivr dword ptr [rcx] ; ret 0xafd3
0x000000000050e64c : push 0x41 ; std ; ret
0x0000000000544c09 : push 0x41380e0a ; ret
0x0000000000492efe : push 0x414182b8 ; ret
0x0000000000492efd : push 0x4182b868 ; ret
0x00000000004fa00b : push 0x42 ; sub eax, dword ptr [rdi] ; ret 0xecf9
0x00000000004a8371 : push 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000469d4c : push 0x48002f02 ; add esp, 8 ; ret
0x0000000000419664 : push 0x48ffffff ; add eax, ebx ; pop rbx ; ret
0x00000000005085d4 : push 0x56a8628c ; push rsi ; lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x000000000040600c : push 0x5b003538 ; ret
0x0000000000449fb8 : push 0x5c415d5b ; pop r13 ; ret
0x000000000050b72f : push 0x5e ; cmp edx, dword ptr [rbx] ; mov bh, 4 ; ret
0x0000000000505f56 : push 0x5eca2bc0 ; pop rbp ; push rsp ; pop rsp ; ret
0x00000000005129da : push 0x6f ; ret 0x2167
0x00000000004fad95 : push 0x70cd8b80 ; xchg eax, esi ; xlatb ; stosb byte ptr [rdi], al ; ret
0x0000000000493483 : push 0x75 ; ret 0x6a89
0x000000000042be26 : push 0x76 ; leave ; ret 0x8581
0x00000000004309de : push 0x76 ; out 0xae, al ; in eax, dx ; leave ; ret 0x3b81
0x00000000005097e6 : push 0x84 ; cdq ; sub esi, dword ptr [rbx - 0x50] ; mov ah, 0xac ; ret
0x00000000004f863a : push 0x897884f ; salc ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x0000000000506e3b : push 0x95 ; ret 0x4551
0x00000000004fafff : push 0xa8 ; outsb dx, byte ptr [rsi] ; int1 ; ret
0x000000000050f482 : push 0xae ; ret 0xe408
0x000000000050acd5 : push 0xc5 ; cdq ; mov cl, 0x67 ; ret
0x00000000004f4db5 : push 0xcf ; ret 0xf3f4
0x0000000000509f57 : push 0xd3 ; jnp 0x509f2b ; push rcx ; pop rdx ; ret 0xd378
0x000000000050d6fa : push 0xd7 ; cmc ; ret
0x0000000000504fda : push 0xde ; xor al, 0xf4 ; ret 0xfa73
0x00000000005137d4 : push 0xe7 ; jo 0x5137bb ; ret 0x7553
0x0000000000529b51 : push 0xf1 ; jmp rsp
0x000000000050f6a2 : push 0xf4 ; add edi, edx ; and eax, 0xe3f9eec3 ; ret
0x00000000004a5495 : push 0xf6 ; ret 0xf04
0x0000000000515bea : push 0xfb ; jmp 0xffffffffc40573f3
0x00000000004fd301 : push 7 ; ret
0x000000000046b536 : push qword ptr [r13 - 0x1a] ; ret
0x0000000000529bab : push qword ptr [rax + rcx + 0x75840001] ; int1 ; jmp rsp
0x000000000052b43b : push qword ptr [rax + rcx*4 + 0x33140001] ; hlt ; call rsp
0x0000000000529873 : push qword ptr [rax + rdi*8 + 0x40a40000] ; int1 ; call rsp
0x00000000004b7994 : push qword ptr [rax + rdx*2 - 0x7d] ; ret 0x4801
0x000000000040e6d9 : push qword ptr [rbp + 4] ; ret
0x000000000046a852 : push qword ptr [rbp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000046ace2 : push qword ptr [rbp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x40] ; ret
0x00000000004393e6 : push qword ptr [rbp + rax - 0x18] ; ret 0xfe9d
0x000000000052b50b : push qword ptr [rbp + rcx*4 + 0x44f40001] ; hlt ; jmp rsp
0x000000000052998b : push qword ptr [rbp + rdi*8 + 0x4d240000] ; int1 ; call rsp
0x000000000043acee : push qword ptr [rbp - 0x11] ; add rsp, 8 ; ret
0x000000000046b537 : push qword ptr [rbp - 0x1a] ; ret
0x00000000004704e3 : push qword ptr [rbp - 0x1c] ; add eax, edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040288d : push qword ptr [rbp - 0x40] ; ret
0x000000000041c7fb : push qword ptr [rbx + rax + 0x41] ; call rbp
0x00000000004b20d2 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000004b66b2 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi + 0x18] ; ret
0x00000000004b7712 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000004b7732 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000004b7752 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi + 0x30] ; ret
0x000000000041a122 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000041a2f2 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi + 0x50] ; ret
0x000000000041a312 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi + 0x58] ; ret
0x000000000047a9e2 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000421ec2 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi] ; ret
0x00000000005285e3 : push qword ptr [rbx + rdx*4] ; add byte ptr [rbx + rax*2 - 0x12], al ; call rsp
0x000000000046a8c9 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004b12d3 : push qword ptr [rcx] ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000478cc8 : push qword ptr [rcx] ; ror byte ptr [rax - 0x77], 0x13 ; jmp 0x478c9a
0x000000000045a636 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret 0xd089
0x00000000004a8cfe : push qword ptr [rcx] ; test byte ptr [rax - 0x77], 0xc7 ; call r12
0x00000000004b7612 : push qword ptr [rdi + rax + 0x48] ; mov dword ptr [rdi + 0x10], esi ; xor eax, eax ; ret
0x00000000004b7632 : push qword ptr [rdi + rax + 0x48] ; mov dword ptr [rdi + 0x18], esi ; xor eax, eax ; ret
0x00000000004b7652 : push qword ptr [rdi + rax + 0x48] ; mov dword ptr [rdi + 0x20], esi ; xor eax, eax ; ret
0x00000000004b7672 : push qword ptr [rdi + rax + 0x48] ; mov dword ptr [rdi + 0x28], esi ; xor eax, eax ; ret
0x00000000004b7692 : push qword ptr [rdi + rax + 0x48] ; mov dword ptr [rdi + 0x30], esi ; xor eax, eax ; ret
0x00000000004b75f2 : push qword ptr [rdi + rax + 0x48] ; mov dword ptr [rdi + 8], esi ; xor eax, eax ; ret
0x000000000041c79b : push qword ptr [rdi + rax + 0x48] ; mov eax, dword ptr [rsp + 8] ; call rax
0x00000000004490e6 : push qword ptr [rdi + rax - 0x17] ; ret 0xfffa
0x00000000004b6706 : push qword ptr [rdi + rax - 0x18] ; and ah, byte ptr [rcx - 0xa] ; inc dword ptr [rcx] ; ret
0x00000000004a2df6 : push qword ptr [rdi + rcx - 0x77] ; ret 0x8349
0x000000000052b683 : push qword ptr [rdi + rdx*4 + 1] ; add ah, dl ; jb 0x52b687 ; jmp rsp
0x000000000052e5ab : push qword ptr [rdi + rdx*4 - 0x5babfffe] ; clc ; call rsp
0x00000000005282f3 : push qword ptr [rdx + rax*4 - 0x1f2c0000] ; in eax, dx ; call rsp
0x000000000052e34b : push qword ptr [rdx + rcx*4 + 0x64240002] ; clc ; call rsp
0x000000000052b47b : push qword ptr [rdx + rcx*4 + 1] ; add byte ptr [rdx + rdi], dl ; hlt ; call rsp
0x000000000052e293 : push qword ptr [rsi + rax*4 + 0x4c740002] ; clc ; call rsp
0x000000000052a9bb : push qword ptr [rsi + rcx*2 + 0x71e40001] ; jmp rsp
0x00000000005299c3 : push qword ptr [rsi + rdi*8 + 0x50140000] ; int1 ; jmp rsp
0x000000000052b663 : push qword ptr [rsi + rdx*4 + 0x6ba40001] ; hlt ; call rsp
0x0000000000424b89 : push qword ptr [rsp + rax + 0x5b] ; ret
0x000000000052c3d3 : push qword ptr [rsp + rbx*8] ; add dword ptr [rax], eax ; in al, 0x51 ; cmc ; jmp rsp
0x000000000046be79 : push qword ptr [rsp + rcx + 0x48] ; add esp, 8 ; ret
0x000000000052b4d3 : push qword ptr [rsp + rcx*4 + 0x3fb40001] ; hlt ; call rsp
0x00000000004a5aae : push r10 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004f81b2 : push r10 ; lahf ; pop rsp ; ret
0x0000000000406277 : push r10 ; xor eax, 0x48b4800 ; and al, 0x89 ; ret 0xc148
0x00000000005029c6 : push r11 ; ret
0x00000000004f8a76 : push r12 ; sti ; ret 0x4e7d
0x000000000050d015 : push r15 ; cmp al, 0 ; push rbp ; adc edx, dword ptr [rbp + 7] ; ret 0xa3cf
0x000000000050a9d1 : push r15 ; ret 0xefcf
0x0000000000495d90 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004658d1 : push r8 ; add dword ptr [rax + 1], edi ; ret
0x000000000041a2f7 : push r8 ; ret
0x0000000000502a3a : push r9 ; out dx, eax ; out -0x15, eax ; fdivp st(7) ; cwde ; ret 0x98e5
0x00000000004051f2 : push rax ; adc byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000048b546 : push rax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000405870 : push rax ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x840f
0x000000000054da49 : push rax ; add bh, byte ptr [rbp + 0x41380e0a] ; ret
0x0000000000496b2f : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x0000000000495d91 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000544521 : push rax ; add dh, byte ptr [rsi + 0x41380e0a] ; ret
0x00000000004cd55a : push rax ; add dword ptr [rax + 0xf], ecx ; ret 0x3948
0x00000000004658d2 : push rax ; add dword ptr [rax + 1], edi ; ret
0x000000000046b508 : push rax ; add dword ptr [rbp - 0x14], esi ; ret
0x0000000000432f38 : push rax ; add esp, eax ; ret 0x5d
0x0000000000405b3b : push rax ; add rsp, 8 ; jmp rax
0x0000000000405afc : push rax ; add rsp, 8 ; ret
0x00000000004805ce : push rax ; and byte ptr [rdx], bh ; cmove eax, edx ; ret
0x00000000004f7dcd : push rax ; bt dword ptr [rax - 9], -0x75 ; ret
0x0000000000545030 : push rax ; call qword ptr [eax]
0x0000000000543d01 : push rax ; call qword ptr [rdx]
0x0000000000474fdd : push rax ; cli ; push rsi ; ret
0x00000000004055c4 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000504e91 : push rax ; cmp eax, 0xa3f23e83 ; ret 0x3017
0x000000000053b590 : push rax ; fcomi st(0) ; call qword ptr [rdx]
0x000000000054ae20 : push rax ; hlt ; jmp qword ptr [rdx]
0x00000000004fc523 : push rax ; in al, -5 ; xchg eax, ecx ; lodsb al, byte ptr [rsi] ; neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x000000000052fbb9 : push rax ; in eax, dx ; jmp qword ptr [rax]
0x0000000000518c75 : push rax ; in eax, dx ; ret
0x00000000005299c9 : push rax ; int1 ; jmp rsp
0x0000000000502c19 : push rax ; ja 0x502c4f ; ret
0x00000000005178d6 : push rax ; jbe 0x5178ca ; ret
0x000000000050c538 : push rax ; jmp qword ptr [rdi]
0x0000000000405b1f : push rax ; jmp rax
0x000000000054ea50 : push rax ; jo 0x54ea4b ; call qword ptr [rsi]
0x00000000004fa008 : push rax ; jrcxz 0x4fa052 ; push 0x42 ; sub eax, dword ptr [rdi] ; ret 0xecf9
0x000000000046d4d9 : push rax ; js 0x46d468 ; ret
0x0000000000507de5 : push rax ; lea ebp, dword ptr [rbx - 0x2e] ; mov bl, 0x3c ; ret
0x00000000004ca10d : push rax ; lea rsi, qword ptr [rsi + 0x60] ; ret
0x000000000053e330 : push rax ; leave ; int1 ; jmp rbx
0x00000000004fa63e : push rax ; mov ah, 0xcf ; jl 0x4fa64a ; ffree st(7) ; ret 0x4823
0x0000000000510f12 : push rax ; mov dh, 0x92 ; ret 0x54c
0x000000000043c003 : push rax ; mov eax, 1 ; ret
0x00000000004f1d34 : push rax ; mov ecx, 0x215503f7 ; ret 0xfa94
0x00000000004229c3 : push rax ; mov qword ptr [rdi + 0x58], rdx ; ret
0x00000000004ac522 : push rax ; mov rbp, rdi ; lea rsi, qword ptr [rsi + 0x48] ; call rax
0x000000000046f3fd : push rax ; mov rdi, rbp ; mov edx, r12d ; call rbx
0x00000000004bdf09 : push rax ; movdqa xmm14, xmmword ptr [r10 + 0x60] ; ret
0x000000000050a0ea : push rax ; mul dword ptr [rdi + 0x6439d75e] ; ret
0x0000000000546720 : push rax ; nop ; jmp rsp
0x0000000000468bc2 : push rax ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048b5a7 : push rax ; or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000053baf0 : push rax ; out -0x10, eax ; jmp rbx
0x0000000000544330 : push rax ; pop rbp ; jmp qword ptr [rbx]
0x0000000000494be6 : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000407cdd : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407c2d : push rax ; pop rbx ; ret
0x000000000041a2f8 : push rax ; ret
0x000000000054bc90 : push rax ; sal ah, 1 ; call qword ptr [rbx]
0x0000000000548160 : push rax ; sal bl, cl ; jmp qword ptr [rbx]
0x00000000004806f3 : push rax ; sar byte ptr [rdx], 0xf ; ret 0xc3f3
0x000000000048b55f : push rax ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000048b577 : push rax ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000048075e : push rax ; shr rax, 1 ; and eax, 1 ; ret
0x0000000000535800 : push rax ; std ; out dx, al ; jmp qword ptr [rbx]
0x00000000005528b0 : push rax ; sub al, 0xf6 ; jmp qword ptr [rdx]
0x000000000048ea6f : push rax ; sub byte ptr [rax + 1], bh ; ret
0x000000000048b58f : push rax ; sub byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000054f1b0 : push rax ; test dh, ch ; call qword ptr [rbx]
0x000000000054f170 : push rax ; test dh, ch ; jmp qword ptr [rdi]
0x000000000043d64c : push rax ; test rax, rax ; je 0x43d65e ; jmp rax
0x000000000043d64b : push rax ; test rax, rax ; je 0x43d65f ; jmp rax
0x000000000044b27f : push rax ; test rax, rax ; je 0x44b28d ; call rax
0x000000000044b27e : push rax ; test rax, rax ; je 0x44b28e ; call rax
0x000000000054d3a0 : push rax ; xor ch, dh ; call qword ptr [rdx]
0x0000000000441fa1 : push rbp ; adc byte ptr [rax + rcx*4 + 0x7d], al ; add byte ptr [rax - 0x77], cl ; ret 0xdfe9
0x0000000000442089 : push rbp ; adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000004180c0 : push rbp ; adc byte ptr [rax - 0x77], cl ; ret 0xf48
0x000000000050d01a : push rbp ; adc edx, dword ptr [rbp + 7] ; ret 0xa3cf
0x0000000000490666 : push rbp ; add al, 0x21 ; ret 0xf41
0x0000000000408b52 : push rbp ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000511a21 : push rbp ; and byte ptr [rdx + 0x44], dl ; outsb dx, byte ptr [rsi] ; xchg eax, ebp ; ret
0x00000000004179de : push rbp ; call 0x4a040330
0x00000000005160f3 : push rbp ; cdq ; ret
0x0000000000497432 : push rbp ; cmp byte ptr [rcx + rcx*4 - 0x1f], cl ; mov rdi, rbx ; call r15
0x0000000000432f34 : push rbp ; cmp byte ptr [rsp + 0x50], ch ; add esp, eax ; ret 0x5d
0x000000000052fd11 : push rbp ; in eax, dx ; call rbx
0x0000000000518220 : push rbp ; int1 ; leave ; leave ; ret
0x00000000005151ef : push rbp ; jae 0x5151ca ; out dx, al ; je 0x515254 ; ret
0x0000000000515cb8 : push rbp ; lahf ; fld xword ptr [rax - 0x536b70ed] ; ret
0x00000000004fe1af : push rbp ; mov dl, 0xe1 ; ret
0x0000000000401cea : push rbp ; mov rbp, rsp ; call rax
0x0000000000417f65 : push rbp ; or ah, al ; cmp eax, 0x8948c4d4 ; ret 0xf48
0x000000000047810a : push rbp ; or byte ptr [rax + 0x63], cl ; ret
0x000000000041f871 : push rbp ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000053a647 : push rbp ; or eax, dword ptr [rdx] ; ret
0x000000000050441c : push rbp ; outsb dx, byte ptr [rsi] ; wait ; ret 0x8463
0x000000000050d6f9 : push rbp ; push 0xd7 ; cmc ; ret
0x000000000047d095 : push rbp ; ret
0x000000000050b33d : push rbp ; ret 0x89e7
0x00000000005084e8 : push rbp ; ret 0xcea5
0x000000000050d56d : push rbp ; rol dword ptr [rdi], cl ; ret
0x000000000050e98b : push rbp ; salc ; mov esp, 0xffe87f6a ; ret
0x0000000000505fe5 : push rbp ; scasd eax, dword ptr [rdi] ; ret
0x0000000000509187 : push rbp ; stc ; ret
0x00000000004ef997 : push rbp ; stc ; ret 0x98f0
0x00000000004fbb7a : push rbp ; std ; std ; ret 0x3148
0x0000000000511d8b : push rbp ; xchg bh, cl ; ret
0x000000000050a687 : push rbp ; xchg eax, edi ; jrcxz 0x50a639 ; pop rdx ; ret 0xd69
0x00000000004f1f85 : push rbp ; xor eax, dword ptr [rdx] ; ret
0x0000000000475df4 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000054432d : push rbx ; add dword ptr [rax], eax ; push rax ; pop rbp ; jmp qword ptr [rbx]
0x000000000050ff26 : push rbx ; in al, -0xd ; fcmovbe st(0), st(3) ; std ; ret 0x488a
0x0000000000518490 : push rbx ; in al, dx ; jp 0x51849a ; ret 0x2076
0x0000000000448773 : push rbx ; je 0x448789 ; mov eax, 1 ; pop rbx ; ret
0x000000000049338b : push rbx ; jle 0x4933d7 ; push rbx ; sbb dl, byte ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049338a : push rbx ; jle 0x4933d8 ; push rbx ; sbb dl, byte ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000407967 : push rbx ; jne 0x407978 ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x00000000004079a7 : push rbx ; jne 0x4079b8 ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x0000000000474e79 : push rbx ; jns 0x474e7c ; inc dword ptr [rcx - 0x48] ; ret
0x0000000000511728 : push rbx ; jo 0x51176f ; cmp dword ptr [rbx + rax*4], edx ; ret
0x0000000000511727 : push rbx ; jo 0x511770 ; cmp dword ptr [rbx + rax*4], edx ; ret
0x000000000043a2f0 : push rbx ; mov rbx, rdi ; call qword ptr [rdi]
0x0000000000406097 : push rbx ; mov rbx, rdi ; test rax, rax ; je 0x4060b9 ; call rax
0x00000000004bde2d : push rbx ; movq qword ptr [rsi], mm0 ; ret
0x00000000004b22ff : push rbx ; or byte ptr [rax - 0x77], cl ; pop rax ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000413348 : push rbx ; ret
0x000000000050a908 : push rbx ; ret 0x1e72
0x00000000004f9323 : push rbx ; ret 0x451f
0x000000000050fb94 : push rbx ; ret 0x6202
0x00000000004faa12 : push rbx ; ret 0x74a2
0x000000000050b797 : push rbx ; ret 0xf9bc
0x00000000004b412d : push rbx ; sbb byte ptr [rcx], dh ; div dh ; ret 0xf02
0x000000000049338f : push rbx ; sbb dl, byte ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000517a59 : push rbx ; sbb edx, dword ptr [rdx] ; mov edi, 0x7c44912e ; ret 0x2496
0x00000000004843e1 : push rbx ; stc ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000048fccb : push rbx ; sub byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000049589d : push rbx ; sub byte ptr [rax - 0x3f], cl ; cli ; and byte ptr [rax + 1], cl ; ret 0x14c
0x00000000004b4129 : push rbx ; sub byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rcx], dh ; div dh ; ret 0xf02
0x00000000004f4c0b : push rbx ; test byte ptr [rdi], al ; jmp qword ptr [rdi]
0x0000000000515b4c : push rcx ; adc al, 0x87 ; ror esp, cl ; ret 0xcac1
0x0000000000480167 : push rcx ; add al, ch ; ret 0xfa38
0x0000000000476666 : push rcx ; add bl, dh ; ret
0x000000000046f366 : push rcx ; add byte ptr [rax + 0xf], cl ; ret 0x4c89
0x000000000047536c : push rcx ; add byte ptr [rax + 0xf], cl ; ret 0xc5f6
0x000000000044fc5a : push rcx ; add byte ptr [rax + 0xf], cl ; ret 0xc748
0x000000000046ebdb : push rcx ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000046fde9 : push rcx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b50d8 : push rcx ; add byte ptr [rax - 0x77], cl ; ret 0x2bf
0x0000000000489de1 : push rcx ; add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x0000000000534185 : push rcx ; add byte ptr [rax], al ; js 0x534164 ; out dx, al ; jmp qword ptr [rcx]
0x000000000046ecd1 : push rcx ; add byte ptr [rcx + rcx*4 - 0x39], cl ; call rbx
0x00000000004451a1 : push rcx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000407232 : push rcx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041ddda : push rcx ; and byte ptr [rax - 0x77], cl ; ret 0x854d
0x00000000004f90d7 : push rcx ; and dword ptr [rbx + 0x68], 0xc3a8e9a7 ; ret
0x0000000000543e09 : push rcx ; call qword ptr [rbx]
0x000000000050ba3f : push rcx ; cdq ; ret
0x000000000052c3d9 : push rcx ; cmc ; jmp rsp
0x0000000000518b15 : push rcx ; lahf ; pop rdi ; popfq ; insb byte ptr [rdi], dx ; out 0xee, al ; cmp al, 0x8b ; ret
0x00000000004f93bb : push rcx ; lahf ; ret 0xe1a9
0x0000000000489ccb : push rcx ; mov ecx, 0x8948fff7 ; fucompi st(0) ; pop rcx ; ret
0x0000000000402455 : push rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x4c20
0x00000000004ca306 : push rcx ; out dx, eax ; jmp 0xfffffffff83c6cda
0x0000000000502a3b : push rcx ; out dx, eax ; out -0x15, eax ; fdivp st(7) ; cwde ; ret 0x98e5
0x00000000004ca55c : push rcx ; out dx, eax ; rol ebp, -0x3f ; out dx, eax ; inc ah ; ret
0x00000000004f5ae4 : push rcx ; pop rbp ; jg 0x4f5b20 ; ret
0x0000000000509f5b : push rcx ; pop rdx ; ret 0xd378
0x00000000004f9434 : push rcx ; push rax ; ret
0x0000000000511a14 : push rcx ; ret
0x00000000004fe701 : push rcx ; ret 0x2a40
0x00000000004fdd09 : push rcx ; ret 0x2f85
0x00000000004f79e8 : push rcx ; ret 0x4d55
0x0000000000479ab1 : push rcx ; ret 0x51
0x00000000005086e6 : push rcx ; ret 0x8eb
0x00000000004f8e4a : push rcx ; ret 0xfe1a
0x000000000041d7c3 : push rcx ; sal dword ptr [rbx], 0 ; test rax, rax ; je 0x41d7d9 ; ret
0x0000000000500cf4 : push rcx ; scasb al, byte ptr [rdi] ; jl 0x500cf9 ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x000000000050c949 : push rcx ; shl byte ptr [rdx + 0x56], 1 ; ret 0x3451
0x000000000043a56b : push rcx ; stc ; xor dword ptr [rax], eax ; jne 0x43a535 ; pop rbx ; ret
0x00000000004fa1aa : push rcx ; test eax, 0x8965bf ; jmp qword ptr [rax]
0x00000000004fd8c4 : push rdi ; adc al, 0xd7 ; sahf ; cmp al, 0x26 ; ret 0x6f8
0x000000000042c2fa : push rdi ; adc bl, dh ; ret
0x00000000004551ff : push rdi ; adc byte ptr [rax - 0x77], cl ; ret 0x114c
0x0000000000455188 : push rdi ; adc byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000004a797a : push rdi ; add al, 0x29 ; ret
0x00000000005346dd : push rdi ; add byte ptr [rax], al ; loopne 0x5346bf ; out dx, al ; call qword ptr [rbx]
0x00000000004a95a3 : push rdi ; add dword ptr [rax + 0x2b807], ecx ; add byte ptr [rax], al ; ret
0x0000000000544785 : push rdi ; add dword ptr [rax], eax ; cmp byte ptr [rdx - 0xd], ah ; call qword ptr [rbx]
0x00000000005108d1 : push rdi ; and al, byte ptr [rsi + 0x65] ; jle 0x5108d9 ; ret
0x0000000000455211 : push rdi ; and byte ptr [rax - 0x77], cl ; ret 0x114c
0x000000000045519e : push rdi ; and byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000041076f : push rdi ; and byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x0000000000512bbc : push rdi ; and byte ptr [rcx - 0x3d], al ; hlt ; ret 0x64d9
0x00000000004c707e : push rdi ; cmovno eax, esi ; sidt ptr [r8 + 9] ; ret 0xffb8
0x000000000050d016 : push rdi ; cmp al, 0 ; push rbp ; adc edx, dword ptr [rbp + 7] ; ret 0xa3cf
0x00000000004108aa : push rdi ; cmp byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x000000000045171c : push rdi ; cmp byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x00000000004519bd : push rdi ; cmp byte ptr [rcx - 0x77], cl ; ret
0x00000000004a47c2 : push rdi ; cmp dh, dh ; ret
0x00000000004c8a5b : push rdi ; in al, 0xf ; push rdi ; ret
0x00000000004104fd : push rdi ; jo 0x410552 ; mov dword ptr [rdi + 0x78], ebx ; ret
0x00000000004189e4 : push rdi ; mov eax, 0xc3ac0f4d ; sub byte ptr [rcx + 0x21], cl ; ret
0x0000000000513517 : push rdi ; mov eax, dword ptr [rdx - 0x2d] ; jge 0x51355c ; ret 0xf356
0x00000000005027b6 : push rdi ; mov esp, 0xa7c1baa ; ret
0x0000000000443876 : push rdi ; mov qword ptr [rdi + 0x50], rcx ; ret
0x00000000004c64ec : push rdi ; or al, 0x4c ; mov edx, esp ; call rax
0x000000000049164d : push rdi ; or al, 0xf3 ; ret
0x00000000004060dc : push rdi ; or bl, al ; nop ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000402b11 : push rdi ; or byte ptr [rax + 1], bh ; ret
0x000000000045517d : push rdi ; or byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000004106af : push rdi ; or byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x00000000004229c6 : push rdi ; pop rax ; ret
0x00000000004f8639 : push rdi ; push 0x897884f ; salc ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x00000000004228f5 : push rdi ; ret
0x0000000000503953 : push rdi ; ret 0xb9d9
0x000000000050a9d2 : push rdi ; ret 0xefcf
0x00000000004c1d24 : push rdi ; ret 0xf66
0x00000000004c46ca : push rdi ; sal ebx, 1 ; ret
0x00000000004fa470 : push rdi ; salc ; stosb byte ptr [rdi], al ; xor dword ptr [rdi + 0x69af1543], esi ; ret
0x0000000000455193 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000410b40 : push rdi ; sbb byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x00000000004c1c75 : push rdi ; shl byte ptr [rsi + 0xf], 0xef ; leave ; ret
0x000000000040ff5d : push rdi ; sub bl, dh ; ret
0x00000000004551a9 : push rdi ; sub byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000004ecca3 : push rdi ; xchg eax, edi ; fimul dword ptr [rcx - 0x3f37810b] ; call rdi
0x00000000004551b4 : push rdi ; xor byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000041dfcc : push rdx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004a5aaf : push rdx ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004954b9 : push rdx ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; out dx, eax ; call r14
0x00000000004a03c1 : push rdx ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret 0xffff
0x000000000047d944 : push rdx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a0810 : push rdx ; add byte ptr [rax - 0x77], cl ; ret 0x2bf
0x0000000000483c43 : push rdx ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004caaf0 : push rdx ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000534275 : push rdx ; add byte ptr [rax], al ; test al, 0xd6 ; out dx, al ; jmp qword ptr [rdx]
0x00000000004b9758 : push rdx ; add byte ptr [rbp - 0x77], al ; ret 0x8941
0x00000000004bada6 : push rdx ; add byte ptr [rbp - 0x77], al ; ret 0xc141
0x00000000004baad6 : push rdx ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000004bb2e1 : push rdx ; add byte ptr [rcx], dh ; ret 0x3141
0x00000000004bbe03 : push rdx ; add byte ptr [rcx], dh ; ret 0x8944
0x0000000000439d41 : push rdx ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041eef1 : push rdx ; add rsp, 0x58 ; ret
0x0000000000517a8e : push rdx ; and eax, 0xa88e31fc ; ret 0x8326
0x00000000005091c5 : push rdx ; cqo ; mov ebx, 0x88335561 ; ret
0x00000000004f6143 : push rdx ; in eax, 0x77 ; cmp bl, dl ; sbb byte ptr [rbp + rcx*8 - 0x45], ch ; ret
0x000000000050db30 : push rdx ; inc r8 ; pop rdi ; cmc ; ret
0x00000000004fd8e8 : push rdx ; insd dword ptr [rdi], dx ; stosb byte ptr [rdi], al ; ret 0xa39d
0x0000000000543f89 : push rdx ; jmp qword ptr [rbx]
0x00000000005184c3 : push rdx ; jp 0x51845b ; push -0xe6dfcd7 ; ret 0x250d
0x00000000004f81b3 : push rdx ; lahf ; pop rsp ; ret
0x00000000004e61c8 : push rdx ; lahf ; ret 0x7700
0x00000000004897ca : push rdx ; mov esi, 0xc031fff7 ; pop rbx ; ret
0x0000000000511a23 : push rdx ; outsb dx, byte ptr [rsi] ; xchg eax, ebp ; ret
0x00000000004fe2c7 : push rdx ; pop rax ; jmp 0x95d60d1
0x00000000005064b9 : push rdx ; push rsp ; out 0xeb, al ; ret 0x6449
0x0000000000501a4a : push rdx ; ret
0x0000000000507e09 : push rdx ; ret 0x153c
0x0000000000517dad : push rdx ; ror bl, cl ; ror dword ptr [rbx], cl ; ret 0xd5b3
0x000000000041dc44 : push rdx ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000005128e3 : push rdx ; xchg eax, edi ; sahf ; or eax, 0xeb00e968 ; ret
0x0000000000406278 : push rdx ; xor eax, 0x48b4800 ; and al, 0x89 ; ret 0xc148
0x0000000000455184 : push rsi ; adc byte ptr [rax + 1], cl ; push rdi ; adc byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000045520d : push rsi ; adc byte ptr [rax + 1], cl ; push rdi ; and byte ptr [rax - 0x77], cl ; ret 0x114c
0x0000000000449202 : push rsi ; adc byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; salc ; jmp rax
0x00000000004b8ee9 : push rsi ; adc byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x00000000004fa802 : push rsi ; adc eax, 0x2710841a ; xor al, 0xb0 ; ret 0xa613
0x000000000052ab05 : push rsi ; add dword ptr [rax], eax ; add al, 0xa6 ; call rsp
0x0000000000430d8b : push rsi ; and ah, al ; ret 0x79
0x000000000045519a : push rsi ; and byte ptr [rax + 1], cl ; push rdi ; and byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000004b8f81 : push rsi ; and byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x0000000000514658 : push rsi ; and byte ptr [rbp + 9], dh ; ret
0x0000000000480d06 : push rsi ; call 0xffffffffc2d20d0c
0x000000000043c1dd : push rsi ; cld ; dec dword ptr [rax - 0x75] ; pop r8 ; ret
0x00000000004bbd28 : push rsi ; cmp al, 0x31 ; ret 0xc131
0x0000000000418fd6 : push rsi ; cmp byte ptr [r9], al ; jne 0x418fe9 ; pop rbx ; ret
0x00000000004ee180 : push rsi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; sub dword ptr [rdx - 3], ecx ; sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x000000000052fd71 : push rsi ; in eax, dx ; jmp qword ptr [rdx]
0x00000000004fc35e : push rsi ; ja 0x4fc2fb ; inc byte ptr [rbp + 0x2b62a352] ; ret
0x00000000005162fb : push rsi ; jp 0x516306 ; ret 0x9ade
0x00000000005085da : push rsi ; lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x00000000005080c1 : push rsi ; or eax, 0x22653a4f ; ret 0xb805
0x00000000004f793c : push rsi ; out dx, eax ; jbe 0x4f792f ; jae 0x4f796b ; ret
0x0000000000505a3a : push rsi ; pop rcx ; xor cl, byte ptr [rdi + rbp*8 + 0x6e] ; ret
0x00000000004ac521 : push rsi ; push rax ; mov rbp, rdi ; lea rsi, qword ptr [rsi + 0x48] ; call rax
0x00000000004fa1a9 : push rsi ; push rcx ; test eax, 0x8965bf ; jmp qword ptr [rax]
0x00000000005085d8 : push rsi ; push rsi ; lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x00000000004412ef : push rsi ; ret
0x000000000050969d : push rsi ; ret 0x15e
0x00000000004ef1b4 : push rsi ; ret 0x2211
0x000000000050c94c : push rsi ; ret 0x3451
0x00000000004fc52b : push rsi ; ret 0x38c2
0x00000000004ece73 : push rsi ; ret 0x3a22
0x00000000004fb798 : push rsi ; ret 0x7461
0x00000000004a297c : push rsi ; ret 0xbb03
0x0000000000501000 : push rsi ; ret 0xe039
0x00000000004bbf65 : push rsi ; sbb al, 0x31 ; ret 0xc131
0x000000000045a45b : push rsi ; sbb byte ptr [rax + 0x31], cl ; ret 0x8948
0x000000000045518f : push rsi ; sbb byte ptr [rax + 1], cl ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000004f929c : push rsi ; scasb al, byte ptr [rdi] ; ret 0x2687
0x0000000000500cd8 : push rsi ; sti ; ret
0x00000000004babc6 : push rsi ; sub al, 0x31 ; ret 0xc131
0x00000000004551a5 : push rsi ; sub byte ptr [rax + 1], cl ; push rdi ; sub byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000511d6f : push rsi ; sub dh, byte ptr [rbx + rdi*8 + 0x3db0f735] ; ret 0x40
0x00000000004fcdbf : push rsi ; xchg eax, edi ; adc byte ptr [rax + 0x47], dh ; pop rdi ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x00000000004551b0 : push rsi ; xor byte ptr [rax + 1], cl ; push rdi ; xor byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000004b9019 : push rsi ; xor byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x0000000000495c71 : push rsi ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000045030e : push rsp ; adc bh, dh ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000054002c : push rsp ; adc byte ptr [rcx], al ; add al, dl ; pushfq ; call qword ptr [rbx]
0x0000000000490757 : push rsp ; add al, 0xfc ; jmp 0x4906f3
0x0000000000405e82 : push rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc748
0x000000000052dcbb : push rsp ; add al, byte ptr [rax] ; hlt ; ret 0xfff7
0x00000000004c7866 : push rsp ; add bh, ah ; mov dword ptr [rsi + rax - 4], edx ; ret
0x00000000004c7856 : push rsp ; add bh, dh ; mov word ptr [rsi + rax - 2], dx ; ret
0x000000000053e32c : push rsp ; add byte ptr [rax], al ; push rax ; leave ; int1 ; jmp rbx
0x000000000054312c : push rsp ; add dword ptr [r8], eax ; jo 0x54314c ; jmp rsp
0x000000000054352c : push rsp ; add dword ptr [r8], r8d ; sal byte ptr [rcx], 1 ; call qword ptr [rax]
0x00000000005444a5 : push rsp ; add dword ptr [rax], eax ; cmp byte ptr [rsi - 0xd], bl ; call rsi
0x000000000054552c : push rsp ; add dword ptr gs:[rax], eax ; shl byte ptr [rsi - 0xd], 1 ; call qword ptr [rax]
0x0000000000517daa : push rsp ; add ecx, ebx ; push rdx ; ror bl, cl ; ror dword ptr [rbx], cl ; ret 0xd5b3
0x0000000000444a16 : push rsp ; add rsp, 8 ; ret
0x000000000043c22a : push rsp ; and al, 0x10 ; call rax
0x0000000000476832 : push rsp ; and al, 0x10 ; movsxd rdx, dword ptr [rdi] ; xor edi, edi ; call rax
0x000000000046e1b9 : push rsp ; and al, 0x10 ; movsxd rdx, eax ; call rbx
0x000000000043c644 : push rsp ; and al, 0x18 ; mov rdi, rbp ; call rbx
0x0000000000432f0f : push rsp ; and al, 0x20 ; add esp, eax ; ret 0x75
0x00000000004975d9 : push rsp ; and al, 0x20 ; call r10
0x000000000049411e : push rsp ; and al, 0x28 ; mov rdx, rbp ; call r12
0x000000000044c7c9 : push rsp ; and al, 0x2c ; and edx, ebx ; jmp 0x44c799
0x00000000004a90f1 : push rsp ; and al, 0x30 ; lea rsi, qword ptr [rsp + 0x10] ; call r14
0x00000000004942dc : push rsp ; and al, 0x38 ; mov rdx, rbp ; call r12
0x00000000004c6e2a : push rsp ; and al, 8 ; call r12
0x0000000000447a44 : push rsp ; and al, 8 ; call r14
0x00000000004c73af : push rsp ; and al, 8 ; call r15
0x0000000000419f72 : push rsp ; and al, 8 ; call rax
0x000000000044c326 : push rsp ; and al, 8 ; jmp rax
0x0000000000419f2e : push rsp ; and al, 8 ; mov esi, 6 ; call r12
0x000000000046a24b : push rsp ; and al, 8 ; mov rdi, r13 ; call rax
0x00000000004c6e35 : push rsp ; and al, 8 ; mov rsi, qword ptr [rsp + 0x10] ; call r12
0x00000000004c779c : push rsp ; and al, 8 ; mov rsi, rdi ; call r11
0x000000000047b618 : push rsp ; call 0xffffffff838fb628
0x000000000052a358 : push rsp ; clc ; int1 ; jmp rsp
0x000000000053282c : push rsp ; cmp byte ptr [rax], al ; add byte ptr [rax], al ; jnp 0x532828 ; jmp qword ptr [rbx]
0x0000000000503b30 : push rsp ; cmp cl, bl ; ret 0xa99c
0x0000000000515991 : push rsp ; cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x000000000052b591 : push rsp ; hlt ; call rsp
0x000000000053dc2c : push rsp ; in al, dx ; add byte ptr [rax], al ; mov al, 0x8d ; int1 ; jmp qword ptr [rcx]
0x0000000000445ebf : push rsp ; insd dword ptr [rdi], dx ; add byte ptr [rax + 1], cl ; ret 0x42c6
0x0000000000501065 : push rsp ; int 0x80
0x000000000052d3a0 : push rsp ; jge 0x52d39c ; jmp rsp
0x000000000050aad0 : push rsp ; jle 0x50aaf3 ; xchg eax, esp ; or byte ptr [rdx + 0x69], bh ; ret
0x000000000052a858 : push rsp ; jmp rsp
0x00000000004f93b6 : push rsp ; mov word ptr [rip - 0x60ae2af2], es ; ret 0xe1a9
0x00000000004fb796 : push rsp ; mov word ptr [rsi + 0x44], ss ; ret 0x7461
0x000000000052e5b0 : push rsp ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; call rsp
0x0000000000503ffd : push rsp ; movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rdx ; loop 0x504069 ; ret
0x000000000052fa2c : push rsp ; or al, byte ptr [rax] ; add byte ptr [rax], ah ; in eax, dx ; call qword ptr [rsi]
0x00000000005064ba : push rsp ; out 0xeb, al ; ret 0x6449
0x000000000052c408 : push rsp ; pop rbx ; cmc ; call rsp
0x0000000000505f5c : push rsp ; pop rsp ; ret
0x0000000000535a2c : push rsp ; push 0 ; add byte ptr [rax + 6], ah ; out dx, eax ; call qword ptr [rbx]
0x000000000054432c : push rsp ; push rbx ; add dword ptr [rax], eax ; push rax ; pop rbp ; jmp qword ptr [rbx]
0x00000000004fa91a : push rsp ; ret
0x00000000004f7680 : push rsp ; ret 0x29df
0x0000000000515caf : push rsp ; ret 0x40e7
0x0000000000514bae : push rsp ; ret 0x5018
0x000000000050ce55 : push rsp ; ret 0x5ec7
0x00000000004f5808 : push rsp ; ret 0xf22c
0x000000000052c980 : push rsp ; ret 0xfff5
0x000000000052d448 : push rsp ; ret 0xfff6
0x000000000053b02c : push rsp ; rol byte ptr [rax], 0 ; adc ah, 0xf0 ; call qword ptr [rax]
0x000000000052ff2c : push rsp ; sldt word ptr [rax] ; adc byte ptr [rbx - 0x13], bl ; call qword ptr [rbx]
0x000000000050155b : push rsp ; std ; ret
0x00000000004f8a77 : push rsp ; sti ; ret 0x4e7d
0x0000000000528da0 : push rsp ; xchg eax, ebp ; out dx, eax ; jmp rsp
0x00000000004feb7d : push rsp ; xlatb ; ret 0x32ec
0x00000000004b8ba1 : push rsp ; xor dl, byte ptr [rax] ; ret
0x000000000044521f : push rsp ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000052d6e8 : push rsp ; xor edi, esi ; call rsp
0x0000000000404a79 : pushfq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000548cb5 : pushfq ; add dword ptr [rax], eax ; sub cl, ch ; call qword ptr [rcx]
0x000000000052e22c : pushfq ; add dword ptr [rdx], 0 ; clc ; call rsp
0x0000000000479347 : pushfq ; add rsp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004fc2a4 : pushfq ; call 0x7f126cd3
0x0000000000540031 : pushfq ; call qword ptr [rbx]
0x0000000000546db1 : pushfq ; call qword ptr [rdx]
0x000000000054ec74 : pushfq ; cld ; add dword ptr [rax], eax ; or byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000050f877 : pushfq ; cli ; ret 0x4c6b
0x000000000054e574 : pushfq ; cmc ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xb], bl ; jmp qword ptr [rdi]
0x00000000004fa0ff : pushfq ; cmp dh, al ; or al, 0xc0 ; pop rbx ; in eax, dx ; jl 0x4fa0ee ; ret 0x278f
0x000000000052ef34 : pushfq ; iretd ; add al, byte ptr [rax] ; hlt ; pop rsp ; cli ; call rsp
0x000000000050f4f4 : pushfq ; mov dh, 0x37 ; je 0x50f523 ; ret 0x6948
0x000000000052e324 : pushfq ; mov dword ptr [rdx], eax ; add byte ptr [rdx], ah ; clc ; jmp rsp
0x0000000000528874 : pushfq ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; and al, 0x1e ; out dx, eax ; call rsp
0x00000000005051d1 : pushfq ; outsd dx, dword ptr [rsi] ; ret 0x53a0
0x0000000000534274 : pushfq ; push rdx ; add byte ptr [rax], al ; test al, 0xd6 ; out dx, al ; jmp qword ptr [rdx]
0x00000000005004d6 : pushfq ; ret
0x00000000004fe2cf : pushfq ; ret 0x51d8
0x00000000005085dc : pushfq ; ret 0x9c69
0x000000000050a535 : pushfq ; ret 0xba5c
0x0000000000449380 : pushfq ; ret 0xfffb
0x0000000000550b74 : pushfq ; sbb eax, dword ptr [rdx] ; add byte ptr [rax - 0x24], cl ; cmc ; jmp rsi
0x000000000050cacc : pushfq ; sbb edx, dword ptr [rsi + 0x290570e1] ; ret 0x2f5c
0x0000000000504859 : pushfq ; sub eax, 0xe2ab75b7 ; xchg eax, edi ; jmp qword ptr [rbx]
0x00000000004f47f5 : pushfq ; xchg eax, esi ; jnp 0x4f47a1 ; ret 0x9591
0x000000000052e524 : pushfq ; xchg eax, esp ; add al, byte ptr [rax] ; add al, 0x9d ; clc ; call rsp
0x00000000004c415e : pxor mm0, mm0 ; add rsp, 8 ; ret
0x00000000004c1d4f : pxor mm0, mm0 ; pxor xmm6, xmm6 ; ret
0x00000000004bdca9 : pxor mm0, mm2 ; ret
0x00000000004bd896 : pxor mm0, mm4 ; pshufb xmm0, xmm1 ; ret
0x00000000004bda2c : pxor mm0, mm4 ; pshufb xmm0, xmm2 ; ret
0x00000000004bdc75 : pxor mm0, mm7 ; movdqa xmm7, xmm0 ; ret
0x00000000004beb05 : pxor mm0, mm7 ; ret
0x00000000004c40f6 : pxor mm1, mm1 ; lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x00000000004c1c78 : pxor mm1, mm1 ; ret
0x00000000004c1038 : pxor mm2, mm2 ; ret
0x00000000004c4664 : pxor mm2, mm3 ; ret
0x00000000004c45fc : pxor mm5, mm5 ; add rsp, 8 ; ret
0x00000000004bdb90 : pxor mm6, mm6 ; pxor xmm7, xmm7 ; ret
0x00000000004c1d53 : pxor mm6, mm6 ; ret
0x00000000004c2824 : pxor mm7, mm7 ; lea rsp, qword ptr [rbp] ; pop rbp ; ret
0x00000000004beb01 : pxor mm7, mm7 ; pxor xmm0, xmm7 ; ret
0x00000000004bdb94 : pxor mm7, mm7 ; ret
0x00000000004c415d : pxor xmm0, xmm0 ; add rsp, 8 ; ret
0x00000000004bdca8 : pxor xmm0, xmm2 ; ret
0x00000000004bda2b : pxor xmm0, xmm4 ; pshufb xmm0, xmm2 ; ret
0x00000000004bdc74 : pxor xmm0, xmm7 ; movdqa xmm7, xmm0 ; ret
0x00000000004beb04 : pxor xmm0, xmm7 ; ret
0x00000000004c1c77 : pxor xmm1, xmm1 ; ret
0x00000000004c1037 : pxor xmm2, xmm2 ; ret
0x00000000004c4663 : pxor xmm2, xmm3 ; ret
0x00000000004c45fb : pxor xmm5, xmm5 ; add rsp, 8 ; ret
0x00000000004bdb8f : pxor xmm6, xmm6 ; pxor xmm7, xmm7 ; ret
0x00000000004c1d52 : pxor xmm6, xmm6 ; ret
0x00000000004bdb93 : pxor xmm7, xmm7 ; ret
0x000000000054bf20 : rcl ah, 0xf4 ; call qword ptr [rcx]
0x00000000004b9421 : rcl bh, cl ; sub al, byte ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x000000000045b8aa : rcl bl, 1 ; call 0xffffffff8985993d
0x0000000000405afb : rcl byte ptr [rax + 0x48], 1 ; add esp, 8 ; ret
0x0000000000421a41 : rcl byte ptr [rax + 0x4e], 0 ; ret
0x0000000000543d00 : rcl byte ptr [rax - 0xd], 1 ; call qword ptr [rdx]
0x0000000000480c18 : rcl byte ptr [rbx + 0x2d], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041fca7 : rcl byte ptr [rbx], 0x83 ; clc ; adc ecx, dword ptr [rdi] ; ret 0x3145
0x0000000000421a21 : rcl byte ptr [rcx + 0x4e], 0 ; ret
0x00000000005086e5 : rcl byte ptr [rcx - 0x3e], 1 ; jmp 0x5086f4
0x0000000000538370 : rcl byte ptr [rdi - 0x10], 1 ; call qword ptr [rbx]
0x0000000000421a01 : rcl byte ptr [rdx + 0x4e], 0 ; ret
0x00000000004fb995 : rcl byte ptr [rdx], 1 ; xchg eax, ebp ; in al, dx ; leave ; or al, 0x6b ; ret 0x1320
0x000000000050e265 : rcl ch, 5 ; lodsb al, byte ptr [rsi] ; ret
0x00000000005481b0 : rcl dl, 0xf3 ; call rax
0x00000000004fbb79 : rcl dword ptr [rbp - 3], cl ; std ; ret 0x3148
0x00000000004fa8cd : rcl dword ptr [rcx], 0x41 ; out dx, eax ; ret 0x3a29
0x0000000000501d83 : rcl dword ptr [rdi + 0x77], cl ; loop 0x501d59 ; adc esi, ebp ; ret 0xb687
0x00000000004f5806 : rcl dword ptr [rdi], 1 ; push rsp ; ret 0xf22c
0x00000000004fa8cc : rcl dword ptr cs:[rcx], 0x41 ; out dx, eax ; ret 0x3a29
0x00000000004ff20a : rcl eax, cl ; cmp al, 0x9e ; ret 0x64d4
0x00000000004ef1b2 : rcl ebx, 0x56 ; ret 0x2211
0x000000000053b650 : rcr bl, 0xf0 ; jmp qword ptr [rbx]
0x000000000040be50 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000449601 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000040d878 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000044aa48 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000406e69 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000530340 : rcr byte ptr [rbp - 0x13], 1 ; jmp qword ptr [rax]
0x000000000040281f : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000407926 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040e4ca : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000402aaa : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004027d9 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041902f : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000434949 : rcr byte ptr [rbx + 0xf], 0xb6 ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004786c1 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000044ac59 : rcr byte ptr [rbx - 0x7b], 0xd2 ; setne al ; ret
0x0000000000512777 : rcr byte ptr [rcx - 0x3c], cl ; ret
0x0000000000516a1e : rcr byte ptr [rdi], 0xfd ; sub ch, cl ; in al, dx ; ret
0x000000000054a500 : rcr byte ptr [rdi], 1 ; hlt ; call qword ptr [rdi]
0x00000000004f5ef2 : rcr byte ptr [rdi], 1 ; ret 0x2a90
0x00000000004fb4e6 : rcr byte ptr [rdx + 0x42], 1 ; ret
0x000000000051340c : rcr byte ptr [rsi - 0x52], 1 ; mov cl, 0x4d ; ret
0x0000000000504e8f : rcr dh, 0x50 ; cmp eax, 0xa3f23e83 ; ret 0x3017
0x000000000050efe6 : rcr dh, cl ; ret
0x00000000004f569a : rcr dword ptr [rax - 0x69], 1 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000515852 : rcr dword ptr [rax], cl ; ret 0x32c0
0x00000000004fc8c9 : rcr dword ptr [rbx], cl ; ret
0x00000000004f69af : rcr dword ptr [rcx], cl ; fsubr dword ptr [r8] ; out 0x10, eax ; ret
0x00000000004f512f : rcr dword ptr [rdx - 0x16], 1 ; ret
0x000000000050c96c : rcr eax, 1 ; ret
0x0000000000444828 : rdtsc ; ror byte ptr [rax + 0x39], 0xf1 ; je 0x444889 ; ret
0x000000000044a22e : rep stosq qword ptr [rdi], rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004215a2 : rep stosq qword ptr [rdi], rax ; mov eax, 1 ; pop rbx ; ret
0x0000000000421165 : rep stosq qword ptr [rdi], rax ; ret
0x00000000004fa006 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; push rax ; jrcxz 0x4fa054 ; push 0x42 ; sub eax, dword ptr [rdi] ; ret 0xecf9
0x000000000040171e : ret
0x0000000000528dcd : ret 0
0x00000000004925e9 : ret 0x10
0x00000000004aabcf : ret 0x1004
0x00000000004c300b : ret 0x100f
0x00000000004f9d16 : ret 0x1026
0x0000000000427625 : ret 0x105
0x00000000004b8e3b : ret 0x109
0x0000000000516702 : ret 0x10f8
0x00000000004f1e9e : ret 0x1101
0x0000000000500aa7 : ret 0x1123
0x000000000041069b : ret 0x1148
0x0000000000410017 : ret 0x1149
0x0000000000455203 : ret 0x114c
0x00000000004f82c3 : ret 0x1163
0x00000000004786ac : ret 0x1175
0x0000000000511b18 : ret 0x1203
0x0000000000503ef9 : ret 0x1278
0x0000000000502cc7 : ret 0x12a4
0x0000000000513499 : ret 0x12c9
0x00000000004fb99d : ret 0x1320
0x0000000000495976 : ret 0x13c0
0x000000000050e3e9 : ret 0x13e6
0x0000000000426594 : ret 0x141
0x00000000004bad3c : ret 0x1433
0x0000000000506b48 : ret 0x1437
0x0000000000429468 : ret 0x144
0x000000000050716e : ret 0x1441
0x00000000004250db : ret 0x148
0x000000000045d1dd : ret 0x149
0x00000000004255eb : ret 0x14c
0x00000000005057e9 : ret 0x14db
0x0000000000407b2a : ret 0x150
0x000000000049554b : ret 0x1500
0x0000000000507e0a : ret 0x153c
0x000000000041c423 : ret 0x1574
0x0000000000516aee : ret 0x1595
0x0000000000518ea6 : ret 0x15a3
0x000000000050969e : ret 0x15e
0x000000000049518b : ret 0x15e0
0x0000000000508d74 : ret 0x15e8
0x000000000041e203 : ret 0x162b
0x00000000004c4c77 : ret 0x1688
0x000000000045730f : ret 0x173d
0x00000000004c6a70 : ret 0x1788
0x00000000005049f7 : ret 0x1878
0x0000000000505d0d : ret 0x18b4
0x0000000000505578 : ret 0x1953
0x00000000005129c3 : ret 0x1955
0x00000000005178f6 : ret 0x1a3b
0x00000000004f0e59 : ret 0x1b18
0x000000000050a9d6 : ret 0x1b5a
0x00000000004fc439 : ret 0x1b6e
0x000000000040804f : ret 0x1b8
0x0000000000485c68 : ret 0x1b9
0x00000000004ff8de : ret 0x1bbc
0x0000000000458cfc : ret 0x1bd
0x000000000050056a : ret 0x1bd7
0x00000000004b3076 : ret 0x1be
0x00000000004f7d21 : ret 0x1c33
0x000000000051671a : ret 0x1c5b
0x0000000000512398 : ret 0x1c87
0x000000000050ac77 : ret 0x1d0d
0x0000000000501d24 : ret 0x1d5f
0x00000000004a0338 : ret 0x1d74
0x00000000004fa81f : ret 0x1d82
0x0000000000510b08 : ret 0x1daf
0x000000000045fc8d : ret 0x1de8
0x00000000004be126 : ret 0x1e41
0x000000000050a909 : ret 0x1e72
0x0000000000480d0b : ret 0x1eb8
0x00000000004f846e : ret 0x1ede
0x000000000041fa58 : ret 0x1f0f
0x000000000042ab53 : ret 0x200
0x0000000000510115 : ret 0x203c
0x00000000004878aa : ret 0x204
0x0000000000518494 : ret 0x2076
0x00000000004535ca : ret 0x20e8
0x000000000050b6b9 : ret 0x2128
0x000000000042ac72 : ret 0x2141
0x0000000000426aed : ret 0x2144
0x000000000042f686 : ret 0x2149
0x0000000000433066 : ret 0x214c
0x0000000000491a93 : ret 0x214d
0x00000000005089db : ret 0x2157
0x00000000005129dc : ret 0x2167
0x000000000044d298 : ret 0x2173
0x0000000000430b89 : ret 0x21c0
0x00000000004f55de : ret 0x21f7
0x00000000004ef1b5 : ret 0x2211
0x00000000004f4368 : ret 0x2237
0x000000000050553d : ret 0x2244
0x000000000050cfee : ret 0x2280
0x00000000004f7771 : ret 0x2297
0x00000000004fee07 : ret 0x22b3
0x00000000004f5795 : ret 0x22da
0x00000000004fbf64 : ret 0x2316
0x00000000004ae0e1 : ret 0x2348
0x00000000004573ab : ret 0x234c
0x0000000000448ab5 : ret 0x237e
0x000000000050dd97 : ret 0x23ac
0x0000000000505b04 : ret 0x23b4
0x0000000000517a61 : ret 0x2496
0x00000000004ee899 : ret 0x24ac
0x00000000004ab7a8 : ret 0x24ff
0x000000000041c23a : ret 0x25
0x00000000005184cb : ret 0x250d
0x00000000004f934b : ret 0x254
0x00000000004fe8bf : ret 0x25f3
0x00000000005086ca : ret 0x2642
0x00000000005039b9 : ret 0x265
0x000000000049d5bf : ret 0x2675
0x00000000004f929e : ret 0x2687
0x0000000000506931 : ret 0x272
0x000000000044479a : ret 0x276
0x0000000000421b06 : ret 0x2774
0x00000000004fa108 : ret 0x278f
0x0000000000509411 : ret 0x27ba
0x000000000043d36a : ret 0x27f
0x00000000004c2148 : ret 0x280f
0x00000000004be10d : ret 0x2841
0x000000000042118d : ret 0x2874
0x00000000004f57a1 : ret 0x2899
0x00000000004e5f9b : ret 0x28f8
0x000000000049f6ba : ret 0x2901
0x00000000004ffa4c : ret 0x2910
0x0000000000440ed8 : ret 0x2948
0x000000000040cc58 : ret 0x294c
0x0000000000444cdc : ret 0x2974
0x0000000000504eed : ret 0x299b
0x00000000004f7681 : ret 0x29df
0x00000000004fe702 : ret 0x2a40
0x00000000004f5ef4 : ret 0x2a90
0x00000000004f6d63 : ret 0x2ac8
0x00000000004fc5f3 : ret 0x2afe
0x0000000000424a25 : ret 0x2b48
0x00000000004712e1 : ret 0x2b49
0x0000000000484f0a : ret 0x2b74
0x00000000004948c4 : ret 0x2b8
0x00000000004a0814 : ret 0x2bf
0x00000000004f9302 : ret 0x2c1
0x0000000000426ee6 : ret 0x2c33
0x00000000004fd5e8 : ret 0x2c46
0x00000000004efcfa : ret 0x2c94
0x00000000004fb6dc : ret 0x2cc2
0x00000000004ed42f : ret 0x2d11
0x000000000050fd6b : ret 0x2d31
0x0000000000502de8 : ret 0x2d3e
0x00000000004f1d49 : ret 0x2d4f
0x00000000004f718a : ret 0x2d54
0x0000000000514bf6 : ret 0x2dbe
0x0000000000424265 : ret 0x2e66
0x000000000046b58d : ret 0x2e74
0x00000000004aea6d : ret 0x2e7c
0x00000000005035b4 : ret 0x2eae
0x00000000004f67cf : ret 0x2ec4
0x000000000049354a : ret 0x2f03
0x000000000050cad3 : ret 0x2f5c
0x00000000004fdd0a : ret 0x2f85
0x0000000000516df1 : ret 0x2fac
0x0000000000504e97 : ret 0x3017
0x000000000043fc01 : ret 0x306
0x0000000000503e2d : ret 0x306d
0x000000000048543d : ret 0x307
0x00000000004f732d : ret 0x30e2
0x000000000041ba44 : ret 0x30e9
0x000000000041c296 : ret 0x3108
0x00000000005135b8 : ret 0x3118
0x000000000050a140 : ret 0x3128
0x00000000004b8c29 : ret 0x3141
0x00000000004bb5ff : ret 0x3144
0x000000000041fcae : ret 0x3145
0x0000000000413c7b : ret 0x3148
0x0000000000432096 : ret 0x3149
0x0000000000430fc3 : ret 0x314c
0x0000000000431e19 : ret 0x314d
0x000000000040be4d : ret 0x315b
0x00000000004691de : ret 0x318b
0x00000000004f4bf8 : ret 0x325c
0x0000000000512aa9 : ret 0x3271
0x000000000041a9f3 : ret 0x3274
0x0000000000515854 : ret 0x32c0
0x00000000004aea8a : ret 0x32e9
0x00000000004feb7f : ret 0x32ec
0x000000000041d60e : ret 0x33
0x00000000004c7957 : ret 0x3348
0x00000000004583fa : ret 0x3349
0x00000000004fc2a8 : ret 0x337e
0x0000000000504fe8 : ret 0x33c5
0x00000000004b83cf : ret 0x344
0x00000000005022a4 : ret 0x3449
0x000000000050c94d : ret 0x3451
0x000000000050273d : ret 0x3453
0x0000000000518a00 : ret 0x3472
0x00000000005078a9 : ret 0x347f
0x0000000000405c11 : ret 0x348
0x0000000000402810 : ret 0x348b
0x00000000004ffafa : ret 0x349e
0x0000000000453c06 : ret 0x34e8
0x00000000004f4892 : ret 0x34ef
0x0000000000407b22 : ret 0x351d
0x00000000004f557c : ret 0x3520
0x0000000000401b72 : ret 0x3546
0x0000000000401972 : ret 0x3547
0x0000000000401772 : ret 0x3548
0x00000000005072b3 : ret 0x3593
0x0000000000505cc9 : ret 0x35a0
0x0000000000482344 : ret 0x35b8
0x0000000000504ecc : ret 0x35cc
0x00000000004540b4 : ret 0x36e8
0x00000000004f7d5f : ret 0x370f
0x0000000000511cd9 : ret 0x375b
0x000000000050fe33 : ret 0x37ca
0x0000000000453903 : ret 0x37e8
0x000000000050b46f : ret 0x38c1
0x00000000004fc52c : ret 0x38c2
0x000000000044a652 : ret 0x38e9
0x000000000041c4eb : ret 0x3901
0x00000000004483e6 : ret 0x3902
0x0000000000402a7c : ret 0x3908
0x000000000044e2f4 : ret 0x3910
0x000000000050ca04 : ret 0x3916
0x000000000046898e : ret 0x3941
0x000000000040faaf : ret 0x3948
0x000000000047057c : ret 0x3949
0x00000000004240e0 : ret 0x394c
0x000000000042bd21 : ret 0x3956
0x0000000000511a8a : ret 0x39c7
0x00000000004ce7c1 : ret 0x39e8
0x00000000004ece75 : ret 0x3a22
0x00000000004fa8d1 : ret 0x3a29
0x0000000000472b73 : ret 0x3ab8
0x00000000004facd3 : ret 0x3ab9
0x0000000000450e20 : ret 0x3abe
0x00000000004ae9b5 : ret 0x3ae9
0x0000000000491516 : ret 0x3b4c
0x000000000044c2ab : ret 0x3b4d
0x0000000000513b64 : ret 0x3b5a
0x00000000004051a2 : ret 0x3b74
0x00000000004309e6 : ret 0x3b81
0x000000000051602b : ret 0x3c01
0x0000000000511812 : ret 0x3c61
0x0000000000493ba5 : ret 0x3d23
0x00000000004fcf60 : ret 0x3d2e
0x000000000051551f : ret 0x3d96
0x00000000004eebe3 : ret 0x3ece
0x00000000005091db : ret 0x3ee1
0x0000000000500de2 : ret 0x3ef2
0x0000000000483d1e : ret 0x3f74
0x000000000045b8b3 : ret 0x3fb8
0x0000000000513a4e : ret 0x3fc0
0x0000000000511d77 : ret 0x40
0x000000000048584f : ret 0x400
0x00000000004a54a7 : ret 0x4002
0x0000000000515c3c : ret 0x4052
0x00000000004f8d3b : ret 0x4089
0x0000000000405efc : ret 0x408d
0x0000000000493b18 : ret 0x40a3
0x00000000004b13e3 : ret 0x40ba
0x00000000005070c2 : ret 0x40e2
0x0000000000515cb0 : ret 0x40e7
0x00000000004f5d2b : ret 0x40fb
0x0000000000430dd4 : ret 0x41
0x000000000041cd23 : ret 0x4101
0x00000000004274a4 : ret 0x4103
0x0000000000408482 : ret 0x4108
0x00000000004b9271 : ret 0x410a
0x00000000004b908b : ret 0x410b
0x00000000004b8c23 : ret 0x410c
0x000000000050b009 : ret 0x4113
0x00000000004fd446 : ret 0x4165
0x00000000004be7f4 : ret 0x4166
0x00000000004177be : ret 0x41c4
0x000000000050528b : ret 0x426d
0x00000000004a5368 : ret 0x428d
0x00000000004ca586 : ret 0x42c4
0x0000000000445ec4 : ret 0x42c6
0x000000000043c3ef : ret 0x43
0x000000000050d0f1 : ret 0x431e
0x0000000000518d66 : ret 0x434e
0x00000000004feada : ret 0x435d
0x00000000004242c3 : ret 0x4389
0x0000000000494ce2 : ret 0x438b
0x000000000050557c : ret 0x43bd
0x00000000004176e3 : ret 0x43c4
0x0000000000479595 : ret 0x43e9
0x000000000040df99 : ret 0x4401
0x00000000004ae875 : ret 0x4402
0x0000000000408d54 : ret 0x4408
0x00000000005063c2 : ret 0x441
0x0000000000491606 : ret 0x4418
0x0000000000448afa : ret 0x4430
0x00000000004ecc27 : ret 0x443a
0x000000000045253b : ret 0x4460
0x00000000004be417 : ret 0x4466
0x0000000000445e7e : ret 0x447e
0x0000000000512e99 : ret 0x4486
0x00000000004152fc : ret 0x4488
0x00000000004088c1 : ret 0x4489
0x00000000004370a5 : ret 0x448b
0x0000000000432f64 : ret 0x45
0x00000000004f9324 : ret 0x451f
0x0000000000506e3d : ret 0x4551
0x00000000004161ca : ret 0x4566
0x00000000004ecc40 : ret 0x4577
0x00000000004bcea9 : ret 0x4588
0x00000000004cdd1e : ret 0x458b
0x00000000004fdb98 : ret 0x45da
0x00000000004883b5 : ret 0x45e8
0x000000000051a329 : ret 0x46
0x00000000005127fa : ret 0x467e
0x00000000004fdaa1 : ret 0x4683
0x0000000000507d25 : ret 0x46e5
0x00000000004a0b3b : ret 0x470f
0x00000000004241c9 : ret 0x474
0x00000000004cd9d8 : ret 0x4789
0x0000000000491efe : ret 0x478b
0x0000000000401fb1 : ret 0x4801
0x0000000000423ea6 : ret 0x4802
0x0000000000452df9 : ret 0x4803
0x000000000042568b : ret 0x4804
0x000000000040c5e2 : ret 0x4808
0x000000000044fc1b : ret 0x480f
0x000000000048b57b : ret 0x4810
0x000000000047e1fa : ret 0x4818
0x0000000000500d32 : ret 0x481e
0x0000000000401f89 : ret 0x4820
0x00000000004fa646 : ret 0x4823
0x00000000004519e0 : ret 0x4828
0x0000000000406e65 : ret 0x485b
0x00000000004c9e66 : ret 0x4860
0x0000000000448cb5 : ret 0x4875
0x000000000050ff2e : ret 0x488a
0x000000000050b196 : ret 0x48ba
0x000000000040a0ee : ret 0x48d
0x000000000042d3c6 : ret 0x49
0x0000000000401f75 : ret 0x4901
0x000000000043105b : ret 0x4908
0x000000000050404e : ret 0x4928
0x000000000050d892 : ret 0x49bd
0x000000000050b434 : ret 0x4a54
0x0000000000498ffb : ret 0x4a75
0x000000000050392a : ret 0x4a9d
0x0000000000508f42 : ret 0x4b28
0x00000000004f6fea : ret 0x4b5
0x00000000004f506c : ret 0x4b7
0x00000000004951e6 : ret 0x4b9
0x00000000004538ef : ret 0x4be8
0x000000000040842e : ret 0x4c01
0x00000000004a4998 : ret 0x4c08
0x0000000000402459 : ret 0x4c20
0x00000000004fd1f0 : ret 0x4c24
0x000000000047256a : ret 0x4c6
0x0000000000411693 : ret 0x4c66
0x000000000050f879 : ret 0x4c6b
0x00000000004fabaf : ret 0x4c6f
0x000000000046f36b : ret 0x4c89
0x00000000004140ab : ret 0x4cf3
0x000000000042e338 : ret 0x4d
0x00000000004ab59c : ret 0x4d06
0x0000000000432047 : ret 0x4d08
0x000000000048200d : ret 0x4d09
0x0000000000481f54 : ret 0x4d0a
0x0000000000515e22 : ret 0x4d11
0x0000000000491b75 : ret 0x4d18
0x00000000004dbd88 : ret 0x4d36
0x00000000004dc878 : ret 0x4d3b
0x00000000004de388 : ret 0x4d47
0x00000000004de858 : ret 0x4d49
0x00000000004f79e9 : ret 0x4d55
0x00000000004e1e68 : ret 0x4d62
0x00000000004f7bf0 : ret 0x4e1c
0x00000000004da680 : ret 0x4e2c
0x00000000004fcdad : ret 0x4e3
0x00000000004db940 : ret 0x4e30
0x00000000004fb200 : ret 0x4e35
0x00000000004ddc68 : ret 0x4e37
0x00000000004df950 : ret 0x4e3b
0x00000000004e0788 : ret 0x4e3d
0x00000000004e0f58 : ret 0x4e3e
0x000000000050d64a : ret 0x4e56
0x00000000004f8a79 : ret 0x4e7d
0x00000000004bab94 : ret 0x4e8b
0x000000000044a3e9 : ret 0x4eac
0x00000000004efa62 : ret 0x4f96
0x0000000000515a4b : ret 0x4fd8
0x0000000000516014 : ret 0x5007
0x0000000000514baf : ret 0x5018
0x0000000000473196 : ret 0x50be
0x00000000004f8e60 : ret 0x50e2
0x000000000050925d : ret 0x50e7
0x0000000000430dc0 : ret 0x51
0x000000000041e1d5 : ret 0x512b
0x000000000050b4c9 : ret 0x513a
0x00000000004b84be : ret 0x5180
0x000000000042be4b : ret 0x51a3
0x000000000051d240 : ret 0x51ce
0x00000000004fe2d0 : ret 0x51d8
0x000000000051f0f0 : ret 0x51eb
0x00000000004a255b : ret 0x522d
0x0000000000504b85 : ret 0x5232
0x0000000000517a7d : ret 0x524c
0x0000000000517abb : ret 0x5253
0x000000000050dbdd : ret 0x52a2
0x0000000000518303 : ret 0x5312
0x00000000004ec3c0 : ret 0x5325
0x00000000004b8688 : ret 0x5389
0x0000000000509a1c : ret 0x539d
0x00000000005051d4 : ret 0x53a0
0x00000000004f81ef : ret 0x5413
0x0000000000406939 : ret 0x5475
0x0000000000438c8f : ret 0x5488
0x000000000045030c : ret 0x548d
0x00000000004ef8f4 : ret 0x54c
0x000000000050718c : ret 0x54c5
0x0000000000432f48 : ret 0x55
0x000000000040e06b : ret 0x550a
0x00000000004c7556 : ret 0x5541
0x000000000050ed5c : ret 0x55d0
0x000000000050e891 : ret 0x5601
0x0000000000515623 : ret 0x5624
0x00000000004ed44f : ret 0x5682
0x00000000004c7522 : ret 0x5688
0x000000000049dff4 : ret 0x56e8
0x000000000051482e : ret 0x5767
0x0000000000434712 : ret 0x57be
0x0000000000504551 : ret 0x5815
0x0000000000516aa7 : ret 0x5825
0x000000000050cffe : ret 0x58fd
0x0000000000430db6 : ret 0x59
0x0000000000417611 : ret 0x597d
0x00000000004efdb7 : ret 0x5a39
0x00000000004f782f : ret 0x5a4
0x000000000040803c : ret 0x5a75
0x000000000050a82f : ret 0x5a93
0x0000000000453ae0 : ret 0x5ae8
0x00000000004b85c4 : ret 0x5afa
0x0000000000500ae5 : ret 0x5c2a
0x0000000000511588 : ret 0x5c73
0x000000000043743e : ret 0x5c75
0x00000000004ec856 : ret 0x5ca4
0x0000000000432f3b : ret 0x5d
0x00000000005184a3 : ret 0x5d15
0x0000000000406fe8 : ret 0x5d5b
0x000000000050ebee : ret 0x5d61
0x0000000000500e9c : ret 0x5d95
0x0000000000492c81 : ret 0x5dc2
0x00000000004f7287 : ret 0x5e5e
0x00000000005013e3 : ret 0x5e6a
0x000000000050ce58 : ret 0x5ec7
0x0000000000506c32 : ret 0x5ef0
0x000000000050e865 : ret 0x5f1
0x00000000005180ae : ret 0x5f2d
0x00000000004fec7c : ret 0x5f33
0x00000000005104b8 : ret 0x5fae
0x00000000004f9665 : ret 0x5fca
0x0000000000501bff : ret 0x60a
0x00000000004ee66b : ret 0x60c4
0x0000000000430dac : ret 0x61
0x000000000050067e : ret 0x6102
0x0000000000492e00 : ret 0x6161
0x00000000004f7ab0 : ret 0x61c0
0x0000000000506e55 : ret 0x6201
0x000000000050fb95 : ret 0x6202
0x00000000005060c5 : ret 0x62a8
0x0000000000512dc8 : ret 0x62b7
0x00000000004165d1 : ret 0x62c4
0x00000000004ac0a6 : ret 0x6348
0x000000000040e3cc : ret 0x634c
0x00000000004b3d2a : ret 0x6374
0x0000000000429345 : ret 0x63c4
0x00000000004efa9f : ret 0x63fc
0x00000000005064bd : ret 0x6449
0x00000000004ff20e : ret 0x64d4
0x0000000000512bc1 : ret 0x64d9
0x0000000000432f2e : ret 0x65
0x00000000004eef41 : ret 0x6517
0x000000000051189c : ret 0x6557
0x000000000050b76a : ret 0x6595
0x00000000004f4d67 : ret 0x65aa
0x0000000000507101 : ret 0x65c7
0x00000000004bd6db : ret 0x65e9
0x000000000050421b : ret 0x65f
0x00000000004c84a7 : ret 0x6600
0x0000000000427922 : ret 0x6605
0x00000000004bdcc3 : ret 0x6610
0x000000000050900f : ret 0x666d
0x000000000051230e : ret 0x667b
0x0000000000407954 : ret 0x6690
0x00000000004a2a94 : ret 0x66c3
0x00000000004f8c28 : ret 0x66eb
0x00000000004bdb64 : ret 0x66f0
0x00000000005020aa : ret 0x6718
0x00000000004804ef : ret 0x674
0x00000000004ede18 : ret 0x6786
0x00000000004513a3 : ret 0x67be
0x0000000000509d12 : ret 0x6819
0x00000000004f6c0b : ret 0x687e
0x000000000050c2c8 : ret 0x68bc
0x00000000004ece4f : ret 0x68fb
0x0000000000430da2 : ret 0x69
0x00000000004b83b4 : ret 0x6944
0x000000000050f4f9 : ret 0x6948
0x0000000000501eca : ret 0x69e4
0x0000000000458b71 : ret 0x69e8
0x0000000000493481 : ret 0x6a89
0x000000000045fe40 : ret 0x6ae8
0x000000000046ec79 : ret 0x6b8
0x000000000050b713 : ret 0x6b80
0x000000000050c0fd : ret 0x6bd4
0x0000000000462dc8 : ret 0x6be
0x000000000042662f : ret 0x6c33
0x0000000000512b54 : ret 0x6c5d
0x0000000000432f21 : ret 0x6d
0x000000000050a49a : ret 0x6d1e
0x00000000004f5082 : ret 0x6d6e
0x000000000050c2f0 : ret 0x6da9
0x00000000004faacc : ret 0x6dc0
0x000000000050672d : ret 0x6dd1
0x000000000050db6a : ret 0x6df0
0x00000000005028b8 : ret 0x6e8e
0x00000000004c533a : ret 0x6eb
0x000000000047e40e : ret 0x6f75
0x00000000004fd8cb : ret 0x6f8
0x000000000050af16 : ret 0x7041
0x000000000050232a : ret 0x708c
0x0000000000506fc4 : ret 0x7091
0x00000000004f50db : ret 0x70d2
0x0000000000430d98 : ret 0x71
0x00000000004f58b9 : ret 0x7130
0x00000000004f8d65 : ret 0x71ba
0x000000000050f043 : ret 0x728d
0x00000000004f5337 : ret 0x72fd
0x0000000000503c0a : ret 0x7335
0x00000000005070d3 : ret 0x73d0
0x00000000004f20a1 : ret 0x73d1
0x0000000000453ac7 : ret 0x73e8
0x0000000000407717 : ret 0x7401
0x0000000000480665 : ret 0x7404
0x0000000000423a84 : ret 0x7406
0x000000000048542e : ret 0x7408
0x0000000000485421 : ret 0x7420
0x00000000004ed332 : ret 0x7455
0x00000000004fb79a : ret 0x7461
0x0000000000484ec1 : ret 0x7474
0x00000000004703ef : ret 0x748b
0x00000000004faa13 : ret 0x74a2
0x0000000000437b4f : ret 0x74be
0x0000000000432f14 : ret 0x75
0x00000000004030f6 : ret 0x7501
0x0000000000480779 : ret 0x7502
0x00000000004a2762 : ret 0x7503
0x00000000004c693e : ret 0x7504
0x00000000004c3832 : ret 0x7510
0x000000000048069f : ret 0x7520
0x00000000005059f1 : ret 0x7538
0x00000000004fa035 : ret 0x754c
0x00000000005137d8 : ret 0x7553
0x0000000000445c3a : ret 0x7573
0x0000000000405e38 : ret 0x7574
0x000000000051432a : ret 0x75a2
0x00000000004fdd70 : ret 0x75dd
0x0000000000408d73 : ret 0x768b
0x00000000004e61ca : ret 0x7700
0x0000000000445d06 : ret 0x7772
0x00000000005054a3 : ret 0x779c
0x0000000000504dd6 : ret 0x77c0
0x00000000004cb4d6 : ret 0x77e
0x00000000005037a1 : ret 0x77fc
0x00000000004bdf77 : ret 0x7808
0x00000000004ed207 : ret 0x7870
0x0000000000517228 : ret 0x7888
0x0000000000511f61 : ret 0x78b4
0x0000000000505ada : ret 0x78c2
0x00000000004ba32c : ret 0x78e9
0x00000000005133e8 : ret 0x78f3
0x0000000000430d8e : ret 0x79
0x000000000051148d : ret 0x7992
0x00000000004181a0 : ret 0x79c5
0x000000000050ab08 : ret 0x79e6
0x00000000004ff862 : ret 0x7a11
0x00000000004f8042 : ret 0x7a1a
0x00000000005176a8 : ret 0x7a53
0x000000000043b437 : ret 0x7a8
0x00000000004f5a04 : ret 0x7a96
0x00000000004ee97e : ret 0x7bcc
0x00000000004fe462 : ret 0x7c4b
0x00000000004fda8a : ret 0x7ca5
0x00000000005067f9 : ret 0x7ce1
0x0000000000501df8 : ret 0x7cf8
0x0000000000432f07 : ret 0x7d
0x000000000043f82f : ret 0x7d80
0x0000000000420d8b : ret 0x7e05
0x00000000004f161b : ret 0x7e31
0x00000000004fb0c6 : ret 0x7e56
0x0000000000418005 : ret 0x7ec5
0x0000000000501609 : ret 0x7f22
0x00000000005158eb : ret 0x7f23
0x00000000004c182c : ret 0x80
0x000000000042f514 : ret 0x800
0x00000000005126e8 : ret 0x8012
0x00000000004a27b5 : ret 0x8041
0x00000000004f5023 : ret 0x8087
0x000000000043a17a : ret 0x8148
0x00000000004fe6b6 : ret 0x8152
0x0000000000506293 : ret 0x81cc
0x0000000000445ce1 : ret 0x820f
0x000000000050dafa : ret 0x8246
0x00000000004fb88e : ret 0x825b
0x000000000050d807 : ret 0x82b3
0x0000000000515740 : ret 0x82f4
0x0000000000420016 : ret 0x8301
0x000000000040830a : ret 0x8308
0x00000000004ae896 : ret 0x830a
0x00000000004ae822 : ret 0x830c
0x0000000000475f58 : ret 0x830f
0x0000000000517a94 : ret 0x8326
0x00000000004cd9d1 : ret 0x8334
0x000000000041b514 : ret 0x8341
0x0000000000437225 : ret 0x8348
0x0000000000403c39 : ret 0x8349
0x000000000050c33e : ret 0x8362
0x000000000050b087 : ret 0x8371
0x00000000004c9702 : ret 0x8401
0x0000000000405875 : ret 0x840f
0x0000000000516609 : ret 0x8421
0x00000000004f64bc : ret 0x8427
0x000000000040c4bd : ret 0x8444
0x000000000041b995 : ret 0x8445
0x000000000050441f : ret 0x8463
0x00000000004c9802 : ret 0x84e0
0x0000000000424244 : ret 0x8501
0x000000000041fadc : ret 0x8508
0x000000000040a9c8 : ret 0x850f
0x000000000044c77c : ret 0x8544
0x000000000041b80d : ret 0x8545
0x000000000040b015 : ret 0x8548
0x0000000000406931 : ret 0x854d
0x000000000042be2a : ret 0x8581
0x0000000000425a98 : ret 0x8588
0x0000000000425d80 : ret 0x858b
0x00000000004a5953 : ret 0x85c7
0x00000000004fcc9e : ret 0x85c8
0x000000000049354e : ret 0x8603
0x0000000000507ce5 : ret 0x861c
0x00000000005002e4 : ret 0x8623
0x00000000004ef74e : ret 0x8682
0x0000000000517263 : ret 0x8691
0x0000000000510eb7 : ret 0x8699
0x00000000005119fc : ret 0x86b3
0x00000000005059ae : ret 0x8743
0x0000000000425dc5 : ret 0x8802
0x00000000004c7f5d : ret 0x8808
0x00000000004f0044 : ret 0x8840
0x00000000004fcdc8 : ret 0x88d0
0x00000000004719bb : ret 0x8901
0x000000000041b192 : ret 0x8908
0x000000000044e2c0 : ret 0x8920
0x000000000040a4fc : ret 0x8941
0x000000000041cca5 : ret 0x8944
0x000000000047609c : ret 0x8945
0x0000000000406c0a : ret 0x8948
0x000000000045737d : ret 0x8949
0x000000000040ff97 : ret 0x894a
0x0000000000418a67 : ret 0x894c
0x00000000004989f0 : ret 0x894d
0x00000000004f6dba : ret 0x8959
0x00000000004b8580 : ret 0x896e
0x0000000000515e66 : ret 0x898
0x00000000004f5a8e : ret 0x898e
0x00000000005001e3 : ret 0x89e3
0x00000000004fc443 : ret 0x89e5
0x000000000050b33f : ret 0x89e7
0x0000000000515ec4 : ret 0x89f6
0x00000000004f7a88 : ret 0x8a41
0x00000000004fc512 : ret 0x8a49
0x00000000004fbc78 : ret 0x8a8d
0x00000000004f874f : ret 0x8acc
0x0000000000419869 : ret 0x8aeb
0x000000000043b1d6 : ret 0x8b20
0x00000000004a28d6 : ret 0x8b44
0x0000000000403c73 : ret 0x8b48
0x000000000040742d : ret 0x8b49
0x0000000000402c4f : ret 0x8b4a
0x0000000000440dd3 : ret 0x8b4c
0x0000000000510cd3 : ret 0x8b90
0x00000000004fd357 : ret 0x8c0e
0x000000000040746b : ret 0x8c0f
0x00000000004f6c46 : ret 0x8c24
0x00000000004a8425 : ret 0x8d01
0x000000000040753b : ret 0x8d04
0x0000000000441eb1 : ret 0x8d0f
0x00000000004f0a13 : ret 0x8d33
0x000000000049f99b : ret 0x8d41
0x00000000004b9091 : ret 0x8d42
0x0000000000405e3d : ret 0x8d48
0x0000000000402af2 : ret 0x8d49
0x000000000040e6f6 : ret 0x8d4c
0x00000000004caad9 : ret 0x8d4d
0x00000000004ab95d : ret 0x8dbe
0x00000000004fe734 : ret 0x8dd3
0x00000000004938e3 : ret 0x8df6
0x0000000000499b7c : ret 0x8e0f
0x0000000000503912 : ret 0x8e97
0x0000000000501888 : ret 0x8eaa
0x00000000005086e7 : ret 0x8eb
0x0000000000443e6e : ret 0x8f0f
0x0000000000502417 : ret 0x8f8d
0x000000000050259e : ret 0x8fa0
0x0000000000422cfd : ret 0x9001
0x00000000004f63e0 : ret 0x9004
0x00000000004fa0f3 : ret 0x903
0x000000000048545d : ret 0x9066
0x0000000000517deb : ret 0x90cf
0x0000000000507e3d : ret 0x910d
0x00000000004ec735 : ret 0x91b2
0x000000000040bfbc : ret 0x920f
0x00000000005076d2 : ret 0x9317
0x000000000050fbcb : ret 0x9360
0x00000000004fbf33 : ret 0x938
0x00000000004a6877 : ret 0x93e8
0x00000000004ab41c : ret 0x93eb
0x0000000000518629 : ret 0x93ec
0x0000000000504b40 : ret 0x943
0x00000000004a2704 : ret 0x948
0x000000000050ce41 : ret 0x94a2
0x0000000000403c2b : ret 0x94c
0x0000000000505ff6 : ret 0x94fa
0x0000000000512e27 : ret 0x9513
0x0000000000502d1a : ret 0x953d
0x00000000004f109c : ret 0x956e
0x000000000050182e : ret 0x958e
0x00000000004f47f9 : ret 0x9591
0x00000000004fd4f0 : ret 0x9661
0x0000000000510fd1 : ret 0x96c1
0x000000000047739e : ret 0x970f
0x00000000004f6f6e : ret 0x978
0x0000000000516450 : ret 0x9784
0x0000000000513211 : ret 0x97a3
0x0000000000512890 : ret 0x983e
0x00000000004398f7 : ret 0x98be
0x0000000000502a42 : ret 0x98e5
0x00000000004ef999 : ret 0x98f0
0x0000000000507296 : ret 0x995d
0x00000000004f4df4 : ret 0x9a5b
0x000000000051857b : ret 0x9a60
0x00000000004f9879 : ret 0x9a9f
0x000000000050fb30 : ret 0x9aa2
0x00000000004fa1cb : ret 0x9aaa
0x00000000005162fe : ret 0x9ade
0x0000000000516ea5 : ret 0x9b1a
0x0000000000517305 : ret 0x9b1e
0x00000000004f9f0e : ret 0x9bca
0x00000000004aea21 : ret 0x9be9
0x00000000005085dd : ret 0x9c69
0x00000000005084cf : ret 0x9cc7
0x00000000004f687c : ret 0x9d74
0x00000000004a0f31 : ret 0x9e9
0x00000000004c7b74 : ret 0x9eb
0x00000000005158f6 : ret 0x9f2e
0x000000000050cc45 : ret 0x9f85
0x00000000004f81df : ret 0x9fc2
0x000000000044d67b : ret 0x9fe8
0x00000000004f7aa6 : ret 0xa070
0x00000000004f8611 : ret 0xa169
0x000000000050df99 : ret 0xa1d3
0x0000000000512a36 : ret 0xa260
0x0000000000513eae : ret 0xa287
0x00000000004fb62e : ret 0xa29c
0x0000000000505a80 : ret 0xa29e
0x00000000004ec7d0 : ret 0xa2be
0x000000000051630a : ret 0xa2f7
0x000000000050cae3 : ret 0xa36
0x00000000004fd8eb : ret 0xa39d
0x00000000005026fe : ret 0xa3a6
0x00000000004fbffb : ret 0xa3b3
0x000000000050d01e : ret 0xa3cf
0x0000000000512450 : ret 0xa42e
0x000000000050f109 : ret 0xa4c7
0x00000000004f9f86 : ret 0xa4e6
0x0000000000501f50 : ret 0xa565
0x00000000004fcb32 : ret 0xa566
0x00000000004f7c16 : ret 0xa5d9
0x00000000004f5835 : ret 0xa5df
0x0000000000500fd1 : ret 0xa5e5
0x00000000004f5c5e : ret 0xa5eb
0x00000000004fa80b : ret 0xa613
0x00000000004ff566 : ret 0xa6f2
0x00000000004eee48 : ret 0xa79c
0x0000000000430940 : ret 0xa88f
0x000000000050c0e6 : ret 0xa945
0x00000000004f5569 : ret 0xa995
0x0000000000503b33 : ret 0xa99c
0x000000000050d790 : ret 0xa9bd
0x000000000050d008 : ret 0xa9c3
0x000000000041f1f1 : ret 0xa9e8
0x0000000000409eda : ret 0xaa
0x00000000004f86ca : ret 0xaab7
0x0000000000500cfa : ret 0xaaca
0x00000000004fc84e : ret 0xabb7
0x000000000051590a : ret 0xabbd
0x0000000000446614 : ret 0xabeb
0x00000000004283ff : ret 0xac0f
0x0000000000516fe6 : ret 0xac46
0x0000000000492fe8 : ret 0xacd3
0x00000000005183d4 : ret 0xacd4
0x00000000004fd16d : ret 0xacf4
0x00000000004e62b9 : ret 0xad6a
0x00000000005013d4 : ret 0xae59
0x00000000004c2063 : ret 0xaeb
0x00000000004fbc22 : ret 0xaed3
0x0000000000506d80 : ret 0xaed4
0x00000000004f7735 : ret 0xaeee
0x0000000000417a57 : ret 0xaf0f
0x00000000004f537e : ret 0xaf1
0x00000000005148f2 : ret 0xaf7c
0x0000000000503b9a : ret 0xafd3
0x0000000000501d9f : ret 0xb013
0x00000000004ed320 : ret 0xb047
0x00000000004b13f7 : ret 0xb0ba
0x00000000004fe56b : ret 0xb1a8
0x00000000004fa12a : ret 0xb224
0x000000000050a138 : ret 0xb252
0x00000000004f540c : ret 0xb259
0x00000000004fe972 : ret 0xb287
0x00000000004fea34 : ret 0xb2b9
0x00000000004fa065 : ret 0xb2e8
0x0000000000500bd9 : ret 0xb37c
0x00000000004fdca0 : ret 0xb3eb
0x0000000000502eab : ret 0xb468
0x0000000000512599 : ret 0xb47d
0x00000000004f6b40 : ret 0xb54d
0x0000000000461098 : ret 0xb575
0x000000000050a925 : ret 0xb5a2
0x0000000000505f82 : ret 0xb5f8
0x000000000042064c : ret 0xb60f
0x0000000000500441 : ret 0xb611
0x0000000000501d8a : ret 0xb687
0x00000000004baf5e : ret 0xb70f
0x000000000041c935 : ret 0xb73
0x00000000004a3b92 : ret 0xb74
0x0000000000492843 : ret 0xb775
0x000000000040c19f : ret 0xb7d
0x0000000000423efd : ret 0xb802
0x00000000005080c7 : ret 0xb805
0x00000000004f4fd3 : ret 0xb83
0x0000000000442970 : ret 0xb841
0x00000000004b5438 : ret 0xb8eb
0x00000000004faea0 : ret 0xb8fa
0x000000000041b524 : ret 0xb975
0x00000000005070ea : ret 0xb9c9
0x0000000000503955 : ret 0xb9d9
0x00000000004a75e1 : ret 0xb9e9
0x00000000004b141f : ret 0xba
0x00000000004b857c : ret 0xba48
0x00000000004f8f8a : ret 0xba4c
0x000000000050a536 : ret 0xba5c
0x00000000004a297e : ret 0xbb03
0x00000000004f954c : ret 0xbb21
0x000000000050048d : ret 0xbbaa
0x00000000005041d3 : ret 0xbbd7
0x0000000000514571 : ret 0xbc65
0x00000000004fd249 : ret 0xbd00
0x00000000004fff55 : ret 0xbd61
0x0000000000429acd : ret 0xbdc5
0x0000000000517fdd : ret 0xbde
0x00000000004f0008 : ret 0xbde5
0x00000000004074a2 : ret 0xbe
0x000000000048fedd : ret 0xbe08
0x0000000000472842 : ret 0xbe0f
0x0000000000430a27 : ret 0xbe30
0x00000000005020a3 : ret 0xbe97
0x0000000000508efd : ret 0xbea3
0x00000000004f9644 : ret 0xbef1
0x0000000000516727 : ret 0xbf2e
0x0000000000509cc8 : ret 0xbf6b
0x0000000000516ba8 : ret 0xbf6e
0x0000000000446371 : ret 0xbf76
0x0000000000505653 : ret 0xbfc9
0x00000000004ca24e : ret 0xc0
0x0000000000516106 : ret 0xc022
0x00000000004051f6 : ret 0xc031
0x000000000041b881 : ret 0xc083
0x00000000004a1c28 : ret 0xc085
0x00000000004f6968 : ret 0xc095
0x0000000000491b2d : ret 0xc0c1
0x00000000004ed44c : ret 0xc0f0
0x000000000041e175 : ret 0xc101
0x0000000000508376 : ret 0xc103
0x0000000000425741 : ret 0xc104
0x000000000045b4de : ret 0xc108
0x00000000004fef36 : ret 0xc109
0x00000000004babc9 : ret 0xc131
0x00000000004080b3 : ret 0xc141
0x000000000041ca03 : ret 0xc148
0x0000000000418980 : ret 0xc149
0x0000000000502d84 : ret 0xc1bb
0x0000000000429196 : ret 0xc1c4
0x000000000050c4e3 : ret 0xc1e4
0x000000000050c5f8 : ret 0xc26a
0x000000000045b552 : ret 0xc283
0x000000000047ddf4 : ret 0xc284
0x00000000004a46f9 : ret 0xc289
0x000000000051756d : ret 0xc2c2
0x00000000004fa41d : ret 0xc308
0x000000000043eb65 : ret 0xc35b
0x000000000050b82a : ret 0xc375
0x00000000004fcd03 : ret 0xc379
0x00000000004c9869 : ret 0xc3aa
0x0000000000432f0a : ret 0xc3c4
0x00000000004805d7 : ret 0xc3f3
0x00000000004f113d : ret 0xc4
0x00000000004c8e5d : ret 0xc400
0x00000000004ff74e : ret 0xc4a0
0x0000000000527342 : ret 0xc4c2
0x00000000004288c3 : ret 0xc508
0x00000000004fdf81 : ret 0xc52f
0x00000000004f6a7b : ret 0xc5a0
0x000000000050c7e1 : ret 0xc5cc
0x000000000050e121 : ret 0xc5f0
0x0000000000475371 : ret 0xc5f6
0x00000000004a19a1 : ret 0xc601
0x0000000000425c80 : ret 0xc602
0x0000000000516432 : ret 0xc604
0x0000000000446441 : ret 0xc676
0x00000000004fc4a7 : ret 0xc6d7
0x00000000004bd70b : ret 0xc6e9
0x00000000004bdfcf : ret 0xc700
0x0000000000405e88 : ret 0xc748
0x0000000000427f83 : ret 0xc789
0x0000000000406159 : ret 0xc7b8
0x00000000004f9a4d : ret 0xc85a
0x00000000004b96ed : ret 0xc889
0x00000000004b8006 : ret 0xc931
0x00000000005161ea : ret 0xc964
0x000000000048527f : ret 0xc984
0x00000000004bb1cf : ret 0xc9c1
0x00000000004c8e1f : ret 0xc9c5
0x000000000045a3fd : ret 0xca09
0x00000000004bb451 : ret 0xca31
0x000000000050bc42 : ret 0xcac0
0x0000000000427ab0 : ret 0xcac1
0x000000000044e240 : ret 0xcae8
0x000000000041de30 : ret 0xcaeb
0x0000000000514db3 : ret 0xcb81
0x0000000000510267 : ret 0xcc74
0x00000000004f089a : ret 0xccd8
0x00000000004a77ef : ret 0xcd29
0x000000000050d58e : ret 0xcd52
0x0000000000475137 : ret 0xcd89
0x0000000000508fc1 : ret 0xce53
0x000000000050b1df : ret 0xcea3
0x00000000005084e9 : ret 0xcea5
0x00000000004c1dd1 : ret 0xceb
0x0000000000511a40 : ret 0xcec9
0x000000000050ffb0 : ret 0xcecc
0x000000000043b7a7 : ret 0xceeb
0x00000000004275db : ret 0xcf31
0x000000000051702c : ret 0xcfd8
0x0000000000473fbf : ret 0xd029
0x0000000000511048 : ret 0xd057
0x0000000000508fbe : ret 0xd06b
0x00000000004f4111 : ret 0xd076
0x000000000045a63e : ret 0xd089
0x00000000004f5ef0 : ret 0xd0e1
0x0000000000448479 : ret 0xd102
0x0000000000471ad1 : ret 0xd108
0x00000000004c57ea : ret 0xd149
0x00000000004f1b4c : ret 0xd178
0x00000000004f4242 : ret 0xd19d
0x0000000000509567 : ret 0xd1a7
0x0000000000509b52 : ret 0xd1e8
0x00000000004736ae : ret 0xd26b
0x000000000046db23 : ret 0xd285
0x000000000050a001 : ret 0xd298
0x0000000000507080 : ret 0xd2db
0x000000000043497e : ret 0xd329
0x00000000004f07cb : ret 0xd356
0x0000000000509f5d : ret 0xd378
0x0000000000402479 : ret 0xd475
0x000000000050094e : ret 0xd48c
0x00000000004f6fad : ret 0xd4d9
0x00000000005128f8 : ret 0xd554
0x0000000000517db2 : ret 0xd5b3
0x0000000000506117 : ret 0xd5c3
0x000000000047b407 : ret 0xd639
0x000000000050a68c : ret 0xd69
0x000000000050c366 : ret 0xd69e
0x00000000004f8641 : ret 0xd6fb
0x00000000004f7b04 : ret 0xd710
0x00000000004a3bbb : ret 0xd775
0x0000000000516bd5 : ret 0xd779
0x0000000000513f49 : ret 0xd79a
0x00000000004571bd : ret 0xd8
0x0000000000427900 : ret 0xd831
0x0000000000518064 : ret 0xd875
0x00000000004938e7 : ret 0xd890
0x00000000004f1819 : ret 0xd8d1
0x00000000004eecc8 : ret 0xd8e5
0x0000000000513a35 : ret 0xd955
0x00000000004f497d : ret 0xd9a4
0x0000000000504319 : ret 0xd9ba
0x0000000000508722 : ret 0xda02
0x00000000005075dd : ret 0xda22
0x00000000004f84f1 : ret 0xda27
0x000000000043eb5e : ret 0xdaf7
0x00000000004f0f1b : ret 0xdb0c
0x00000000004a797f : ret 0xdb85
0x0000000000518c54 : ret 0xdbe6
0x0000000000508066 : ret 0xdc57
0x00000000004fcf03 : ret 0xdc5a
0x0000000000517774 : ret 0xdcb0
0x0000000000448ad8 : ret 0xdd7f
0x00000000004fbcc5 : ret 0xde86
0x000000000044f220 : ret 0xde89
0x00000000005136b4 : ret 0xde91
0x0000000000427c5f : ret 0xdf31
0x00000000004f4de5 : ret 0xdfca
0x000000000045b79b : ret 0xdfe8
0x0000000000441fa9 : ret 0xdfe9
0x00000000004f8104 : ret 0xdff8
0x0000000000501001 : ret 0xe039
0x0000000000418e5a : ret 0xe083
0x000000000053e5e3 : ret 0xe0a
0x000000000048aa3f : ret 0xe0be
0x00000000004c7ba7 : ret 0xe0c0
0x00000000004f93bd : ret 0xe1a9
0x00000000004fe7a8 : ret 0xe1ac
0x00000000004bcb02 : ret 0xe281
0x0000000000444b36 : ret 0xe283
0x0000000000518ed6 : ret 0xe28e
0x0000000000468989 : ret 0xe2c1
0x0000000000415d51 : ret 0xe2c4
0x0000000000506db1 : ret 0xe329
0x0000000000461b72 : ret 0xe375
0x0000000000504d6b : ret 0xe3df
0x000000000050f485 : ret 0xe408
0x0000000000516c14 : ret 0xe440
0x00000000004f6575 : ret 0xe466
0x00000000005108ab : ret 0xe4b6
0x00000000004ed212 : ret 0xe63
0x00000000005160a7 : ret 0xe682
0x000000000050ca07 : ret 0xe6e2
0x00000000004526b5 : ret 0xe73d
0x0000000000406e55 : ret 0xe74
0x000000000050d039 : ret 0xe762
0x00000000004b9605 : ret 0xe781
0x00000000004b506b : ret 0xe7b9
0x00000000004b95fb : ret 0xe7c1
0x0000000000405c5f : ret 0xe801
0x0000000000489de5 : ret 0xe820
0x00000000004fc3ca : ret 0xe867
0x000000000040908f : ret 0xe883
0x000000000049f9b8 : ret 0xe889
0x000000000050da42 : ret 0xe8b9
0x00000000004b9945 : ret 0xe8c1
0x00000000004b964d : ret 0xe8d1
0x00000000004c654e : ret 0xe901
0x0000000000442a07 : ret 0xe902
0x0000000000505691 : ret 0xe90d
0x000000000050d690 : ret 0xe942
0x000000000043ec9c : ret 0xe975
0x000000000050757a : ret 0xe976
0x0000000000514683 : ret 0xe981
0x00000000004f7227 : ret 0xe9a9
0x00000000004b9937 : ret 0xe9c1
0x000000000050be49 : ret 0xea0d
0x000000000046de8f : ret 0xeac1
0x00000000004b9627 : ret 0xead1
0x00000000004c1cbd : ret 0xeb
0x00000000004858e0 : ret 0xeb01
0x0000000000500f60 : ret 0xeb49
0x000000000043ef42 : ret 0xeb75
0x000000000040bf8b : ret 0xeb83
0x00000000004bd6fb : ret 0xebe9
0x000000000054596b : ret 0xec3
0x000000000049f679 : ret 0xec75
0x00000000004fb471 : ret 0xec77
0x0000000000504152 : ret 0xeca0
0x0000000000504ee7 : ret 0xeccc
0x000000000048ad1e : ret 0xece8
0x00000000004fa00f : ret 0xecf9
0x00000000004613d0 : ret 0xed7f
0x00000000005070db : ret 0xed8f
0x0000000000517a29 : ret 0xee1c
0x000000000042a5bc : ret 0xee31
0x000000000049fb7f : ret 0xee75
0x0000000000424c5c : ret 0xee8
0x0000000000422724 : ret 0xee89
0x0000000000517329 : ret 0xeeb6
0x00000000004ee4cf : ret 0xeec8
0x00000000004f813e : ret 0xef10
0x0000000000427e51 : ret 0xef31
0x0000000000425027 : ret 0xef72
0x000000000040e3fe : ret 0xef75
0x000000000050a9d3 : ret 0xefcf
0x00000000004921d3 : ret 0xf
0x00000000004272e8 : ret 0xf00
0x000000000041f342 : ret 0xf01
0x00000000004273e2 : ret 0xf02
0x0000000000427446 : ret 0xf03
0x0000000000425c72 : ret 0xf04
0x00000000004c21b2 : ret 0xf06
0x0000000000438afb : ret 0xf07
0x0000000000409dcd : ret 0xf075
0x000000000047d0e3 : ret 0xf08
0x0000000000518a74 : ret 0xf0ad
0x0000000000501ab4 : ret 0xf0d2
0x000000000048572a : ret 0xf10
0x00000000004bcb7d : ret 0xf131
0x00000000004faf4b : ret 0xf1d1
0x00000000005145c7 : ret 0xf1de
0x00000000005127c0 : ret 0xf222
0x00000000004f5809 : ret 0xf22c
0x0000000000508ddf : ret 0xf245
0x0000000000426a42 : ret 0xf321
0x000000000051351d : ret 0xf356
0x00000000004cc772 : ret 0xf375
0x00000000004cd1da : ret 0xf3e9
0x00000000004f4db7 : ret 0xf3f4
0x0000000000485856 : ret 0xf40
0x0000000000490669 : ret 0xf41
0x0000000000485396 : ret 0xf44
0x0000000000502ba1 : ret 0xf462
0x0000000000477411 : ret 0xf475
0x00000000005039ae : ret 0xf479
0x0000000000417f6e : ret 0xf48
0x0000000000417748 : ret 0xf49
0x00000000004cdf3a : ret 0xf4e5
0x00000000004c3ed0 : ret 0xf50
0x0000000000513e22 : ret 0xf505
0x00000000004eeb3d : ret 0xf56b
0x00000000004a7f9a : ret 0xf598
0x00000000004299df : ret 0xf5c5
0x00000000004a1af5 : ret 0xf5e9
0x00000000004c2cea : ret 0xf60
0x0000000000403ed2 : ret 0xf631
0x0000000000411c9e : ret 0xf66
0x0000000000402abf : ret 0xf685
0x0000000000414231 : ret 0xf68b
0x00000000004b2d6a : ret 0xf69a
0x0000000000414217 : ret 0xf6a3
0x0000000000414206 : ret 0xf6ab
0x00000000004141f7 : ret 0xf6b3
0x00000000004f783b : ret 0xf6c2
0x00000000004afc5a : ret 0xf6c8
0x00000000004685f4 : ret 0xf6e9
0x000000000045ce86 : ret 0xf6f3
0x000000000049c4ba : ret 0xf6f4
0x000000000049c5da : ret 0xf6f5
0x00000000004c3d18 : ret 0xf70
0x00000000004251ec : ret 0xf74
0x000000000040909e : ret 0xf741
0x000000000040fd94 : ret 0xf748
0x000000000041b446 : ret 0xf775
0x00000000004a9d8a : ret 0xf780
0x00000000004a9afa : ret 0xf783
0x0000000000429ae2 : ret 0xf789
0x000000000045ce77 : ret 0xf78b
0x00000000004f6927 : ret 0xf7c5
0x000000000045d18a : ret 0xf7c9
0x000000000045d195 : ret 0xf7cb
0x0000000000515c97 : ret 0xf7ea
0x000000000040880e : ret 0xf8
0x0000000000440ba2 : ret 0xf80
0x000000000051184d : ret 0xf848
0x000000000049ce88 : ret 0xf874
0x000000000047df1a : ret 0xf87d
0x0000000000402840 : ret 0xf8c1
0x000000000048f1c2 : ret 0xf8e8
0x0000000000510e51 : ret 0xf8f9
0x000000000048e29a : ret 0xf902
0x0000000000470ada : ret 0xf910
0x000000000047069a : ret 0xf911
0x000000000048cf9a : ret 0xf919
0x00000000004ae94f : ret 0xf980
0x0000000000408030 : ret 0xf981
0x0000000000516bbc : ret 0xf99f
0x0000000000488a8a : ret 0xf9b8
0x000000000050b798 : ret 0xf9bc
0x000000000051886b : ret 0xfa02
0x000000000048016a : ret 0xfa38
0x00000000004f85e1 : ret 0xfa3d
0x00000000004f9d3e : ret 0xfa3e
0x000000000047582a : ret 0xfa67
0x000000000047787a : ret 0xfa6d
0x0000000000504fde : ret 0xfa73
0x0000000000408024 : ret 0xfa81
0x00000000004f1d3a : ret 0xfa94
0x000000000042060c : ret 0xfac1
0x0000000000489060 : ret 0xfae8
0x000000000045abba : ret 0xfb0d
0x0000000000426c43 : ret 0xfb21
0x000000000050174a : ret 0xfb3b
0x00000000004f5103 : ret 0xfb5b
0x000000000044c46a : ret 0xfb7d
0x000000000040bd61 : ret 0xfb83
0x00000000004f4c45 : ret 0xfb9
0x00000000004479ca : ret 0xfb9e
0x0000000000462f9a : ret 0xfbb9
0x000000000042351a : ret 0xfc3
0x000000000044255a : ret 0xfc30
0x000000000044245a : ret 0xfc31
0x000000000049e62a : ret 0xfc34
0x000000000044135a : ret 0xfc42
0x000000000043b28a : ret 0xfc65
0x000000000047d94a : ret 0xfc87
0x00000000004387aa : ret 0xfc9a
0x000000000050c1a4 : ret 0xfcbb
0x0000000000427a41 : ret 0xfd01
0x0000000000434e3a : ret 0xfd21
0x000000000043744a : ret 0xfd45
0x000000000051247b : ret 0xfd78
0x00000000005034e6 : ret 0xfd89
0x000000000044096a : ret 0xfdbe
0x000000000048fdda : ret 0xfdc5
0x0000000000492847 : ret 0xfde1
0x000000000042332a : ret 0xfde6
0x00000000004bd703 : ret 0xfde9
0x00000000004f8e4b : ret 0xfe1a
0x000000000050105a : ret 0xfe29
0x00000000004fd656 : ret 0xfe3e
0x00000000004f4a57 : ret 0xfe43
0x0000000000500eec : ret 0xfe88
0x00000000004393ea : ret 0xfe9d
0x00000000004ec3dd : ret 0xfea6
0x000000000045a5d5 : ret 0xfeb8
0x00000000004180cc : ret 0xfec5
0x000000000043785d : ret 0xfeff
0x00000000004c42b5 : ret 0xff3
0x0000000000496a27 : ret 0xff41
0x000000000040ccea : ret 0xff5f
0x00000000004ecf9b : ret 0xff65
0x0000000000404136 : ret 0xff8
0x0000000000408467 : ret 0xff85
0x0000000000408eda : ret 0xff99
0x000000000040a37a : ret 0xff9c
0x00000000004c7087 : ret 0xffb8
0x000000000046dc29 : ret 0xffb9
0x000000000041dd6a : ret 0xffea
0x000000000046922a : ret 0xffec
0x00000000005280d9 : ret 0xffed
0x0000000000533cf1 : ret 0xffee
0x0000000000529181 : ret 0xffef
0x0000000000492338 : ret 0xfff0
0x000000000046d4ba : ret 0xfff1
0x00000000005479f1 : ret 0xfff3
0x00000000004b55e8 : ret 0xfff4
0x000000000045755a : ret 0xfff5
0x00000000004955d9 : ret 0xfff6
0x0000000000485633 : ret 0xfff7
0x0000000000479340 : ret 0xfff8
0x0000000000466044 : ret 0xfff9
0x00000000004490ea : ret 0xfffa
0x0000000000449381 : ret 0xfffb
0x000000000040fcbf : ret 0xfffc
0x000000000040665a : ret 0xfffd
0x0000000000408eb9 : ret 0xfffe
0x0000000000405615 : ret 0xffff
0x0000000000474be2 : ret 1
0x0000000000422b3a : ret 2
0x000000000049a28a : ret 3
0x00000000004c8e26 : ret 4
0x0000000000420cda : ret 7
0x00000000004c64e9 : retf -0x76bf ; push rdi ; or al, 0x4c ; mov edx, esp ; call rax
0x000000000053b9fd : retf 0 ; in eax, -0x10 ; call qword ptr [rbx]
0x0000000000507bb6 : retf 0x5ce5 ; jmp rsp
0x000000000050ee65 : retf 0x6e71 ; call qword ptr [rax]
0x000000000053baed : retf ; add byte ptr [rax], al ; push rax ; out -0x10, eax ; jmp rbx
0x0000000000529045 : retf ; add byte ptr [rax], al ; xchg eax, esp ; stosb byte ptr [rdi], al ; out dx, eax ; jmp rsp
0x00000000004c205b : retf ; lea rcx, qword ptr [rcx + rax + 0x20] ; sub r10, rax ; jmp 0x4c2078
0x000000000050be4e : retf ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x0000000000507bb5 : retfq 0x5ce5 ; jmp rsp
0x000000000053ab90 : rol ah, 0xf0 ; call qword ptr [rsi]
0x0000000000417a19 : rol ah, 1 ; jle 0x417a96 ; pop rbp ; sub byte ptr [rcx + 1], cl ; ret 0x8948
0x0000000000432f24 : rol ah, cl ; ret
0x0000000000507c96 : rol bh, 0xa9 ; mov dl, 0x58 ; ret
0x00000000004b244c : rol bl, 0x66 ; nop ; jmp rax
0x00000000004662dc : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x0000000000402ab1 : rol bl, 0x8b ; or byte ptr [r9], r15b ; ret
0x00000000004a8c69 : rol bl, 0xf3 ; ret
0x000000000040fdad : rol bl, 1 ; nop ; xor r10d, r10d ; mov rax, r10 ; ret
0x0000000000419861 : rol bl, 1 ; nop dword ptr [rax + rax] ; mov edx, eax ; jmp 0x4197fe
0x000000000041ca0a : rol bl, 1 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000040e735 : rol bl, 1 ; xor eax, eax ; ret
0x0000000000425299 : rol bl, cl ; ret
0x0000000000423b39 : rol byte ptr [rax + 0x97406f9], 0xf3 ; ret
0x000000000040625b : rol byte ptr [rax - 0x6bf08105], cl ; ret 0xf631
0x000000000053b02d : rol byte ptr [rax], 0 ; adc ah, 0xf0 ; call qword ptr [rax]
0x00000000004b7914 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004807a1 : rol byte ptr [rax], 0 ; add byte ptr [rbp - 0x2a], dh ; ret
0x0000000000481b70 : rol byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c60cc : rol byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; call rax
0x00000000004b00e0 : rol byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x00000000004affa9 : rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0x8941
0x00000000004b0e63 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x0000000000529185 : rol byte ptr [rax], cl ; add ah, dl ; ret 0xffef
0x000000000040fda6 : rol byte ptr [rax], cl ; mov r10, rdx ; mov rax, r10 ; ret
0x00000000004b232e : rol byte ptr [rbp + 0x480d74c0], cl ; mov eax, ebx ; pop rbx ; ret
0x00000000004a5b8d : rol byte ptr [rbp + 0x52], 0 ; cmove rax, rdx ; ret
0x000000000043e73e : rol byte ptr [rbp + 0x5b057ec0], cl ; ret
0x000000000046ca84 : rol byte ptr [rbp + 0x5b077ec0], cl ; ret
0x0000000000420008 : rol byte ptr [rbp + 0x5b1a75c0], 1 ; ret
0x000000000050daf2 : rol byte ptr [rbp + 0x73], 1 ; mov ebp, 0x213febb9 ; ret 0x8246
0x00000000004b20f9 : rol byte ptr [rbp - 0x3f60f02e], 0xc3 ; xor eax, eax ; ret
0x00000000004b0102 : rol byte ptr [rbp - 0x7b], cl ; in al, 0xf ; lahf ; ret 0x894c
0x0000000000409098 : rol byte ptr [rbx + 0x214101e9], cl ; ret 0xf741
0x0000000000476d2c : rol byte ptr [rbx + 0x67410ff], 0xf3 ; ret
0x000000000045a4e1 : rol byte ptr [rbx + 0x7404107f], 8 ; ret
0x00000000004a8ba1 : rol byte ptr [rbx + 0x741c047f], 8 ; ret
0x000000000040c4b5 : rol byte ptr [rbx + 0x814247c], 0xf ; xchg eax, esp ; ret 0x8444
0x000000000043eb4a : rol byte ptr [rbx - 0x177cfd20], 1 ; pop rbx ; ret
0x000000000040290c : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000480506 : rol byte ptr [rbx - 0x2f76fa1e], cl ; ret
0x000000000045b9cc : rol byte ptr [rbx - 0x3976c020], 0x89 ; ret 0x3fb8
0x00000000004a8b7e : rol byte ptr [rbx - 0x3f7c0220], 0x16 ; ret
0x00000000004b3392 : rol byte ptr [rbx - 0x3f7cfd20], 1 ; ret
0x0000000000450306 : rol byte ptr [rbx - 0x6bf0fe08], cl ; ret 0x548d
0x0000000000472587 : rol byte ptr [rbx - 0x7cb7fe3b], cl ; ret
0x000000000049f9b5 : rol byte ptr [rcx + 0x21], 1 ; ret 0xe889
0x000000000049f95d : rol byte ptr [rcx + 0x21], cl ; ret 0xc141
0x000000000049f95a : rol byte ptr [rcx + 0x21], cl ; rol byte ptr [rcx + 0x21], cl ; ret 0xc141
0x0000000000504e9c : rol byte ptr [rcx + 0x43c073b6], cl ; ret
0x00000000004b3c85 : rol byte ptr [rcx + rcx - 8], 0x89 ; ret
0x000000000041c9fc : rol byte ptr [rcx + rcx*8 - 0x76b7408b], 1 ; ret 0xc148
0x00000000004913d7 : rol byte ptr [rcx + rsi - 0x25], 1 ; xor ecx, r12d ; xor edx, r8d ; ret
0x00000000005182fc : rol byte ptr [rcx - 0x368aaa5c], 0x3f ; ret 0x5312
0x00000000004ba5a0 : rol byte ptr [rcx - 0x77], 1 ; ret
0x000000000054b00d : rol byte ptr [rcx], 0 ; jo 0x54b074 ; hlt ; call qword ptr [rcx]
0x000000000054b025 : rol byte ptr [rcx], 0 ; js 0x54b08c ; hlt ; jmp rsp
0x000000000054b024 : rol byte ptr [rcx], 0 ; js 0x54b08d ; hlt ; jmp rsp
0x0000000000409e2a : rol byte ptr [rcx], 0x39 ; ret
0x0000000000448ab2 : rol byte ptr [rcx], 0x39 ; ret 0x237e
0x0000000000448ad5 : rol byte ptr [rcx], 0x39 ; ret 0xdd7f
0x000000000049f676 : rol byte ptr [rcx], 0x39 ; ret 0xec75
0x000000000041b521 : rol byte ptr [rcx], 0x84 ; ret 0xb975
0x000000000042425e : rol byte ptr [rcx], 0x85 ; sal byte ptr [rbp - 0x14], cl ; jmp 0x42422f
0x000000000047060b : rol byte ptr [rcx], 0xc0 ; ret
0x0000000000485434 : rol byte ptr [rcx], 0xf6 ; ret 0x7520
0x0000000000508bef : rol byte ptr [rdi - 0x79], 1 ; test al, 0x4c ; xchg eax, ebp ; ret
0x0000000000461dde : rol byte ptr [rdi], 0x89 ; ret
0x000000000044fc18 : rol byte ptr [rdi], 0x89 ; ret 0x480f
0x0000000000437221 : rol byte ptr [rdi], 0xf ; ret 0x8348
0x000000000040283c : rol byte ptr [rdi], 0xf ; ret 0xf8c1
0x00000000004a5c0d : rol byte ptr [rdx + 0x52], 0 ; cmove rax, rdx ; ret
0x0000000000427c57 : rol byte ptr [rip + 0x4566f501], 0xf ; outsd dx, dword ptr [rsi] ; ret 0xdf31
0x000000000050414e : rol byte ptr [rsp + rdx*4], cl ; cli ; ret 0xeca0
0x00000000004c9e21 : rol ch, 1 ; int1 ; cld ; ret 0x894c
0x00000000004bad36 : rol cl, 1 ; call 0xffffffffc27cf15d
0x00000000004bd6ca : rol cl, 1 ; call 0xffffffffc3d517df
0x000000000053e220 : rol dl, 0xf1 ; call qword ptr [rbx]
0x0000000000533d60 : rol dl, 1 ; out dx, al ; call rax
0x00000000004f7575 : rol dword ptr [rax + rax*4], -0x49 ; ret
0x0000000000528d9d : rol dword ptr [rax], 0 ; push rsp ; xchg eax, ebp ; out dx, eax ; jmp rsp
0x00000000004f0a0e : rol dword ptr [rax], 1 ; jl 0x4f09a2 ; leave ; ret 0x8d33
0x0000000000402aeb : rol dword ptr [rbp + 0x48307ed2], 0x63 ; ret 0x8d49
0x00000000004effff : rol dword ptr [rbp - 0x664bd96], 0x7e ; jle 0x4f0042 ; ret 0xbde5
0x00000000004f23bb : rol dword ptr [rbp - 0x664bd96], 0x7e ; jle 0x4f23fe ; ret 0xbde5
0x000000000044c710 : rol dword ptr [rbx - 0x3276fe18], 0x21 ; ret
0x00000000004b9282 : rol dword ptr [rcx + 0x31], cl ; ret
0x00000000004c39d8 : rol dword ptr [rcx + 0xf], -0x6d ; ret
0x000000000048596c : rol dword ptr [rcx - 0xa], cl ; ret 0x7408
0x000000000048586f : rol dword ptr [rcx - 0xa], cl ; ret 0xf08
0x0000000000485841 : rol dword ptr [rcx - 0xa], cl ; ret 0xf80
0x0000000000491efb : rol dword ptr [rcx], -0x77 ; ret 0x478b
0x000000000054b145 : rol dword ptr [rcx], 0 ; js 0x54b1b0 ; hlt ; call qword ptr [rdi]
0x000000000052bdfd : rol dword ptr [rcx], 0 ; sbb al, 0xf5 ; call rsp
0x00000000004a0c0a : rol dword ptr [rcx], 0x39 ; ret 0xf075
0x000000000052c15d : rol dword ptr [rcx], 1 ; add ah, ah ; cmp ch, dh ; jmp rsp
0x00000000004284ac : rol dword ptr [rcx], 1 ; fadd st(5) ; cmp edi, ebp ; ret
0x00000000005060be : rol dword ptr [rdi], cl ; and eax, 0x44bfe209 ; ret 0x62a8
0x000000000050d56e : rol dword ptr [rdi], cl ; ret
0x00000000005062e1 : rol dword ptr [rdx + 0x17768140], -0x29 ; jae 0x5062f3 ; ret 0xd029
0x00000000004fa897 : rol dword ptr [rdx], 1 ; cli ; mov bl, 0xe0 ; test dword ptr [rax], ecx ; ret
0x0000000000514d7c : rol dword ptr [rsi*8 - 0x5f11bcdb], cl ; ret
0x000000000050aa5a : rol dword ptr [rsi], cl ; ret
0x00000000004ca55e : rol ebp, -0x3f ; out dx, eax ; inc ah ; ret
0x000000000042768c : rol ecx, 1 ; ret
0x0000000000415cd8 : rol esp, 0x62 ; ret
0x00000000004ca3b1 : rol esp, 1 ; ret
0x00000000004ca519 : rol esp, cl ; ret
0x0000000000414215 : rol esp, cl ; ret 0xf6a3
0x0000000000510f0e : ror ah, cl ; cmp esp, ebx ; push rax ; mov dh, 0x92 ; ret 0x54c
0x0000000000517dae : ror bl, cl ; ror dword ptr [rbx], cl ; ret 0xd5b3
0x00000000004fd685 : ror byte ptr [r14 - 0x6d2bf168], 0xd1 ; ret
0x0000000000456c87 : ror byte ptr [rax + 0x21], 1 ; ret
0x0000000000419452 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004caad6 : ror byte ptr [rax + 0x29], 1 ; ret 0x8d4d
0x000000000044482a : ror byte ptr [rax + 0x39], 0xf1 ; je 0x444887 ; ret
0x0000000000403c33 : ror byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6d ; ret 0x8349
0x00000000004a5b0d : ror byte ptr [rax + 0x52], 0 ; cmove rax, rdx ; ret
0x00000000004b13df : ror byte ptr [rax + 0xf], 0x44 ; ret 0x40ba
0x00000000004b142f : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000004b13f3 : ror byte ptr [rax + 0xf], 0x44 ; ret 0xb0ba
0x00000000004b141b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xba
0x000000000043f35b : ror byte ptr [rax + 0xf], 0x45 ; ret 0xfc3
0x00000000004180d4 : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; mov byte ptr [r9 + 1], cl ; ret
0x0000000000417f79 : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; mov byte ptr [r9 + 1], cl ; ret 0x8948
0x00000000004aa6b0 : ror byte ptr [rax + 0xf], cl ; fdiv st(6) ; ret
0x0000000000470578 : ror byte ptr [rax + 0xf], cl ; ret 0x3949
0x00000000004b85ba : ror byte ptr [rax + 0xf], cl ; ret 0xba48
0x00000000004551fc : ror byte ptr [rax + 1], cl ; push rdi ; adc byte ptr [rax - 0x77], cl ; ret 0x114c
0x000000000045a5d2 : ror byte ptr [rax + 9], cl ; ret 0xfeb8
0x0000000000402b5b : ror byte ptr [rax - 0x2d], 1 ; call 0xffffffffc3420bed
0x0000000000407fbf : ror byte ptr [rax - 0x68], 0xf3 ; ret
0x000000000043ca73 : ror byte ptr [rax - 0x75], cl ; jg 0x43ca91 ; mov rcx, qword ptr [rax] ; jmp r8
0x000000000043cab3 : ror byte ptr [rax - 0x75], cl ; jg 0x43cad1 ; mov rcx, qword ptr [rax] ; jmp r8
0x0000000000478cca : ror byte ptr [rax - 0x77], 0x13 ; jmp 0x478c98
0x00000000004202b2 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x4202a7 ; pop rbx ; ret
0x000000000043bda2 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x43bd97 ; pop rbx ; ret
0x000000000043bee2 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x43bed7 ; pop rbx ; ret
0x000000000043c0d2 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x43c0c7 ; pop rbx ; ret
0x000000000043c432 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x43c427 ; pop rbx ; ret
0x000000000046ae82 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x46ae77 ; pop rbx ; ret
0x000000000046af82 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x46af77 ; pop rbx ; ret
0x000000000046b082 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x46b077 ; pop rbx ; ret
0x000000000046b182 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x46b177 ; pop rbx ; ret
0x00000000004a09a2 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x4a0997 ; pop rbx ; ret
0x000000000045a5e1 : ror byte ptr [rax - 0x77], 1 ; ret 0xf748
0x00000000004601fb : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047c521 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x47c536 ; ret
0x000000000040294b : ror byte ptr [rax - 0x7b], 0xf6 ; setne al ; ret
0x00000000004a1001 : ror byte ptr [rax - 0x7b], 0xff ; setne al ; ret
0x000000000045a638 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret 0xd089
0x000000000047b401 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret 0xd639
0x0000000000473fb9 : ror byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret 0xd029
0x000000000047b3a8 : ror byte ptr [rax - 0x7d], 0x7f ; adc byte ptr [rax], al ; setne al ; ret
0x000000000040e694 : ror byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000047adbb : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000484919 : ror byte ptr [rax - 0x7d], 0xc4 ; or bh, dh ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004c4160 : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, dh ; ret
0x000000000040e226 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000424d85 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000004864bf : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004795b2 : ror byte ptr [rax - 0x7d], 0xec ; adc bh, dh ; ret 0
0x00000000004c601d : ror byte ptr [rax - 0x7d], 1 ; mov byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000040842b : ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x00000000004c2ce7 : ror byte ptr [rax - 0x7d], 1 ; ret 0xf60
0x000000000044cc48 : ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000470575 : ror byte ptr [rax - 9], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x3949
0x0000000000462d73 : ror byte ptr [rbp + 0x5bff4044], 0x5d ; pop r12 ; ret
0x0000000000472839 : ror byte ptr [rbp - 0x77c9bb0], 1 ; xor dword ptr [rdi], ecx ; ret 0xbe0f
0x00000000004c1dc9 : ror byte ptr [rbx - 0x73], 1 ; adc r12, qword ptr [rax] ; mov r10, rax ; jmp 0x4c1de8
0x0000000000407137 : ror byte ptr [rcx + 0x37e3047], 0xf3 ; ret
0x000000000040e6ed : ror byte ptr [rcx + 0x48d4cc0], 1 ; ror dword ptr [rax + 0x29], 1 ; ret 0x8d4c
0x0000000000477b3d : ror byte ptr [rcx + 0xf302444], 0x9f ; ret
0x0000000000455977 : ror byte ptr [rcx + 1], 1 ; ret
0x000000000047c7f2 : ror byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; xor ebp, ebp ; call rax
0x000000000040fdaa : ror byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x0000000000408157 : ror byte ptr [rcx + rcx*4 - 0x3d], 1 ; or rax, r9 ; ret
0x000000000044fda2 : ror byte ptr [rcx + rcx*4 - 1], 0xe8 ; ret 0xfffc
0x00000000004ca6cf : ror byte ptr [rcx - 0x77], 0xc ; ret 0x8348
0x00000000004786aa : ror byte ptr [rcx - 0x7fee8a3e], 0x7b ; jmp qword ptr [rax]
0x0000000000480976 : ror byte ptr [rcx], 0x39 ; ret
0x000000000043fcd4 : ror byte ptr [rdi], 0x44 ; ret
0x00000000004ae9b2 : ror byte ptr [rdi], 0x44 ; ret 0x3ae9
0x0000000000446611 : ror byte ptr [rdi], 0x45 ; ret 0xabeb
0x000000000043f417 : ror byte ptr [rdi], 0x48 ; ret 0xf8c1
0x0000000000437c67 : ror byte ptr [rdi], 0x84 ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a7fb1 : ror byte ptr [rdi], 0x84 ; cdq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004afdee : ror byte ptr [rdi], 0x84 ; mov eax, 0x83000003 ; ret
0x000000000046504f : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c6f4 : ror byte ptr [rdi], 0x84 ; pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043a07e : ror byte ptr [rdi], 0x84 ; ret
0x00000000004225bf : ror byte ptr [rdi], 0x84 ; ret 0
0x00000000004471f7 : ror byte ptr [rdi], 0x84 ; ret 2
0x000000000048256c : ror byte ptr [rdi], 0x85 ; ret
0x000000000041f037 : ror byte ptr [rdi], 0x85 ; ret 0
0x000000000041fdba : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00000000004a7b8f : ror byte ptr [rdi], 0x85 ; ret 1
0x00000000004b7911 : ror byte ptr [rdi], 0x85 ; rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049459a : ror byte ptr [rdi], 0x88 ; ret
0x000000000048d2f7 : ror byte ptr [rdi], 0x88 ; ret 0
0x0000000000460c52 : ror byte ptr [rdi], 0x88 ; ret 0xfffe
0x00000000004b0a57 : ror byte ptr [rdi], 0x8e ; ret 2
0x00000000004765d0 : ror byte ptr [rdi], 0x8f ; ret
0x0000000000478907 : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000465c2c : ror byte ptr [rdi], 0x94 ; ret
0x00000000004636bf : ror byte ptr [rdi], 0x94 ; ret 0x8348
0x0000000000407658 : ror byte ptr [rdi], 0x95 ; ret
0x000000000043f82c : ror byte ptr [rdi], 0x95 ; ret 0x7d80
0x00000000004817f6 : ror byte ptr [rdi], 0x95 ; ret 0x8348
0x000000000045a63b : ror byte ptr [rdi], 0x95 ; ret 0xd089
0x000000000047b404 : ror byte ptr [rdi], 0x95 ; ret 0xd639
0x00000000004b69f1 : ror byte ptr [rdi], 0x9e ; ret 0xd029
0x000000000046d4bf : ror byte ptr [rdi], 0x9f ; ret
0x0000000000481846 : ror byte ptr [rdi], 0x9f ; ret 0x8348
0x000000000049bf6a : ror byte ptr [rdi], 0xb6 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004b8479 : ror byte ptr [rdi], cl ; ret 0xf8c1
0x000000000041ac4a : ror byte ptr [rdi], cl ; ror qword ptr [rcx + 0x29102454], 1 ; ret
0x00000000004b3c82 : ror byte ptr [rdi], cl ; xchg eax, esp ; rol byte ptr [rcx + rcx - 8], 0x89 ; ret
0x00000000004fd686 : ror byte ptr [rsi - 0x6d2bf168], 0xd1 ; ret
0x00000000004fbf2d : ror byte ptr [rsi - 0x7eacf9d2], 1 ; ret 0x938
0x00000000004551ee : ror dword ptr [rax + 0x11], 0x57 ; or byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000040e6f3 : ror dword ptr [rax + 0x29], 1 ; ret 0x8d4c
0x0000000000451c30 : ror dword ptr [rax + 0x29], cl ; ret
0x00000000004a0b38 : ror dword ptr [rax + 0x39], cl ; ret 0x470f
0x000000000040bf84 : ror dword ptr [rax + 3], 0x4e ; sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0xeb83
0x0000000000410a50 : ror dword ptr [rax - 0x75], 1 ; cmp byte ptr [rbp - 0x77], r9b ; ret 0xf748
0x0000000000410b78 : ror dword ptr [rax - 0x75], 1 ; sbb byte ptr [rbp - 0x77], r9b ; ret 0xf748
0x0000000000408b69 : ror dword ptr [rax - 0x77], 1 ; ret
0x00000000004b43f9 : ror dword ptr [rax - 0x77], 1 ; ret 0x8d48
0x00000000004cab20 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000046e1c0 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000049442f : ror dword ptr [rax - 0x7d], 0x7c ; and al, 0x20 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xca09
0x0000000000448476 : ror dword ptr [rax - 0x7d], 1 ; ret 0xd102
0x0000000000410921 : ror dword ptr [rbp - 0x77], 1 ; ret 0xf748
0x00000000004c5823 : ror dword ptr [rbp - 0x77], cl ; ret 0xd149
0x0000000000517db0 : ror dword ptr [rbx], cl ; ret 0xd5b3
0x000000000041ac4d : ror dword ptr [rcx + 0x29102454], 1 ; ret
0x00000000004ca6cb : ror dword ptr [rcx + 0x33], 0xc ; ror byte ptr [rcx - 0x77], 0xc ; ret 0x8348
0x000000000049e623 : ror dword ptr [rcx + rcx*4 - 0x16], -0x77 ; fsubp st(0) ; ret 0xfc34
0x000000000040fe9c : ror dword ptr [rcx + rcx*4 - 0x38], 1 ; ret
0x00000000004bd742 : ror dword ptr [rcx - 0x39], 1 ; ret
0x00000000004113af : ror dword ptr [rcx - 0x39], cl ; ret 0
0x0000000000454dd5 : ror dword ptr [rcx - 0x77], 1 ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000004cb7de : ror dword ptr [rcx - 0x77], 1 ; ret 0x8944
0x000000000040e66d : ror dword ptr [rcx - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000004bd7e9 : ror dword ptr [rcx - 0x7d], -0x3f ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0xf66
0x0000000000422cfa : ror dword ptr [rcx - 0x7d], 1 ; ret 0x9001
0x0000000000408074 : ror dword ptr [rcx - 1], 1 ; ret 0x1b8
0x0000000000505fe2 : ror dword ptr [rcx], 4 ; push rbp ; scasd eax, dword ptr [rdi] ; ret
0x0000000000403c36 : ror dword ptr [rdi], -0x6d ; ret 0x8349
0x000000000047fbe7 : ror dword ptr [rdi], -0x6e ; ret 0xc031
0x000000000040fec3 : ror dword ptr [rdi], 1 ; mov ss, word ptr [rbp - 0x9000000] ; ret 0xfffc
0x000000000041b511 : ror dword ptr [rdi], 1 ; xchg eax, ebp ; ret 0x8341
0x00000000004bc1a0 : ror eax, 3 ; mov dword ptr [rdi], edx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000050a1e8 : ror ebp, 1 ; cli ; sbb cl, dh ; clc ; ret
0x000000000043cb2b : ror ecx, 1 ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x0000000000515b4f : ror esp, cl ; ret 0xcac1
0x000000000041ac4c : ror qword ptr [rcx + 0x29102454], 1 ; ret
0x0000000000512307 : sahf ; adc bl, bh ; xchg rax, r12 ; sahf ; ret 0x667b
0x000000000052e71d : sahf ; add al, byte ptr [rax] ; mov ah, 0xb9 ; clc ; jmp rsp
0x0000000000548df5 : sahf ; add dword ptr [rax], eax ; pop rax ; clc ; jmp rdi
0x000000000054f981 : sahf ; cmc ; call qword ptr [rdi]
0x00000000004fd8c8 : sahf ; cmp al, 0x26 ; ret 0x6f8
0x000000000043a7c2 : sahf ; jne 0x43a7c8 ; ret
0x0000000000507bb0 : sahf ; or al, 0xe9 ; insd dword ptr [rdi], dx ; retfq 0x5ce5 ; jmp rsp
0x00000000004f81db : sahf ; or bh, byte ptr [rax + 0x46] ; ret 0x9fc2
0x00000000005128e5 : sahf ; or eax, 0xeb00e968 ; ret
0x0000000000528ee1 : sahf ; out dx, eax ; jmp rsp
0x000000000040bfe1 : sahf ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004faa76 : sahf ; pop rcx ; jne 0x4faadc ; ret
0x00000000004fc52a : sahf ; push rsi ; ret 0x38c2
0x000000000045927e : sahf ; ret
0x00000000005022a3 : sahf ; ret 0x3449
0x000000000050718b : sahf ; ret 0x54c5
0x00000000004ff20d : sahf ; ret 0x64d4
0x000000000051230d : sahf ; ret 0x667b
0x000000000041abf7 : sahf ; ret 0x8348
0x00000000004b69f3 : sahf ; ret 0xd029
0x00000000004fc50e : sahf ; stc ; in eax, 0x28 ; ret 0x8a49
0x00000000004fccc3 : sahf ; std ; ret
0x000000000052bb79 : sal ah, 0xff ; mov esp, 0x340001b0 ; ret
0x000000000054bc91 : sal ah, 1 ; call qword ptr [rbx]
0x00000000004b4a9f : sal ah, 1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004655a5 : sal bh, 0xd0 ; and eax, 2 ; pop rbx ; ret
0x00000000004806ae : sal bh, 0xd0 ; and eax, 2 ; ret
0x00000000004804d3 : sal bh, 0xd0 ; and eax, 5 ; ret
0x00000000004895a4 : sal bh, 0xff ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000480504 : sal bh, cl ; rol byte ptr [rbx - 0x2f76fa1e], cl ; ret
0x00000000004a103b : sal bl, 0xc3 ; nop ; xor eax, eax ; ret
0x000000000040228d : sal bl, 1 ; ret
0x00000000005481b1 : sal bl, cl ; call rax
0x0000000000548161 : sal bl, cl ; jmp qword ptr [rbx]
0x00000000004c103a : sal bl, cl ; ret
0x0000000000437b4a : sal byte ptr [rax + 0x48], 0x89 ; ret 0x74be
0x0000000000439a6a : sal byte ptr [rax + 0x48], 0x8b ; or ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004847b5 : sal byte ptr [rax + rbp + 0x48], 0x89 ; ret
0x00000000004475f9 : sal byte ptr [rax + rcx + 0x48], cl ; mov edi, ebx ; call rdx
0x00000000004f4d64 : sal byte ptr [rax - 0x71], cl ; ret 0x65aa
0x0000000000430a23 : sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x000000000054ebd0 : sal byte ptr [rax - 0xb], 1 ; call qword ptr [rsi]
0x0000000000490c8d : sal byte ptr [rax], 0xf3 ; ret
0x0000000000448bfd : sal byte ptr [rbp + 0x10], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000482852 : sal byte ptr [rbp + 0x15], 0x83 ; ret
0x000000000042000a : sal byte ptr [rbp + 0x1a], 0x5b ; ret
0x00000000004ae2f3 : sal byte ptr [rbp + 0x1a], 0x83 ; ret
0x0000000000478b9d : sal byte ptr [rbp + 0x31], 1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004b5402 : sal byte ptr [rbp + 0x36], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000489940 : sal byte ptr [rbp + 0x48], 0x89 ; ret
0x000000000044519f : sal byte ptr [rbp + 0x51], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000046227e : sal byte ptr [rbp + 0x65], 1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000040d873 : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004816ea : sal byte ptr [rbp + 0xb], 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000040d8b2 : sal byte ptr [rbp + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000425552 : sal byte ptr [rbp + 0xb], cl ; mov eax, 1 ; ret
0x00000000004c6bb2 : sal byte ptr [rbp + 0xb], cl ; ret
0x00000000004348f0 : sal byte ptr [rbp + 0xd], 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049cc7f : sal byte ptr [rbp + 0xe], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d95e : sal byte ptr [rbp + 0xf], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040da56 : sal byte ptr [rbp + 7], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000486e85 : sal byte ptr [rbp + 8], 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041d164 : sal byte ptr [rbp + 9], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047c524 : sal byte ptr [rbp + 9], cl ; ret
0x00000000004b2448 : sal byte ptr [rbp + rax + 0x31], 0xc0 ; ret
0x00000000004b261c : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000004b5ad5 : sal byte ptr [rbp + rax - 0xa], 0 ; or byte ptr [rbp + 3], dh ; ret
0x0000000000439b98 : sal byte ptr [rbp + rax*2 + 0x48], 0x89 ; ret
0x0000000000420050 : sal byte ptr [rbp + rbp - 0x7b], 0xf6 ; jne 0x4200c7 ; call rax
0x0000000000462dc0 : sal byte ptr [rbp + rbx + 0x48], 0x89 ; fisttp word ptr [rax - 0x77] ; ret 0x6be
0x00000000004672a0 : sal byte ptr [rbp + rbx + 0x48], 0x89 ; fisttp word ptr [rax - 0x77] ; ret 0x74be
0x0000000000450460 : sal byte ptr [rbp + rbx + 0x48], 0x89 ; fisttp word ptr [rax - 0x77] ; ret 0x98be
0x0000000000420298 : sal byte ptr [rbp + rbx + 0x48], 0x89 ; ret
0x0000000000471c42 : sal byte ptr [rbp + rcx + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000004ab298 : sal byte ptr [rbp + rcx + 0x48], cl ; add esp, 0x18 ; pop rbx ; pop rbp ; jmp rdx
0x0000000000489a90 : sal byte ptr [rbp + rcx*2 + 0x48], 0x89 ; ret
0x00000000004895d0 : sal byte ptr [rbp + rdi + 0x48], 0x89 ; ret 0xc031
0x00000000004214d6 : sal byte ptr [rbp + rdx + 0x48], cl ; mov edi, ebx ; call rdx
0x000000000046faf8 : sal byte ptr [rbp + rsi*2 + 0x48], 0x89 ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rax
0x0000000000419447 : sal byte ptr [rbp - 0x12], 1 ; sub rax, rdi ; ret
0x0000000000424261 : sal byte ptr [rbp - 0x14], cl ; jmp 0x42422c
0x000000000047c012 : sal byte ptr [rbp - 0x15], 0x5b ; ret
0x000000000042bd1a : sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x00000000004028fc : sal byte ptr [rbp - 0x17], 1 ; xor eax, eax ; ret
0x00000000004cbf2d : sal byte ptr [rbp - 0x18], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000404e88 : sal byte ptr [rbp - 0x23], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004f9345 : sal byte ptr [rbp - 0x2ce6c8fd], cl ; ret 0x254
0x00000000004026cc : sal byte ptr [rbp - 0x3c], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000479d5b : sal byte ptr [rbp - 0xe], cl ; xor eax, eax ; ret
0x000000000043470a : sal byte ptr [rbx + 0x48], 0x89 ; fisttp word ptr [rax - 0x77] ; ret 0x57be
0x000000000047201a : sal byte ptr [rbx + rax - 1], 0xe0 ; nop ; xor eax, eax ; ret
0x000000000046e352 : sal byte ptr [rbx + rax*2 + 0x48], 0x89 ; ret
0x00000000004235d2 : sal byte ptr [rbx + rbx + 0x48], 0x89 ; ret 0x8948
0x00000000004047e2 : sal byte ptr [rbx + rbx*2 + 0x31], 0xff ; call qword ptr [rax]
0x000000000047203a : sal byte ptr [rbx + rcx + 0x31], 0xc9 ; jmp rax
0x0000000000480d12 : sal byte ptr [rbx + rcx + 0x5b], cl ; pop rbp ; pop r12 ; ret
0x00000000004509d2 : sal byte ptr [rbx + rdi + 0x48], 0x89 ; ret
0x000000000041c5f5 : sal byte ptr [rcx + rbx*2 + 0x48], 0x89 ; ret
0x00000000004b2327 : sal byte ptr [rcx + rcx + 0x48], cl ; mov edi, eax ; call rdx
0x0000000000477e0c : sal byte ptr [rcx + rcx*2 + 0x48], 0x89 ; ret
0x0000000000401ce7 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x00000000004fff4d : sal byte ptr [rcx - 0x5021854c], cl ; and eax, esp ; ret 0xbd61
0x000000000043b7a2 : sal byte ptr [rcx], 0xc9 ; mov rdx, rax ; jmp 0x43b77d
0x0000000000543530 : sal byte ptr [rcx], 1 ; call qword ptr [rax]
0x000000000046dcc1 : sal byte ptr [rcx], 1 ; dec dword ptr [rax - 0x77] ; pop rsp ; and al, 0x10 ; call r12
0x00000000004843c6 : sal byte ptr [rdi + 0x48], 0x89 ; ret
0x00000000004a7d71 : sal byte ptr [rdi + 0x75], 0 ; ret
0x0000000000406f5e : sal byte ptr [rdi + rax + 0x45], 0x31 ; leave ; xor esi, esi ; call rax
0x0000000000480686 : sal byte ptr [rdi + rbp - 0xd], 1 ; ret
0x000000000048158e : sal byte ptr [rdi + rcx - 0x77], 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004609be : sal byte ptr [rdi + rdi*2 + 0x48], 0x83 ; ret
0x000000000048b28e : sal byte ptr [rdi + rdi*2 + 0x48], 0x89 ; ret
0x000000000054d880 : sal byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rbx]
0x00000000004f995d : sal byte ptr [rdx + 0x7c], 0xdc ; ret
0x000000000046e223 : sal byte ptr [rdx + rax*2 + 0x48], 0x89 ; ret
0x000000000046abe3 : sal byte ptr [rdx + rbx + 0x48], 0x89 ; out dx, al ; call rax
0x0000000000463733 : sal byte ptr [rdx + rbx + 0x48], 0x89 ; ret 0x6be
0x000000000046a4a1 : sal byte ptr [rdx + rdx + 0x48], cl ; mov edi, ebx ; call rdx
0x00000000004488a3 : sal byte ptr [rdx + rsi + 0x48], 0x89 ; ret
0x000000000048ab83 : sal byte ptr [rdx + rsi*2 + 0x48], 0x89 ; ret
0x00000000004a0117 : sal byte ptr [rsi + 0x48], 0x89 ; ret
0x000000000041ffa7 : sal byte ptr [rsi + rax - 0x48], 0x30 ; cdq ; jne 0x41ffb7 ; ret
0x000000000041a857 : sal byte ptr [rsi + rax - 0x77], 0xd8 ; pop rbx ; ret
0x00000000004b73c6 : sal byte ptr [rsi + rbp - 0x77], 0xe8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000406929 : sal byte ptr [rsi + rbx*2 + 0x48], 0x85 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x854d
0x00000000004b550f : sal byte ptr [rsi + rcx + 0x48], 0x8b ; jg 0x4b554d ; jmp rax
0x00000000004b553f : sal byte ptr [rsi + rcx + 0x48], 0x8b ; jg 0x4b557d ; jmp rax
0x00000000004a52af : sal byte ptr [rsi + rcx*2 + 0x48], 0x85 ; test byte ptr [rcx + 0xf], 0x94 ; ret 0x8548
0x0000000000468350 : sal byte ptr [rsi + rdi + 0x48], 0x89 ; ret
0x000000000044e34f : sal byte ptr [rsi + rdx + 0x48], 0x83 ; ret
0x00000000004fa414 : sal byte ptr [rsi - 0x35], 0x40 ; scasb al, byte ptr [rdi] ; shl byte ptr [rdi + 0x31], 0x89 ; ret 0xc308
0x00000000004a5e0d : sal byte ptr [rsi], 0x52 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000005107c8 : sal byte ptr [rsi], cl ; mov dr0, word ptr [rbp + 0x289cb633] ; ret
0x00000000004b9859 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x0000000000406d3d : sal byte ptr [rsp + rax + 0x31], 0xf6 ; call rax
0x0000000000407069 : sal byte ptr [rsp + rax - 1], 0xe0 ; nop ; ret
0x0000000000407089 : sal byte ptr [rsp + rax - 1], 0xe0 ; nop ; xor eax, eax ; ret
0x000000000043b379 : sal byte ptr [rsp + rax*2 + 0x48], 0x83 ; ret
0x000000000044cd5c : sal byte ptr [rsp + rbp + 0x48], 0x8b ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000004b95b1 : sal byte ptr [rsp + rbx + 0x48], 0x83 ; ret
0x00000000004a7fd1 : sal byte ptr [rsp + rbx*2 + 0x48], 0x89 ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000405b19 : sal byte ptr [rsp + rcx + 0x48], 0x8b ; push rax ; jmp rax
0x0000000000405f01 : sal byte ptr [rsp + rcx + 0x48], cl ; add esp, 0x10 ; pop rbx ; ret
0x000000000044c321 : sal byte ptr [rsp + rcx + 0x4c], 0x89 ; push rsp ; and al, 8 ; jmp rax
0x0000000000425c7c : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x000000000047d539 : sal byte ptr [rsp + rdi - 0x42], 0xd6 ; ret 0x51
0x0000000000450ab9 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000550739 : sal ch, 1 ; call rbx
0x000000000052a109 : sal cl, cl ; call rsp
0x000000000052d441 : sal dh, 0xff ; and al, 0x32 ; add al, byte ptr [rax] ; push rsp ; ret 0xfff6
0x000000000052ab89 : sal dl, 1 ; jmp rsp
0x00000000004a2df1 : sal dword ptr [rax + 0x4d], -0x7b ; push qword ptr [rdi + rcx - 0x77] ; ret 0x8349
0x000000000050dbd4 : sal dword ptr [rax], cl ; lahf ; add qword ptr [r8 + rcx*8 + 0x23], rdx ; ret 0x52a2
0x000000000040e730 : sal dword ptr [rbp - 0x33], 0x48 ; mov eax, edx ; ret
0x0000000000414966 : sal dword ptr [rbp - 0x59], 0x49 ; neg ecx ; ret
0x000000000048e05b : sal dword ptr [rbp - 9], -1 ; xor eax, eax ; pop rbx ; ret
0x0000000000485aaa : sal dword ptr [rbx + rdx + 0xf], -0x4a ; add cl, byte ptr [rcx - 0x77] ; ret
0x000000000041d7dd : sal dword ptr [rbx], 0 ; add rsp, 8 ; ret
0x000000000041d7c4 : sal dword ptr [rbx], 0 ; test rax, rax ; je 0x41d7d8 ; ret
0x0000000000403c31 : sal dword ptr [rcx], 1 ; ror byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], -0x6d ; ret 0x8349
0x0000000000489e4b : sal dword ptr [rdi - 0x3fce0009], 1 ; pop rbx ; ret
0x000000000051569f : sal eax, 0x78 ; mov ah, 0xf4 ; ret
0x000000000053af71 : sal eax, cl ; call qword ptr [rax]
0x00000000004c46cb : sal ebx, 1 ; ret
0x00000000004c4666 : sal ebx, cl ; ret
0x000000000052dcb1 : sal edi, -1 ; mov ah, 0x66 ; add al, byte ptr [rax] ; ret 0xfff7
0x0000000000420d88 : sal edx, 0xf ; ret 0x7e05
0x000000000051705e : sal esi, -0x12 ; ret
0x00000000004a7699 : sal esi, cl ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000054c67d : salc ; add dword ptr [rax], eax ; adc al, bh ; hlt ; jmp qword ptr [rax]
0x0000000000419881 : salc ; and dword ptr [rdi + 0x20], esi ; ret
0x000000000044efb1 : salc ; and dword ptr [rdi + 0x2c], esi ; ret
0x00000000004fedc6 : salc ; cmp byte ptr [r9 + rdi*8 - 0x19], dl ; mov ah, 0x2d ; ret
0x00000000004ac59b : salc ; idiv bh ; nop ; xor eax, eax ; ret
0x0000000000500684 : salc ; int1 ; stosb byte ptr [rdi], al ; ret
0x000000000045253f : salc ; ja 0x4524f4 ; ret
0x00000000004571c4 : salc ; ja 0x457174 ; ret
0x000000000047b409 : salc ; jge 0x47b453 ; ret
0x00000000004fdb66 : salc ; jl 0x4fdb8f ; mov eax, esi ; xchg eax, edi ; or bl, byte ptr ss:[rcx] ; ret
0x0000000000507188 : salc ; jle 0x50712e ; ret 0x54c5
0x0000000000407119 : salc ; jmp r9
0x000000000044920a : salc ; jmp rax
0x000000000050b821 : salc ; lodsb al, byte ptr [rsi] ; or al, byte ptr [rsi - 0x57cb9399] ; clc ; ret 0xc375
0x00000000004f863f : salc ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x000000000048c352 : salc ; mov esi, 5 ; call rax
0x000000000048e09c : salc ; mov esi, 7 ; call rax
0x000000000050e98c : salc ; mov esp, 0xffe87f6a ; ret
0x000000000041e8f3 : salc ; mov rdi, qword ptr [rsp] ; lea ebp, dword ptr [rbx - 1] ; call r12
0x000000000051192e : salc ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; ret
0x0000000000421ef1 : salc ; movsxd rsi, esi ; and qword ptr [rdi + 0x10], rsi ; ret
0x0000000000421f21 : salc ; movsxd rsi, esi ; and qword ptr [rdi + 0x70], rsi ; ret
0x0000000000518c6f : salc ; or al, 0xaf ; lahf ; popfq ; xchg eax, ebp ; push rax ; in eax, dx ; ret
0x00000000004f4d62 : salc ; out -0x2e, eax ; jo 0x4f4cfb ; ret 0x65aa
0x000000000051628d : salc ; out -0x78, eax ; jge 0x516242 ; jns 0x51622d ; ret
0x0000000000534279 : salc ; out dx, al ; jmp qword ptr [rdx]
0x00000000004ce161 : salc ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004807a6 : salc ; ret
0x000000000047cdea : salc ; ret 0x51
0x00000000004f63df : salc ; ret 0x9004
0x00000000004f109b : salc ; ret 0x956e
0x00000000004fa471 : salc ; stosb byte ptr [rdi], al ; xor dword ptr [rdi + 0x69af1543], esi ; ret
0x0000000000501bfb : salc ; sub byte ptr [rdx], 0xe2 ; ret 0x60a
0x0000000000510607 : salc ; sub byte ptr [rsi + 0x4d352818], 0x65 ; ret
0x00000000004f6571 : salc ; test dword ptr [rbx + 0x58], ebp ; ret 0xe466
0x00000000004f5ae1 : salc ; xor esi, dword ptr [rdi + 0x51] ; pop rbp ; jg 0x4f5b23 ; ret
0x000000000052e8d1 : sar al, cl ; call rsp
0x00000000004fe6ff : sar al, cl ; push rcx ; ret 0x2a40
0x00000000004955b2 : sar bh, 0x40 ; add byte ptr [rax - 0x7f], cl ; ret 0x1500
0x000000000046e1be : sar bh, 1 ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000542a40 : sar bl, 0xf2 ; jmp rbx
0x000000000046edf8 : sar byte ptr [rax + 0x1d], 1 ; ret
0x00000000004aa79e : sar byte ptr [rax + 0x27], 0x29 ; ret
0x00000000004ae38d : sar byte ptr [rax + 0x28], 0x89 ; ret 0xde89
0x000000000043b441 : sar byte ptr [rax + 0xc], 0x48 ; add esp, 8 ; ret
0x000000000047bfbd : sar byte ptr [rax + 1], 1 ; pop rbx ; ret
0x0000000000503044 : sar byte ptr [rbp + 0x7c], 1 ; ret
0x00000000004ab6e5 : sar byte ptr [rcx + 0x51b902], 0xbe ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x51
0x000000000051705c : sar byte ptr [rcx + rax*8], 0xf6 ; out dx, al ; ret
0x00000000004a5d8d : sar byte ptr [rcx], 0x52 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000552ca0 : sar byte ptr [rcx], 0xf6 ; call qword ptr [rbx]
0x000000000040798c : sar byte ptr [rdi + 2], 0xf ; xchg eax, ebp ; ret
0x00000000004a18d9 : sar byte ptr [rdi - 0x24], 0xeb ; stosd dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000004a5c8d : sar byte ptr [rdi], 0x52 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a5d0d : sar byte ptr [rdx + rdx*2], 0 ; cmove rax, rdx ; ret
0x00000000004806f4 : sar byte ptr [rdx], 0xf ; ret 0xc3f3
0x0000000000477643 : sar byte ptr [rsi + 0x38], 0x89 ; ret 0x894c
0x000000000046f4ca : sar byte ptr [rsi + 0x51b902], cl ; mov rdi, rbp ; call rbx
0x00000000004a0530 : sar byte ptr [rsi + 0x5d], 0x48 ; mov edi, dword ptr [rbx + 8] ; call 0x41c839
0x000000000048f356 : sar byte ptr [rsi + 0x67], 0x83 ; ret
0x00000000004525ab : sar byte ptr [rsi + 0xa], 0x5b ; ret
0x000000000043ca3b : sar byte ptr [rsi + 0xc], 0x89 ; ret
0x000000000043d6b9 : sar byte ptr [rsi + 3], cl ; jmp rax
0x000000000043d5d8 : sar byte ptr [rsi + 5], 0x5b ; ret
0x00000000004045ef : sar byte ptr [rsi + 6], 0x5b ; ret
0x000000000046ca86 : sar byte ptr [rsi + 7], 0x5b ; ret
0x000000000046c527 : sar byte ptr [rsi + 8], cl ; pop rbx ; pop rbp ; jmp rax
0x000000000043e7c4 : sar byte ptr [rsi + 9], 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000004ff20b : sar byte ptr [rsi + rbx*4], 1 ; ret 0x64d4
0x0000000000472ad8 : sar byte ptr [rsi - 0x5b], 0xf6 ; ret
0x000000000048c65c : sar dh, 0xf8 ; inc dword ptr [rbp - 0x7cb78b40] ; ret
0x00000000004c21ac : sar dh, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xf06
0x000000000041214c : sar dh, 0xff ; dec dword ptr [rbp + 0x29] ; ror dword ptr [rcx - 0x39], cl ; ret 0
0x0000000000421c81 : sar dword ptr [rax + 0x1ad], cl ; pop rbx ; ret
0x0000000000405f6f : sar dword ptr [rax + 0x29], 1 ; ret
0x0000000000513d13 : sar dword ptr [rax], -0x79 ; in eax, dx ; ret
0x000000000050d689 : sar dword ptr [rbp + 0x250c8422], 1 ; ret 0xe942
0x000000000051351a : sar dword ptr [rbp + 0x39], cl ; ret 0xf356
0x0000000000509f58 : sar dword ptr [rbx - 0x36], cl ; push rcx ; pop rdx ; ret 0xd378
0x0000000000475f2e : sar dword ptr [rsi + 2], -0x77 ; ret 0x8b48
0x0000000000406160 : sar dword ptr [rsi + 5], cl ; pop rbx ; ret
0x00000000004fcda6 : sar dword ptr [rsi - 0xb73ffee], 1 ; ret
0x00000000005160fd : sar dword ptr [rsi], 1 ; ret
0x000000000047030e : sar eax, 3 ; add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043722a : sar eax, 3 ; ret
0x000000000045264e : sar eax, cl ; and eax, 1 ; ret
0x000000000050ff2b : sar ebp, cl ; ret 0x488a
0x000000000045a674 : sar edx, -1 ; test eax, eax ; jle 0x45a689 ; pop rbx ; ret
0x000000000045a6f4 : sar edx, -1 ; test eax, eax ; jle 0x45a709 ; pop rbx ; ret
0x0000000000485884 : sar esi, -1 ; jmp qword ptr [rsi + 0x41]
0x00000000004f8d39 : sbb ah, bh ; ret 0x4089
0x000000000054c4f8 : sbb ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000004254d3 : sbb al, 0 ; add byte ptr [rax], al ; ret
0x0000000000530c5d : sbb al, 0 ; add byte ptr [rax], dh ; jae 0x530c56 ; call qword ptr [rsi]
0x000000000050d7ff : sbb al, 0x1e ; add ah, byte ptr [rcx + rbp*8 - 0x74] ; lodsd eax, dword ptr [rsi] ; ret 0x82b3
0x0000000000509bbe : sbb al, 0x1e ; ret
0x000000000045a3c4 : sbb al, 0x24 ; mov rdi, rbx ; call rax
0x0000000000494a89 : sbb al, 0x28 ; jmp 0x494a95
0x00000000004bbf66 : sbb al, 0x31 ; ret 0xc131
0x00000000004fa68d : sbb al, 0x34 ; ret
0x00000000005053b3 : sbb al, 0x36 ; ret
0x00000000005326f4 : sbb al, 0x37 ; add byte ptr [rax], al ; sub byte ptr [rdx - 0x12], bh ; call qword ptr [rbx]
0x00000000004f5e13 : sbb al, 0x47 ; ret
0x000000000043d00f : sbb al, 0x48 ; mov edi, esi ; mov qword ptr [rsp + 8], rsi ; call rdx
0x00000000004a594d : sbb al, 0x4c ; add byte ptr [rax + 0xf], cl ; ret 0x85c7
0x000000000050e98a : sbb al, 0x55 ; salc ; mov esp, 0xffe87f6a ; ret
0x00000000005027a3 : sbb al, 0x66 ; out dx, al ; push rax ; ret
0x000000000050fb56 : sbb al, 0x6d ; or byte ptr [rdi], cl ; ret
0x00000000004f5ad8 : sbb al, 0x70 ; and ah, byte ptr [rsi + rdi*4 - 0x15] ; ret
0x00000000004a8ba5 : sbb al, 0x74 ; or bl, dh ; ret
0x0000000000487423 : sbb al, 0x83 ; ret
0x00000000004719a8 : sbb al, 0x83 ; ret 0x8301
0x00000000004c52e0 : sbb al, 0x89 ; ret
0x00000000004f1270 : sbb al, 0x9b ; pop r15 ; int1 ; jae 0x4f12d9 ; add dl, ch ; ret
0x0000000000548df4 : sbb al, 0x9e ; add dword ptr [rax], eax ; pop rax ; clc ; jmp rdi
0x000000000042bd2e : sbb al, 0xab ; pop rbx ; ret 0x3956
0x000000000053fbf4 : sbb al, 0xc ; add dword ptr [rax], eax ; mov dl, sil ; jmp qword ptr [rsi]
0x0000000000516863 : sbb al, 0xc5 ; ret
0x00000000004450df : sbb al, 0xd ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000054c4f4 : sbb al, 0xd5 ; add dword ptr [rax], eax ; sbb ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000004f5ae0 : sbb al, 0xd6 ; xor esi, dword ptr [rdi + 0x51] ; pop rbp ; jg 0x4f5b24 ; ret
0x00000000004fe1ad : sbb al, 0xdc ; push rbp ; mov dl, 0xe1 ; ret
0x00000000004a9d88 : sbb al, 0xe8 ; ret 0xf780
0x00000000004aabe2 : sbb al, 0xe9 ; ret
0x000000000052be01 : sbb al, 0xf5 ; call rsp
0x000000000053e6f4 : sbb al, 0xf7 ; add byte ptr [rax], al ; sub byte ptr [rsi], ah ; call qword ptr [rdx]
0x000000000052ed29 : sbb al, 0xf9 ; jmp rsp
0x000000000054eaf4 : sbb al, 0xfb ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; call qword ptr [rsi]
0x000000000052c984 : sbb al, 0xfc ; add dword ptr [rax], eax ; hlt ; ret 0xfff5
0x0000000000540bed : sbb al, 1 ; add byte ptr [rax - 0x4e], al ; jmp qword ptr [rsi]
0x000000000052d08d : sbb al, 2 ; add ah, dh ; sub esi, esi ; jmp rsp
0x0000000000406480 : sbb al, 2 ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000550c95 : sbb al, 2 ; add byte ptr [rax], bh ; loop 0x550c96 ; jmp qword ptr [rbx]
0x000000000053f2f4 : sbb al, 3 ; add dword ptr [rax], eax ; call 0x2753e569
0x00000000004fa804 : sbb al, byte ptr [rax + rdx + 0x43b03427] ; ret 0xa613
0x0000000000530a45 : sbb al, byte ptr [rax] ; add byte ptr [rax], ch ; insb byte ptr [rdi], dx ; in eax, dx ; call rax
0x00000000004f878b : sbb al, byte ptr [rbx - 4] ; mov eax, 0x32142f94 ; ret
0x00000000004fc4d7 : sbb al, byte ptr [rcx] ; int 0x80
0x0000000000424757 : sbb al, ch ; cmp ebp, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000487597 : sbb al, ch ; ret
0x00000000004cd1d8 : sbb al, ch ; ret 0xf3e9
0x0000000000488a88 : sbb al, ch ; ret 0xf9b8
0x00000000005417f0 : sbb bh, 0xf2 ; call qword ptr [rax]
0x0000000000505d8d : sbb bh, al ; ret
0x0000000000503301 : sbb bh, byte ptr [rcx - 0x47] ; ret
0x0000000000503300 : sbb bh, byte ptr es:[rcx - 0x47] ; ret
0x000000000050394e : sbb bh, ch ; cmp byte ptr [rax - 0x2b], bh ; push rdi ; ret 0xb9d9
0x00000000004fa1d6 : sbb bh, ch ; cmp edx, edi ; ret
0x00000000004b3e0b : sbb bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004b66e3 : sbb bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000005167f9 : sbb bl, bh ; xchg eax, ebp ; mov cl, ah ; int 0xc3
0x0000000000518166 : sbb bl, byte ptr [rcx] ; cmp eax, dword ptr [rdx] ; xchg eax, esi ; xor dword ptr [rcx], 0x58 ; ret
0x0000000000511766 : sbb bl, byte ptr [rdi] ; jnp 0x511777 ; ret
0x00000000004030a2 : sbb bl, dh ; ret
0x00000000004b3e56 : sbb byte ptr [r10], r8b ; ret
0x0000000000439229 : sbb byte ptr [r8 + 1], dil ; pop rbx ; ret
0x00000000004b3df3 : sbb byte ptr [r8 + 1], r15b ; ret
0x00000000004660f6 : sbb byte ptr [r8 - 0x77], r9b ; out dx, al ; mov rdi, r15 ; call rax
0x00000000004b557e : sbb byte ptr [r9 + r9*4 + 0xf], r8b ; ret
0x000000000041c64f : sbb byte ptr [r9 + r9*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000468542 : sbb byte ptr [r9 + rcx*4 - 0x20], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ae492 : sbb byte ptr [r9], al ; jne 0x4ae4a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a45c : sbb byte ptr [rax + 0x31], cl ; ret 0x8948
0x0000000000425b1e : sbb byte ptr [rax + 0xc495], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000425abc : sbb byte ptr [rax + 0xcc95], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000443723 : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000043922a : sbb byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000046aff3 : sbb byte ptr [rax + 1], bh ; ret
0x0000000000455190 : sbb byte ptr [rax + 1], cl ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000049428d : sbb byte ptr [rax + 1], cl ; ret
0x000000000045a5de : sbb byte ptr [rax + 9], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xf748
0x000000000045a5dd : sbb byte ptr [rax + 9], r9b ; ror byte ptr [rax - 0x77], 1 ; ret 0xf748
0x000000000045834f : sbb byte ptr [rax + rax], al ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000518a6b : sbb byte ptr [rax - 0x6a], ch ; outsb dx, byte ptr [rsi] ; mov ecx, 0xb1a8908e ; ret 0xf0ad
0x00000000004c7464 : sbb byte ptr [rax - 0x73], cl ; ja 0x4c7482 ; mov rdx, rax ; call r15
0x00000000004c7679 : sbb byte ptr [rax - 0x73], cl ; ja 0x4c7697 ; mov rdx, rax ; call r11
0x000000000046a248 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rdi, r13 ; call rax
0x0000000000425bba : sbb byte ptr [rax - 0x76b703ad], cl ; ret 0xc148
0x000000000044a64c : sbb byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; ret 0x38e9
0x00000000004660f7 : sbb byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r15 ; call rax
0x0000000000497e5b : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r15
0x000000000049674c : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000043c646 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000049c72a : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000440ed5 : sbb byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000455194 : sbb byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000004c7954 : sbb byte ptr [rax - 0x77], cl ; ret 0x3348
0x0000000000450e1d : sbb byte ptr [rax - 0x77], cl ; ret 0x3abe
0x00000000004510c2 : sbb byte ptr [rax - 0x77], cl ; ret 0x57be
0x00000000004513a0 : sbb byte ptr [rax - 0x77], cl ; ret 0x67be
0x0000000000440f83 : sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000048944e : sbb byte ptr [rax - 0x77], cl ; ret 0xde89
0x00000000004b7991 : sbb byte ptr [rax - 0x7b], cl ; push qword ptr [rax + rdx*2 - 0x7d] ; ret 0x4801
0x00000000004af7f4 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000004475f6 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rcx + 0x48], cl ; mov edi, ebx ; call rdx
0x0000000000472037 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x31], 0xc9 ; jmp rax
0x000000000041dc45 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000004762aa : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048b560 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000048b578 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000040855f : sbb byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000410739 : sbb byte ptr [rax - 9], cl ; or byte ptr [rcx + 1], cl ; ret 0x1148
0x0000000000410738 : sbb byte ptr [rax - 9], r9b ; or byte ptr [rcx + 1], cl ; ret 0x1148
0x0000000000405551 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051ac68 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004ece08 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000050b080 : sbb byte ptr [rbp + 0x49a1cfe8], 0x6c ; ret 0x8371
0x00000000004f6148 : sbb byte ptr [rbp + rcx*8 - 0x45], ch ; ret
0x000000000050fd64 : sbb byte ptr [rbp - 0x6cf590b4], dh ; cmc ; ret 0x2d31
0x0000000000491b5d : sbb byte ptr [rbp - 0x77], cl ; fld qword ptr [rcx - 0x3f] ; ret
0x0000000000410b41 : sbb byte ptr [rbp - 0x77], cl ; ret 0x8b48
0x0000000000410b7c : sbb byte ptr [rbp - 0x77], cl ; ret 0xf748
0x0000000000410b7b : sbb byte ptr [rbp - 0x77], r9b ; ret 0xf748
0x0000000000495656 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004a8ab5 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004ab29e : sbb byte ptr [rbx + 0x5d], bl ; jmp rdx
0x00000000004b68c9 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405bb3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040e44b : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r14 ; ret
0x0000000000402531 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000517326 : sbb byte ptr [rbx + 0x6c], dh ; ret 0xeeb6
0x0000000000515c8e : sbb byte ptr [rbx + 7], ch ; fidivr word ptr [rip + 0x25c65510] ; ret 0xf7ea
0x0000000000510262 : sbb byte ptr [rbx + rcx*8 + 9], bl ; ret 0xcc74
0x0000000000542bd8 : sbb byte ptr [rbx + rsi*8], al ; jmp qword ptr [rcx]
0x00000000005374e8 : sbb byte ptr [rbx - 0x10], al ; call qword ptr [rbx]
0x0000000000553358 : sbb byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x0000000000451b15 : sbb byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000045c625 : sbb byte ptr [rcx + 0x5d], al ; pop r12 ; ret
0x0000000000510ccd : sbb byte ptr [rcx + 0x7f62a6fd], dh ; ret 0x8b90
0x0000000000410112 : sbb byte ptr [rcx + 1], cl ; ret
0x0000000000410893 : sbb byte ptr [rcx + 1], cl ; ret 0x1148
0x000000000041008f : sbb byte ptr [rcx + 1], cl ; ret 0x1149
0x00000000004cab68 : sbb byte ptr [rcx + 9], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000004b557f : sbb byte ptr [rcx + rcx*4 + 0xf], al ; ret
0x0000000000468543 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041c650 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d28d : sbb byte ptr [rcx - 0x2076b712], cl ; pop rbx ; pop rbp ; jmp rax
0x000000000054eca8 : sbb byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x00000000004105d1 : sbb byte ptr [rcx - 9], cl ; and byte ptr [rcx + 1], cl ; ret
0x00000000004100c1 : sbb byte ptr [rcx - 9], cl ; and byte ptr [rcx + 1], cl ; ret 0x1149
0x00000000004105d0 : sbb byte ptr [rcx - 9], r9b ; and byte ptr [rcx + 1], cl ; ret
0x00000000004100c0 : sbb byte ptr [rcx - 9], r9b ; and byte ptr [rcx + 1], cl ; ret 0x1149
0x0000000000540845 : sbb byte ptr [rcx], al ; add byte ptr [rax - 0x56], bl ; call qword ptr [rdi]
0x000000000054089d : sbb byte ptr [rcx], al ; add byte ptr [rax], ah ; stosd dword ptr [rdi], eax ; call qword ptr [rdi]
0x0000000000529f2d : sbb byte ptr [rcx], al ; add byte ptr [rcx + rsi*4 - 0xf], al ; call rsp
0x00000000004ae493 : sbb byte ptr [rcx], al ; jne 0x4ae4a8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b412e : sbb byte ptr [rcx], dh ; div dh ; ret 0xf02
0x000000000041aacb : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040e4c8 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000462678 : sbb byte ptr [rcx], dh ; shr al, 0xe0 ; ret 0xfffb
0x00000000005108d0 : sbb byte ptr [rdi + 0x22], dl ; jle 0x5108da ; ret
0x0000000000516ae7 : sbb byte ptr [rdi + 0xcba7548], ah ; ret 0x1595
0x00000000004ffbe7 : sbb byte ptr [rdi - 0x5130111d], dl ; pop rdi ; ret
0x00000000005450d8 : sbb byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x0000000000486517 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000040c09a : sbb byte ptr [rdi], cl ; test cl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000040bf88 : sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0xeb83
0x000000000040bf87 : sbb byte ptr [rdi], r9b ; xchg eax, edx ; ret 0xeb83
0x000000000050ea8d : sbb byte ptr [rdx + 0x31be70df], bh ; ret
0x00000000004ee186 : sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x00000000004f537b : sbb byte ptr [rdx], ah ; ret 0xaf1
0x00000000004b3e57 : sbb byte ptr [rdx], al ; ret
0x0000000000498cd2 : sbb byte ptr [rdx], dl ; ret
0x000000000054a8e8 : sbb byte ptr [rsi], ch ; hlt ; call qword ptr [rcx]
0x000000000050b07f : sbb byte ptr ss:[rbp + 0x49a1cfe8], 0x6c ; ret 0x8371
0x00000000004f4db1 : sbb ch, ah ; sub byte ptr [rax + 0x6a], 0xcf ; ret 0xf3f4
0x0000000000430a1e : sbb ch, byte ptr [rax - 0x2f07686f] ; jo 0x4309ba ; ret 0xbe30
0x000000000050b33b : sbb ch, ch ; push rbp ; ret 0x89e7
0x000000000050e64a : sbb ch, dh ; push 0x41 ; std ; ret
0x00000000004bd6d5 : sbb cl, al ; call 0xffffffffc2d517f2
0x0000000000514f3e : sbb cl, al ; call qword ptr [rdx]
0x000000000046abe5 : sbb cl, byte ptr [rax - 0x77] ; out dx, al ; call rax
0x0000000000463735 : sbb cl, byte ptr [rax - 0x77] ; ret 0x6be
0x0000000000423efa : sbb cl, byte ptr [rax - 0x7d] ; ret 0xb802
0x0000000000418b74 : sbb cl, byte ptr [rcx + 0x21] ; ret 0x894c
0x00000000004fee05 : sbb cl, byte ptr [rdi] ; ret 0x22b3
0x000000000050a1eb : sbb cl, dh ; clc ; ret
0x0000000000534970 : sbb dh, 0xee ; jmp rsi
0x00000000004bdda6 : sbb dh, bl ; ret
0x00000000004f7834 : sbb dh, byte ptr [rdi + rdi*8 - 0x939d122] ; ret 0xf6c2
0x00000000004fd1ee : sbb dh, cl ; ret 0x4c24
0x0000000000551d41 : sbb dh, dh ; call qword ptr [rdx]
0x0000000000551d11 : sbb dh, dh ; jmp qword ptr [rsi]
0x000000000052cda1 : sbb dh, dh ; jmp rsp
0x00000000004f4c40 : sbb dl, byte ptr [rdi] ; mov word ptr [rax - 0x30], cs ; ret 0xfb9
0x0000000000493390 : sbb dl, byte ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000500cf8 : sbb dl, byte ptr [rdi] ; ret 0xaaca
0x0000000000533f48 : sbb dl, cl ; out dx, al ; call qword ptr [rdx]
0x0000000000513d0f : sbb dword ptr [rax], edi ; mov bl, 4 ; sar dword ptr [rax], -0x79 ; in eax, dx ; ret
0x0000000000406141 : sbb dword ptr [rbp], ecx ; ret
0x0000000000402452 : sbb dword ptr [rbx + rcx*4 + 0x51], ecx ; or byte ptr [rax - 0x7d], cl ; ret 0x4c20
0x0000000000514654 : sbb dword ptr [rbx], ebp ; add esi, dword ptr [rbx + 0x56] ; and byte ptr [rbp + 9], dh ; ret
0x0000000000518167 : sbb dword ptr [rbx], edi ; add dl, byte ptr [rsi + 0x47583183] ; ret
0x00000000004f5562 : sbb dword ptr [rcx + rax*4 + 0x5d], esi ; div ecx ; ret 0xa995
0x0000000000529f85 : sbb dword ptr [rcx], eax ; add byte ptr [rdx + rsi*4], dl ; int1 ; jmp rsp
0x000000000051144e : sbb dword ptr [rcx], esp ; ret
0x0000000000505984 : sbb dword ptr [rdi + 0x20], ecx ; ret
0x000000000050ed47 : sbb dword ptr [rdi + 1], esi ; out 0xfa, al ; ret
0x0000000000517234 : sbb dword ptr [rdi - 0x167f26ca], edi ; ret
0x000000000051685f : sbb dword ptr [rdi - 0x3ae3b2cc], ebx ; ret
0x000000000050bc40 : sbb dword ptr [rdi], esp ; ret 0xcac0
0x00000000004fbc72 : sbb dword ptr [rdx + 9], edi ; int1 ; lodsd eax, dword ptr [rsi] ; xlatb ; ret 0x8a8d
0x00000000004990d2 : sbb dword ptr [rdx], edx ; ret
0x0000000000407f9d : sbb dword ptr [rip + 0x100], esi ; add bl, dh ; ret
0x0000000000503ffa : sbb dword ptr [rsi + 0x12], esp ; push rsp ; movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rdx ; loop 0x50406c ; ret
0x0000000000513d0e : sbb dword ptr cs:[rax], edi ; mov bl, 4 ; sar dword ptr [rax], -0x79 ; in eax, dx ; ret
0x0000000000493b21 : sbb eax, 0x1d1672c3 ; ret
0x00000000004f1fe5 : sbb eax, 0x2a8d03ec ; ret
0x0000000000471756 : sbb eax, 0x31b0be53 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041d124 : sbb eax, 0x33c7df ; pop rbx ; ret
0x000000000040600b : sbb eax, 0x353868 ; pop rbx ; ret
0x00000000004fdb68 : sbb eax, 0x3697f089 ; or bl, byte ptr [rcx] ; ret
0x000000000047920f : sbb eax, 0x39fffa36 ; ret
0x0000000000500439 : sbb eax, 0x474c9580 ; ret 0xb611
0x0000000000508e50 : sbb eax, 0x4e7482e4 ; je 0x508e94 ; lahf ; ret 0xb224
0x0000000000530d35 : sbb eax, 0x78980000 ; in eax, dx ; call rsp
0x000000000050b056 : sbb eax, 0x7a233fff ; ret
0x00000000005143c2 : sbb eax, 0x7e2c2e42 ; ret
0x00000000004efcf5 : sbb eax, 0x85617937 ; ret 0x2c94
0x000000000043571f : sbb eax, 0x8900001b ; ret 0xc031
0x0000000000407b23 : sbb eax, 0x89480035 ; fsubp st(0) ; ret 0x150
0x0000000000507420 : sbb eax, 0x8f719811 ; jmp 0xffffffffc41cff8b
0x00000000005049f1 : sbb eax, 0xa599640 ; ret
0x0000000000511f5b : sbb eax, 0xa9bb9dc9 ; ret 0x78b4
0x00000000004fccbe : sbb eax, 0xb45ab24c ; sahf ; std ; ret
0x0000000000540dc5 : sbb eax, 0xb8b80001 ; jmp qword ptr [rsi]
0x0000000000515a46 : sbb eax, 0xbff8fc48 ; ret 0x4fd8
0x00000000005084e3 : sbb eax, 0xda4fc7b5 ; push rbp ; ret 0xcea5
0x000000000041cbdf : sbb eax, 0xf3fffea4 ; ret
0x0000000000418248 : sbb eax, 0xf47dc1c4 ; ret
0x0000000000504b80 : sbb eax, 0xf5606b8 ; ret 0x5232
0x00000000004848b1 : sbb eax, dword ptr [rbp + 0x1f0ffff9] ; add bl, dh ; ret
0x0000000000491563 : sbb eax, dword ptr [rcx + 0x1b1b1be7] ; sbb eax, dword ptr [rcx - 0x77] ; ret 0x8941
0x0000000000491569 : sbb eax, dword ptr [rcx - 0x77] ; ret 0x8941
0x0000000000540bcd : sbb eax, dword ptr [rcx] ; add byte ptr [rax], dh ; mov dl, 0xf2 ; jmp qword ptr [rdx]
0x0000000000529fed : sbb eax, dword ptr [rcx] ; add byte ptr [rcx + rdi*4], ah ; int1 ; jmp rsp
0x0000000000550b75 : sbb eax, dword ptr [rdx] ; add byte ptr [rax - 0x24], cl ; cmc ; jmp rsi
0x00000000004a8b7d : sbb eax, eax ; and eax, 0xfffffffd ; add eax, 0x16 ; ret
0x000000000040ffa3 : sbb eax, eax ; and eax, 1 ; ret
0x00000000004b3391 : sbb eax, eax ; and eax, 2 ; add eax, 1 ; ret
0x000000000043eb49 : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; pop rbx ; ret
0x000000000040290b : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004655a4 : sbb eax, eax ; not eax ; and eax, 2 ; pop rbx ; ret
0x00000000004806ad : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x00000000004804d2 : sbb eax, eax ; not eax ; and eax, 5 ; ret
0x00000000005014cd : sbb eax, ebx ; ret
0x0000000000429373 : sbb eax, esp ; jrcxz 0x4293fa ; add ah, byte ptr [rcx] ; ret 0x7ec5
0x0000000000429460 : sbb eax, esp ; jrcxz 0x4294e7 ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000429549 : sbb eax, esp ; jrcxz 0x4295d0 ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000429633 : sbb eax, esp ; jrcxz 0x4296ba ; add dh, byte ptr [rcx] ; ret 0xc1c4
0x000000000042970e : sbb eax, esp ; jrcxz 0x429795 ; add dh, byte ptr [rcx] ; ret 0x144
0x00000000004298c6 : sbb eax, esp ; jrcxz 0x42994d ; add dh, byte ptr [rcx] ; ret 0x144
0x00000000004299c2 : sbb eax, esp ; jrcxz 0x429a49 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429ac5 : sbb eax, esp ; jrcxz 0x429b4c ; add dh, byte ptr [rcx] ; ret 0xbdc5
0x0000000000429bc4 : sbb eax, esp ; jrcxz 0x429c4b ; add dh, byte ptr [rcx] ; ret 0x41c4
0x0000000000429c7c : sbb eax, esp ; jrcxz 0x429d03 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429d1f : sbb eax, esp ; jrcxz 0x429da6 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429dbb : sbb eax, esp ; jrcxz 0x429e42 ; add dh, byte ptr [rcx] ; ret 0x144
0x0000000000429f47 : sbb eax, esp ; jrcxz 0x429fce ; add ah, byte ptr [rcx] ; ret 0x144
0x0000000000429ffb : sbb eax, esp ; jrcxz 0x42a082 ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000042a0af : sbb eax, esp ; jrcxz 0x42a136 ; add ah, byte ptr [rcx] ; ret 0x144
0x000000000042a15b : sbb eax, esp ; jrcxz 0x42a1e2 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a202 : sbb eax, esp ; jrcxz 0x42a289 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a2af : sbb eax, esp ; jrcxz 0x42a336 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a35a : sbb eax, esp ; jrcxz 0x42a3e1 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a428 : sbb eax, esp ; jrcxz 0x42a4af ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a503 : sbb eax, esp ; jrcxz 0x42a58a ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042a8ee : sbb eax, esp ; jrcxz 0x42a975 ; add dh, byte ptr [rcx] ; ret 0x144
0x000000000042e4b1 : sbb ebp, eax ; fucomp st(7) ; in eax, -0x3c ; ret
0x0000000000480d04 : sbb ebp, eax ; push rsi ; call 0xffffffffc2d20d0e
0x00000000004f1f83 : sbb ebp, edx ; push rbp ; xor eax, dword ptr [rdx] ; ret
0x00000000004786b4 : sbb ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000491567 : sbb ebx, dword ptr [rbx] ; sbb eax, dword ptr [rcx - 0x77] ; ret 0x8941
0x00000000004f9349 : sbb ebx, edx ; ret 0x254
0x0000000000461b14 : sbb ecx, dword ptr [rax + 0x63] ; ret
0x00000000004f98df : sbb ecx, dword ptr [rax + rdx*8 - 0x2e429204] ; ret
0x00000000004235d4 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000500cf1 : sbb edi, dword ptr [rax + rcx*8] ; push rcx ; scasb al, byte ptr [rdi] ; jl 0x500cfc ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x00000000005133e5 : sbb edi, dword ptr [rax] ; ret 0x78f3
0x000000000051175a : sbb edi, ecx ; jmp qword ptr [rsi]
0x00000000005075d7 : sbb edx, 0x12c7155a ; ret 0xda22
0x00000000004feab9 : sbb edx, dword ptr [rax + rdx*4] ; ret
0x000000000051288a : sbb edx, dword ptr [rdx] ; imul dword ptr [rdx - 0x6c] ; ret 0x983e
0x0000000000517a5a : sbb edx, dword ptr [rdx] ; mov edi, 0x7c44912e ; ret 0x2496
0x000000000050cacd : sbb edx, dword ptr [rsi + 0x290570e1] ; ret 0x2f5c
0x00000000004f0a0d : sbb edx, ecx ; add byte ptr [rbx + rcx*4 - 0x37], bh ; ret 0x8d33
0x0000000000469ee1 : sbb edx, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000480503 : sbb edx, edx ; not edx ; and edx, 5 ; mov eax, edx ; ret
0x000000000051200b : sbb esi, dword ptr [rbx] ; add eax, 0x3398db0f ; ret
0x000000000050ac75 : sbb esi, ebp ; ret 0x1d0d
0x0000000000529619 : sbb esi, ecx ; call rsp
0x0000000000504fd8 : sbb esi, ecx ; push 0xde ; xor al, 0xf4 ; ret 0xfa73
0x000000000048fcc3 : sbb esi, edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000052a5b1 : sbb esi, edx ; jmp rsp
0x0000000000551f01 : sbb esi, esi ; call qword ptr [rcx]
0x0000000000551e89 : sbb esi, esi ; jmp qword ptr [rdx]
0x0000000000507d97 : sbb esp, dword ptr [rdi - 0x6d737d8d] ; ret
0x00000000004fd1e8 : sbb esp, dword ptr [rsp + 0x1a6dea8a] ; int1 ; ret 0x4c24
0x000000000042ec95 : sbb esp, eax ; ret
0x000000000054a171 : sbb esp, esi ; call qword ptr [rax]
0x000000000045cbe9 : sbb r11b, r14b ; ret
0x00000000004b66e2 : sbb r11b, r8b ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000050b055 : sbb rax, 0x7a233fff ; ret
0x000000000040ffa2 : sbb rax, rax ; and eax, 1 ; ret
0x000000000050ba3a : scasb al, byte ptr [rdi] ; adc ecx, dword ptr [rbp - 0x66aec903] ; ret
0x000000000041b773 : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; lahf ; ret 0x854d
0x0000000000528a2d : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; test byte ptr [rax - 0x11], cl ; jmp rsp
0x0000000000549e05 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; cmp byte ptr [rsp + rsi*8], dl ; call qword ptr [rbx]
0x000000000043aeaf : scasb al, byte ptr [rdi] ; cld ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000054b6c9 : scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rax]
0x00000000004309e1 : scasb al, byte ptr [rdi] ; in eax, dx ; leave ; ret 0x3b81
0x0000000000529de1 : scasb al, byte ptr [rdi] ; int1 ; jmp rsp
0x000000000050a902 : scasb al, byte ptr [rdi] ; ja 0x50a979 ; and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x0000000000500cf5 : scasb al, byte ptr [rdi] ; jl 0x500cf8 ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x0000000000516c0f : scasb al, byte ptr [rdi] ; leave ; add byte ptr [rcx - 0x76], dh ; ret 0xe440
0x00000000005030ac : scasb al, byte ptr [rdi] ; mov al, 5 ; ret
0x000000000051340e : scasb al, byte ptr [rdi] ; mov cl, 0x4d ; ret
0x0000000000507c92 : scasb al, byte ptr [rdi] ; mov word ptr [rcx - 0x30], ds ; rol bh, 0xa9 ; mov dl, 0x58 ; ret
0x0000000000533819 : scasb al, byte ptr [rdi] ; out dx, al ; call rsp
0x00000000004ffbec : scasb al, byte ptr [rdi] ; pop rdi ; ret
0x0000000000512776 : scasb al, byte ptr [rdi] ; rcr byte ptr [rcx - 0x3c], cl ; ret
0x0000000000452541 : scasb al, byte ptr [rdi] ; ret
0x00000000004f929d : scasb al, byte ptr [rdi] ; ret 0x2687
0x0000000000502d19 : scasb al, byte ptr [rdi] ; ret 0x953d
0x000000000050f483 : scasb al, byte ptr [rdi] ; ret 0xe408
0x0000000000515a45 : scasb al, byte ptr [rdi] ; sbb eax, 0xbff8fc48 ; ret 0x4fd8
0x00000000004fa418 : scasb al, byte ptr [rdi] ; shl byte ptr [rdi + 0x31], 0x89 ; ret 0xc308
0x000000000050d58b : scasd eax, dword ptr [rdi] ; add bl, ah ; ret 0xcd52
0x00000000004fff52 : scasd eax, dword ptr [rdi] ; and eax, esp ; ret 0xbd61
0x00000000004f7b4b : scasd eax, dword ptr [rdi] ; call qword ptr [rsi]
0x0000000000516607 : scasd eax, dword ptr [rdi] ; cld ; ret 0x8421
0x000000000045a3c0 : scasd eax, dword ptr [rdi] ; fisttp qword ptr [rax + 3] ; sbb al, 0x24 ; mov rdi, rbx ; call rax
0x00000000004f5c5c : scasd eax, dword ptr [rdi] ; inc edx ; jmp 0x4f5c08
0x0000000000529e31 : scasd eax, dword ptr [rdi] ; int1 ; call rsp
0x0000000000518c71 : scasd eax, dword ptr [rdi] ; lahf ; popfq ; xchg eax, ebp ; push rax ; in eax, dx ; ret
0x00000000004180d7 : scasd eax, dword ptr [rdi] ; mov byte ptr [r9 + 1], cl ; ret
0x0000000000417f7c : scasd eax, dword ptr [rdi] ; mov byte ptr [r9 + 1], cl ; ret 0x8948
0x000000000041775b : scasd eax, dword ptr [rdi] ; mov byte ptr [r9 - 0x3f], r9b ; jmp 0xffffffffc242c08b
0x0000000000418010 : scasd eax, dword ptr [rdi] ; mov byte ptr [rcx + 1], r9b ; ret
0x00000000004ed32a : scasd eax, dword ptr [rdi] ; mov dword ptr [rbx], eax ; test eax, 0xa25f8d6f ; ret 0x7455
0x00000000004fe6fc : scasd eax, dword ptr [rdi] ; mov eax, 0x51f8d28f ; ret 0x2a40
0x00000000005138e8 : scasd eax, dword ptr [rdi] ; pop rbx ; ret 0x748b
0x000000000041e938 : scasd eax, dword ptr [rdi] ; ret
0x000000000050cae2 : scasd eax, dword ptr [rdi] ; ret 0xa36
0x00000000004fae9f : scasd eax, dword ptr [rdi] ; ret 0xb8fa
0x00000000004b00df : scasd eax, dword ptr [rdi] ; rol byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x000000000050705a : scasd eax, dword ptr [rdi] ; stosd dword ptr [rdi], eax ; xor eax, 0x8e7c1367 ; ret
0x00000000004b38c9 : scasd eax, dword ptr [rdi] ; sub al, byte ptr [eax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000051598f : scasd eax, dword ptr [rdi] ; test al, 0x54 ; cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x0000000000512888 : scasd eax, dword ptr [rdi] ; xchg eax, esi ; sbb edx, dword ptr [rdx] ; imul dword ptr [rdx - 0x6c] ; ret 0x983e
0x00000000004a83e0 : sete al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046eacf : sete al ; movzx eax, al ; pop rbx ; ret
0x00000000004662d7 : sete al ; movzx eax, al ; ret
0x000000000046dc44 : sete al ; ret
0x00000000004ab41a : sete dl ; jmp 0x4ab3b4
0x00000000004b20fc : setg al ; ret
0x000000000043d23a : setne al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000449278 : setne al ; add rsp, 8 ; ret
0x0000000000424bd2 : setne al ; movzx eax, al ; pop rbx ; ret
0x000000000046dbe6 : setne al ; movzx eax, al ; ret
0x000000000040294f : setne al ; ret
0x000000000047b405 : setne dl ; cmp esi, edx ; jge 0x47b457 ; ret
0x000000000045a63c : setne dl ; mov eax, edx ; pop rbx ; ret
0x0000000000473fbd : setne dl ; sub eax, edx ; ret
0x0000000000506c78 : shl byte ptr [rbp + rcx + 0x699a5f1b], 0x82 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000004f4941 : shl byte ptr [rbx + 0x4d], 0xca ; ret
0x00000000004f7ab1 : shl byte ptr [rcx + 0x5f], 0x65 ; ret
0x00000000004fa419 : shl byte ptr [rdi + 0x31], 0x89 ; ret 0xc308
0x000000000050c2c2 : shl byte ptr [rdi], 1 ; ret
0x000000000050c94a : shl byte ptr [rdx + 0x56], 1 ; ret 0x3451
0x00000000004c2143 : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0x280f
0x00000000004f84eb : shl byte ptr [rsi + 0x79], 0x6b ; loopne 0x4f8563 ; ret 0xda27
0x00000000004c1d51 : shl byte ptr [rsi + 0xf], 0xef ; div bl ; ret
0x00000000004c1c76 : shl byte ptr [rsi + 0xf], 0xef ; leave ; ret
0x00000000004c1131 : shl byte ptr [rsi + 0xf], 1 ; cmp bh, bl ; fdiv st(3) ; ret
0x00000000004c10d1 : shl byte ptr [rsi + 0xf], 1 ; cmp ch, bl ; fdiv st(3) ; ret
0x00000000004fd0e4 : shl byte ptr [rsi - 0xbd9aa24], 0x1e ; jo 0x4fd123 ; ret
0x00000000005451b0 : shl byte ptr [rsi - 0xd], 1 ; call qword ptr [rax]
0x00000000004f9d14 : shl dh, 1 ; ret 0x1026
0x0000000000515682 : shl dword ptr [rbp + 0x13], 1 ; ficom dword ptr [rbp + 0x7ad03ee0] ; ret
0x000000000050b1c7 : shl dword ptr [rbx - 0x38], cl ; jnp 0x50b1fd ; ret
0x00000000004fd715 : shl dword ptr [rdi + rcx*2], cl ; ret
0x00000000004c8db9 : shl dword ptr [rsi + 0x41], 0xf ; cmp byte ptr [rax], al ; ret 0xff3
0x00000000004bdca7 : shl dword ptr [rsi + 0xf], -0x11 ; ret 0xc3f3
0x000000000041b4af : shl dword ptr [rsi + 0xf], 0x2e ; ret
0x00000000004c42b1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; ret 0xff3
0x000000000041e116 : shl eax, 0x1e ; or rax, r8 ; pop rbx ; ret
0x0000000000480911 : shl eax, 4 ; add rax, 0x756e80 ; ret
0x00000000004b6697 : shl eax, 5 ; add rax, qword ptr [rdi] ; ret
0x000000000050c7da : shl ebp, cl ; pop rax ; jb 0x50c817 ; mov al, 0xc4 ; ret 0xc5cc
0x0000000000407fd3 : shl edx, 0x20 ; or rax, rdx ; ret
0x0000000000402289 : shl edx, 6 ; add eax, edx ; ret
0x000000000041e115 : shl rax, 0x1e ; or rax, r8 ; pop rbx ; ret
0x00000000004b6696 : shl rax, 5 ; add rax, qword ptr [rdi] ; ret
0x0000000000407fd2 : shl rdx, 0x20 ; or rax, rdx ; ret
0x000000000046267a : shr al, 0xe0 ; ret 0xfffb
0x00000000004a56b7 : shr al, cl ; ret
0x0000000000518062 : shr bh, cl ; ret 0xd875
0x0000000000480da9 : shr bl, 0xd4 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000446910 : shr bl, cl ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000004209a1 : shr byte ptr [rax + 0x75], 0 ; ret
0x000000000040b9ba : shr byte ptr [rax - 1], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000054ceb0 : shr byte ptr [rax], 1 ; cmc ; call rcx
0x00000000004fa436 : shr byte ptr [rbp + rbp*8 + 0x7e], 1 ; ret
0x000000000050379a : shr byte ptr [rbp - 0x1f3afb42], cl ; hlt ; ret 0x77fc
0x0000000000505f57 : shr byte ptr [rbx], 0xca ; pop rsi ; pop rbp ; push rsp ; pop rsp ; ret
0x00000000004431b0 : shr byte ptr [rcx + 0x75], 0 ; ret
0x00000000004ed329 : shr byte ptr [rdi + 0x6fa90389], 1 ; lea ebx, dword ptr [rdi - 0x5e] ; ret 0x7455
0x000000000054cf80 : shr byte ptr [rdx], 1 ; cmc ; jmp rcx
0x000000000045a405 : shr cl, 1 ; add edx, ecx ; mov byte ptr [rsi], dl ; ret
0x0000000000517ffb : shr cl, cl ; jb 0x51800a ; sahf ; ret
0x00000000005151f1 : shr dh, cl ; je 0x515252 ; ret
0x00000000005088ad : shr dword ptr [rbx + rcx*8 - 0x42], 1 ; int1 ; insb byte ptr [rdi], dx ; ret
0x000000000050a1e5 : shr dword ptr [rbx - 0x5322e23], cl ; sbb cl, dh ; clc ; ret
0x0000000000504fd5 : shr dword ptr [rcx + 0x2f], cl ; sbb esi, ecx ; push 0xde ; xor al, 0xf4 ; ret 0xfa73
0x000000000051391f : shr dword ptr [rcx + 0x41], 1 ; ret
0x00000000004f5dfc : shr dword ptr [rsi + 1], 0x2d ; stc ; ret
0x00000000004f67ed : shr dword ptr [rsi], cl ; fsub st(4), st(0) ; je 0x4f67ba ; or byte ptr [rdx], dl ; pop rdx ; ret
0x0000000000451d18 : shr eax, 0x3f ; ret
0x0000000000480760 : shr eax, 1 ; and eax, 1 ; ret
0x000000000041c248 : shr eax, 3 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000418e5e : shr eax, 5 ; ret
0x000000000048053f : shr eax, 7 ; and eax, 1 ; ret
0x0000000000414991 : shr eax, cl ; and eax, 0x1f ; ret
0x0000000000402b5d : shr eax, cl ; and eax, 1 ; ret
0x0000000000421162 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000041ca05 : shr edx, 0x10 ; xor rax, rdx ; ret
0x00000000004804b1 : shr edx, 4 ; mov eax, edx ; and eax, 1 ; ret
0x0000000000511108 : shr edx, cl ; ret
0x0000000000451d17 : shr rax, 0x3f ; ret
0x000000000048075f : shr rax, 1 ; and eax, 1 ; ret
0x000000000041c247 : shr rax, 3 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048053e : shr rax, 7 ; and eax, 1 ; ret
0x0000000000402b5c : shr rax, cl ; and eax, 1 ; ret
0x000000000041ca04 : shr rdx, 0x10 ; xor rax, rdx ; ret
0x00000000004804b0 : shr rdx, 4 ; mov eax, edx ; and eax, 1 ; ret
0x00000000004c46c5 : shufps xmm1, xmm1, -0x56 ; xorps xmm2, xmm1 ; ret
0x00000000004c4625 : shufps xmm1, xmm1, -1 ; xorps xmm0, xmm1 ; ret
0x00000000004c7082 : sidt ptr [r8 + 9] ; ret 0xffb8
0x00000000004c7083 : sidt ptr [rax + 9] ; ret 0xffb8
0x000000000052ff2d : sldt word ptr [rax] ; adc byte ptr [rbx - 0x13], bl ; call qword ptr [rbx]
0x000000000052fee5 : sldt word ptr [rax] ; clc ; pop rdx ; in eax, dx ; call qword ptr [rsi]
0x0000000000509184 : stc ; adc byte ptr [rsi + 0x55], dh ; stc ; ret
0x000000000054e9bd : stc ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; call rsp
0x000000000052ec9a : stc ; call rsp
0x000000000043d523 : stc ; cmp ah, 0xff ; xor eax, eax ; pop rbx ; ret
0x000000000050558d : stc ; cmp esi, dword ptr [rsi] ; or byte ptr [rsi + 0x48], ch ; ret
0x000000000046eb0c : stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000046d702 : stc ; dec dword ptr [rax + 1] ; ret
0x0000000000465fd6 : stc ; dec dword ptr [rax - 0x73] ; jl 0x466009 ; xor al, ch ; outsb dx, byte ptr [rsi] ; ret
0x000000000047e8a1 : stc ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000004ad217 : stc ; dec dword ptr [rax - 0x75] ; jl 0x4ad24a ; and byte ptr [rax - 0x77], cl ; ret
0x000000000047f95d : stc ; dec dword ptr [rax - 0x75] ; xor byte ptr [rax - 0x77], cl ; ret
0x000000000046603b : stc ; dec dword ptr [rax - 0x77] ; out dx, eax ; xor ebp, ebp ; call 0x402299
0x000000000047ec9e : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000487641 : stc ; dec dword ptr [rax - 0x77] ; ret 0x1b8
0x00000000004847b1 : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret
0x00000000004a0984 : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rbx + 0x48], 0x89 ; ret
0x00000000004843c2 : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000047ebe3 : stc ; dec dword ptr [rax - 0x7d] ; js 0x47ec02 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000481bb8 : stc ; dec dword ptr [rax - 0x7d] ; js 0x481bd7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048892b : stc ; dec dword ptr [rax - 0x7d] ; js 0x488972 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047f62c : stc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000485e75 : stc ; dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x00000000004843e2 : stc ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000052ecba : stc ; dec dword ptr [rcx + rdi*4 + 0xa840002] ; stc ; jmp rsp
0x000000000052ec42 : stc ; dec esp ; mov bh, 2 ; add byte ptr [rbx + rax - 7], ah ; jmp rsp
0x00000000004fc50f : stc ; in eax, 0x28 ; ret 0x8a49
0x0000000000467f25 : stc ; inc dword ptr [rbp + 0x5b057ec0] ; ret
0x00000000004b4735 : stc ; inc dword ptr [rbp - 0x7cc08b40] ; ret
0x000000000048741e : stc ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x0000000000484c10 : stc ; jmp qword ptr [rsi + 0xf]
0x000000000052ec4a : stc ; jmp rsp
0x000000000046a8f5 : stc ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000052ecf2 : stc ; ljmp ptr [rdx + rdi*4 + 0x16940002] ; stc ; jmp rsp
0x00000000004f5a9d : stc ; mov ah, 0x8f ; iretd ; jne 0x4f5a41 ; jmp qword ptr [rbx]
0x0000000000461b6a : stc ; mov ebx, 0xc2835275 ; add dword ptr [rcx], edi ; ret 0xe375
0x00000000004c76b8 : stc ; mov rsi, r13 ; mov rdi, r12 ; call r10
0x0000000000471439 : stc ; nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004f64b5 : stc ; or byte ptr [rsi + 0x4e], ch ; leave ; call 0xffffffff847726e8
0x000000000046e807 : stc ; or byte ptr [rsi + 5], bh ; ret
0x00000000004c8ea1 : stc ; out dx, eax ; ret
0x00000000004c8e1d : stc ; outsd dx, dword ptr [rsi] ; ret 0xc9c5
0x000000000046a8c8 : stc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004f5e00 : stc ; ret
0x00000000004f846d : stc ; ret 0x1ede
0x00000000004ec855 : stc ; ret 0x5ca4
0x00000000004ef998 : stc ; ret 0x98f0
0x0000000000516ba6 : stc ; ret 0xbf6e
0x0000000000463320 : stc ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000462489 : stc ; sti ; ljmp ptr [rcx] ; ret
0x0000000000507a3c : stc ; sub ebp, dword ptr [rdx] ; in eax, dx ; ret
0x00000000005015b0 : stc ; sub ebx, ebp ; jp 0x5015d3 ; ret
0x000000000043a56c : stc ; xor dword ptr [rax], eax ; jne 0x43a534 ; pop rbx ; ret
0x00000000004ab597 : std ; add byte ptr [rax], al ; add dh, dh ; ret 0x4d06
0x000000000052998d : std ; add byte ptr [rax], al ; and al, 0x4d ; int1 ; call rsp
0x000000000054eced : std ; add dword ptr [rax], eax ; xor byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x00000000004a8b81 : std ; add eax, 0x16 ; ret
0x000000000050394f : std ; cmp byte ptr [rax - 0x2b], bh ; push rdi ; ret 0xb9d9
0x00000000005054a0 : std ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; ret 0x779c
0x00000000004491b2 : std ; dec dword ptr [rax + 0x63] ; adc ebx, dword ptr [rbx + 0x48] ; xor eax, edx ; ret
0x00000000004663e4 : std ; dec dword ptr [rax - 0x73] ; jl 0x466416 ; add al, 0x89 ; ret 0x8944
0x000000000046dd85 : std ; dec dword ptr [rax - 0x75] ; jl 0x46ddb8 ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004491ca : std ; dec dword ptr [rax - 0x75] ; jnp 0x4491de ; call qword ptr [rax]
0x00000000004491c9 : std ; dec dword ptr [rax - 0x75] ; jnp 0x4491df ; call qword ptr [rax]
0x00000000004347ab : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004361f9 : std ; dec dword ptr [rbx - 0x76f3dbbc] ; ret
0x0000000000434ae5 : std ; dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x00000000004462be : std ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004410bd : std ; insb byte ptr [rdi], dx ; add bl, r14b ; ret
0x00000000005160a2 : std ; int1 ; insb byte ptr [rdi], dx ; pop rdi ; jmp 0x51606f
0x0000000000510101 : std ; jbe 0x510112 ; pop qword ptr [rbx - 0x72] ; ret
0x0000000000510100 : std ; jbe 0x510113 ; pop qword ptr [rbx - 0x72] ; ret
0x000000000043509d : std ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000494a87 : std ; lea ebx, dword ptr [rax + rbp] ; jmp 0x494a97
0x00000000004f72ef : std ; lea esp, dword ptr [rax] ; sub al, 0x5d ; ret
0x000000000043c227 : std ; lea rdx, qword ptr [rsp + 0x10] ; call rax
0x00000000004ac525 : std ; lea rsi, qword ptr [rsi + 0x48] ; call rax
0x0000000000500ff9 : std ; lodsd eax, dword ptr [rsi] ; jnp 0x50102b ; mov es, word ptr [rbp - 0x5f] ; push rsi ; ret 0xe039
0x0000000000517894 : std ; mov word ptr [rdx - 0x41d0a4f7], cs ; cmp dh, cl ; ret
0x00000000004feacc : std ; or dword ptr [rax], 0x76 ; out dx, eax ; ret
0x0000000000535801 : std ; out dx, al ; jmp qword ptr [rbx]
0x0000000000535819 : std ; out dx, al ; jmp qword ptr [rsi]
0x0000000000501558 : std ; pop rax ; push rsp ; std ; ret
0x000000000050a91d : std ; pop rdi ; pop r12 ; jmp 0xffffffffc301e172
0x000000000050ba3d : std ; push rcx ; cdq ; ret
0x00000000004e639a : std ; ret
0x00000000004fbb7c : std ; ret 0x3148
0x000000000050ff2c : std ; ret 0x488a
0x0000000000512b52 : std ; ret 0x6c5d
0x00000000004fd4ef : std ; ret 0x9661
0x00000000004b056f : std ; ret 0xfff6
0x0000000000512305 : std ; sahf ; adc bl, bh ; xchg rax, r12 ; sahf ; ret 0x667b
0x00000000004ee185 : std ; sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x000000000040613f : std ; sbb dword ptr [rbp], ecx ; ret
0x00000000004431af : std ; shr byte ptr [rcx + 0x75], 0 ; ret
0x00000000004fbb7b : std ; std ; ret 0x3148
0x0000000000516a20 : std ; sub ch, cl ; in al, dx ; ret
0x00000000004f9432 : std ; xlatb ; push rcx ; push rax ; ret
0x0000000000406a05 : std ; xor al, 0 ; ret
0x0000000000406aa3 : std ; xor al, 0 ; test eax, eax ; jne 0x406ab7 ; ret
0x0000000000406aa2 : std ; xor al, 0 ; test eax, eax ; jne 0x406ab8 ; ret
0x0000000000454336 : sti ; adc dword ptr [rdi], ecx ; test byte ptr [rdx - 0x9ffffff], ch ; ret
0x00000000004f7afd : sti ; adc eax, 0xadf8c391 ; pop rdi ; ret 0xd710
0x00000000004ca2db : sti ; adc esp, eax ; ret
0x000000000054eb25 : sti ; add dword ptr [rax], eax ; cwde ; jo 0x54eb26 ; call qword ptr [rsi]
0x000000000054eb24 : sti ; add dword ptr [rax], eax ; cwde ; jo 0x54eb27 ; call qword ptr [rsi]
0x000000000054eb6d : sti ; add dword ptr [rax], eax ; mov al, 0x70 ; cmc ; call qword ptr [rsi]
0x000000000054eaf5 : sti ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; call qword ptr [rsi]
0x000000000054eb0d : sti ; add dword ptr [rax], eax ; nop ; jo 0x54eb0e ; call qword ptr [rsi]
0x000000000052c97d : sti ; add dword ptr [rax], eax ; push rsp ; ret 0xfff5
0x000000000054ebcd : sti ; add dword ptr [rax], eax ; sal byte ptr [rax - 0xb], 1 ; call qword ptr [rsi]
0x000000000054eb55 : sti ; add dword ptr [rax], eax ; test al, 0x70 ; cmc ; call qword ptr [rsi]
0x000000000043a2f3 : sti ; call qword ptr [rdi]
0x0000000000511a03 : sti ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call 0xffffffffc44d1892
0x0000000000506d7e : sti ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xaed4
0x000000000044c41a : sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004471f3 : sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 2
0x000000000048c1e2 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x0000000000446366 : sti ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000044d387 : sti ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000489448 : sti ; dec dword ptr [rcx - 0x75] ; jl 0x48947b ; sbb byte ptr [rax - 0x77], cl ; ret 0xde89
0x00000000004894d8 : sti ; dec dword ptr [rcx - 0x75] ; jl 0x48950b ; xor byte ptr [rax - 0x77], cl ; ret 0xde89
0x00000000004f09cd : sti ; fld qword ptr [rax] ; jg 0x4f0a05 ; and bh, byte ptr [rsi - 0x26] ; xchg eax, ebx ; ret
0x000000000044e435 : sti ; inc dword ptr [rbp + 0x5b057ec0] ; ret
0x00000000004525a8 : sti ; inc dword ptr [rbp + 0x5b0a7ec0] ; ret
0x000000000044c438 : sti ; inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005135b6 : sti ; insb byte ptr [rdi], dx ; ret 0x3118
0x000000000040625d : sti ; jle 0x406273 ; xchg eax, esp ; ret 0xf631
0x0000000000515beb : sti ; jmp 0xffffffffc40573f2
0x0000000000542a41 : sti ; jmp rbx
0x0000000000450b0d : sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000046248a : sti ; ljmp ptr [rcx] ; ret
0x000000000043be6a : sti ; mov rdx, rsp ; call rax
0x00000000004f875c : sti ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rbp - 0x31], esp ; jg 0x4f87a6 ; ret
0x00000000005139ac : sti ; movsd dword ptr [rdi], dword ptr [rsi] ; mov dword ptr [rbx - 0x3f90d47a], ecx ; ret
0x00000000004f9f2a : sti ; outsb dx, byte ptr [rsi] ; mov ah, 0x19 ; jmp rcx
0x00000000005057e1 : sti ; outsd dx, dword ptr [rsi] ; xor al, 0x44 ; outsd dx, dword ptr [rsi] ; xor al, 4 ; ret 0x14db
0x00000000004f1d33 : sti ; push rax ; mov ecx, 0x215503f7 ; ret 0xfa94
0x000000000044b28e : sti ; push rbx ; ret
0x0000000000500cd9 : sti ; ret
0x00000000004f8a78 : sti ; ret 0x4e7d
0x000000000047cfc1 : sti ; ret 0x51
0x0000000000506c30 : sti ; ret 0x5ef0
0x000000000050c2c7 : sti ; ret 0x68bc
0x00000000005070d2 : sti ; ret 0x73d0
0x000000000042bd19 : sti ; sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x0000000000500cf7 : sti ; sbb dl, byte ptr [rdi] ; ret 0xaaca
0x000000000050a901 : sti ; scasb al, byte ptr [rdi] ; ja 0x50a97a ; and ch, byte ptr [rax - 0x7f] ; push rbx ; ret 0x1e72
0x0000000000507059 : sti ; scasd eax, dword ptr [rdi] ; stosd dword ptr [rdi], eax ; xor eax, 0x8e7c1367 ; ret
0x00000000004f58b6 : sti ; sub al, 0xf1 ; ret 0x7130
0x000000000040609a : sti ; test rax, rax ; je 0x4060b6 ; call rax
0x0000000000406d3a : sti ; test rax, rax ; je 0x406d4c ; xor esi, esi ; call rax
0x000000000040700a : sti ; test rax, rax ; je 0x40701c ; xor esi, esi ; call rax
0x00000000005167fa : sti ; xchg eax, ebp ; mov cl, ah ; int 0xc3
0x00000000004fc525 : sti ; xchg eax, ecx ; lodsb al, byte ptr [rsi] ; neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x0000000000406bd9 : sti ; xor al, 0 ; mov qword ptr [rsi], rax ; ret
0x000000000043d4f8 : stosb byte ptr [rdi], al ; add al, byte ptr [rax] ; mov rax, qword ptr [rbx + 0x20] ; pop rbx ; ret
0x000000000045433a : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000540849 : stosb byte ptr [rdi], al ; call qword ptr [rdi]
0x000000000054fba9 : stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x000000000054fbf1 : stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rax]
0x0000000000504149 : stosb byte ptr [rdi], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, 0x4d286d4 ; xchg eax, esp ; cli ; ret 0xeca0
0x00000000005123d0 : stosb byte ptr [rdi], al ; fst dword ptr [rcx - 0x79a63c10] ; ret
0x000000000050c965 : stosb byte ptr [rdi], al ; fstp st(7), st(0) ; add ah, cl ; jbe 0x50c951 ; rcr eax, 1 ; ret
0x0000000000493968 : stosb byte ptr [rdi], al ; jmp rsi
0x00000000004ffc04 : stosb byte ptr [rdi], al ; js 0x4ffc2c ; ret
0x00000000004eee45 : stosb byte ptr [rdi], al ; mov dh, 0x89 ; ret 0xa79c
0x00000000004fd2fd : stosb byte ptr [rdi], al ; mov esi, 0x76a27f2 ; ret
0x000000000041de2d : stosb byte ptr [rdi], al ; mov rdx, rax ; jmp 0x41de00
0x000000000050f79c : stosb byte ptr [rdi], al ; mov word ptr [rdi - 0x69], fs ; ret
0x0000000000529049 : stosb byte ptr [rdi], al ; out dx, eax ; jmp rsp
0x000000000047d8ec : stosb byte ptr [rdi], al ; ret
0x00000000004fc2a7 : stosb byte ptr [rdi], al ; ret 0x337e
0x000000000050528a : stosb byte ptr [rdi], al ; ret 0x426d
0x000000000050b769 : stosb byte ptr [rdi], al ; ret 0x6595
0x00000000004fd8ea : stosb byte ptr [rdi], al ; ret 0xa39d
0x00000000004fc50d : stosb byte ptr [rdi], al ; sahf ; stc ; in eax, 0x28 ; ret 0x8a49
0x000000000050baf9 : stosb byte ptr [rdi], al ; sub byte ptr [rcx], bl ; ret
0x00000000005014c9 : stosb byte ptr [rdi], al ; sub esp, ebx ; or ebx, dword ptr [rbx] ; ret
0x0000000000500ee6 : stosb byte ptr [rdi], al ; xor byte ptr [rsi - 0x17], bl ; mov bl, 0xeb ; ret 0xfe88
0x00000000004fa472 : stosb byte ptr [rdi], al ; xor dword ptr [rdi + 0x69af1543], esi ; ret
0x00000000004c46c8 : stosb byte ptr [rdi], al ; xorps xmm2, xmm1 ; ret
0x000000000044a230 : stosd dword ptr [rdi], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005408a1 : stosd dword ptr [rdi], eax ; call qword ptr [rdi]
0x000000000043aaa4 : stosd dword ptr [rdi], eax ; cld ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004fb58e : stosd dword ptr [rdi], eax ; cmp edx, dword ptr [rbp - 0x59e6c243] ; ret
0x000000000050f798 : stosd dword ptr [rdi], eax ; int1 ; jl 0x50f775 ; stosb byte ptr [rdi], al ; mov word ptr [rdi - 0x69], fs ; ret
0x00000000005086e3 : stosd dword ptr [rdi], eax ; leave ; rcl byte ptr [rcx - 0x3e], 1 ; jmp 0x5086f6
0x000000000050485e : stosd dword ptr [rdi], eax ; loop 0x5047fb ; jmp qword ptr [rbx]
0x00000000005027b4 : stosd dword ptr [rdi], eax ; mov dh, 0x57 ; mov esp, 0xa7c1baa ; ret
0x00000000004215a4 : stosd dword ptr [rdi], eax ; mov eax, 1 ; pop rbx ; ret
0x00000000004f8d26 : stosd dword ptr [rdi], eax ; mov ebx, dword ptr [rdx + 0x76037b0d] ; ret
0x00000000004211b7 : stosd dword ptr [rdi], eax ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000042bd2f : stosd dword ptr [rdi], eax ; pop rbx ; ret 0x3956
0x0000000000515cb7 : stosd dword ptr [rdi], eax ; push rbp ; lahf ; fld xword ptr [rax - 0x536b70ed] ; ret
0x0000000000421167 : stosd dword ptr [rdi], eax ; ret
0x00000000004be10c : stosd dword ptr [rdi], eax ; ret 0x2841
0x00000000004fead9 : stosd dword ptr [rdi], eax ; ret 0x435d
0x0000000000507100 : stosd dword ptr [rdi], eax ; ret 0x65c7
0x000000000050705b : stosd dword ptr [rdi], eax ; xor eax, 0x8e7c1367 ; ret
0x00000000004a18dd : stosd dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000044a22f : stosq qword ptr [rdi], rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004215a3 : stosq qword ptr [rdi], rax ; mov eax, 1 ; pop rbx ; ret
0x00000000004211b6 : stosq qword ptr [rdi], rax ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000421166 : stosq qword ptr [rdi], rax ; ret
0x00000000004f54a7 : sub ah, bl ; int 0xc7
0x000000000051357f : sub ah, byte ptr [rcx + 0x37] ; fstp xword ptr [rdx] ; ret
0x00000000004f09d1 : sub ah, byte ptr [rdx] ; jle 0x4f09b4 ; xchg eax, ebx ; ret
0x000000000050b9f6 : sub ah, byte ptr [rdx] ; ret
0x00000000005127f6 : sub ah, ch ; mov cl, 0x83 ; ret 0x467e
0x000000000054c518 : sub ah, dh ; hlt ; jmp qword ptr [rsi]
0x000000000052b2e1 : sub ah, dh ; jmp rsp
0x0000000000501bfd : sub ah, dl ; ret 0x60a
0x0000000000531cbd : sub al, 0 ; add byte ptr [rax - 0x32], ah ; in eax, dx ; jmp rcx
0x0000000000530204 : sub al, 0x12 ; add byte ptr [rax], al ; clc ; pop rbp ; in eax, dx ; call qword ptr [rdx]
0x0000000000550404 : sub al, 0x14 ; add al, byte ptr [rax] ; mov cl, al ; cmc ; call qword ptr [rbx]
0x000000000052a064 : sub al, 0x1e ; add dword ptr [rax], eax ; ret
0x000000000049b61e : sub al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000551a04 : sub al, 0x2a ; add al, byte ptr [rax] ; clc ; adc esi, esi ; call qword ptr [rcx]
0x0000000000531a04 : sub al, 0x2a ; add byte ptr [rax], al ; js 0x5319d8 ; in eax, dx ; call qword ptr [rax]
0x00000000004babc7 : sub al, 0x31 ; ret 0xc131
0x000000000040e224 : sub al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000005107e6 : sub al, 0x33 ; jnp 0x51083b ; mov esi, 0xa47ecd67 ; ret
0x0000000000406c65 : sub al, 0x35 ; add byte ptr [rcx - 0x77], cl ; add bl, dh ; ret
0x0000000000500f5d : sub al, 0x3f ; cld ; ret 0xeb49
0x00000000004a03c0 : sub al, 0x52 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret 0xffff
0x00000000004a080f : sub al, 0x52 ; add byte ptr [rax - 0x77], cl ; ret 0x2bf
0x00000000004ece72 : sub al, 0x56 ; ret 0x3a22
0x000000000047f799 : sub al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004f72f2 : sub al, 0x5d ; ret
0x0000000000545104 : sub al, 0x61 ; add dword ptr [rax], eax ; or byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x0000000000517bf1 : sub al, 0x61 ; in al, dx ; mov dl, byte ptr [rbp - 1] ; sahf ; ret
0x00000000004309ed : sub al, 0x72 ; xchg eax, edx ; out 0xae, al ; in eax, dx ; leave ; ret 0x3b81
0x00000000005143c5 : sub al, 0x7e ; ret
0x00000000004f9f27 : sub al, 0x88 ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; outsb dx, byte ptr [rsi] ; mov ah, 0x19 ; jmp rcx
0x00000000004fa033 : sub al, 0x8f ; ret 0x754c
0x0000000000538404 : sub al, 0x94 ; add byte ptr [rax], al ; call 0xffffffffe453746e
0x00000000005126e6 : sub al, 0x9f ; ret 0x8012
0x0000000000549e04 : sub al, 0xae ; add dword ptr [rax], eax ; cmp byte ptr [rsp + rsi*8], dl ; call qword ptr [rbx]
0x0000000000512887 : sub al, 0xaf ; xchg eax, esi ; sbb edx, dword ptr [rdx] ; imul dword ptr [rdx - 0x6c] ; ret 0x983e
0x00000000004f656f : sub al, 0xd9 ; salc ; test dword ptr [rbx + 0x58], ebp ; ret 0xe466
0x000000000050b767 : sub al, 0xdd ; stosb byte ptr [rdi], al ; ret 0x6595
0x00000000004f5804 : sub al, 0xdf ; rcl dword ptr [rdi], 1 ; push rsp ; ret 0xf22c
0x00000000004f58b7 : sub al, 0xf1 ; ret 0x7130
0x000000000053e204 : sub al, 0xf2 ; add byte ptr [rax], al ; cwde ; ret 0xfff1
0x000000000052b309 : sub al, 0xf4 ; call rsp
0x000000000052c001 : sub al, 0xf5 ; call rsp
0x000000000054d271 : sub al, 0xf5 ; jmp rax
0x00000000005528b1 : sub al, 0xf6 ; jmp qword ptr [rdx]
0x000000000052d0c9 : sub al, 0xf6 ; jmp rsp
0x000000000052d6c1 : sub al, 0xf7 ; jmp rsp
0x000000000050d6f6 : sub al, 0xf7 ; mov ebp, 0xf3d76a55 ; cmc ; ret
0x000000000045299c : sub al, 0xfb ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000052d35d : sub al, 2 ; add byte ptr [rbx + rbp*2 - 0xa], ah ; jmp rsp
0x00000000004fc4d0 : sub al, 8 ; mov ebp, 0x860fc460 ; sbb al, byte ptr [rcx] ; int 0x80
0x00000000004f55db : sub al, al ; out dx, al ; ret 0x21f7
0x00000000004b38ca : sub al, byte ptr [eax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004045bb : sub al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000531a05 : sub al, byte ptr [rax] ; add byte ptr [rax - 0x39], bh ; in eax, dx ; call qword ptr [rax]
0x00000000004b38cb : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b46a5 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b752e : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000004b34b5 : sub al, byte ptr [rax] ; mov qword ptr [rip + 0x2a4562], rdi ; ret
0x00000000004adee5 : sub al, byte ptr [rax] ; ret
0x00000000004b7515 : sub al, byte ptr [rax] ; test rax, rax ; je 0x4b7527 ; ret
0x00000000004b9423 : sub al, byte ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x0000000000551a05 : sub al, byte ptr [rdx] ; add al, bh ; adc esi, esi ; call qword ptr [rcx]
0x0000000000551a45 : sub al, byte ptr [rdx] ; add al, bl ; adc al, 0xf6 ; call qword ptr [rcx]
0x00000000004b7a83 : sub al, byte ptr es:[rax] ; ret
0x0000000000479bdf : sub al, ch ; fistp dword ptr [rdi - 1] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b056d : sub al, ch ; std ; ret 0xfff6
0x000000000050aa6c : sub al, ch ; test dword ptr [rsi], edi ; wait ; ret
0x000000000050aa56 : sub ax, 0x8f5e ; rol dword ptr [rsi], cl ; ret
0x000000000050ce53 : sub bh, byte ptr [rdx] ; push rsp ; ret 0x5ec7
0x0000000000535c38 : sub bh, ch ; out dx, eax ; jmp qword ptr [rdi]
0x00000000004b782d : sub bl, al ; nop ; xor eax, eax ; ret
0x0000000000511a02 : sub bl, bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call 0xffffffffc44d1893
0x00000000005115bc : sub bl, bh ; ret
0x000000000050b053 : sub bl, byte ptr [rbp + 0x4f] ; sbb eax, 0x7a233fff ; ret
0x00000000004bdf72 : sub bl, byte ptr [rdx - 0x68] ; call 0x7854a231
0x00000000005176a2 : sub bl, byte ptr [rsi + 0x6f1d7078] ; ret 0x7a53
0x0000000000515e1e : sub bl, byte ptr [rsi - 0x21] ; ret 0x4d11
0x00000000004fdd07 : sub bl, ch ; push rcx ; ret 0x2f85
0x000000000040ff5e : sub bl, dh ; ret
0x000000000048e1a3 : sub bl, sil ; ret
0x000000000050be45 : sub bpl, byte ptr [rbp - 0x23] ; ret 0xea0d
0x00000000004b66d6 : sub byte ptr [r10], r8b ; jne 0x4b66e9 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000434fee : sub byte ptr [r8 + 1], dil ; pop rbx ; ret
0x00000000004c6a69 : sub byte ptr [r8 - 0x77], r9b ; xor byte ptr [r9], r9b ; ret 0x1788
0x00000000004b1403 : sub byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rax + 0xf], 0x44 ; ret 0xb0ba
0x000000000043cfdb : sub byte ptr [r8 - 0xe], r15b ; mov dword ptr [rdi + 0x28], esi ; ret
0x00000000004a3c10 : sub byte ptr [r9 + r9*4 - 0x29], r9b ; call rax
0x00000000004afbf2 : sub byte ptr [r9], r15b ; ret
0x0000000000412e88 : sub byte ptr [rax + 0x11], cl ; ret
0x0000000000443cc0 : sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000517de6 : sub byte ptr [rax + 0x5b], ah ; mov cl, cl ; ret 0x90cf
0x000000000040900f : sub byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000004f4db3 : sub byte ptr [rax + 0x6a], 0xcf ; ret 0xf3f4
0x00000000004b5563 : sub byte ptr [rax + 0x7c], al ; jne 0x4b5571 ; mov qword ptr [rdi + 0x30], rsi ; ret
0x0000000000425b38 : sub byte ptr [rax + 0xc295], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000425ad6 : sub byte ptr [rax + 0xca95], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000434fef : sub byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000046a814 : sub byte ptr [rax + 1], bh ; ret
0x00000000004551a6 : sub byte ptr [rax + 1], cl ; push rdi ; sub byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000458377 : sub byte ptr [rax + rax], al ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x000000000049589e : sub byte ptr [rax - 0x3f], cl ; cli ; and byte ptr [rax + 1], cl ; ret 0x14c
0x0000000000410e28 : sub byte ptr [rax - 0x73], cl ; xor bl, dh ; ret
0x000000000045a394 : sub byte ptr [rax - 0x75], cl ; and al, 0x38 ; call rax
0x000000000044b07f : sub byte ptr [rax - 0x75], cl ; js 0x44b091 ; call rdx
0x000000000044b0df : sub byte ptr [rax - 0x75], cl ; js 0x44b0f1 ; call rcx
0x00000000004b412a : sub byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rcx], dh ; div dh ; ret 0xf02
0x0000000000425ba6 : sub byte ptr [rax - 0x76b705ad], cl ; ret 0xc148
0x0000000000496aaa : sub byte ptr [rax - 0x77], cl ; call rax
0x0000000000497632 : sub byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x20 ; call rax
0x0000000000496c41 : sub byte ptr [rax - 0x77], cl ; int1 ; call rax
0x00000000004473a1 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov ebx, 1 ; call rax
0x00000000004847b7 : sub byte ptr [rax - 0x77], cl ; ret
0x00000000004551aa : sub byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000041468c : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004c6a6a : sub byte ptr [rax - 0x77], cl ; xor byte ptr [r9], r9b ; ret 0x1788
0x00000000004393e3 : sub byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfe9d
0x00000000004b1404 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0xb0ba
0x000000000046abe0 : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbx + 0x48], 0x89 ; out dx, al ; call rax
0x000000000041c293 : sub byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000048b590 : sub byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000043cfdc : sub byte ptr [rax - 0xe], bh ; mov dword ptr [rdi + 0x28], esi ; ret
0x0000000000410873 : sub byte ptr [rax - 9], cl ; adc byte ptr [rcx + 1], cl ; ret 0x1148
0x0000000000410872 : sub byte ptr [rax - 9], r9b ; adc byte ptr [rcx + 1], cl ; ret 0x1148
0x00000000004b5653 : sub byte ptr [rax], ah ; jl 0x4b56d5 ; add byte ptr [rax - 0x77], cl ; ja 0x4b5695 ; ret
0x00000000004194d5 : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004662d5 : sub byte ptr [rax], al ; sete al ; movzx eax, al ; ret
0x0000000000480954 : sub byte ptr [rax], dl ; clc ; inc dword ptr [rbp - 0x7cbb8b40] ; ret
0x000000000049cc7d : sub byte ptr [rbp + 0x5b0e75d2], al ; pop rbp ; pop r12 ; ret
0x00000000004189f5 : sub byte ptr [rbp - 0x77], cl ; ret
0x000000000041097f : sub byte ptr [rbp - 0x77], cl ; ror dword ptr [rbp - 0x77], 1 ; ret 0xf748
0x00000000004189f4 : sub byte ptr [rbp - 0x77], r9b ; ret
0x000000000041097e : sub byte ptr [rbp - 0x77], r9b ; ror dword ptr [rbp - 0x77], 1 ; ret 0xf748
0x0000000000509ff8 : sub byte ptr [rbx + 0x24], dh ; jnp 0x50a005 ; nop ; jo 0x509f9b ; ret 0xd298
0x000000000041f0f7 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000407702 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000553388 : sub byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x0000000000517324 : sub byte ptr [rbx], cl ; sbb byte ptr [rbx + 0x6c], dh ; ret 0xeeb6
0x00000000004189ea : sub byte ptr [rcx + 0x21], cl ; ret
0x0000000000515a5c : sub byte ptr [rcx + 0x64], 0x4c ; ret
0x0000000000438e71 : sub byte ptr [rcx + 0x75], 0 ; ret
0x0000000000410253 : sub byte ptr [rcx + 1], cl ; ret
0x0000000000410206 : sub byte ptr [rcx + 1], cl ; ret 0x1149
0x0000000000417a1f : sub byte ptr [rcx + 1], cl ; ret 0x8948
0x00000000004cab36 : sub byte ptr [rcx + 9], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000497967 : sub byte ptr [rcx + rcx*4 - 0x11], cl ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000004a3c11 : sub byte ptr [rcx + rcx*4 - 0x29], cl ; call rax
0x0000000000537e38 : sub byte ptr [rcx - 0x10], dl ; jmp qword ptr [rbx]
0x00000000004c61e0 : sub byte ptr [rcx - 0x77], al ; fimul word ptr [rcx + rcx*4 - 0x16] ; call rax
0x000000000054ecd8 : sub byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000052a215 : sub byte ptr [rcx], al ; add byte ptr [rdx + rbp*8], dl ; int1 ; call rsp
0x00000000004afbf3 : sub byte ptr [rcx], bh ; ret
0x000000000046dc27 : sub byte ptr [rcx], bh ; ret 0xffb9
0x000000000050bafa : sub byte ptr [rcx], bl ; ret
0x00000000004b0100 : sub byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], cl ; in al, 0xf ; lahf ; ret 0x894c
0x00000000005127f3 : sub byte ptr [rdi - 0x38], bl ; sub ah, ch ; mov cl, 0x83 ; ret 0x467e
0x00000000005450a8 : sub byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x00000000004a6a94 : sub byte ptr [rdi], cl ; mov ss, word ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005326f8 : sub byte ptr [rdx - 0x12], bh ; call qword ptr [rbx]
0x0000000000501bfc : sub byte ptr [rdx], 0xe2 ; ret 0x60a
0x00000000004b66d7 : sub byte ptr [rdx], al ; jne 0x4b66e8 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000407064 : sub byte ptr [rip - 0x3f7ab800], dh ; je 0x407078 ; jmp rax
0x0000000000407084 : sub byte ptr [rip - 0x3f7ab800], dh ; je 0x407098 ; jmp rax
0x0000000000530532 : sub byte ptr [rsi + 0x300e4305], al ; add dword ptr [rsi], 0x72 ; ret
0x0000000000530662 : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 0x77 ; ret
0x0000000000545962 : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 2 ; ret 0xec3
0x0000000000510608 : sub byte ptr [rsi + 0x4d352818], 0x65 ; ret
0x0000000000480916 : sub byte ptr [rsi + 0x75], 0 ; ret
0x0000000000406c64 : sub byte ptr [rsi + 0x894900], ch ; ret
0x0000000000512cde : sub byte ptr [rsi + 0xa5f25b1], dh ; pop rcx ; leave ; std ; ret
0x000000000053e6f8 : sub byte ptr [rsi], ah ; call qword ptr [rdx]
0x00000000004fd6e9 : sub byte ptr [rsp + rax - 0x176c8ad5], bl ; ret
0x000000000050a13e : sub ch, al ; ret 0x3128
0x00000000004fcdc5 : sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x000000000050be46 : sub ch, byte ptr [rbp - 0x23] ; ret 0xea0d
0x0000000000507a3e : sub ch, ch ; ret
0x0000000000516a21 : sub ch, cl ; in al, dx ; ret
0x000000000054ceb1 : sub ch, dh ; call rcx
0x0000000000517238 : sub cl, 0x4a ; ret
0x0000000000550358 : sub cl, al ; cmc ; call qword ptr [rbx]
0x0000000000516713 : sub cl, byte ptr [r14 - 0x53052858] ; ret 0x1c5b
0x00000000004a6ac7 : sub cl, byte ptr [rax - 0x7d] ; ret
0x0000000000516714 : sub cl, byte ptr [rsi - 0x53052858] ; ret 0x1c5b
0x0000000000516712 : sub cl, byte ptr ss:[r14 - 0x53052858] ; ret 0x1c5b
0x0000000000548cb8 : sub cl, ch ; call qword ptr [rcx]
0x0000000000529701 : sub cl, dh ; call rsp
0x0000000000507ce3 : sub cl, dh ; ret 0x861c
0x0000000000536bc9 : sub dh, al ; jmp rsp
0x0000000000511d70 : sub dh, byte ptr [rbx + rdi*8 + 0x3db0f735] ; ret 0x40
0x0000000000507614 : sub dh, byte ptr [rcx] ; ret
0x000000000054cf81 : sub dh, ch ; jmp rcx
0x00000000005526d1 : sub dh, dh ; jmp rdx
0x000000000052cfe9 : sub dh, dh ; jmp rsp
0x00000000004fda81 : sub dl, cl ; ret
0x000000000051171c : sub dword ptr [rax - 0x1354ddd], eax ; ret
0x000000000040278f : sub dword ptr [rax - 0x7d], ecx ; ret
0x00000000005319a5 : sub dword ptr [rax], eax ; add byte ptr [rax - 0x39], ch ; in eax, dx ; call qword ptr [rcx]
0x0000000000405f71 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004f119e : sub dword ptr [rax], eax ; stosb byte ptr [rdi], al ; ret
0x0000000000406843 : sub dword ptr [rax], esi ; xor eax, 0xc0854800 ; je 0x406859 ; jmp rax
0x00000000004fb58c : sub dword ptr [rbp - 0x55], ebx ; cmp edx, dword ptr [rbp - 0x59e6c243] ; ret
0x00000000004f5e4b : sub dword ptr [rbx - 0x5cfe06a6], esp ; ret
0x00000000005184c7 : sub dword ptr [rbx], eax ; xchg eax, edx ; int1 ; ret 0x250d
0x0000000000515994 : sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x00000000004ece6e : sub dword ptr [rcx], 0x562c7e09 ; ret 0x3a22
0x00000000004ece6f : sub dword ptr [rcx], ecx ; jle 0x4ecea5 ; push rsi ; ret 0x3a22
0x0000000000437d83 : sub dword ptr [rcx], esp ; xor al, byte ptr [rax] ; test rax, rax ; je 0x437d99 ; ret
0x00000000004fcefb : sub dword ptr [rdi + 0x35], 0x316bc474 ; ret 0xdc5a
0x000000000050b336 : sub dword ptr [rdi + rcx*8 - 0x13], 0x7d ; sbb ch, ch ; push rbp ; ret 0x89e7
0x00000000004f8592 : sub dword ptr [rdi - 0xe], 0xf ; ret
0x00000000004ee183 : sub dword ptr [rdx - 3], ecx ; sbb byte ptr [rdx + 0x78], bl ; call qword ptr [rdx]
0x0000000000503921 : sub dword ptr [rdx], edi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rdx], dl ; jne 0x5038ce ; jb 0x503934 ; ret 0x4a9d
0x0000000000507186 : sub dword ptr [rsi + rdx*8 + 0x2e], 0x7e ; sahf ; ret 0x54c5
0x00000000004f9d3c : sub dword ptr [rsi], esi ; ret 0xfa3e
0x0000000000515993 : sub dword ptr es:[rbx], edx ; call qword ptr [rsi]
0x000000000043bf35 : sub eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x000000000043bfbd : sub eax, 0x18c48348 ; ret
0x0000000000483ff5 : sub eax, 0x1b800 ; add byte ptr [rax], al ; ret
0x0000000000449685 : sub eax, 0x20c48348 ; pop rbx ; ret
0x000000000050549b : sub eax, 0x21699a1c ; std ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; ret 0x779c
0x0000000000484d74 : sub eax, 0x30 ; ret
0x0000000000406985 : sub eax, 0x34fe26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004826ff : sub eax, 0x39fff9a1 ; ret
0x00000000004fb038 : sub eax, 0x43244685 ; inc ebp ; jmp rsi
0x000000000047e1f2 : sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4818
0x000000000050414b : sub eax, 0x4d286d4 ; xchg eax, esp ; cli ; ret 0xeca0
0x0000000000509699 : sub eax, 0x56697a2b ; ret 0x15e
0x00000000005134f0 : sub eax, 0x57e9c835 ; ret
0x0000000000420052 : sub eax, 0x6975f685 ; call rax
0x000000000050aa57 : sub eax, 0x6d38f5e ; ret
0x000000000050f873 : sub eax, 0x9c233d7d ; cli ; ret 0x4c6b
0x0000000000512772 : sub eax, 0xae8ac887 ; rcr byte ptr [rcx - 0x3c], cl ; ret
0x000000000041760c : sub eax, 0xc44071f4 ; ret 0x597d
0x00000000004fe1aa : sub eax, 0xdc1cf1e4 ; push rbp ; mov dl, 0xe1 ; ret
0x000000000050485b : sub eax, 0xe2ab75b7 ; xchg eax, edi ; jmp qword ptr [rbx]
0x0000000000541d3d : sub eax, 0xe6400001 ; call qword ptr [rdi]
0x000000000052a355 : sub eax, 0xf8540001 ; int1 ; jmp rsp
0x000000000040bb90 : sub eax, 1 ; mov dword ptr [rdi + 0x34], eax ; ret
0x000000000043eb4e : sub eax, 1 ; pop rbx ; ret
0x0000000000402910 : sub eax, 1 ; ret
0x0000000000514655 : sub eax, dword ptr [rbx] ; jae 0x5146b6 ; and byte ptr [rbp + 9], dh ; ret
0x000000000041e224 : sub eax, dword ptr [rcx + 0x10] ; ret
0x000000000048b969 : sub eax, dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004770c1 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; call rax
0x00000000004fa00d : sub eax, dword ptr [rdi] ; ret 0xecf9
0x000000000043d6ef : sub eax, dword ptr [rdx + 4] ; ret
0x0000000000449901 : sub eax, dword ptr [rdx + 8] ; ret
0x00000000004fbf4c : sub eax, dword ptr [rdx - 0x497ce1e5] ; ret
0x0000000000421f48 : sub eax, dword ptr [rdx] ; ret
0x00000000004551c2 : sub eax, dword ptr [rsi + 0x40] ; add qword ptr [rdi + 0x40], rax ; ret
0x000000000043d6d9 : sub eax, dword ptr [rsi + 4] ; ret
0x0000000000423643 : sub eax, dword ptr [rsi + 8] ; ret
0x0000000000404493 : sub eax, dword ptr [rsi] ; ret
0x00000000004070e9 : sub eax, ecx ; lea rax, qword ptr [rsi + rax] ; add rax, rdi ; ret
0x000000000041944b : sub eax, edi ; ret
0x00000000004faaca : sub eax, edi ; ret 0x6dc0
0x00000000004b6abe : sub eax, edx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004c1dc8 : sub eax, edx ; lea rcx, qword ptr [r11 + r10 + 0x20] ; mov r10, rax ; jmp 0x4c1de9
0x0000000000473fc0 : sub eax, edx ; ret
0x00000000005139b1 : sub ebp, dword ptr [rdi - 0x40] ; ret
0x0000000000507a3d : sub ebp, dword ptr [rdx] ; in eax, dx ; ret
0x00000000004c9e1f : sub ebp, ebx ; rol ch, 1 ; int1 ; cld ; ret 0x894c
0x000000000050d589 : sub ebp, ebx ; scasd eax, dword ptr [rdi] ; add bl, ah ; ret 0xcd52
0x000000000050986a : sub ebp, edx ; jmp 0x50985e
0x000000000054cf01 : sub ebp, esi ; jmp rdi
0x00000000004244cf : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000005015b1 : sub ebx, ebp ; jp 0x5015d2 ; ret
0x00000000004fda9f : sub ebx, ebp ; ret 0x4683
0x00000000004fddfc : sub ebx, ebx ; ret
0x00000000004f7ccd : sub ebx, edi ; add eax, edi ; out dx, eax ; ret
0x00000000004a3bb2 : sub ecx, dword ptr [rax + 5] ; clc ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xd775
0x000000000043bf9c : sub ecx, dword ptr [rcx + 0x48d231f1] ; mov esi, esp ; call rax
0x0000000000483e26 : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000511b10 : sub ecx, ecx ; cmp dword ptr [rbp - 0x2c312c3a], esi ; ret 0x1203
0x0000000000487640 : sub ecx, edi ; dec dword ptr [rax - 0x77] ; ret 0x1b8
0x0000000000505f58 : sub ecx, edx ; pop rsi ; pop rbp ; push rsp ; pop rsp ; ret
0x0000000000421cbc : sub edi, dword ptr [rax + 5] ; pop rbx ; ret
0x000000000050969a : sub edi, dword ptr [rdx + 0x69] ; push rsi ; ret 0x15e
0x00000000004ca517 : sub edi, ebp ; rol esp, cl ; ret
0x00000000004c5e83 : sub edi, ecx ; mov rdx, rdi ; lea rdi, qword ptr [r15 + 0x40] ; call rax
0x0000000000512666 : sub edi, esi ; ret
0x00000000004f171b : sub edi, esp ; mov edi, 0x3a9203bc ; jg 0x4f1791 ; ret
0x000000000040bb88 : sub edx, 1 ; jmp 0x40bb54
0x00000000004f942d : sub edx, dword ptr [rax - 0x25bdead] ; xlatb ; push rcx ; push rax ; ret
0x0000000000517da9 : sub edx, dword ptr [rbx + rax - 0x35] ; push rdx ; ror bl, cl ; ror dword ptr [rbx], cl ; ret 0xd5b3
0x00000000004c1cbc : sub edx, eax ; jmp 0x4c1cc1
0x00000000004c2062 : sub edx, eax ; jmp 0x4c2071
0x00000000004786d5 : sub edx, ebp ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004071a0 : sub edx, ecx ; add rax, rdx ; add rax, rsi ; ret
0x000000000050ccfe : sub edx, ecx ; ret
0x000000000053e769 : sub edx, esi ; call qword ptr [rdi]
0x00000000004149ba : sub esi, 1 ; jne 0x4149af ; ret
0x00000000004f74c5 : sub esi, dword ptr [rax - 0x5cdf15b3] ; insd dword ptr [rdi], dx ; ret
0x00000000005097e9 : sub esi, dword ptr [rbx - 0x50] ; mov ah, 0xac ; ret
0x000000000052bfb1 : sub esi, ebp ; jmp rsp
0x00000000004a1e25 : sub esi, ebx ; add r12d, r15d ; call rax
0x00000000004a1ec5 : sub esi, ebx ; call rax
0x00000000005160fb : sub esi, ebx ; sar dword ptr [rsi], 1 ; ret
0x000000000052a699 : sub esi, edx ; jmp rsp
0x000000000052d039 : sub esi, esi ; call rsp
0x000000000052d091 : sub esi, esi ; jmp rsp
0x0000000000511a5d : sub esi, esp ; jmp qword ptr [rdi]
0x00000000004a8ab3 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042581e : sub esp, -0x80 ; pop rbx ; ret
0x00000000004cf1d5 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000433ca4 : sub esp, eax ; ret
0x000000000051719b : sub esp, ebx ; leave ; push rdi ; ret
0x00000000005014ca : sub esp, ebx ; or ebx, dword ptr [rbx] ; ret
0x0000000000516012 : sub esp, edi ; ret 0x5007
0x000000000054a7c1 : sub esp, esi ; jmp rdx
0x0000000000507185 : sub qword ptr [r14 + rdx*8 + 0x2e], 0x7e ; sahf ; ret 0x54c5
0x00000000004c1cbb : sub r10, rax ; jmp 0x4c1cc2
0x00000000004c2061 : sub r10, rax ; jmp 0x4c2072
0x00000000004b782c : sub r11b, r8b ; nop ; xor eax, eax ; ret
0x00000000004ca516 : sub r15d, ebp ; rol esp, cl ; ret
0x00000000004b34bb : sub r8b, byte ptr [r8] ; ret
0x00000000004551c1 : sub rax, qword ptr [rsi + 0x40] ; add qword ptr [rdi + 0x40], rax ; ret
0x00000000004070a3 : sub rax, qword ptr [rsi] ; ret
0x000000000041944a : sub rax, rdi ; ret
0x000000000040719f : sub rdx, rcx ; add rax, rdx ; add rax, rsi ; ret
0x00000000004a1e24 : sub rsi, rbx ; add r12d, r15d ; call rax
0x00000000004a1ec4 : sub rsi, rbx ; call rax
0x00000000004a8ab2 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042581d : sub rsp, -0x80 ; pop rbx ; ret
0x00000000004cf1d4 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000051357e : sub spl, byte ptr [r9 + 0x37] ; fstp xword ptr [rdx] ; ret
0x00000000004a9b7d : sysenter
0x000000000050052a : test ah, ah ; ret
0x0000000000460091 : test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047b6e8 : test ah, bh ; add al, byte ptr [rax] ; add rsp, 0x18 ; ret
0x000000000043a42d : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043a722 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000422a1a : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000040a160 : test al, 0 ; add dh, dh ; ret
0x000000000054db68 : test al, 0x3f ; cmc ; call qword ptr [rsi]
0x000000000054ded8 : test al, 0x4b ; cmc ; call qword ptr [rsi]
0x0000000000508bf2 : test al, 0x4c ; xchg eax, ebp ; ret
0x0000000000515990 : test al, 0x54 ; cmp esp, dword ptr [rsi] ; sub dword ptr [rbx], edx ; call qword ptr [rsi]
0x00000000005085d7 : test al, 0x56 ; push rsi ; lodsb al, byte ptr [rsi] ; pushfq ; ret 0x9c69
0x00000000004ece25 : test al, 0x62 ; xchg eax, edi ; ret
0x0000000000545258 : test al, 0x66 ; call qword ptr [rax]
0x0000000000545488 : test al, 0x66 ; call qword ptr [rbx]
0x00000000005308d8 : test al, 0x67 ; in eax, dx ; call qword ptr [rbx]
0x0000000000505f55 : test al, 0x68 ; shr byte ptr [rbx], 0xca ; pop rsi ; pop rbp ; push rsp ; pop rsp ; ret
0x00000000004fb000 : test al, 0x6e ; int1 ; ret
0x000000000054eb58 : test al, 0x70 ; cmc ; call qword ptr [rsi]
0x00000000005070e3 : test al, 0x83 ; and eax, 0xb0a61ee3 ; ret 0xb9c9
0x000000000050f884 : test al, 0x83 ; ret
0x0000000000430a1f : test al, 0x91 ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x00000000005070ff : test al, 0xab ; ret 0x65c7
0x00000000005030ab : test al, 0xae ; mov al, 5 ; ret
0x0000000000518a72 : test al, 0xb1 ; ret 0xf0ad
0x0000000000501e1f : test al, 0xbb ; test eax, 0x5b0a7e37 ; jno 0x501dd2 ; ret
0x00000000004f90dd : test al, 0xc3 ; ret
0x00000000004179d9 : test al, 0xc4 ; jle 0x417a56 ; push rbp ; call 0x4a040335
0x00000000004f7028 : test al, 0xc5 ; ret
0x0000000000534278 : test al, 0xd6 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000516716 : test al, 0xd7 ; cli ; lodsb al, byte ptr [rsi] ; ret 0x1c5b
0x0000000000505d89 : test al, 0xda ; jg 0x505d9e ; sbb bh, al ; ret
0x0000000000505d88 : test al, 0xda ; jg 0x505d9f ; sbb bh, al ; ret
0x0000000000500a98 : test al, 0xdf ; insb byte ptr [rdi], dx ; ret
0x00000000005185ae : test al, 0xe ; loopne 0x5185da ; ret
0x000000000050d96f : test al, 0xe7 ; or esp, dword ptr [rbx] ; jmp rcx
0x000000000054b4e1 : test al, 0xf4 ; jmp qword ptr [rax]
0x000000000054b4c1 : test al, 0xf4 ; jmp qword ptr [rsi]
0x000000000051573e : test al, 0xf4 ; ret 0x82f4
0x000000000052db71 : test al, 0xf7 ; jmp rsp
0x000000000050b828 : test al, 0xf8 ; ret 0xc375
0x000000000050558c : test al, 0xf9 ; cmp esi, dword ptr [rsi] ; or byte ptr [rsi + 0x48], ch ; ret
0x0000000000406a04 : test al, 0xfd ; xor al, 0 ; ret
0x00000000004955b1 : test al, 0xff ; add byte ptr [rax - 0x7f], cl ; ret 0x1500
0x0000000000423211 : test al, 1 ; jne 0x423226 ; pop rbx ; ret
0x000000000052e7e0 : test al, ah ; clc ; jmp rsp
0x00000000004b24d9 : test al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052a088 : test al, bl ; int1 ; jmp qword ptr [rsi + rbx - 0x3c6bffff]
0x000000000053b55c : test al, ch ; add byte ptr [rax], al ; fcomi st(0) ; jmp qword ptr [rbx]
0x000000000052bdfc : test al, cl ; add dword ptr [rax], eax ; sbb al, 0xf5 ; call rsp
0x00000000004ae388 : test al, dh ; cld ; inc dword ptr [rbp - 0x76d78740] ; ret 0xde89
0x000000000054ec5c : test bh, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x000000000054e85c : test bh, al ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], ch ; jmp qword ptr [rbx]
0x000000000044e434 : test bh, bl ; inc dword ptr [rbp + 0x5b057ec0] ; ret
0x000000000053cd5c : test bl, ch ; add byte ptr [rax], al ; adc byte ptr [rdx], ah ; int1 ; call qword ptr [rbx]
0x000000000052c404 : test bl, dh ; add dword ptr [rax], eax ; push rsp ; pop rbx ; cmc ; call rsp
0x000000000054a85c : test byte ptr [rax + 0x2d700001], bh ; hlt ; call rbx
0x000000000046d28b : test byte ptr [rax + 0x48000000], bh ; mov esi, ebx ; call rax
0x000000000054505c : test byte ptr [rax + 1], ah ; add byte ptr [rax + 0x67], al ; call qword ptr [rax]
0x0000000000458452 : test byte ptr [rax + rax*4], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x3349
0x000000000048764f : test byte ptr [rax + rax], bh ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000530c5c : test byte ptr [rax + rax], bl ; add byte ptr [rax], dh ; jae 0x530c57 ; call qword ptr [rsi]
0x00000000004638d2 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004584e2 : test byte ptr [rax + rdx*8], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x3349
0x00000000004584b2 : test byte ptr [rax + rdx*8], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x3349
0x0000000000452bf3 : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004583f2 : test byte ptr [rax + rsi], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x3349
0x0000000000528a30 : test byte ptr [rax - 0x11], cl ; jmp rsp
0x000000000043c641 : test byte ptr [rax - 0x73], 0x54 ; and al, 0x18 ; mov rdi, rbp ; call rbx
0x00000000004aa349 : test byte ptr [rax - 0x73], 0x7c ; and al, 0x10 ; call rax
0x000000000041c982 : test byte ptr [rax - 0x75], 0x3b ; call r15
0x0000000000440471 : test byte ptr [rax - 0x75], 0x3b ; call rax
0x00000000004a985c : test byte ptr [rax - 0x75], 0x7c ; and al, 8 ; call r15
0x0000000000402676 : test byte ptr [rax - 0x75], 7 ; mov rax, qword ptr [rax] ; ret
0x00000000004a8d00 : test byte ptr [rax - 0x77], 0xc7 ; call r12
0x000000000049607e : test byte ptr [rax - 0x77], 0xef ; call rax
0x00000000004960c3 : test byte ptr [rax - 0x77], 0xef ; call rcx
0x0000000000497e75 : test byte ptr [rax - 0x77], 0xef ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000043be67 : test byte ptr [rax - 0x77], 0xfb ; mov rdx, rsp ; call rax
0x000000000043c224 : test byte ptr [rax - 0x77], 0xfd ; lea rdx, qword ptr [rsp + 0x10] ; call rax
0x00000000004afdf0 : test byte ptr [rax - 0x7cfffffd], bh ; ret
0x0000000000470cbb : test byte ptr [rax - 0x7d000000], dh ; ret
0x00000000004729cb : test byte ptr [rax - 0xa000000], al ; ret
0x000000000052e2c0 : test byte ptr [rax - 8], bl ; jmp rsp
0x00000000004b5ad8 : test byte ptr [rax], 8 ; jne 0x4b5ae6 ; ret
0x000000000042426a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add eax, 3 ; ret
0x000000000044edfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x20], esi ; ret
0x000000000042470a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], esi ; ret
0x00000000004228da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000044ee0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; ret
0x000000000044ef8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x2c] ; ret
0x000000000044acaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x40] ; ret
0x000000000044acfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x48] ; ret
0x0000000000421e3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x64] ; ret
0x0000000000421e0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000421dda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x0000000000421d5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; ret
0x0000000000421dfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000421e1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x000000000041e22a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000004380ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000044779a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x000000000041d35a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rax, dword ptr [rdi] ; ret
0x000000000043db89 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000041989a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rdi + 0x20], esi ; ret
0x000000000044ef9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rdi + 0x2c], esi ; ret
0x0000000000401c5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041f5da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000434ffa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000402b2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000048b78b : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000444073 : test byte ptr [rax], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046de15 : test byte ptr [rax], ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b92c0 : test byte ptr [rax], dl ; ret
0x000000000040e72d : test byte ptr [rbp + 0x39], 0xc1 ; jne 0x40e709 ; mov rax, rdx ; ret
0x0000000000528b8c : test byte ptr [rbp + 0x5bb40000], dh ; out dx, eax ; call rsp
0x0000000000528544 : test byte ptr [rbp + 0x6840000], cl ; out dx, al ; jmp rsp
0x000000000054555c : test byte ptr [rbp + 1], ah ; add al, dl ; call qword ptr [rax]
0x00000000004938e0 : test byte ptr [rbp - 0x72093ded], 0x13 ; ret 0xd890
0x00000000004729e6 : test byte ptr [rbp - 0x9ffffff], dh ; ret
0x000000000052c390 : test byte ptr [rbp - 0xb], al ; call rsp
0x0000000000529bb0 : test byte ptr [rbp - 0xf], dh ; jmp rsp
0x0000000000533d5c : test byte ptr [rbp], cl ; add al, dl ; ret 0xffee
0x0000000000418fd7 : test byte ptr [rbx + 0x38], 1 ; jne 0x418fe8 ; pop rbx ; ret
0x0000000000404294 : test byte ptr [rbx + 0x60], 1 ; jne 0x4042a8 ; pop rbx ; ret
0x00000000004b0568 : test byte ptr [rbx + rcx*4 + 0x7c], 0x24 ; sub al, ch ; std ; ret 0xfff6
0x000000000050e3e3 : test byte ptr [rbx - 0x18], 0x27 ; fcmovbe st(0), st(1) ; ret 0x13e6
0x00000000004f9296 : test byte ptr [rbx - 0x652b2ef3], cl ; push rsi ; scasb al, byte ptr [rdi] ; ret 0x2687
0x00000000004729f8 : test byte ptr [rbx - 0x9fffffe], bh ; ret
0x000000000043cfd9 : test byte ptr [rbx - 0xd87d7b9], 0x89 ; ja 0x43d013 ; ret
0x000000000052c260 : test byte ptr [rbx], bh ; cmc ; jmp rsp
0x00000000004fa918 : test byte ptr [rbx], dh ; push rsp ; ret
0x0000000000508ddc : test byte ptr [rcx + 0xc], bl ; ret 0xf245
0x00000000004a52b4 : test byte ptr [rcx + 0xf], 0x94 ; ret 0x8548
0x000000000052bad4 : test byte ptr [rcx + rax - 0xb4e2c00], ch ; jmp rsp
0x000000000052afdc : test byte ptr [rcx + rax], dh ; jrcxz 0x52afdd ; jmp rsp
0x000000000047788b : test byte ptr [rcx + rcx*4 - 0x11], 0x41 ; call rsp
0x000000000046d4d4 : test byte ptr [rcx + rcx*4 - 0x19], 0xff ; push rax ; js 0x46d46d ; ret
0x000000000054815c : test byte ptr [rcx - 0x2dafffff], dl ; jmp qword ptr [rbx]
0x00000000005097e7 : test byte ptr [rcx - 0x4b4f8cd5], bl ; lodsb al, byte ptr [rsi] ; ret
0x00000000004b5c5b : test byte ptr [rcx], al ; add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x000000000052b305 : test byte ptr [rcx], al ; add byte ptr [rsp + rbp], al ; hlt ; call rsp
0x00000000004adec0 : test byte ptr [rdi + 0x20], 1 ; jne 0x4aded7 ; ret
0x000000000041f3d9 : test byte ptr [rdi + 0x20], 1 ; mov rax, rdi ; jne 0x41f3f1 ; ret
0x00000000004380e0 : test byte ptr [rdi + 0x20], 2 ; jne 0x4380f7 ; ret
0x00000000004b07b6 : test byte ptr [rdi + 0x4c000000], bh ; mov edi, ebp ; call rax
0x0000000000422275 : test byte ptr [rdi + 4], 1 ; jne 0x422287 ; ret
0x000000000047bdc0 : test byte ptr [rdi + 4], 1 ; jne 0x47bdd7 ; ret
0x000000000052c3c8 : test byte ptr [rdi - 0xb], cl ; jmp rsp
0x000000000052b758 : test byte ptr [rdi - 0xc], bh ; call rsp
0x000000000047e403 : test byte ptr [rdi], 0x94 ; ret 0x854d
0x0000000000473fbc : test byte ptr [rdi], 0x95 ; ret 0xd029
0x0000000000484d67 : test byte ptr [rdi], 0xb7 ; add al, 0x70 ; and eax, 1 ; ret
0x0000000000472120 : test byte ptr [rdi], 1 ; jne 0x472136 ; ret
0x00000000004f4c0c : test byte ptr [rdi], al ; jmp qword ptr [rdi]
0x000000000044067c : test byte ptr [rdi], ch ; add al, 0 ; add dh, dh ; ret 0xf02
0x00000000004ad904 : test byte ptr [rdi], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000528c6c : test byte ptr [rdx + 0x72f40000], bh ; out dx, eax ; call rsp
0x0000000000454339 : test byte ptr [rdx - 0x9ffffff], ch ; ret
0x000000000052efa0 : test byte ptr [rdx - 6], dh ; jmp rsp
0x0000000000468090 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004729dd : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000044de01 : test byte ptr [rdx], bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000533a5c : test byte ptr [rdx], cl ; add byte ptr [rax - 0x47], dh ; out dx, al ; jmp rcx
0x000000000052ecc0 : test byte ptr [rdx], cl ; stc ; jmp rsp
0x000000000050f4f0 : test byte ptr [rdx], dh ; mov al, 5 ; pushfq ; mov dh, 0x37 ; je 0x50f527 ; ret 0x6948
0x000000000052bdb8 : test byte ptr [rdx], dl ; cmc ; jmp rsp
0x000000000048058c : test byte ptr [rsi + 0x50], 0xa8 ; setne al ; ret
0x000000000046d1ed : test byte ptr [rsi + 1], ch ; add byte ptr [rax], al ; mov rsi, rbx ; call rax
0x000000000052cea0 : test byte ptr [rsi + rsi*8], ah ; call rsp
0x0000000000529bf8 : test byte ptr [rsi - 0xf], dh ; call rsp
0x000000000052e260 : test byte ptr [rsi - 8], al ; jmp rsp
0x0000000000528548 : test byte ptr [rsi], al ; out dx, al ; jmp rsp
0x0000000000501fe8 : test byte ptr [rsi], bh ; adc byte ptr [rcx - 0x18bf7c53], dl ; ret
0x00000000004891ed : test byte ptr [rsi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004f09ba : test byte ptr [rsp + rsi*4 - 0x6f], bl ; ret
0x000000000041422e : test ch, 0xc4 ; ret 0xf68b
0x000000000045cf82 : test ch, 0xc4 ; ret 0xf78b
0x000000000045d004 : test cl, 0xc4 ; ret 0xf789
0x000000000040c09c : test cl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000048d0e0 : test cl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052eea4 : test cl, cl ; add al, byte ptr [rax] ; add al, 0x3c ; cli ; call rsp
0x000000000043a212 : test cl, cl ; add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; in eax, -0x7d ; ret
0x00000000004a9220 : test cl, cl ; js 0x4a9237 ; mov qword ptr [rdx], rcx ; ret
0x000000000046dc42 : test cl, cl ; sete al ; ret
0x00000000004f7d5c : test cl, dh ; ret 0x370f
0x00000000004878a4 : test dh, bh ; add eax, dword ptr [rax] ; add al, ch ; ret 0x204
0x000000000054f1b1 : test dh, ch ; call qword ptr [rbx]
0x000000000054f171 : test dh, ch ; jmp qword ptr [rdi]
0x000000000053fac9 : test dh, dl ; jmp rax
0x0000000000414203 : test dl, 0xc4 ; ret 0xf6ab
0x0000000000492527 : test dl, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 0xfff0
0x00000000004729ef : test dl, al ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000004729d4 : test dl, bh ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004cc2db : test dl, bh ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x48], al ; ret 0
0x00000000004bb3ff : test dword ptr [rax + 0x31005279], esp ; ret 0x3141
0x00000000004372b5 : test dword ptr [rax + rax*4], 0x5b744389 ; ret
0x0000000000509007 : test dword ptr [rax - 0x16], ebx ; mov ecx, 0x7df9efdc ; ret 0x666d
0x0000000000508a81 : test dword ptr [rax - 0x45], esp ; jno 0x508a66 ; and edi, edx ; wait ; call rsp
0x0000000000509d0b : test dword ptr [rax - 0x5d], 0xe1ebd365 ; ret 0x6819
0x000000000041a75a : test dword ptr [rax - 0x75], 0x89483048 ; ret
0x000000000040ab42 : test dword ptr [rax - 0x7d], 0x894808c0 ; ret 0x8948
0x000000000046ef93 : test dword ptr [rax - 0xa000000], ebx ; ret
0x000000000047b149 : test dword ptr [rax], 0x67b90000 ; ret 0x51
0x000000000047d86e : test dword ptr [rax], 0xadb90000 ; ret 0x51
0x0000000000529835 : test dword ptr [rax], 0xf13ec400 ; call rsp
0x000000000053e6f5 : test dword ptr [rax], 0xf2262800 ; call qword ptr [rdx]
0x000000000053e765 : test dword ptr [rax], 0xf229f800 ; call qword ptr [rdi]
0x00000000004fa89c : test dword ptr [rax], ecx ; ret
0x00000000004f6572 : test dword ptr [rbx + 0x58], ebp ; ret 0xe466
0x0000000000502261 : test dword ptr [rbx + rsi*8 - 0x728c136b], ecx ; ret
0x0000000000515e60 : test dword ptr [rbx - 0x31c5f928], ebx ; ret 0x898
0x00000000004851a5 : test dword ptr [rdi + rax*2], 0x89490107 ; ret
0x000000000050a683 : test dword ptr [rdi - 0x68aa1078], esp ; jrcxz 0x50a63d ; pop rdx ; ret 0xd69
0x00000000004aa87c : test dword ptr [rdi], ebx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004adf43 : test dword ptr [rdx + 0x48000000], esi ; add esp, 0x18 ; ret
0x000000000050665f : test dword ptr [rdx], 0x219773d4 ; ret
0x00000000004fb039 : test dword ptr [rsi + 0x24], eax ; inc r13d ; jmp rsi
0x000000000050aace : test dword ptr [rsi], ebx ; push rsp ; jle 0x50aaf5 ; xchg eax, esp ; or byte ptr [rdx + 0x69], bh ; ret
0x000000000050aa6e : test dword ptr [rsi], edi ; wait ; ret
0x00000000004a2a72 : test eax, 0x2b75 ; ret
0x0000000000507e53 : test eax, 0x3c37951e ; ret
0x00000000004fb4e4 : test eax, 0x425ad0d5 ; ret
0x0000000000421d11 : test eax, 0x5b000001 ; ret
0x0000000000501e21 : test eax, 0x5b0a7e37 ; jno 0x501dd0 ; ret
0x000000000050fe2b : test eax, 0x5e4fdc3c ; mov ds, word ptr [rbp + 3] ; ret 0x37ca
0x0000000000507723 : test eax, 0x68206634 ; call rax
0x0000000000513f7a : test eax, 0x813de778 ; cmp dword ptr [edx + 0x42], esi ; ret
0x0000000000406e60 : test eax, 0x8948ffff ; ret 0x485b
0x00000000004fa1ab : test eax, 0x8965bf ; jmp qword ptr [rax]
0x00000000004ed32d : test eax, 0xa25f8d6f ; ret 0x7455
0x000000000046ad0a : test eax, 0xc031fff9 ; add rsp, 8 ; ret
0x000000000043acbc : test eax, 0xc031fffc ; pop rbx ; ret
0x00000000004fe6fb : test eax, 0xd28fb8af ; clc ; push rcx ; ret 0x2a40
0x00000000004f4a52 : test eax, 0xe2594c30 ; ret 0xfe43
0x0000000000509255 : test eax, 0xe947e791 ; out dx, al ; jp 0x509223 ; ret 0x50e7
0x00000000004b7913 : test eax, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000446610 : test eax, eax ; cmovne eax, edx ; jmp 0x4465c6
0x000000000043f35a : test eax, eax ; cmovne rax, rdx ; ret
0x0000000000401ce6 : test eax, eax ; je 0x401ce3 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004047e1 : test eax, eax ; je 0x404846 ; xor edi, edi ; call qword ptr [rax]
0x0000000000404a41 : test eax, eax ; je 0x404aa9 ; mov edi, 1 ; call qword ptr [rax]
0x0000000000404ba1 : test eax, eax ; je 0x404c06 ; xor edi, edi ; call qword ptr [rax]
0x0000000000404c28 : test eax, eax ; je 0x404c34 ; ret
0x0000000000404fa8 : test eax, eax ; je 0x404fc1 ; mov rax, qword ptr [rax] ; xor edi, edi ; jmp rax
0x0000000000405b18 : test eax, eax ; je 0x405b30 ; mov rax, qword ptr [rax + 0x50] ; jmp rax
0x0000000000406088 : test eax, eax ; je 0x406094 ; jmp rax
0x000000000040609c : test eax, eax ; je 0x4060b4 ; call rax
0x0000000000406118 : test eax, eax ; je 0x406124 ; jmp rax
0x000000000040642c : test eax, eax ; je 0x40648c ; jmp rax
0x0000000000406848 : test eax, eax ; je 0x406854 ; jmp rax
0x0000000000406d3c : test eax, eax ; je 0x406d4a ; xor esi, esi ; call rax
0x0000000000406f5d : test eax, eax ; je 0x406f71 ; xor r9d, r9d ; xor esi, esi ; call rax
0x000000000040700c : test eax, eax ; je 0x40701a ; xor esi, esi ; call rax
0x0000000000407068 : test eax, eax ; je 0x407074 ; jmp rax
0x0000000000407088 : test eax, eax ; je 0x407094 ; jmp rax
0x00000000004196f9 : test eax, eax ; je 0x41970d ; mov rdi, rbx ; call rax
0x000000000041983f : test eax, eax ; je 0x41984f ; mov rdi, rbx ; call rax
0x000000000041a856 : test eax, eax ; je 0x41a867 ; mov eax, ebx ; pop rbx ; ret
0x000000000041d0f8 : test eax, eax ; je 0x41d104 ; ret
0x000000000041d1e3 : test eax, eax ; je 0x41d1ed ; call rax
0x000000000041d343 : test eax, eax ; je 0x41d358 ; add rsp, 8 ; jmp rax
0x000000000041d7c8 : test eax, eax ; je 0x41d7d4 ; ret
0x000000000041d858 : test eax, eax ; je 0x41d86f ; mov rax, qword ptr [rax] ; jmp rax
0x000000000041d8c8 : test eax, eax ; je 0x41d8e0 ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000041d938 : test eax, eax ; je 0x41d950 ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000041d988 : test eax, eax ; je 0x41d9a0 ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000041ffa6 : test eax, eax ; je 0x41ffb9 ; mov eax, 0x759930 ; ret
0x0000000000420003 : test eax, eax ; je 0x420014 ; call rax
0x000000000042004f : test eax, eax ; je 0x420088 ; test esi, esi ; jne 0x4200c8 ; call rax
0x0000000000421ae8 : test eax, eax ; je 0x421af4 ; jmp rax
0x0000000000421ba8 : test eax, eax ; je 0x421bb4 ; jmp rax
0x0000000000422316 : test eax, eax ; je 0x422320 ; call rax
0x0000000000422426 : test eax, eax ; je 0x42243e ; mov rdi, rbx ; call rax
0x0000000000423753 : test eax, eax ; je 0x423764 ; jmp rax
0x00000000004355ba : test eax, eax ; je 0x4355ec ; call rax
0x0000000000435d54 : test eax, eax ; je 0x435d68 ; add rsp, 8 ; jmp rax
0x0000000000437d88 : test eax, eax ; je 0x437d94 ; ret
0x000000000043a4b1 : test eax, eax ; je 0x43a4c1 ; mov rdi, rbx ; call rax
0x000000000043cdc5 : test eax, eax ; je 0x43cdd7 ; call rax
0x000000000043cf73 : test eax, eax ; je 0x43cf84 ; jmp rax
0x000000000043cfa3 : test eax, eax ; je 0x43cfb4 ; jmp rax
0x000000000043d0ae : test eax, eax ; je 0x43d0bc ; jmp rax
0x000000000043d0d7 : test eax, eax ; je 0x43d0f4 ; jmp rax
0x000000000043d61e : test eax, eax ; je 0x43d62c ; jmp rax
0x000000000043d64e : test eax, eax ; je 0x43d65c ; jmp rax
0x000000000043d681 : test eax, eax ; je 0x43d694 ; jmp rax
0x000000000043f6e3 : test eax, eax ; je 0x43f6f9 ; jmp rax
0x000000000043f755 : test eax, eax ; je 0x43f734 ; jmp rax
0x000000000043f9c4 : test eax, eax ; je 0x43f8ff ; call rax
0x000000000043fd08 : test eax, eax ; je 0x43fd34 ; call rax
0x00000000004410f4 : test eax, eax ; je 0x441114 ; call rax
0x000000000044adb8 : test eax, eax ; je 0x44adc4 ; jmp rax
0x000000000044adf8 : test eax, eax ; je 0x44ae04 ; jmp rax
0x000000000044ae38 : test eax, eax ; je 0x44ae44 ; jmp rax
0x000000000044ae78 : test eax, eax ; je 0x44ae84 ; jmp rax
0x000000000044aeb8 : test eax, eax ; je 0x44aec4 ; jmp rax
0x000000000044aef8 : test eax, eax ; je 0x44af04 ; jmp rax
0x000000000044b281 : test eax, eax ; je 0x44b28b ; call rax
0x000000000044b2b1 : test eax, eax ; je 0x44b2bb ; call rax
0x000000000044b331 : test eax, eax ; je 0x44b357 ; mov rdi, rbx ; call rax
0x000000000044b385 : test eax, eax ; je 0x44b3f7 ; mov rdi, rbx ; call rax
0x000000000044c320 : test eax, eax ; je 0x44c339 ; mov qword ptr [rsp + 8], r10 ; jmp rax
0x000000000044c3b5 : test eax, eax ; je 0x44c3c4 ; jmp rax
0x000000000044c3f5 : test eax, eax ; je 0x44c404 ; jmp rax
0x000000000045f9a4 : test eax, eax ; je 0x45f9d4 ; call rax
0x000000000045ffe8 : test eax, eax ; je 0x45fff4 ; ret
0x0000000000460035 : test eax, eax ; je 0x46003f ; call rax
0x000000000046005a : test eax, eax ; je 0x46006a ; mov rdi, rbx ; call rax
0x00000000004601a0 : test eax, eax ; je 0x4601b7 ; mov rdi, rbx ; call rax
0x0000000000460329 : test eax, eax ; je 0x460339 ; mov rdi, rbx ; call rax
0x0000000000461d21 : test eax, eax ; je 0x461d40 ; add rsp, 0x18 ; ret
0x00000000004629e5 : test eax, eax ; je 0x462a20 ; pop rbx ; ret
0x0000000000464e18 : test eax, eax ; je 0x464e44 ; call rax
0x0000000000464fa8 : test eax, eax ; je 0x464fb4 ; ret
0x0000000000464fe5 : test eax, eax ; je 0x464fef ; call rax
0x0000000000465010 : test eax, eax ; je 0x465020 ; mov rdi, rbx ; call rax
0x0000000000465127 : test eax, eax ; je 0x46513e ; mov rdi, rbx ; call rax
0x0000000000465299 : test eax, eax ; je 0x4652a9 ; mov rdi, rbx ; call rax
0x000000000046740c : test eax, eax ; je 0x46741c ; jmp rax
0x0000000000467c38 : test eax, eax ; je 0x467c44 ; ret
0x0000000000467c78 : test eax, eax ; je 0x467c82 ; call rax
0x0000000000467ca6 : test eax, eax ; je 0x467cb6 ; mov rdi, rbx ; call rax
0x0000000000467dcf : test eax, eax ; je 0x467de6 ; mov rdi, rbx ; call rax
0x0000000000467f3c : test eax, eax ; je 0x467f4c ; mov rdi, rbx ; call rax
0x0000000000469d38 : test eax, eax ; je 0x469d44 ; ret
0x000000000046a395 : test eax, eax ; je 0x46a3a9 ; mov rdi, rbx ; call rax
0x000000000046a4bb : test eax, eax ; je 0x46a4d1 ; mov rdi, rbx ; call rax
0x000000000046a626 : test eax, eax ; je 0x46a66c ; call rax
0x000000000046a62d : test eax, eax ; je 0x46a693 ; add rsp, 8 ; ret
0x000000000046a6c6 : test eax, eax ; je 0x46a70c ; call rax
0x000000000046a6cd : test eax, eax ; je 0x46a733 ; add rsp, 8 ; ret
0x000000000046a775 : test eax, eax ; je 0x46a7b2 ; add rsp, 8 ; jmp rax
0x000000000046ab69 : test eax, eax ; je 0x46ab80 ; add rsp, 8 ; jmp rax
0x000000000046abe2 : test eax, eax ; je 0x46ac07 ; mov rsi, rbp ; call rax
0x000000000046ad35 : test eax, eax ; je 0x46ad6b ; add rsp, 0x28 ; jmp rax
0x000000000046ada5 : test eax, eax ; je 0x46add0 ; add rsp, 0x18 ; jmp rax
0x000000000046bd91 : test eax, eax ; je 0x46bd9f ; call rax
0x000000000046be71 : test eax, eax ; je 0x46beb4 ; call rax
0x000000000047140d : test eax, eax ; je 0x47141c ; ret
0x0000000000471c41 : test eax, eax ; je 0x471c59 ; mov rdi, rbp ; call rax
0x0000000000472019 : test eax, eax ; je 0x472024 ; jmp rax
0x0000000000472039 : test eax, eax ; je 0x47204e ; xor ecx, ecx ; jmp rax
0x000000000047bfb5 : test eax, eax ; je 0x47bfcf ; mov rdi, rbx ; call rax
0x00000000004842a3 : test eax, eax ; je 0x4842bf ; add rsp, 0x18 ; ret
0x00000000004a59f0 : test eax, eax ; je 0x4a5a38 ; add rsp, 8 ; ret
0x00000000004b10c1 : test eax, eax ; je 0x4b10d6 ; call rax
0x00000000004b232f : test eax, eax ; je 0x4b2348 ; mov rax, rbx ; pop rbx ; ret
0x00000000004b2377 : test eax, eax ; je 0x4b2381 ; call rax
0x00000000004b23ae : test eax, eax ; je 0x4b23bc ; jmp rax
0x00000000004b23de : test eax, eax ; je 0x4b23ec ; jmp rax
0x00000000004b240e : test eax, eax ; je 0x4b241c ; jmp rax
0x00000000004b2447 : test eax, eax ; je 0x4b2456 ; xor eax, eax ; ret
0x00000000004b246e : test eax, eax ; je 0x4b247c ; jmp rax
0x00000000004b248e : test eax, eax ; je 0x4b249c ; jmp rax
0x00000000004b24ae : test eax, eax ; je 0x4b24bc ; jmp rax
0x00000000004b261b : test eax, eax ; je 0x4b262b ; mov rdi, rbp ; call rax
0x00000000004b545d : test eax, eax ; je 0x4b5478 ; add rsp, 8 ; jmp rax
0x00000000004b54be : test eax, eax ; je 0x4b54d8 ; add rsp, 8 ; jmp rax
0x00000000004b550e : test eax, eax ; je 0x4b5528 ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x00000000004b553e : test eax, eax ; je 0x4b5558 ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x00000000004b70d8 : test eax, eax ; je 0x4b7104 ; call rax
0x00000000004b72ff : test eax, eax ; je 0x4b7311 ; call rax
0x00000000004b7359 : test eax, eax ; je 0x4b737c ; mov rdi, rbx ; call rax
0x00000000004b73bc : test eax, eax ; je 0x4b73d0 ; mov rdi, rbx ; call rax
0x00000000004b7518 : test eax, eax ; je 0x4b7524 ; ret
0x00000000004045ee : test eax, eax ; jle 0x4045fe ; pop rbx ; ret
0x000000000043d5d7 : test eax, eax ; jle 0x43d5e6 ; pop rbx ; ret
0x000000000043e73f : test eax, eax ; jle 0x43e74d ; pop rbx ; ret
0x000000000043e7c3 : test eax, eax ; jle 0x43e7d9 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000043e8cf : test eax, eax ; jle 0x43e8dd ; pop rbx ; ret
0x000000000043e953 : test eax, eax ; jle 0x43e969 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000044e437 : test eax, eax ; jle 0x44e446 ; pop rbx ; ret
0x00000000004525aa : test eax, eax ; jle 0x4525be ; pop rbx ; ret
0x00000000004529da : test eax, eax ; jle 0x4529ee ; pop rbx ; ret
0x000000000045722a : test eax, eax ; jle 0x45723e ; pop rbx ; ret
0x00000000004576ca : test eax, eax ; jle 0x4576de ; pop rbx ; ret
0x000000000045a677 : test eax, eax ; jle 0x45a686 ; pop rbx ; ret
0x000000000045a6f7 : test eax, eax ; jle 0x45a706 ; pop rbx ; ret
0x0000000000460317 : test eax, eax ; jle 0x460326 ; pop rbx ; ret
0x0000000000465287 : test eax, eax ; jle 0x465296 ; pop rbx ; ret
0x0000000000467f27 : test eax, eax ; jle 0x467f36 ; pop rbx ; ret
0x000000000046c63f : test eax, eax ; jle 0x46c64d ; pop rbx ; ret
0x000000000046c7df : test eax, eax ; jle 0x46c7ed ; pop rbx ; ret
0x000000000046c8df : test eax, eax ; jle 0x46c8ed ; pop rbx ; ret
0x000000000046ca85 : test eax, eax ; jle 0x46ca95 ; pop rbx ; ret
0x000000000046cc35 : test eax, eax ; jle 0x46cc45 ; pop rbx ; ret
0x000000000046cde5 : test eax, eax ; jle 0x46cdf5 ; pop rbx ; ret
0x00000000004042b3 : test eax, eax ; jne 0x4042c6 ; xor eax, eax ; ret
0x0000000000404e87 : test eax, eax ; jne 0x404e70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404f0f : test eax, eax ; jne 0x404ef8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404f5f : test eax, eax ; jne 0x404f48 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000406aa6 : test eax, eax ; jne 0x406ab4 ; ret
0x0000000000420009 : test eax, eax ; jne 0x42002c ; pop rbx ; ret
0x000000000043cb05 : test eax, eax ; jne 0x43cb17 ; xor eax, eax ; pop rbx ; ret
0x000000000047c011 : test eax, eax ; jne 0x47c005 ; pop rbx ; ret
0x000000000048d713 : test eax, eax ; jne 0x48d727 ; xor eax, eax ; pop rbx ; ret
0x00000000004496cd : test eax, eax ; js 0x4496e9 ; cmp eax, esi ; je 0x4496e9 ; ret
0x0000000000407136 : test eax, eax ; mov dword ptr [rdi + 0x30], eax ; jle 0x407148 ; ret
0x00000000004202b1 : test eax, eax ; mov rbx, rax ; jne 0x4202a8 ; pop rbx ; ret
0x000000000043bda1 : test eax, eax ; mov rbx, rax ; jne 0x43bd98 ; pop rbx ; ret
0x000000000043bee1 : test eax, eax ; mov rbx, rax ; jne 0x43bed8 ; pop rbx ; ret
0x000000000043c0d1 : test eax, eax ; mov rbx, rax ; jne 0x43c0c8 ; pop rbx ; ret
0x000000000043c431 : test eax, eax ; mov rbx, rax ; jne 0x43c428 ; pop rbx ; ret
0x000000000046ae81 : test eax, eax ; mov rbx, rax ; jne 0x46ae78 ; pop rbx ; ret
0x000000000046af81 : test eax, eax ; mov rbx, rax ; jne 0x46af78 ; pop rbx ; ret
0x000000000046b081 : test eax, eax ; mov rbx, rax ; jne 0x46b078 ; pop rbx ; ret
0x000000000046b181 : test eax, eax ; mov rbx, rax ; jne 0x46b178 ; pop rbx ; ret
0x00000000004a09a1 : test eax, eax ; mov rbx, rax ; jne 0x4a0998 ; pop rbx ; ret
0x0000000000424bd0 : test eax, eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x000000000047b403 : test eax, eax ; setne dl ; cmp esi, edx ; jge 0x47b459 ; ret
0x000000000045a63a : test eax, eax ; setne dl ; mov eax, edx ; pop rbx ; ret
0x00000000004858d9 : test eax, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x000000000045d009 : test ebx, 0x380f4cf3 ; test ch, 0xc4 ; ret 0xf78b
0x000000000043eb61 : test ebx, ebx ; cmovne eax, edx ; pop rbx ; ret
0x0000000000447402 : test ebx, ebx ; je 0x447412 ; mov rdi, rbp ; call rax
0x00000000004b6f43 : test ebx, ebx ; jne 0x4b6ead ; jmp 0x4b6f18
0x0000000000512aa7 : test ebx, esi ; ret 0x3271
0x00000000005160a0 : test ecx, 0x5f6cf1fd ; jmp 0x516071
0x000000000041de2a : test ecx, ecx ; jne 0x41ddde ; mov rdx, rax ; jmp 0x41de03
0x0000000000424bb1 : test ecx, ecx ; jne 0x424be7 ; xor eax, eax ; pop rbx ; ret
0x00000000005078a7 : test ecx, ecx ; ret 0x347f
0x0000000000485859 : test ecx, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7420
0x0000000000444c77 : test edi, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000444b0b : test edi, eax ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000004ab596 : test edi, ebp ; add byte ptr [rax], al ; add dh, dh ; ret 0x4d06
0x000000000040a57f : test edi, edi ; inc dword ptr [rcx] ; ret
0x000000000041a121 : test edi, edi ; je 0x41a138 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000041a2f1 : test edi, edi ; je 0x41a308 ; mov rax, qword ptr [rdi + 0x50] ; ret
0x000000000041a311 : test edi, edi ; je 0x41a328 ; mov rax, qword ptr [rdi + 0x58] ; ret
0x000000000041c79a : test edi, edi ; je 0x41c7ae ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000041c7fa : test edi, edi ; je 0x41c809 ; call r13
0x000000000041c831 : test edi, edi ; je 0x41c83e ; mov eax, dword ptr [rdi] ; ret
0x000000000041c8e1 : test edi, edi ; je 0x41c8f7 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000041d0a1 : test edi, edi ; je 0x41d0b8 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x0000000000421e71 : test edi, edi ; je 0x421e80 ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000421ec1 : test edi, edi ; je 0x421ed7 ; mov rax, qword ptr [rdi] ; ret
0x000000000044ad22 : test edi, edi ; je 0x44ad41 ; call 0x407006
0x000000000046a591 : test edi, edi ; je 0x46a5a7 ; mov eax, dword ptr [rdi + 0x14] ; ret
0x000000000046a851 : test edi, edi ; je 0x46a862 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000046ace1 : test edi, edi ; je 0x46acf2 ; mov rax, qword ptr [rdi + 0x40] ; ret
0x000000000047a9c1 : test edi, edi ; je 0x47a9d7 ; mov rax, qword ptr [rdi] ; ret
0x000000000047a9e1 : test edi, edi ; je 0x47a9f8 ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000047b3d1 : test edi, edi ; je 0x47b3e7 ; mov rax, qword ptr [rdi] ; ret
0x00000000004b20b1 : test edi, edi ; je 0x4b20c7 ; mov rax, qword ptr [rdi] ; ret
0x00000000004b20d1 : test edi, edi ; je 0x4b20e8 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004b6661 : test edi, edi ; je 0x4b6677 ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000004b66b1 : test edi, edi ; je 0x4b66c8 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004b6791 : test edi, edi ; je 0x4b67a8 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004b76b1 : test edi, edi ; je 0x4b76c8 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004b76d1 : test edi, edi ; je 0x4b76e8 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004b76f1 : test edi, edi ; je 0x4b7708 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004b7711 : test edi, edi ; je 0x4b7728 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004b7731 : test edi, edi ; je 0x4b7748 ; mov rax, qword ptr [rdi + 0x28] ; ret
0x00000000004b7751 : test edi, edi ; je 0x4b7768 ; mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000004b7771 : test edi, edi ; je 0x4b7786 ; mov eax, dword ptr [rdi] ; ret
0x00000000004b7791 : test edi, edi ; je 0x4b77a7 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000004b77b1 : test edi, edi ; je 0x4b77c8 ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000043aced : test edi, edi ; jne 0x43ace9 ; add rsp, 8 ; ret
0x0000000000465500 : test edi, edi ; mov eax, 1 ; je 0x465519 ; ret
0x00000000004a1003 : test edi, edi ; setne al ; ret
0x000000000045cf7c : test edx, 0x380f4cf3 ; test ch, 0xc4 ; ret 0xf78b
0x000000000046dbe4 : test edx, eax ; setne al ; movzx eax, al ; ret
0x0000000000405f00 : test edx, edx ; je 0x405f19 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004214d5 : test edx, edx ; je 0x4214f5 ; mov rdi, rbx ; call rdx
0x000000000043d123 : test edx, edx ; je 0x43d135 ; call rdx
0x000000000043e739 : test edx, edx ; je 0x43e747 ; call rdx
0x000000000043e8c9 : test edx, edx ; je 0x43e8d7 ; call rdx
0x00000000004475f8 : test edx, edx ; je 0x44760b ; mov rdi, rbx ; call rdx
0x000000000046a4a0 : test edx, edx ; je 0x46a4bd ; mov rdi, rbx ; call rdx
0x000000000046c639 : test edx, edx ; je 0x46c647 ; call rdx
0x000000000046c7d9 : test edx, edx ; je 0x46c7e7 ; call rdx
0x000000000046c8d9 : test edx, edx ; je 0x46c8e7 ; call rdx
0x000000000046ca7f : test edx, edx ; je 0x46ca8d ; call rdx
0x000000000046cc2f : test edx, edx ; je 0x46cc3d ; call rdx
0x000000000046cddf : test edx, edx ; je 0x46cded ; call rdx
0x0000000000480d11 : test edx, edx ; je 0x480d28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b2326 : test edx, edx ; je 0x4b233a ; mov rdi, rax ; call rdx
0x0000000000424260 : test edx, edx ; jne 0x424255 ; jmp 0x42422d
0x0000000000425551 : test edx, edx ; jne 0x425569 ; mov eax, 1 ; ret
0x0000000000479d5a : test edx, edx ; jne 0x479d56 ; xor eax, eax ; ret
0x000000000047c523 : test edx, edx ; jne 0x47c534 ; ret
0x000000000049cc7e : test edx, edx ; jne 0x49cc98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004c6bb1 : test edx, edx ; jne 0x4c6bc4 ; ret
0x0000000000495c75 : test edx, edx ; sete al ; ret
0x00000000004b20fa : test edx, edx ; setg al ; ret
0x000000000044ac5b : test edx, edx ; setne al ; ret
0x000000000052ad51 : test esi, ebx ; jmp rsp
0x0000000000499cf8 : test esi, esi ; dec dword ptr [rbx - 0x7cf7dbac] ; ret 0x3901
0x00000000004b3f33 : test esi, esi ; inc dword ptr [rbp - 0x7cc18b40] ; ret
0x000000000043e7bd : test esi, esi ; je 0x43e7f4 ; call rax
0x000000000043e94d : test esi, esi ; je 0x43e984 ; call rdx
0x000000000041e25c : test esi, esi ; jne 0x41e24f ; ret
0x0000000000420053 : test esi, esi ; jne 0x4200c4 ; call rax
0x0000000000420980 : test esi, esi ; jne 0x420995 ; ret
0x0000000000424246 : test esi, esi ; jne 0x424247 ; mov eax, edx ; ret
0x00000000004456f0 : test esi, esi ; jne 0x445709 ; mov eax, 1 ; ret
0x000000000040294d : test esi, esi ; setne al ; ret
0x0000000000473fbb : test esi, esi ; setne dl ; sub eax, edx ; ret
0x00000000004ab418 : test esp, esp ; sete dl ; jmp 0x4ab3b6
0x0000000000509006 : test qword ptr [r8 - 0x16], r11 ; mov ecx, 0x7df9efdc ; ret 0x666d
0x00000000004ab417 : test r12, r12 ; sete dl ; jmp 0x4ab3b7
0x000000000043f359 : test r8d, r8d ; cmovne rax, rdx ; ret
0x00000000004b2446 : test r8d, r8d ; je 0x4b2457 ; xor eax, eax ; ret
0x0000000000401ce5 : test rax, rax ; je 0x401ce4 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004047e0 : test rax, rax ; je 0x404847 ; xor edi, edi ; call qword ptr [rax]
0x0000000000404ba0 : test rax, rax ; je 0x404c07 ; xor edi, edi ; call qword ptr [rax]
0x0000000000404c27 : test rax, rax ; je 0x404c35 ; ret
0x0000000000405b17 : test rax, rax ; je 0x405b31 ; mov rax, qword ptr [rax + 0x50] ; jmp rax
0x0000000000406087 : test rax, rax ; je 0x406095 ; jmp rax
0x000000000040609b : test rax, rax ; je 0x4060b5 ; call rax
0x0000000000406117 : test rax, rax ; je 0x406125 ; jmp rax
0x000000000040642b : test rax, rax ; je 0x40648d ; jmp rax
0x0000000000406847 : test rax, rax ; je 0x406855 ; jmp rax
0x0000000000406d3b : test rax, rax ; je 0x406d4b ; xor esi, esi ; call rax
0x000000000040700b : test rax, rax ; je 0x40701b ; xor esi, esi ; call rax
0x0000000000407067 : test rax, rax ; je 0x407075 ; jmp rax
0x0000000000407087 : test rax, rax ; je 0x407095 ; jmp rax
0x00000000004196f8 : test rax, rax ; je 0x41970e ; mov rdi, rbx ; call rax
0x000000000041983e : test rax, rax ; je 0x419850 ; mov rdi, rbx ; call rax
0x000000000041983d : test rax, rax ; je 0x419851 ; mov rdi, rbx ; call rax
0x000000000041d0f7 : test rax, rax ; je 0x41d105 ; ret
0x000000000041d1e2 : test rax, rax ; je 0x41d1ee ; call rax
0x000000000041d342 : test rax, rax ; je 0x41d359 ; add rsp, 8 ; jmp rax
0x000000000041d7c7 : test rax, rax ; je 0x41d7d5 ; ret
0x000000000041d857 : test rax, rax ; je 0x41d870 ; mov rax, qword ptr [rax] ; jmp rax
0x000000000041d8c7 : test rax, rax ; je 0x41d8e1 ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000041d937 : test rax, rax ; je 0x41d951 ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000041d987 : test rax, rax ; je 0x41d9a1 ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000420002 : test rax, rax ; je 0x420015 ; call rax
0x000000000042004e : test rax, rax ; je 0x420089 ; test esi, esi ; jne 0x4200c9 ; call rax
0x0000000000421ae7 : test rax, rax ; je 0x421af5 ; jmp rax
0x0000000000421ae6 : test rax, rax ; je 0x421af6 ; jmp rax
0x0000000000421ae5 : test rax, rax ; je 0x421af7 ; jmp rax
0x0000000000421ba7 : test rax, rax ; je 0x421bb5 ; jmp rax
0x0000000000422315 : test rax, rax ; je 0x422321 ; call rax
0x0000000000422425 : test rax, rax ; je 0x42243f ; mov rdi, rbx ; call rax
0x0000000000423752 : test rax, rax ; je 0x423765 ; jmp rax
0x00000000004355b9 : test rax, rax ; je 0x4355ed ; call rax
0x0000000000435d53 : test rax, rax ; je 0x435d69 ; add rsp, 8 ; jmp rax
0x0000000000437d87 : test rax, rax ; je 0x437d95 ; ret
0x000000000043a4b0 : test rax, rax ; je 0x43a4c2 ; mov rdi, rbx ; call rax
0x000000000043cdc4 : test rax, rax ; je 0x43cdd8 ; call rax
0x000000000043cf72 : test rax, rax ; je 0x43cf85 ; jmp rax
0x000000000043cfa2 : test rax, rax ; je 0x43cfb5 ; jmp rax
0x000000000043d0ad : test rax, rax ; je 0x43d0bd ; jmp rax
0x000000000043d0d6 : test rax, rax ; je 0x43d0f5 ; jmp rax
0x000000000043d61d : test rax, rax ; je 0x43d62d ; jmp rax
0x000000000043d64d : test rax, rax ; je 0x43d65d ; jmp rax
0x000000000043d680 : test rax, rax ; je 0x43d695 ; jmp rax
0x000000000043f6e2 : test rax, rax ; je 0x43f6fa ; jmp rax
0x000000000043f754 : test rax, rax ; je 0x43f735 ; jmp rax
0x000000000043f9c3 : test rax, rax ; je 0x43f900 ; call rax
0x000000000043fd07 : test rax, rax ; je 0x43fd35 ; call rax
0x00000000004410f3 : test rax, rax ; je 0x441115 ; call rax
0x000000000044adb7 : test rax, rax ; je 0x44adc5 ; jmp rax
0x000000000044adf7 : test rax, rax ; je 0x44ae05 ; jmp rax
0x000000000044ae37 : test rax, rax ; je 0x44ae45 ; jmp rax
0x000000000044ae77 : test rax, rax ; je 0x44ae85 ; jmp rax
0x000000000044aeb7 : test rax, rax ; je 0x44aec5 ; jmp rax
0x000000000044aef7 : test rax, rax ; je 0x44af05 ; jmp rax
0x000000000044aef6 : test rax, rax ; je 0x44af06 ; jmp rax
0x000000000044aef5 : test rax, rax ; je 0x44af07 ; jmp rax
0x000000000044b280 : test rax, rax ; je 0x44b28c ; call rax
0x000000000044b2b0 : test rax, rax ; je 0x44b2bc ; call rax
0x000000000044b330 : test rax, rax ; je 0x44b358 ; mov rdi, rbx ; call rax
0x000000000044b384 : test rax, rax ; je 0x44b3f8 ; mov rdi, rbx ; call rax
0x000000000044c3b4 : test rax, rax ; je 0x44c3c5 ; jmp rax
0x000000000044c3f4 : test rax, rax ; je 0x44c405 ; jmp rax
0x000000000045f9a3 : test rax, rax ; je 0x45f9d5 ; call rax
0x000000000045ffe7 : test rax, rax ; je 0x45fff5 ; ret
0x0000000000460034 : test rax, rax ; je 0x460040 ; call rax
0x0000000000460033 : test rax, rax ; je 0x460041 ; call rax
0x0000000000460032 : test rax, rax ; je 0x460042 ; call rax
0x0000000000460059 : test rax, rax ; je 0x46006b ; mov rdi, rbx ; call rax
0x000000000046019f : test rax, rax ; je 0x4601b8 ; mov rdi, rbx ; call rax
0x0000000000460328 : test rax, rax ; je 0x46033a ; mov rdi, rbx ; call rax
0x0000000000460327 : test rax, rax ; je 0x46033b ; mov rdi, rbx ; call rax
0x0000000000461d20 : test rax, rax ; je 0x461d41 ; add rsp, 0x18 ; ret
0x00000000004629e4 : test rax, rax ; je 0x462a21 ; pop rbx ; ret
0x0000000000464e17 : test rax, rax ; je 0x464e45 ; call rax
0x0000000000464fa7 : test rax, rax ; je 0x464fb5 ; ret
0x0000000000464fe4 : test rax, rax ; je 0x464ff0 ; call rax
0x000000000046500f : test rax, rax ; je 0x465021 ; mov rdi, rbx ; call rax
0x0000000000465126 : test rax, rax ; je 0x46513f ; mov rdi, rbx ; call rax
0x0000000000465298 : test rax, rax ; je 0x4652aa ; mov rdi, rbx ; call rax
0x000000000046740b : test rax, rax ; je 0x46741d ; jmp rax
0x000000000046740a : test rax, rax ; je 0x46741e ; jmp rax
0x0000000000467409 : test rax, rax ; je 0x46741f ; jmp rax
0x0000000000467c37 : test rax, rax ; je 0x467c45 ; ret
0x0000000000467c77 : test rax, rax ; je 0x467c83 ; call rax
0x0000000000467ca5 : test rax, rax ; je 0x467cb7 ; mov rdi, rbx ; call rax
0x0000000000467dce : test rax, rax ; je 0x467de7 ; mov rdi, rbx ; call rax
0x0000000000467f3b : test rax, rax ; je 0x467f4d ; mov rdi, rbx ; call rax
0x0000000000469d37 : test rax, rax ; je 0x469d45 ; ret
0x000000000046a394 : test rax, rax ; je 0x46a3aa ; mov rdi, rbx ; call rax
0x000000000046a4ba : test rax, rax ; je 0x46a4d2 ; mov rdi, rbx ; call rax
0x000000000046a4b9 : test rax, rax ; je 0x46a4d3 ; mov rdi, rbx ; call rax
0x000000000046a625 : test rax, rax ; je 0x46a66d ; call rax
0x000000000046a62c : test rax, rax ; je 0x46a694 ; add rsp, 8 ; ret
0x000000000046a6c5 : test rax, rax ; je 0x46a70d ; call rax
0x000000000046a6cc : test rax, rax ; je 0x46a734 ; add rsp, 8 ; ret
0x000000000046a774 : test rax, rax ; je 0x46a7b3 ; add rsp, 8 ; jmp rax
0x000000000046ab68 : test rax, rax ; je 0x46ab81 ; add rsp, 8 ; jmp rax
0x000000000046abe1 : test rax, rax ; je 0x46ac08 ; mov rsi, rbp ; call rax
0x000000000046ad34 : test rax, rax ; je 0x46ad6c ; add rsp, 0x28 ; jmp rax
0x000000000046ada4 : test rax, rax ; je 0x46add1 ; add rsp, 0x18 ; jmp rax
0x000000000046bd90 : test rax, rax ; je 0x46bda0 ; call rax
0x000000000046be70 : test rax, rax ; je 0x46beb5 ; call rax
0x000000000046be6f : test rax, rax ; je 0x46beb6 ; call rax
0x000000000046be6e : test rax, rax ; je 0x46beb7 ; call rax
0x000000000047140c : test rax, rax ; je 0x47141d ; ret
0x0000000000471c40 : test rax, rax ; je 0x471c5a ; mov rdi, rbp ; call rax
0x0000000000472018 : test rax, rax ; je 0x472025 ; jmp rax
0x0000000000472038 : test rax, rax ; je 0x47204f ; xor ecx, ecx ; jmp rax
0x000000000047bfb4 : test rax, rax ; je 0x47bfd0 ; mov rdi, rbx ; call rax
0x00000000004842a2 : test rax, rax ; je 0x4842c0 ; add rsp, 0x18 ; ret
0x00000000004a59ef : test rax, rax ; je 0x4a5a39 ; add rsp, 8 ; ret
0x00000000004b10c0 : test rax, rax ; je 0x4b10d7 ; call rax
0x00000000004b2376 : test rax, rax ; je 0x4b2382 ; call rax
0x00000000004b23ad : test rax, rax ; je 0x4b23bd ; jmp rax
0x00000000004b23dd : test rax, rax ; je 0x4b23ed ; jmp rax
0x00000000004b240d : test rax, rax ; je 0x4b241d ; jmp rax
0x00000000004b246d : test rax, rax ; je 0x4b247d ; jmp rax
0x00000000004b248d : test rax, rax ; je 0x4b249d ; jmp rax
0x00000000004b248c : test rax, rax ; je 0x4b249e ; jmp rax
0x00000000004b248b : test rax, rax ; je 0x4b249f ; jmp rax
0x00000000004b24ad : test rax, rax ; je 0x4b24bd ; jmp rax
0x00000000004b24ac : test rax, rax ; je 0x4b24be ; jmp rax
0x00000000004b24ab : test rax, rax ; je 0x4b24bf ; jmp rax
0x00000000004b261a : test rax, rax ; je 0x4b262c ; mov rdi, rbp ; call rax
0x00000000004b545c : test rax, rax ; je 0x4b5479 ; add rsp, 8 ; jmp rax
0x00000000004b54bd : test rax, rax ; je 0x4b54d9 ; add rsp, 8 ; jmp rax
0x00000000004b550d : test rax, rax ; je 0x4b5529 ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x00000000004b553d : test rax, rax ; je 0x4b5559 ; mov rdi, qword ptr [rdi + 0x30] ; jmp rax
0x00000000004b70d7 : test rax, rax ; je 0x4b7105 ; call rax
0x00000000004b72fe : test rax, rax ; je 0x4b7312 ; call rax
0x00000000004b7358 : test rax, rax ; je 0x4b737d ; mov rdi, rbx ; call rax
0x00000000004b73bb : test rax, rax ; je 0x4b73d1 ; mov rdi, rbx ; call rax
0x00000000004b7517 : test rax, rax ; je 0x4b7525 ; ret
0x0000000000404e86 : test rax, rax ; jne 0x404e71 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404f0e : test rax, rax ; jne 0x404ef9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404f5e : test rax, rax ; jne 0x404f49 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004202b0 : test rax, rax ; mov rbx, rax ; jne 0x4202a9 ; pop rbx ; ret
0x000000000043bda0 : test rax, rax ; mov rbx, rax ; jne 0x43bd99 ; pop rbx ; ret
0x000000000043bee0 : test rax, rax ; mov rbx, rax ; jne 0x43bed9 ; pop rbx ; ret
0x000000000043c0d0 : test rax, rax ; mov rbx, rax ; jne 0x43c0c9 ; pop rbx ; ret
0x000000000043c430 : test rax, rax ; mov rbx, rax ; jne 0x43c429 ; pop rbx ; ret
0x000000000046ae80 : test rax, rax ; mov rbx, rax ; jne 0x46ae79 ; pop rbx ; ret
0x000000000046af80 : test rax, rax ; mov rbx, rax ; jne 0x46af79 ; pop rbx ; ret
0x000000000046b080 : test rax, rax ; mov rbx, rax ; jne 0x46b079 ; pop rbx ; ret
0x000000000046b180 : test rax, rax ; mov rbx, rax ; jne 0x46b179 ; pop rbx ; ret
0x00000000004a09a0 : test rax, rax ; mov rbx, rax ; jne 0x4a0999 ; pop rbx ; ret
0x000000000045a639 : test rax, rax ; setne dl ; mov eax, edx ; pop rbx ; ret
0x000000000041de29 : test rcx, rcx ; jne 0x41dddf ; mov rdx, rax ; jmp 0x41de04
0x0000000000424bb0 : test rcx, rcx ; jne 0x424be8 ; xor eax, eax ; pop rbx ; ret
0x000000000041a120 : test rdi, rdi ; je 0x41a139 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000041a2f0 : test rdi, rdi ; je 0x41a309 ; mov rax, qword ptr [rdi + 0x50] ; ret
0x000000000041a310 : test rdi, rdi ; je 0x41a329 ; mov rax, qword ptr [rdi + 0x58] ; ret
0x000000000041c7f9 : test rdi, rdi ; je 0x41c80a ; call r13
0x000000000041c830 : test rdi, rdi ; je 0x41c83f ; mov eax, dword ptr [rdi] ; ret
0x000000000041c8e0 : test rdi, rdi ; je 0x41c8f8 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000041d0a0 : test rdi, rdi ; je 0x41d0b9 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x0000000000421e70 : test rdi, rdi ; je 0x421e81 ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000421ec0 : test rdi, rdi ; je 0x421ed8 ; mov rax, qword ptr [rdi] ; ret
0x000000000044ad21 : test rdi, rdi ; je 0x44ad42 ; call 0x407007
0x000000000046a590 : test rdi, rdi ; je 0x46a5a8 ; mov eax, dword ptr [rdi + 0x14] ; ret
0x000000000046a850 : test rdi, rdi ; je 0x46a863 ; mov rax, qword ptr [rdi + 0x38] ; ret
0x000000000046ace0 : test rdi, rdi ; je 0x46acf3 ; mov rax, qword ptr [rdi + 0x40] ; ret
0x000000000047a9c0 : test rdi, rdi ; je 0x47a9d8 ; mov rax, qword ptr [rdi] ; ret
0x000000000047a9e0 : test rdi, rdi ; je 0x47a9f9 ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000047b3d0 : test rdi, rdi ; je 0x47b3e8 ; mov rax, qword ptr [rdi] ; ret
0x00000000004b20b0 : test rdi, rdi ; je 0x4b20c8 ; mov rax, qword ptr [rdi] ; ret
0x00000000004b20d0 : test rdi, rdi ; je 0x4b20e9 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004b6660 : test rdi, rdi ; je 0x4b6678 ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000004b66b0 : test rdi, rdi ; je 0x4b66c9 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004b6790 : test rdi, rdi ; je 0x4b67a9 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004b76b0 : test rdi, rdi ; je 0x4b76c9 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004b76d0 : test rdi, rdi ; je 0x4b76e9 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004b76f0 : test rdi, rdi ; je 0x4b7709 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000004b7710 : test rdi, rdi ; je 0x4b7729 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000004b7730 : test rdi, rdi ; je 0x4b7749 ; mov rax, qword ptr [rdi + 0x28] ; ret
0x00000000004b7750 : test rdi, rdi ; je 0x4b7769 ; mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000004b7770 : test rdi, rdi ; je 0x4b7787 ; mov eax, dword ptr [rdi] ; ret
0x00000000004b7790 : test rdi, rdi ; je 0x4b77a8 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000004b77b0 : test rdi, rdi ; je 0x4b77c9 ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004a1002 : test rdi, rdi ; setne al ; ret
0x00000000004214d4 : test rdx, rdx ; je 0x4214f6 ; mov rdi, rbx ; call rdx
0x000000000043d122 : test rdx, rdx ; je 0x43d136 ; call rdx
0x000000000043e738 : test rdx, rdx ; je 0x43e748 ; call rdx
0x000000000043e8c8 : test rdx, rdx ; je 0x43e8d8 ; call rdx
0x00000000004475f7 : test rdx, rdx ; je 0x44760c ; mov rdi, rbx ; call rdx
0x000000000046a49f : test rdx, rdx ; je 0x46a4be ; mov rdi, rbx ; call rdx
0x000000000046c638 : test rdx, rdx ; je 0x46c648 ; call rdx
0x000000000046c7d8 : test rdx, rdx ; je 0x46c7e8 ; call rdx
0x000000000046c8d8 : test rdx, rdx ; je 0x46c8e8 ; call rdx
0x000000000046ca7e : test rdx, rdx ; je 0x46ca8e ; call rdx
0x000000000046cc2e : test rdx, rdx ; je 0x46cc3e ; call rdx
0x000000000046cdde : test rdx, rdx ; je 0x46cdee ; call rdx
0x00000000004b2325 : test rdx, rdx ; je 0x4b233b ; mov rdi, rax ; call rdx
0x000000000047c522 : test rdx, rdx ; jne 0x47c535 ; ret
0x00000000004c6bb0 : test rdx, rdx ; jne 0x4c6bc5 ; ret
0x000000000043e7bc : test rsi, rsi ; je 0x43e7f5 ; call rax
0x000000000043e7bb : test rsi, rsi ; je 0x43e7f6 ; call rax
0x000000000043e94c : test rsi, rsi ; je 0x43e985 ; call rdx
0x000000000043e94b : test rsi, rsi ; je 0x43e986 ; call rdx
0x000000000041e25b : test rsi, rsi ; jne 0x41e250 ; ret
0x000000000040294c : test rsi, rsi ; setne al ; ret
0x0000000000473fba : test rsi, rsi ; setne dl ; sub eax, edx ; ret
0x00000000004c8f76 : vmovdqu xmmword ptr [rdi - 0x10], xmm5 ; vzeroupper ; ret
0x00000000004c9631 : vmovdqu xmmword ptr [rdi], xmm10 ; vzeroupper ; ret
0x000000000045d6db : vmovdqu ymmword ptr [rdi + 0x20], ymm3 ; vzeroupper ; ret
0x000000000045d5d9 : vmovdqu ymmword ptr [rdi + 0x40], ymm4 ; vzeroupper ; ret
0x0000000000427fae : vpcmpgtd ymm8, ymm15, ymmword ptr [rdi + rcx + 0x6f] ; ret
0x000000000047139b : vpsubsb xmm3, xmm14, xmmword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004c9eb6 : vpxor xmm8, xmm8, xmm4 ; ret
0x000000000046ebd9 : vsqrtsd xmm0, xmm11, qword ptr [rax] ; mov rdi, rbp ; call rbx
0x0000000000418e33 : vzeroupper ; lea rsp, qword ptr [r11] ; ret
0x0000000000418bfc : vzeroupper ; ret
0x000000000052e675 : wait ; add al, byte ptr [rax] ; and al, 0xb3 ; clc ; jmp rsp
0x000000000052b755 : wait ; add dword ptr [rax], eax ; test byte ptr [rdi - 0xc], bh ; call rsp
0x000000000050feac : wait ; call qword ptr [r14]
0x00000000004f95cc : wait ; call qword ptr [rdi]
0x0000000000508a88 : wait ; call rsp
0x000000000052c801 : wait ; cmc ; call rsp
0x00000000004b24d1 : wait ; cmc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000515e61 : wait ; fadd dword ptr [rsi] ; cmp cl, dh ; ret 0x898
0x000000000050ca57 : wait ; fstp dword ptr [rdi - 0x30c43414] ; in eax, 0x4e ; ret
0x00000000005092e2 : wait ; insd dword ptr [rdi], dx ; cwde ; loope 0x509324 ; je 0x509330 ; ret
0x0000000000500dee : wait ; jmp qword ptr [rdx]
0x0000000000546d49 : wait ; jmp qword ptr [rsi]
0x00000000004d0c24 : wait ; lahf ; lodsd eax, dword ptr es:[rsi] ; mov bl, 0x26 ; ret
0x00000000005020a1 : wait ; leave ; ret 0xbe97
0x0000000000505d7a : wait ; mov ch, 0x7b ; xor eax, 0x67059841 ; ret
0x0000000000517222 : wait ; mov esp, 0x1baf6060 ; ret 0x7888
0x0000000000402bf2 : wait ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004f1271 : wait ; pop r15 ; int1 ; jae 0x4f12d8 ; add dl, ch ; ret
0x00000000004eea01 : wait ; push rax ; ret
0x000000000050aa70 : wait ; ret
0x000000000050b6b8 : wait ; ret 0x2128
0x000000000050d0f0 : wait ; ret 0x431e
0x000000000050441e : wait ; ret 0x8463
0x00000000004622c1 : wait ; ret 0xfffb
0x0000000000501a47 : wait ; xor bl, byte ptr [rbp + 0x52] ; ret
0x00000000004b96eb : wbinvd ; ret 0xc889
0x00000000004fc8c3 : xchg al, ch ; js 0x4fc885 ; rcr dword ptr [rbx], cl ; ret
0x00000000005129be : xchg al, dh ; je 0x512980 ; cwde ; ret 0x1955
0x000000000040a4ca : xchg bh, bh ; inc dword ptr [rcx - 0x7d] ; in eax, dx ; add dword ptr [rcx], eax ; ret
0x0000000000511d8c : xchg bh, cl ; ret
0x00000000004f4dec : xchg bl, bl ; loopne 0x4f4df9 ; lodsb al, byte ptr [rsi] ; xchg eax, esi ; mov ch, 0xa4 ; ret 0x9a5b
0x0000000000419df2 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000419f5c : xchg byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbx ; call r12
0x00000000004385e6 : xchg byte ptr [rbp - 0x76b70004], bl ; ret
0x0000000000517233 : xchg byte ptr [rcx], bl ; mov edi, 0xe980d936 ; ret
0x000000000050b824 : xchg byte ptr [rdi + 0x6c], ah ; xor al, 0xa8 ; clc ; ret 0xc375
0x0000000000516bb6 : xchg byte ptr [rdi - 0x4a1b791e], dl ; ret 0xf99f
0x0000000000509bf5 : xchg byte ptr [rdi], dh ; lahf ; ret
0x0000000000500cd4 : xchg byte ptr [rdx - 0x4a9fa23], cl ; ret
0x000000000052e295 : xchg byte ptr [rdx], al ; add byte ptr [rsp + rcx*2 - 8], dh ; call rsp
0x000000000052c6c9 : xchg ch, dh ; call rsp
0x000000000050414d : xchg dl, dl ; add al, 0x94 ; cli ; ret 0xeca0
0x0000000000467b72 : xchg dword ptr [rax + 0x48000000], eax ; mov eax, dword ptr [rax + 8] ; jmp rax
0x00000000004f8137 : xchg dword ptr [rax - 0x6f], ebx ; mov dword ptr [rax + rbp*2 - 0x67], eax ; ret 0xef10
0x000000000041b1bb : xchg dword ptr [rax - 0x76fffffa], esp ; ret 0x348
0x000000000041b643 : xchg dword ptr [rax - 0x76fffffd], ecx ; ret 0x348
0x000000000041b75b : xchg dword ptr [rax - 0x76fffffe], ebp ; ret 0x348
0x0000000000418ba5 : xchg dword ptr [rax - 0xd000000], edi ; ret
0x00000000005167f8 : xchg dword ptr [rax], ebx ; sti ; xchg eax, ebp ; mov cl, ah ; int 0xc3
0x00000000005133e2 : xchg dword ptr [rax], ecx ; imul ebx, dword ptr [rbx], 0x38 ; ret 0x78f3
0x0000000000402249 : xchg dword ptr [rax], esp ; add dword ptr [rbp], ecx ; add eax, 0x10 ; ret
0x00000000004021d9 : xchg dword ptr [rax], esp ; add dword ptr [rbp], ecx ; add eax, 0x18 ; ret
0x0000000000402236 : xchg dword ptr [rax], esp ; add dword ptr [rbp], ecx ; add eax, 0x20 ; ret
0x0000000000402215 : xchg dword ptr [rax], esp ; add dword ptr [rbp], ecx ; add eax, 0x28 ; ret
0x0000000000402226 : xchg dword ptr [rax], esp ; add dword ptr [rbp], ecx ; add eax, 0x30 ; ret
0x00000000004021b3 : xchg dword ptr [rax], esp ; add dword ptr [rbp], ecx ; add eax, 0x38 ; ret
0x0000000000402261 : xchg dword ptr [rax], esp ; add dword ptr [rbp], ecx ; add eax, 8 ; ret
0x00000000004021f5 : xchg dword ptr [rax], esp ; add dword ptr [rbp], ecx ; ret
0x000000000041b3be : xchg dword ptr [rbp - 0x76fffffa], ecx ; ret 0x348
0x000000000054771d : xchg dword ptr [rcx], eax ; add byte ptr [rax], al ; mov dl, 0xf3 ; jmp qword ptr [rax]
0x000000000054771c : xchg dword ptr [rcx], r8d ; add byte ptr [rax], al ; mov dl, 0xf3 ; jmp qword ptr [rax]
0x00000000005178d2 : xchg dword ptr [rdi + 0x7650b680], ecx ; in eax, dx ; ret
0x00000000004a9670 : xchg dword ptr [rdi + rdi*8 - 1], eax ; push rbx ; ret
0x00000000004ec3d6 : xchg dword ptr [rdi], edx ; mov ecx, 0xcb06bac1 ; ret 0xfea6
0x00000000004fbdf9 : xchg dword ptr [rip + 0x36d53d32], eax ; adc al, 0x62 ; ret
0x00000000005053b2 : xchg dword ptr [rsi + rsi], ebx ; ret
0x000000000040fec6 : xchg eax, ebp ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffc
0x000000000044ac2b : xchg eax, ebp ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000518e9f : xchg eax, ebp ; add dword ptr ss:[rbx], edx ; adc ecx, ecx ; ret 0x15a3
0x00000000004f4c06 : xchg eax, ebp ; and dword ptr [rcx], ecx ; imul ebx, esp, 0xe7048453 ; jmp qword ptr [rdi]
0x0000000000472ad4 : xchg eax, ebp ; cli ; inc dword ptr [rbp - 0x95a8140] ; ret
0x00000000004cc4df : xchg eax, ebp ; dec dword ptr [rax - 0x77] ; ret 0xc148
0x000000000049c0ac : xchg eax, ebp ; idiv bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000502264 : xchg eax, ebp ; in al, dx ; jae 0x5021f9 ; ret
0x0000000000502263 : xchg eax, ebp ; in al, dx ; jae 0x5021fa ; ret
0x0000000000502264 : xchg eax, ebp ; in al, dx ; jae 0x5021fb ; ret
0x0000000000502263 : xchg eax, ebp ; in al, dx ; jae 0x5021fc ; ret
0x00000000004fb997 : xchg eax, ebp ; in al, dx ; leave ; or al, 0x6b ; ret 0x1320
0x0000000000529cc1 : xchg eax, ebp ; int1 ; jmp rsp
0x0000000000501bf8 : xchg eax, ebp ; lahf ; salc ; sub byte ptr [rdx], 0xe2 ; ret 0x60a
0x0000000000425af3 : xchg eax, ebp ; leave ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8588
0x0000000000425b06 : xchg eax, ebp ; mov byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000005167fb : xchg eax, ebp ; mov cl, ah ; int 0xc3
0x0000000000493baa : xchg eax, ebp ; or eax, dword ptr [rdx - 6] ; ret
0x0000000000528da1 : xchg eax, ebp ; out dx, eax ; jmp rsp
0x0000000000493961 : xchg eax, ebp ; outsb dx, byte ptr [rsi] ; out 0x95, al ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x0000000000493965 : xchg eax, ebp ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; jmp rsi
0x0000000000518c74 : xchg eax, ebp ; push rax ; in eax, dx ; ret
0x0000000000434948 : xchg eax, ebp ; rcr byte ptr [rbx + 0xf], 0xb6 ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000040765a : xchg eax, ebp ; ret
0x0000000000425b3a : xchg eax, ebp ; ret 0
0x0000000000506e3c : xchg eax, ebp ; ret 0x4551
0x00000000004fdb97 : xchg eax, ebp ; ret 0x45da
0x00000000004f81ee : xchg eax, ebp ; ret 0x5413
0x000000000043f82e : xchg eax, ebp ; ret 0x7d80
0x000000000041b513 : xchg eax, ebp ; ret 0x8341
0x00000000004817f8 : xchg eax, ebp ; ret 0x8348
0x00000000004b68bb : xchg eax, ebp ; ret 0x8944
0x000000000046226d : xchg eax, ebp ; ret 0x8b48
0x0000000000403c2a : xchg eax, ebp ; ret 0x94c
0x000000000050043b : xchg eax, ebp ; ret 0xb611
0x000000000047ddf3 : xchg eax, ebp ; ret 0xc284
0x0000000000473fbe : xchg eax, ebp ; ret 0xd029
0x000000000045a63d : xchg eax, ebp ; ret 0xd089
0x000000000047b406 : xchg eax, ebp ; ret 0xd639
0x000000000043d23b : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000424d84 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000049bf69 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000516ae6 : xchg eax, ebp ; sbb byte ptr [rdi + 0xcba7548], ah ; ret 0x1595
0x00000000004897f5 : xchg eax, ebp ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000005285e5 : xchg eax, ebx ; add byte ptr [rax], al ; out dx, al ; call rsp
0x000000000053836d : xchg eax, ebx ; add byte ptr [rax], al ; rcl byte ptr [rdi - 0x10], 1 ; call qword ptr [rbx]
0x0000000000504fe4 : xchg eax, ebx ; and al, 0xa5 ; ret 0x33c5
0x00000000005103df : xchg eax, ebx ; call qword ptr [rcx]
0x000000000050fd69 : xchg eax, ebx ; cmc ; ret 0x2d31
0x000000000048c22c : xchg eax, ebx ; idiv edi ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000050e94a : xchg eax, ebx ; imul esp, dword ptr [rax], 0xa8cc8a79 ; jne 0x50e90f ; ret
0x0000000000420020 : xchg eax, ebx ; mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000050a9df : xchg eax, ebx ; mov dl, 0xbe ; adc cl, byte ptr [rcx - 0x78] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004203fc : xchg eax, ebx ; ret
0x00000000005020a9 : xchg eax, ebx ; ret 0x6718
0x00000000004f5081 : xchg eax, ebx ; ret 0x6d6e
0x0000000000403c38 : xchg eax, ebx ; ret 0x8349
0x00000000004ffe88 : xchg eax, ebx ; xor al, 0xcc ; ret
0x0000000000449255 : xchg eax, ecx ; add al, r13b ; ret
0x00000000005285a5 : xchg eax, ecx ; add byte ptr [rax], al ; xchg eax, esp ; cmp esi, ebp ; jmp rsp
0x000000000054815d : xchg eax, ecx ; add dword ptr [rax], eax ; push rax ; sal bl, cl ; jmp qword ptr [rbx]
0x00000000005481ad : xchg eax, ecx ; add dword ptr [rax], eax ; rcl dl, 0xf3 ; call rax
0x00000000004f0a0a : xchg eax, ecx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; sbb edx, ecx ; add byte ptr [rbx + rcx*4 - 0x37], bh ; ret 0x8d33
0x0000000000517de3 : xchg eax, ecx ; fadd qword ptr [rax + rbp - 0x3677a4a0] ; ret 0x90cf
0x00000000004fc360 : xchg eax, ecx ; inc byte ptr [rbp + 0x2b62a352] ; ret
0x00000000004cb06b : xchg eax, ecx ; jae 0x4cb06a ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x0000000000502de6 : xchg eax, ecx ; jmp 0x502dad
0x00000000004fc526 : xchg eax, ecx ; lodsb al, byte ptr [rsi] ; neg byte ptr [rdx] ; sahf ; push rsi ; ret 0x38c2
0x0000000000506113 : xchg eax, ecx ; loop 0x506122 ; jbe 0x5060de ; ret
0x0000000000506113 : xchg eax, ecx ; loop 0x506123 ; jbe 0x5060df ; ret
0x00000000004f8139 : xchg eax, ecx ; mov dword ptr [rax + rbp*2 - 0x67], eax ; ret 0xef10
0x00000000005137d3 : xchg eax, ecx ; push 0xe7 ; jo 0x5137bc ; ret 0x7553
0x00000000004f09bd : xchg eax, ecx ; ret
0x0000000000430a20 : xchg eax, ecx ; xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x00000000004fcdc0 : xchg eax, edi ; adc byte ptr [rax + 0x47], dh ; pop rdi ; sub ch, byte ptr [rax - 0x71] ; ret 0x88d0
0x000000000052e5ad : xchg eax, edi ; add al, byte ptr [rax] ; push rsp ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; call rsp
0x0000000000528635 : xchg eax, edi ; add byte ptr [rax], al ; hlt ; pop rcx ; out dx, al ; jmp rsp
0x0000000000430a21 : xchg eax, edi ; clc ; sal byte ptr [rax - 0x75], 1 ; ret 0xbe30
0x0000000000422a39 : xchg eax, edi ; enter 0, 0 ; ret
0x00000000004ecca4 : xchg eax, edi ; fimul dword ptr [rcx - 0x3f37810b] ; call rdi
0x00000000004ed204 : xchg eax, edi ; in eax, -0x2b ; ret 0x7870
0x0000000000513a0b : xchg eax, edi ; ja 0x513a4c ; in al, 0x21 ; cmp edi, dword ptr [rcx + 0x30] ; ret 0x958e
0x0000000000504860 : xchg eax, edi ; jmp qword ptr [rbx]
0x000000000050a688 : xchg eax, edi ; jrcxz 0x50a638 ; pop rdx ; ret 0xd69
0x000000000043a462 : xchg eax, edi ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi + 0x33], bh ; pop rbx ; ret
0x0000000000516bb7 : xchg eax, edi ; loop 0x516b45 ; in al, -0x4b ; ret 0xf99f
0x00000000004229f9 : xchg eax, edi ; mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000005020a4 : xchg eax, edi ; mov esi, 0x9302bb07 ; ret 0x6718
0x00000000004f569c : xchg eax, edi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000418b7a : xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rbp + 0xf], cl ; lodsb al, byte ptr [rsi] ; ret
0x00000000004fdb6b : xchg eax, edi ; or bl, byte ptr ss:[rcx] ; ret
0x00000000004f863d : xchg eax, edi ; or dh, dl ; lodsb al, byte ptr [rsi] ; ret 0xd6fb
0x000000000040e8f8 : xchg eax, edi ; ret
0x0000000000509410 : xchg eax, edi ; ret 0x27ba
0x000000000043a179 : xchg eax, edi ; ret 0x8148
0x000000000040c9f2 : xchg eax, edi ; ret 0x8348
0x0000000000478906 : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047fbe6 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xc031
0x00000000005128e4 : xchg eax, edi ; sahf ; or eax, 0xeb00e968 ; ret
0x000000000050b07e : xchg eax, edi ; sbb byte ptr ss:[rbp + 0x49a1cfe8], 0x6c ; ret 0x8371
0x00000000004f58b5 : xchg eax, edi ; sti ; sub al, 0xf1 ; ret 0x7130
0x0000000000422a19 : xchg eax, edi ; test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000507b4b : xchg eax, edi ; xchg eax, ebp ; ret
0x0000000000511105 : xchg eax, edi ; xchg esp, edi ; shr edx, cl ; ret
0x00000000005086e0 : xchg eax, edi ; xor cl, ch ; stosd dword ptr [rdi], eax ; leave ; rcl byte ptr [rcx - 0x3e], 1 ; jmp 0x5086f9
0x000000000048de49 : xchg eax, edx ; add byte ptr [rax - 0x77], r9b ; ret
0x00000000005158f4 : xchg eax, edx ; clc ; ret 0x9f2e
0x000000000043d5d4 : xchg eax, edx ; cld ; inc dword ptr [rbp + 0x5b057ec0] ; ret
0x00000000004f1720 : xchg eax, edx ; cmp bh, byte ptr [rdi + 0x64] ; ret
0x000000000052b8c9 : xchg eax, edx ; hlt ; jmp rsp
0x00000000004b360c : xchg eax, edx ; idiv bh ; nop ; xor eax, eax ; ret
0x000000000048c39c : xchg eax, edx ; idiv edi ; xor eax, eax ; add rsp, 8 ; ret
0x000000000048c41c : xchg eax, edx ; idiv edi ; xor eax, eax ; pop rbx ; ret
0x00000000005160f7 : xchg eax, edx ; insb byte ptr [rdi], dx ; fisttp word ptr [rcx] ; sub esi, ebx ; sar dword ptr [rsi], 1 ; ret
0x00000000005184c9 : xchg eax, edx ; int1 ; ret 0x250d
0x0000000000507e4f : xchg eax, edx ; jl 0x507e41 ; out dx, al ; test eax, 0x3c37951e ; ret
0x00000000004c5f09 : xchg eax, edx ; lea rsi, qword ptr [rdi + 0x60] ; lea rdi, qword ptr [rdi + 0x40] ; call rbx
0x00000000004faa10 : xchg eax, edx ; loop 0x4faa69 ; ret 0x74a2
0x0000000000509cc2 : xchg eax, edx ; mov edi, 0xba1700f6 ; ret 0xbf6b
0x00000000004309ef : xchg eax, edx ; out 0xae, al ; in eax, dx ; leave ; ret 0x3b81
0x000000000040ba00 : xchg eax, edx ; ret
0x00000000004fd445 : xchg eax, edx ; ret 0x4165
0x0000000000510f14 : xchg eax, edx ; ret 0x54c
0x000000000047739d : xchg eax, edx ; ret 0x970f
0x000000000051644f : xchg eax, edx ; ret 0x9784
0x0000000000517304 : xchg eax, edx ; ret 0x9b1e
0x00000000005026fd : xchg eax, edx ; ret 0xa3a6
0x000000000047fbe9 : xchg eax, edx ; ret 0xc031
0x0000000000478909 : xchg eax, edx ; ret 0xd029
0x0000000000509fff : xchg eax, edx ; ret 0xd298
0x000000000043497d : xchg eax, edx ; ret 0xd329
0x000000000040bf8a : xchg eax, edx ; ret 0xeb83
0x00000000004faa75 : xchg eax, edx ; sahf ; pop rcx ; jne 0x4faadd ; ret
0x00000000004b5c5a : xchg eax, edx ; test byte ptr [rcx], al ; add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x000000000051573b : xchg eax, esi ; adc dh, byte ptr [rax + rbp*4 - 0xc] ; ret 0x82f4
0x000000000050581c : xchg eax, esi ; add eax, 0x64b0408d ; ret
0x000000000054f901 : xchg eax, esi ; cmc ; call rsp
0x000000000052c7a1 : xchg eax, esi ; cmc ; jmp rsp
0x00000000004f47f6 : xchg eax, esi ; jnp 0x4f47a0 ; ret 0x9591
0x00000000004f4df1 : xchg eax, esi ; mov ch, 0xa4 ; ret 0x9a5b
0x00000000004f7ccb : xchg eax, esi ; mov ebp, 0xf801df2b ; out dx, eax ; ret
0x0000000000532bd9 : xchg eax, esi ; out dx, al ; call rax
0x0000000000518a6d : xchg eax, esi ; outsb dx, byte ptr [rsi] ; mov ecx, 0xb1a8908e ; ret 0xf0ad
0x00000000004fc3c5 : xchg eax, esi ; outsd dx, dword ptr [rsi] ; leave ; ret 0xe867
0x00000000004fea3c : xchg eax, esi ; pop rbp ; adc eax, 0xa72d001e ; ret
0x00000000005049f3 : xchg eax, esi ; pop rcx ; or al, bl ; ret 0x1878
0x000000000050b795 : xchg eax, esi ; pop rcx ; push rbx ; ret 0xf9bc
0x0000000000501064 : xchg eax, esi ; push rsp ; int 0x80
0x000000000047d597 : xchg eax, esi ; ret
0x0000000000512889 : xchg eax, esi ; sbb edx, dword ptr [rdx] ; imul dword ptr [rdx - 0x6c] ; ret 0x983e
0x0000000000406c16 : xchg eax, esi ; sti ; xor al, 0 ; mov qword ptr [rsi], rax ; ret
0x0000000000507722 : xchg eax, esi ; test eax, 0x68206634 ; call rax
0x00000000004fad9a : xchg eax, esi ; xlatb ; stosb byte ptr [rdi], al ; ret
0x00000000004db340 : xchg eax, esi ; xor cl, byte ptr [rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000051816a : xchg eax, esi ; xor dword ptr [rcx], 0x58 ; ret
0x000000000040448b : xchg eax, esi ; xor rax, rcx ; ret
0x00000000004b936f : xchg eax, esp ; adc ah, al ; out 0x2c, al ; inc byte ptr [rcx + 9] ; ret
0x00000000004533aa : xchg eax, esp ; adc al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000055336c : xchg eax, esp ; add al, byte ptr [r8] ; and byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x000000000052d6e4 : xchg eax, esp ; add al, byte ptr [r8] ; push rsp ; xor edi, esi ; call rsp
0x000000000052e525 : xchg eax, esp ; add al, byte ptr [rax] ; add al, 0x9d ; clc ; call rsp
0x0000000000538405 : xchg eax, esp ; add byte ptr [rax], al ; call 0xffffffffe453746d
0x000000000054f16c : xchg eax, esp ; add dword ptr [rdx], eax ; add byte ptr [rax - 0x7c], dl ; cmc ; jmp qword ptr [rdi]
0x000000000052a38c : xchg eax, esp ; add dword ptr cs:[rax], eax ; adc al, 0xfa ; int1 ; call rsp
0x000000000050c33a : xchg eax, esp ; add eax, ebx ; lodsd eax, dword ptr [rsi] ; ret 0x8362
0x000000000045834d : xchg eax, esp ; and al, 0x18 ; add al, 0 ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000458375 : xchg eax, esp ; and al, 0x28 ; add al, 0 ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x000000000045839d : xchg eax, esp ; and al, 0x38 ; add al, 0 ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000452df0 : xchg eax, esp ; and al, 0x48 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000452e19 : xchg eax, esp ; and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000452e42 : xchg eax, esp ; and al, 0x68 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000452e6b : xchg eax, esp ; and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000457ad6 : xchg eax, esp ; and al, 0x88 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000416b6a : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x62c4
0x0000000000452e94 : xchg eax, esp ; and al, 0x88 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000457aff : xchg eax, esp ; and al, 0x98 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000452ebd : xchg eax, esp ; and al, 0x98 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000457b28 : xchg eax, esp ; and al, 0xa8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000452ee6 : xchg eax, esp ; and al, 0xa8 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000457b51 : xchg eax, esp ; and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000457b7a : xchg eax, esp ; and al, 0xc8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000458285 : xchg eax, esp ; and al, 0xc8 ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000457ba3 : xchg eax, esp ; and al, 0xd8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004582ad : xchg eax, esp ; and al, 0xd8 ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000457bcc : xchg eax, esp ; and al, 0xe8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004582d5 : xchg eax, esp ; and al, 0xe8 ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000457bf5 : xchg eax, esp ; and al, 0xf8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000004582fd : xchg eax, esp ; and al, 0xf8 ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000458325 : xchg eax, esp ; and al, 8 ; add al, 0 ; add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4801
0x0000000000504150 : xchg eax, esp ; cli ; ret 0xeca0
0x000000000052c1b0 : xchg eax, esp ; cmp ebp, esi ; call rsp
0x00000000005285a8 : xchg eax, esp ; cmp esi, ebp ; jmp rsp
0x00000000004f5eee : xchg eax, esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xd0e1
0x00000000005064fc : xchg eax, esp ; fcmovu st(0), st(2) ; adc al, 0xd1 ; mov al, 0xf6 ; jle 0x50652f ; ret
0x000000000052cac0 : xchg eax, esp ; fcompi st(5) ; jmp rsp
0x000000000052b901 : xchg eax, esp ; hlt ; call rsp
0x0000000000529614 : xchg eax, esp ; in eax, dx ; add byte ptr [rax], al ; xchg eax, esp ; sbb esi, ecx ; call rsp
0x000000000054dd6c : xchg eax, esp ; in eax, dx ; add dword ptr [rax], eax ; jo 0x54ddbe ; cmc ; jmp qword ptr [rdi]
0x0000000000515cbe : xchg eax, esp ; lodsb al, byte ptr [rsi] ; ret
0x00000000005064b7 : xchg eax, esp ; lodsd eax, dword ptr [rsi] ; push rdx ; push rsp ; out 0xeb, al ; ret 0x6449
0x000000000054d26c : xchg eax, esp ; loop 0x54d277 ; add al, dh ; sub al, 0xf5 ; jmp rax
0x000000000054a16c : xchg eax, esp ; mov cl, 1 ; add byte ptr [rax + 0x19], ah ; hlt ; call qword ptr [rax]
0x000000000052e6e8 : xchg eax, esp ; mov dh, 0xf8 ; call rsp
0x000000000052ed24 : xchg eax, esp ; mov ebx, 0x1c340002 ; stc ; jmp rsp
0x000000000051584e : xchg eax, esp ; mov esi, 0x18d3b1d4 ; ret 0x32c0
0x00000000004fdb92 : xchg eax, esp ; mov esi, 0x958c3ca8 ; ret 0x45da
0x000000000052ed84 : xchg eax, esp ; mov esi, 0xcfb40002 ; stc ; jmp rsp
0x000000000052a8c0 : xchg eax, esp ; movsxd rsi, edx ; jmp rsp
0x000000000052b58c : xchg eax, esp ; nop ; add dword ptr [rax], eax ; xor al, 0x54 ; hlt ; call rsp
0x00000000004ec731 : xchg eax, esp ; or byte ptr [rax + 0x4d], bl ; ret 0x91b2
0x000000000050aad3 : xchg eax, esp ; or byte ptr [rdx + 0x69], bh ; ret
0x000000000052fd6c : xchg eax, esp ; or eax, 0x56800000 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000052a8a0 : xchg eax, esp ; pop rax ; call rsp
0x0000000000529ad8 : xchg eax, esp ; pop rbx ; int1 ; jmp rsp
0x000000000053496c : xchg eax, esp ; pop rcx ; add byte ptr [rax], al ; sbb dh, 0xee ; jmp rsi
0x0000000000502a39 : xchg eax, esp ; push r9 ; out dx, eax ; out -0x15, eax ; fdivp st(7) ; cwde ; ret 0x98e5
0x00000000004ce127 : xchg eax, esp ; rcr byte ptr [rbx + 0xf], 0xb6 ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000465c2e : xchg eax, esp ; ret
0x000000000053b26c : xchg eax, esp ; ret 0
0x0000000000500d31 : xchg eax, esp ; ret 0x481e
0x000000000045030b : xchg eax, esp ; ret 0x548d
0x00000000004ac0a5 : xchg eax, esp ; ret 0x6348
0x00000000004fe6b5 : xchg eax, esp ; ret 0x8152
0x0000000000444b8d : xchg eax, esp ; ret 0x8341
0x000000000040a9bd : xchg eax, esp ; ret 0x8348
0x000000000040c4bc : xchg eax, esp ; ret 0x8444
0x000000000040b014 : xchg eax, esp ; ret 0x8548
0x0000000000406930 : xchg eax, esp ; ret 0x854d
0x00000000004ab41b : xchg eax, esp ; ret 0x93eb
0x000000000051288f : xchg eax, esp ; ret 0x983e
0x0000000000494437 : xchg eax, esp ; ret 0xca09
0x0000000000471ad0 : xchg eax, esp ; ret 0xd108
0x0000000000406260 : xchg eax, esp ; ret 0xf631
0x00000000004685f3 : xchg eax, esp ; ret 0xf6e9
0x000000000052be34 : xchg eax, esp ; ret 1
0x000000000040c4b4 : xchg eax, esp ; rol byte ptr [rbx + 0x814247c], 0xf ; xchg eax, esp ; ret 0x8444
0x00000000004b3c84 : xchg eax, esp ; rol byte ptr [rcx + rcx - 8], 0x89 ; ret
0x00000000004a83e1 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000444a79 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000051230b : xchg eax, esp ; sahf ; ret 0x667b
0x000000000052e8d0 : xchg eax, esp ; sar al, cl ; call rsp
0x0000000000529618 : xchg eax, esp ; sbb esi, ecx ; call rsp
0x0000000000528a2c : xchg eax, esp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; test byte ptr [rax - 0x11], cl ; jmp rsp
0x000000000054eb6c : xchg eax, esp ; sti ; add dword ptr [rax], eax ; mov al, 0x70 ; cmc ; call qword ptr [rsi]
0x0000000000529048 : xchg eax, esp ; stosb byte ptr [rdi], al ; out dx, eax ; jmp rsp
0x000000000050b766 : xchg eax, esp ; sub al, 0xdd ; stosb byte ptr [rdi], al ; ret 0x6595
0x000000000052d6c0 : xchg eax, esp ; sub al, 0xf7 ; jmp rsp
0x000000000053836c : xchg eax, esp ; xchg eax, ebx ; add byte ptr [rax], al ; rcl byte ptr [rdi - 0x10], 1 ; call qword ptr [rbx]
0x00000000004eec2a : xchg eax, esp ; xor edx, dword ptr [rsi + 7] ; ret
0x00000000004f7184 : xchg eax, r10d ; ret
0x000000000051584d : xchg eax, r12d ; mov esi, 0x18d3b1d4 ; ret 0x32c0
0x0000000000507721 : xchg eax, r14d ; test eax, 0x68206634 ; call rax
0x0000000000505d0b : xchg eax, r8d ; ret 0x18b4
0x0000000000513d15 : xchg ebp, ebp ; ret
0x0000000000472631 : xchg edx, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000528761 : xchg esi, ebp ; call rsp
0x0000000000511106 : xchg esp, edi ; shr edx, cl ; ret
0x00000000005129bd : xchg r8b, sil ; je 0x512981 ; cwde ; ret 0x1955
0x000000000050ae7a : xchg rax, r12 ; ret
0x000000000051230a : xchg rax, r12 ; sahf ; ret 0x667b
0x0000000000493ba9 : xchg rax, rbp ; or eax, dword ptr [rdx - 6] ; ret
0x0000000000508bf3 : xchg rax, rbp ; ret
0x0000000000513a0a : xchg rax, rdi ; ja 0x513a4d ; in al, 0x21 ; cmp edi, dword ptr [rcx + 0x30] ; ret 0x958e
0x00000000004f7cca : xchg rax, rsi ; mov ebp, 0xf801df2b ; out dx, eax ; ret
0x0000000000513b13 : xlatb ; adc ecx, dword ptr [rbx - 0x5c] ; cmp dword ptr [rbp - 0x59], edi ; ret
0x00000000004bf35b : xlatb ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret
0x00000000004be412 : xlatb ; add ah, byte ptr [rsi + 0xf] ; out dx, eax ; ret 0x4466
0x000000000050c967 : xlatb ; add ah, cl ; jbe 0x50c94f ; rcr eax, 1 ; ret
0x000000000042e5c6 : xlatb ; add al, ah ; ret
0x00000000004729d5 : xlatb ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004cc2dc : xlatb ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x48], al ; ret 0
0x00000000004a3c14 : xlatb ; call rax
0x00000000004b6841 : xlatb ; call rcx
0x00000000004feab7 : xlatb ; clc ; sbb edx, dword ptr [rax + rdx*4] ; ret
0x0000000000516717 : xlatb ; cli ; lodsb al, byte ptr [rsi] ; ret 0x1c5b
0x00000000005508f1 : xlatb ; cmc ; call rcx
0x000000000050d6fb : xlatb ; cmc ; ret
0x00000000005134ed : xlatb ; cmp byte ptr [rbp + rbp + 0x57e9c835], ah ; ret
0x00000000005062e7 : xlatb ; jae 0x5062ed ; ret 0xd029
0x0000000000413342 : xlatb ; jb 0x413048 ; ret
0x0000000000505819 : xlatb ; jg 0x5057d7 ; xchg eax, esi ; add eax, 0x64b0408d ; ret
0x000000000043f758 : xlatb ; jmp rax
0x00000000004068d6 : xlatb ; jne 0x4068c6 ; movzx eax, al ; ret
0x00000000004b955b : xlatb ; jne 0x4b954c ; ret
0x00000000004fead6 : xlatb ; mov dword ptr [rax - 0x55], eax ; ret 0x435d
0x00000000004961db : xlatb ; mov qword ptr [rsp + 8], rcx ; call 0x402408
0x000000000043f37b : xlatb ; mov rax, -1 ; ret
0x00000000005346e1 : xlatb ; out dx, al ; call qword ptr [rbx]
0x00000000004f9433 : xlatb ; push rcx ; push rax ; ret
0x00000000004f827c : xlatb ; ret
0x00000000004feb7e : xlatb ; ret 0x32ec
0x00000000005054a2 : xlatb ; ret 0x779c
0x00000000004fbc77 : xlatb ; ret 0x8a8d
0x0000000000508bee : xlatb ; rol byte ptr [rdi - 0x79], 1 ; test al, 0x4c ; xchg eax, ebp ; ret
0x00000000004fd8c6 : xlatb ; sahf ; cmp al, 0x26 ; ret 0x6f8
0x00000000004f72ee : xlatb ; std ; lea esp, dword ptr [rax] ; sub al, 0x5d ; ret
0x00000000004fad9b : xlatb ; stosb byte ptr [rdi], al ; ret
0x00000000004a03bf : xlatb ; sub al, 0x52 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret 0xffff
0x00000000004b9422 : xlatb ; sub al, byte ptr [rcx + 9] ; rol dword ptr [rcx + 0x31], cl ; ret
0x00000000005115bb : xlatb ; sub bl, bh ; ret
0x0000000000508a87 : xlatb ; wait ; call rsp
0x0000000000500dde : xlatb ; xor byte ptr [rbp - 0x30], ah ; ret 0x3ef2
0x0000000000430d96 : xor ah, al ; ret 0x71
0x0000000000461c71 : xor al, 0 ; add byte ptr [rax], al ; ret
0x0000000000406b4a : xor al, 0 ; mov qword ptr [rdx], rax ; ret
0x00000000004069ff : xor al, 0 ; mov qword ptr [rip + 0x34fda8], rdx ; ret
0x0000000000406bda : xor al, 0 ; mov qword ptr [rsi], rax ; ret
0x0000000000406988 : xor al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000406a06 : xor al, 0 ; ret
0x0000000000406aa4 : xor al, 0 ; test eax, eax ; jne 0x406ab6 ; ret
0x000000000052ed28 : xor al, 0x1c ; stc ; jmp rsp
0x000000000052be38 : xor al, 0x20 ; cmc ; call rsp
0x0000000000440220 : xor al, 0x24 ; mov rsi, r12 ; mov rdi, qword ptr [rbx] ; call rax
0x0000000000500cd2 : xor al, 0x24 ; xchg byte ptr [rdx - 0x4a9fa23], cl ; ret
0x0000000000493b16 : xor al, 0x2c ; ret 0x40a3
0x0000000000506e53 : xor al, 0x2c ; ret 0x6201
0x00000000004f6081 : xor al, 0x2e ; idiv dword ptr [rdx] ; ret
0x00000000004583f3 : xor al, 0x30 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x3349
0x000000000052ee88 : xor al, 0x35 ; cli ; jmp rsp
0x0000000000507a39 : xor al, 0x35 ; or eax, 0xed2a2bf9 ; ret
0x00000000004f7aa4 : xor al, 0x38 ; ret 0xa070
0x00000000005297c0 : xor al, 0x39 ; int1 ; jmp rsp
0x000000000055330c : xor al, 0x43 ; add al, byte ptr [rax] ; add byte ptr [rbx - 0xa], al ; call qword ptr [rdx]
0x00000000005057e4 : xor al, 0x44 ; outsd dx, dword ptr [rsi] ; xor al, 4 ; ret 0x14db
0x000000000046dda6 : xor al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004841fe : xor al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004a8ab1 : xor al, 0x48 ; sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ee9fb : xor al, 0x4b ; and byte ptr [rdx + 0x509b04db], ah ; ret
0x0000000000516861 : xor al, 0x4d ; sbb al, 0xc5 ; ret
0x000000000052b590 : xor al, 0x54 ; hlt ; call rsp
0x0000000000516998 : xor al, 0x5c ; ret
0x000000000052c4b0 : xor al, 0x64 ; cmc ; call rsp
0x00000000005107c9 : xor al, 0x66 ; mov dr0, word ptr [rbp + 0x289cb633] ; ret
0x0000000000509bb8 : xor al, 0x71 ; ja 0x509bd6 ; pop rbx ; add byte ptr [rsi + rbx], bl ; ret
0x0000000000458453 : xor al, 0x80 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x3349
0x00000000004cd9d2 : xor al, 0x83 ; clc ; xor dword ptr [rdi], ecx ; ret 0x4789
0x0000000000547a0c : xor al, 0x8a ; add dword ptr [rax], eax ; nop ; ret 0xfff3
0x0000000000537c0c : xor al, 0x8c ; add byte ptr [rax], al ; and byte ptr [rsi - 0x10], cl ; jmp qword ptr [rax]
0x0000000000504858 : xor al, 0x9c ; sub eax, 0xe2ab75b7 ; xchg eax, edi ; jmp qword ptr [rbx]
0x0000000000513491 : xor al, 0xa3 ; and edx, dword ptr [rax] ; mov cl, 0xc9 ; jp 0x513518 ; ret 0x12c9
0x000000000050b827 : xor al, 0xa8 ; clc ; ret 0xc375
0x00000000004fa808 : xor al, 0xb0 ; ret 0xa613
0x000000000054b00c : xor al, 0xc0 ; add dword ptr [rax], eax ; jo 0x54b075 ; hlt ; call qword ptr [rcx]
0x00000000005280c8 : xor al, 0xc2 ; in eax, dx ; jmp qword ptr [rax + rdi*2]
0x000000000052bb80 : xor al, 0xc3 ; hlt ; dec dword ptr [rcx + rsi*4] ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000052a060 : xor al, 0xc3 ; int1 ; ljmp ptr [rsi + rbx] ; add dword ptr [rax], eax ; ret
0x00000000004ffe8b : xor al, 0xcc ; ret
0x000000000052fd0c : xor al, 0xd ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dl ; call rbx
0x00000000004584b3 : xor al, 0xd0 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x3349
0x000000000052c3d4 : xor al, 0xdc ; add dword ptr [rax], eax ; in al, 0x51 ; cmc ; jmp rsp
0x00000000005145c3 : xor al, 0xde ; mov dh, 0x40 ; ret 0xf1de
0x00000000004744d7 : xor al, 0xe8 ; ret
0x000000000052bc40 : xor al, 0xec ; hlt ; jmp rsp
0x000000000052f451 : xor al, 0xed ; call rsp
0x0000000000504fdc : xor al, 0xf4 ; ret 0xfa73
0x000000000052e1a1 : xor al, 0xf8 ; jmp rsp
0x00000000004f846c : xor al, 0xf9 ; ret 0x1ede
0x000000000054eb0c : xor al, 0xfb ; add dword ptr [rax], eax ; nop ; jo 0x54eb0f ; call qword ptr [rsi]
0x00000000004e6399 : xor al, 0xfd ; ret
0x000000000050a827 : xor al, 1 ; lea esi, dword ptr [rbp - 0x1972dfd7] ; ret 0x5a93
0x0000000000517ab9 : xor al, 1 ; ret 0x5253
0x00000000005057e7 : xor al, 4 ; ret 0x14db
0x000000000052b178 : xor al, 5 ; hlt ; call rsp
0x0000000000510111 : xor al, 9 ; mov cl, 0xec ; ret 0x203c
0x0000000000504549 : xor al, bl ; imul ebx, ecx, 0x446915c7 ; ret 0x5815
0x0000000000437d9e : xor al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000437d75 : xor al, byte ptr [rax] ; ret
0x0000000000437d85 : xor al, byte ptr [rax] ; test rax, rax ; je 0x437d97 ; ret
0x0000000000477b6a : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000046618e : xor al, ch ; insb byte ptr [rdi], dx ; ret 0xfff9
0x0000000000465fdc : xor al, ch ; outsb dx, byte ptr [rsi] ; ret
0x000000000040cce8 : xor al, ch ; ret 0xff5f
0x0000000000408ed8 : xor al, ch ; ret 0xff99
0x0000000000511ad3 : xor bh, byte ptr [rbx + 0x6c] ; ret
0x0000000000492fe1 : xor bh, byte ptr [rdx] ; or cl, byte ptr [rcx + 6] ; and al, 0x5c ; ret 0xacd3
0x00000000004fbdfb : xor bh, byte ptr [rip + 0x621436d5] ; ret
0x0000000000501a48 : xor bl, byte ptr [rbp + 0x52] ; ret
0x0000000000516991 : xor bl, ch ; mov esi, 0x23a4270 ; xor al, 0x5c ; ret
0x00000000004bdda2 : xor bl, dh ; movq qword ptr [rdx], mm3 ; ret
0x0000000000410e2c : xor bl, dh ; ret
0x00000000004719a3 : xor byte ptr [r11 + rcx*4 + 0x48], r8b ; sbb al, 0x83 ; ret 0x8301
0x0000000000407139 : xor byte ptr [r14 + 3], r15b ; ret
0x00000000004519b9 : xor byte ptr [r8 + 0x13], r9b ; push rdi ; cmp byte ptr [rcx - 0x77], cl ; ret
0x00000000004b13ef : xor byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rax + 0xf], 0x44 ; ret 0xb0ba
0x00000000004b39dd : xor byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000467671 : xor byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000004c6a6d : xor byte ptr [r9], r9b ; ret 0x1788
0x00000000004519ba : xor byte ptr [rax + 0x13], cl ; push rdi ; cmp byte ptr [rcx - 0x77], cl ; ret
0x00000000004a1e23 : xor byte ptr [rax + 0x29], cl ; fiadd word ptr [rbp + 1] ; cld ; call rax
0x00000000004958fe : xor byte ptr [rax + 0x29], cl ; ret
0x000000000040c70c : xor byte ptr [rax + 0x63], cl ; ret
0x0000000000402aef : xor byte ptr [rax + 0x63], cl ; ret 0x8d49
0x0000000000425af1 : xor byte ptr [rax + 0xc995], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8588
0x000000000043be13 : xor byte ptr [rax + 1], bh ; ret
0x00000000004551b1 : xor byte ptr [rax + 1], cl ; push rdi ; xor byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000438f2f : xor byte ptr [rax - 0x73], cl ; je 0x438f60 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000425b9c : xor byte ptr [rax - 0x76b706ad], cl ; ret 0xc148
0x000000000049798e : xor byte ptr [rax - 0x77], cl ; call rax
0x000000000048e1ff : xor byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000497531 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x20 ; call rax
0x0000000000497bb7 : xor byte ptr [rax - 0x77], cl ; int1 ; call rax
0x000000000041a75e : xor byte ptr [rax - 0x77], cl ; ret
0x00000000004551b5 : xor byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000004894de : xor byte ptr [rax - 0x77], cl ; ret 0xde89
0x00000000004b13f0 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0xb0ba
0x0000000000410857 : xor byte ptr [rax - 9], cl ; or byte ptr [rcx + 1], cl ; ret 0x1148
0x0000000000410856 : xor byte ptr [rax - 9], r9b ; or byte ptr [rcx + 1], cl ; ret 0x1148
0x00000000004a9af4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xf783
0x00000000004b39de : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000004f4d1b : xor byte ptr [rbp + 0x64ec3a31], cl ; mov dl, 0x1c ; ret
0x00000000004a08d1 : xor byte ptr [rbp + 0x75], 0 ; ret
0x00000000004b901a : xor byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x00000000004b3ea0 : xor byte ptr [rbp + rcx + 0x48], dh ; mov esi, dword ptr [rsp + 8] ; jmp 0x4b3e76
0x0000000000500ddf : xor byte ptr [rbp - 0x30], ah ; ret 0x3ef2
0x0000000000504e99 : xor byte ptr [rbp - 0x497e2d45], bh ; jae 0x504e6a ; ret
0x0000000000410a1a : xor byte ptr [rbp - 0x77], cl ; ror dword ptr [rbp - 0x77], 1 ; ret 0xf748
0x0000000000410a19 : xor byte ptr [rbp - 0x77], r9b ; ror dword ptr [rbp - 0x77], 1 ; ret 0xf748
0x0000000000450709 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000043bc4a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004fc274 : xor byte ptr [rbx + 0x7c], 0xfc ; ret
0x0000000000541117 : xor byte ptr [rbx + 0xa580206], al ; ret
0x000000000054f3df : xor byte ptr [rbx + 0xa610206], al ; ret
0x0000000000532547 : xor byte ptr [rbx + 0xa630206], al ; ret
0x00000000005444c7 : xor byte ptr [rbx + 0xa8e0206], al ; ret
0x00000000005543f7 : xor byte ptr [rbx + 0xaef0206], al ; ret
0x0000000000533a7f : xor byte ptr [rbx + 0xaf10206], al ; ret
0x00000000004719a4 : xor byte ptr [rbx + rcx*4 + 0x48], al ; sbb al, 0x83 ; ret 0x8301
0x0000000000407113 : xor byte ptr [rbx + rcx*4], cl ; mov rsi, r10 ; jmp r9
0x0000000000530c60 : xor byte ptr [rbx - 0x13], dh ; call qword ptr [rsi]
0x00000000005076ee : xor byte ptr [rbx - 0x76], al ; ret
0x00000000005533a0 : xor byte ptr [rbx - 0xa], al ; call qword ptr [rbx]
0x0000000000483c41 : xor byte ptr [rcx + 0x52], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004ecbdb : xor byte ptr [rcx + 0x7a], al ; jmp rdi
0x0000000000410241 : xor byte ptr [rcx + 1], cl ; ret
0x0000000000410217 : xor byte ptr [rcx + 1], cl ; ret 0x1149
0x00000000004cab1d : xor byte ptr [rcx + 9], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000004f4a53 : xor byte ptr [rcx + rbx*2 - 0x1e], cl ; ret 0xfe43
0x0000000000416c68 : xor byte ptr [rcx + rcx*4 + 0x7f], cl ; cmp bl, dh ; ret
0x000000000054ecf0 : xor byte ptr [rcx - 0xb], dh ; call qword ptr [rsi]
0x00000000004101a9 : xor byte ptr [rcx - 9], cl ; and byte ptr [rcx + 1], cl ; ret 0x1149
0x00000000004101a8 : xor byte ptr [rcx - 9], r9b ; and byte ptr [rcx + 1], cl ; ret 0x1149
0x0000000000446912 : xor byte ptr [rcx], 0xc0 ; ret
0x0000000000513eab : xor byte ptr [rcx], 0xe9 ; ret 0xa287
0x00000000004791b5 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000467672 : xor byte ptr [rcx], al ; mov eax, 1 ; ret
0x0000000000424174 : xor byte ptr [rcx], al ; pop rbx ; mov qword ptr [rdi], rax ; ret
0x00000000004c6a6e : xor byte ptr [rcx], cl ; ret 0x1788
0x00000000005434b0 : xor byte ptr [rcx], dh ; jmp qword ptr [rdx]
0x000000000044ac87 : xor byte ptr [rcx], dh ; rcr byte ptr [rbx - 0x7b], 0xd2 ; setne al ; ret
0x0000000000424173 : xor byte ptr [rcx], r8b ; pop rbx ; mov qword ptr [rdi], rax ; ret
0x0000000000448afb : xor byte ptr [rdi + rcx - 1], al ; ret
0x0000000000545090 : xor byte ptr [rdi - 0xd], ah ; call qword ptr [rax]
0x00000000004a5ded : xor byte ptr [rdi], 0x52 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000506725 : xor byte ptr [rdi], bl ; cmp al, 0x36 ; cdq ; out dx, al ; jbe 0x506743 ; ret 0x6dd1
0x0000000000477b41 : xor byte ptr [rdi], cl ; lahf ; ret
0x000000000045c4f2 : xor byte ptr [rdi], cl ; ret
0x00000000005143be : xor byte ptr [rdx + 0x421d3aa4], bl ; sub al, 0x7e ; ret
0x00000000004f95c4 : xor byte ptr [rdx + r11*8 + 0x6e830f8b], 0x9b ; call qword ptr [rdi]
0x00000000004f95c5 : xor byte ptr [rdx + rbx*8 + 0x6e830f8b], 0x9b ; call qword ptr [rdi]
0x00000000004a5e61 : xor byte ptr [rdx + rdx*2], 0 ; ret
0x00000000005097e5 : xor byte ptr [rdx - 0x7c], ch ; cdq ; sub esi, dword ptr [rbx - 0x50] ; mov ah, 0xac ; ret
0x000000000052d3fd : xor byte ptr [rdx], al ; add byte ptr [rbp + rcx*4 - 0xa], dl ; call rsp
0x00000000005441cd : xor byte ptr [rdx], al ; ret
0x00000000004a3a62 : xor byte ptr [rdx], dl ; ret
0x0000000000406844 : xor byte ptr [rip - 0x3f7ab800], dh ; je 0x406858 ; jmp rax
0x000000000042c017 : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; and byte ptr [r14 + 0xf], 0xfe ; ret
0x000000000040713a : xor byte ptr [rsi + 3], bh ; ret
0x000000000052f2bd : xor byte ptr [rsi + rcx + 0x18], ah ; ret
0x0000000000500ee7 : xor byte ptr [rsi - 0x17], bl ; mov bl, 0xeb ; ret 0xfe88
0x0000000000515a57 : xor byte ptr [rsi], 0x40 ; fcomp st(0), st(4) ; sub byte ptr [rcx + 0x64], 0x4c ; ret
0x00000000004c9086 : xor ch, al ; stc ; out dx, eax ; ret
0x000000000052f191 : xor ch, ch ; jmp qword ptr [rax]
0x000000000050d78e : xor ch, ch ; ret 0xa9bd
0x000000000054d3a1 : xor ch, dh ; call qword ptr [rdx]
0x0000000000427dd6 : xor cl, al ; ret
0x000000000046eb0b : xor cl, bh ; dec dword ptr [rax + 0x39] ; ret
0x00000000004488a5 : xor cl, byte ptr [rax - 0x77] ; ret
0x0000000000479848 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x000000000044e2bd : xor cl, byte ptr [rax - 0x7d] ; ret 0x8920
0x00000000004db341 : xor cl, byte ptr [rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004db319 : xor cl, byte ptr [rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000050ccfa : xor cl, byte ptr [rbx - 0x2ed41f02] ; ret
0x0000000000418af5 : xor cl, byte ptr [rcx + 0x21] ; ret
0x000000000041fad5 : xor cl, byte ptr [rcx - 0x7d] ; jmp 0xffffffffc2c543f4
0x0000000000505a3c : xor cl, byte ptr [rdi + rbp*8 + 0x6e] ; ret
0x0000000000517063 : xor cl, byte ptr [rsi - 0x4dea093b] ; ret
0x000000000050ccf9 : xor cl, byte ptr fs:[rbx - 0x2ed41f02] ; ret
0x00000000005086e1 : xor cl, ch ; stosd dword ptr [rdi], eax ; leave ; rcl byte ptr [rcx - 0x3e], 1 ; jmp 0x5086f8
0x000000000050f4f1 : xor dh, byte ptr [rax + 0x37b69c05] ; je 0x50f526 ; ret 0x6948
0x0000000000516711 : xor dh, byte ptr [rsi] ; sub cl, byte ptr [r14 - 0x53052858] ; ret 0x1c5b
0x0000000000440ba0 : xor dh, dh ; ret 0xf80
0x0000000000439ccc : xor dl, ah ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000050acd2 : xor dl, byte ptr [rax - 0x663a9512] ; mov cl, 0x67 ; ret
0x0000000000425292 : xor dl, byte ptr [rax] ; mov dword ptr [rdx + 0x10], 0xc3d2e1f0 ; ret
0x00000000004b8ba2 : xor dl, byte ptr [rax] ; ret
0x00000000004ef1ac : xor dl, byte ptr [rbx] ; nop ; mov ecx, 0xd3c1034a ; push rsi ; ret 0x2211
0x0000000000516d76 : xor dl, byte ptr [rdi - 0x7c] ; ret
0x00000000004ff8da : xor dl, byte ptr [rdx] ; fisttp word ptr [rbx] ; ret 0x1bbc
0x00000000004a3a12 : xor dl, byte ptr [rdx] ; ret
0x000000000051816c : xor dword ptr [rax + 0x47], ebx ; ret
0x000000000047142b : xor dword ptr [rax + 0x74000000], 3 ; pop rbx ; ret
0x0000000000514553 : xor dword ptr [rax - 0x22], edx ; ret
0x0000000000407fd1 : xor dword ptr [rax - 0x3f], ecx ; loop 0x407fff ; or rax, rdx ; ret
0x000000000041e25a : xor dword ptr [rax - 0x7b], ecx ; div byte ptr [rbp - 0x16] ; ret
0x00000000005321ad : xor dword ptr [rax], eax ; add byte ptr [rax + 0x73], dh ; out dx, al ; jmp qword ptr [rbx]
0x0000000000447643 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043a56d : xor dword ptr [rax], eax ; jne 0x43a533 ; pop rbx ; ret
0x000000000043a5cd : xor dword ptr [rax], eax ; jne 0x43a593 ; pop rbx ; ret
0x000000000043b8b4 : xor dword ptr [rax], eax ; ret
0x0000000000407063 : xor dword ptr [rax], ebp ; xor eax, 0xc0854800 ; je 0x407079 ; jmp rax
0x0000000000402e67 : xor dword ptr [rax], edi ; ret
0x0000000000513e1c : xor dword ptr [rbp - 0x1ab24fd0], edx ; ret 0xf505
0x0000000000404d03 : xor dword ptr [rbx + 0x35], ecx ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; ret
0x00000000004c688c : xor dword ptr [rbx + 0x40], ecx ; mov rdi, r13 ; call rdx
0x000000000051584c : xor dword ptr [rbx - 0x6c], eax ; mov esi, 0x18d3b1d4 ; ret 0x32c0
0x000000000051719a : xor dword ptr [rbx], ebp ; jrcxz 0x51716c ; push rdi ; ret
0x00000000004fa3a1 : xor dword ptr [rcx + rax - 0x1069994], ebp ; ret
0x000000000051584b : xor dword ptr [rcx], 0x43 ; xchg eax, esp ; mov esi, 0x18d3b1d4 ; ret 0x32c0
0x000000000051816b : xor dword ptr [rcx], 0x58 ; ret
0x00000000004f4b59 : xor dword ptr [rcx], ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004a499d : xor dword ptr [rcx], edi ; ret 0x894c
0x00000000004c7138 : xor dword ptr [rdi + 0x18], eax ; call r14
0x00000000004fa473 : xor dword ptr [rdi + 0x69af1543], esi ; ret
0x000000000050d6f5 : xor dword ptr [rdi + rsi*8], ebp ; mov ebp, 0xf3d76a55 ; cmc ; ret
0x00000000004cd9d5 : xor dword ptr [rdi], ecx ; ret 0x4789
0x000000000047283f : xor dword ptr [rdi], ecx ; ret 0xbe0f
0x00000000004f81ec : xor dword ptr [rdi], edi ; xchg eax, ebp ; ret 0x5413
0x000000000050f0bd : xor dword ptr [rdx - 0x2e], esp ; and dword ptr [rdx], ebx ; ret
0x00000000004f4d1d : xor dword ptr [rdx], edi ; in al, dx ; mov dl, 0x1c ; ret
0x00000000004a3a32 : xor dword ptr [rdx], edx ; ret
0x0000000000407f9e : xor eax, 0x100 ; add bl, dh ; ret
0x0000000000406065 : xor eax, 0x1b800 ; add byte ptr [rax], al ; ret
0x0000000000507a3a : xor eax, 0x2a2bf90d ; in eax, dx ; ret
0x0000000000492b57 : xor eax, 0x2fececc3 ; ret
0x000000000047f8ec : xor eax, 0x30c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004fcefd : xor eax, 0x316bc474 ; ret 0xdc5a
0x0000000000406a8d : xor eax, 0x34fd36 ; ret
0x0000000000406a4d : xor eax, 0x34fd5e ; ret
0x0000000000492b53 : xor eax, 0x35131326 ; ret
0x00000000004d0f53 : xor eax, 0x35bf35bd ; ret
0x00000000004461f7 : xor eax, 0x39fffd66 ; ret
0x00000000004454f7 : xor eax, 0x39fffd73 ; ret
0x0000000000406057 : xor eax, 0x4740000 ; ret
0x000000000046f277 : xor eax, 0x480051e9 ; mov edi, ebp ; call rbx
0x0000000000406279 : xor eax, 0x48b4800 ; and al, 0x89 ; ret 0xc148
0x00000000005134f1 : xor eax, 0x4c57e9c8 ; ret
0x000000000050e263 : xor eax, 0x5d5c0a0 ; lodsb al, byte ptr [rsi] ; ret
0x0000000000502027 : xor eax, 0x5de91ef7 ; ret
0x0000000000505d7d : xor eax, 0x67059841 ; ret
0x0000000000508e4f : xor eax, 0x7482e41d ; je 0x508e95 ; lahf ; ret 0xb224
0x0000000000407844 : xor eax, 0x7750100 ; xor eax, eax ; ret
0x0000000000532525 : xor eax, 0x78480000 ; out dx, al ; call rbx
0x00000000004ffaf5 : xor eax, 0x85c16712 ; ret 0x349e
0x00000000004048bf : xor eax, 0x89480100 ; ret
0x0000000000406c66 : xor eax, 0x894900 ; ret
0x000000000050705c : xor eax, 0x8e7c1367 ; ret
0x0000000000508e56 : xor eax, 0xb224c29f ; in al, dx ; ret
0x00000000004fcda3 : xor eax, 0xbed17407 ; adc al, byte ptr [rax] ; mov esp, dr0 ; ret
0x00000000004047de : xor eax, 0xc0854800 ; je 0x404849 ; xor edi, edi ; call qword ptr [rax]
0x0000000000404b9e : xor eax, 0xc0854800 ; je 0x404c09 ; xor edi, edi ; call qword ptr [rax]
0x0000000000404c25 : xor eax, 0xc0854800 ; je 0x404c37 ; ret
0x0000000000406085 : xor eax, 0xc0854800 ; je 0x406097 ; jmp rax
0x0000000000406115 : xor eax, 0xc0854800 ; je 0x406127 ; jmp rax
0x0000000000406429 : xor eax, 0xc0854800 ; je 0x40648f ; jmp rax
0x0000000000406845 : xor eax, 0xc0854800 ; je 0x406857 ; jmp rax
0x0000000000407065 : xor eax, 0xc0854800 ; je 0x407077 ; jmp rax
0x0000000000407085 : xor eax, 0xc0854800 ; je 0x407097 ; jmp rax
0x00000000004f81d6 : xor eax, 0xd07a1fb0 ; sahf ; or bh, byte ptr [rax + 0x46] ; ret 0x9fc2
0x0000000000518709 : xor eax, 0xdbe9024e ; call 0xffffffffc41910e3
0x00000000005425ad : xor eax, 0xf2900001 ; call qword ptr [rcx]
0x00000000004fd4eb : xor eax, 0xfd90d0ad ; ret 0x9661
0x00000000004483de : xor eax, dword ptr [rax - 0x78] ; je 0x4483fb ; add dword ptr [rax - 0x7d], ecx ; ret 0x3902
0x000000000041e334 : xor eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000041e2b6 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041d7de : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000041d0e5 : xor eax, dword ptr [rax] ; mov eax, 1 ; pop rbx ; ret
0x000000000041d876 : xor eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; add rsp, 8 ; jmp rax
0x000000000041d127 : xor eax, dword ptr [rax] ; pop rbx ; ret
0x000000000041e34c : xor eax, dword ptr [rax] ; ret
0x000000000041d0f5 : xor eax, dword ptr [rax] ; test rax, rax ; je 0x41d107 ; ret
0x000000000041d7c5 : xor eax, dword ptr [rax] ; test rax, rax ; je 0x41d7d7 ; ret
0x00000000004a0c04 : xor eax, dword ptr [rbx - 0x7cb7fe40] ; rol dword ptr [rcx], 0x39 ; ret 0xf075
0x000000000052a485 : xor eax, dword ptr [rcx] ; add ah, dl ; or dh, dl ; call rsp
0x00000000004f1f86 : xor eax, dword ptr [rdx] ; ret
0x000000000051200c : xor eax, dword ptr [rip + 0x3398db0f] ; ret
0x0000000000445220 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004864f0 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004222ac : xor eax, eax ; add rsp, 0x18 ; ret
0x000000000046c72f : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000040e225 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000405b08 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000462679 : xor eax, eax ; call 0x41e964
0x00000000004a9f62 : xor eax, eax ; call r15
0x0000000000423b38 : xor eax, eax ; cmp cl, 6 ; je 0x423b50 ; ret
0x000000000045a4e0 : xor eax, eax ; cmp dword ptr [rdi + 0x10], 4 ; je 0x45a4f9 ; ret
0x00000000004a8ba0 : xor eax, eax ; cmp dword ptr [rdi + 4], 0x1c ; je 0x4a8bb9 ; ret
0x0000000000476d2b : xor eax, eax ; cmp edi, 0x10 ; je 0x476d40 ; ret
0x0000000000444829 : xor eax, eax ; cmp rcx, rsi ; je 0x444888 ; ret
0x000000000043bfe7 : xor eax, eax ; jmp 0x43bfb1
0x000000000043c1d7 : xor eax, eax ; jmp 0x43c1a1
0x000000000043c537 : xor eax, eax ; jmp 0x43c501
0x0000000000445f02 : xor eax, eax ; jmp 0x445ecc
0x00000000004a0aa7 : xor eax, eax ; jmp 0x4a0a71
0x0000000000478cc9 : xor eax, eax ; mov qword ptr [rbx], rdx ; jmp 0x478c99
0x000000000044fda1 : xor eax, eax ; mov rdi, r15 ; call 0x41bff7
0x000000000040be4f : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040d877 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000407925 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040e4c9 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000402aa9 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000406623 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000405eb0 : xor eax, eax ; pop rbx ; ret
0x000000000044ac58 : xor eax, eax ; pop rbx ; test edx, edx ; setne al ; ret
0x0000000000445b3d : xor eax, eax ; pop rdx ; pop rbx ; ret
0x0000000000402538 : xor eax, eax ; ret
0x000000000048058a : xor eax, eax ; test byte ptr [rsi + 0x50], 0xa8 ; setne al ; ret
0x000000000046dc40 : xor eax, eax ; test cl, cl ; sete al ; ret
0x0000000000495c73 : xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000004b20f8 : xor eax, eax ; test edx, edx ; setg al ; ret
0x00000000004a1000 : xor eax, eax ; test rdi, rdi ; setne al ; ret
0x000000000047c520 : xor eax, eax ; test rdx, rdx ; jne 0x47c537 ; ret
0x000000000040294a : xor eax, eax ; test rsi, rsi ; setne al ; ret
0x000000000043b7a1 : xor eax, eax ; xor ecx, ecx ; mov rdx, rax ; jmp 0x43b77e
0x000000000050e0ec : xor eax, ebp ; ret
0x0000000000484956 : xor eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004f8e5e : xor eax, ebx ; ret 0x50e2
0x00000000004bcbb4 : xor eax, ecx ; mov dword ptr [r11], edx ; mov dword ptr [r11 + 4], eax ; ret
0x00000000004baf7b : xor eax, ecx ; mov dword ptr [rdi], edx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000040448d : xor eax, ecx ; ret
0x000000000041ca09 : xor eax, edx ; ret
0x000000000050ede4 : xor ebp, dword ptr [rdi + rsi*8 - 0x692420fb] ; ret
0x0000000000466040 : xor ebp, ebp ; call 0x402294
0x000000000047933c : xor ebp, ebp ; call 0x405624
0x000000000047f627 : xor ebp, ebp ; call 0x419b19
0x0000000000440166 : xor ebp, ebp ; call rax
0x000000000047c23c : xor ebp, ebp ; jmp 0x47c248
0x000000000046fcaf : xor ebp, ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054d3d9 : xor ebp, esi ; call qword ptr [rdx]
0x000000000040df69 : xor ebx, 0 ; add byte ptr [rbx - 0x7bf00008], al ; ret 0
0x00000000004454ec : xor ebx, ebx ; jmp 0x4454f8
0x0000000000448360 : xor ebx, ebx ; jmp 0x448329
0x000000000040821e : xor ebx, ebx ; lea rax, qword ptr [rsp + 8] ; ret
0x000000000049906b : xor ebx, ebx ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040796a : xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x00000000004913d9 : xor ebx, ebx ; xor ecx, r12d ; xor edx, r8d ; ret
0x0000000000543531 : xor ebx, esi ; call qword ptr [rax]
0x00000000005434b1 : xor ebx, esi ; jmp qword ptr [rdx]
0x00000000004913d8 : xor ebx, r11d ; xor ecx, r12d ; xor edx, r8d ; ret
0x0000000000491647 : xor ecx, dword ptr [r15 + 8] ; xor edx, dword ptr [r15 + 0xc] ; ret
0x00000000004b4b11 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000049fba4 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000515ec0 : xor ecx, dword ptr [rbx] ; je 0x515eb1 ; ret 0x89f6
0x0000000000418a52 : xor ecx, dword ptr [rcx + 0x21] ; ret 0x894c
0x0000000000498447 : xor ecx, dword ptr [rcx + rcx*4 - 0x11] ; call rax
0x0000000000504ec9 : xor ecx, dword ptr [rdi + 0x29] ; ret 0x35cc
0x0000000000491648 : xor ecx, dword ptr [rdi + 8] ; xor edx, dword ptr [r15 + 0xc] ; ret
0x0000000000513eac : xor ecx, ebp ; ret 0xa287
0x000000000047203d : xor ecx, ecx ; jmp rax
0x000000000040fea9 : xor ecx, ecx ; mov rax, r9 ; ret
0x000000000047a3b0 : xor ecx, ecx ; mov rax, rcx ; ret
0x0000000000406ea3 : xor ecx, ecx ; mov rcx, rsi ; mov edx, ebp ; xor esi, esi ; call rax
0x000000000043b7a3 : xor ecx, ecx ; mov rdx, rax ; jmp 0x43b77c
0x0000000000406f62 : xor ecx, ecx ; xor esi, esi ; call rax
0x00000000005108a8 : xor ecx, edi ; pop rbp ; ret 0xe4b6
0x00000000004913dc : xor ecx, esp ; xor edx, r8d ; ret
0x00000000004913db : xor ecx, r12d ; xor edx, r8d ; ret
0x00000000005107e7 : xor edi, dword ptr [rbx + 0x48] ; mov esi, 0xa47ecd67 ; ret
0x00000000004f1c51 : xor edi, dword ptr [rdi + 0xe] ; mov edi, 0x18008dac ; ret
0x00000000004ca3ab : xor edi, ebp ; enter -0x163b, -0x11 ; rol esp, 1 ; ret
0x00000000004ca512 : xor edi, ebp ; enter 0x41c4, 0x29 ; out dx, eax ; rol esp, cl ; ret
0x00000000004047e5 : xor edi, edi ; call qword ptr [rax]
0x0000000000406cb5 : xor edi, edi ; call rax
0x0000000000477ee5 : xor edi, edi ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000404faf : xor edi, edi ; jmp rax
0x000000000046dcc2 : xor edi, edi ; mov qword ptr [rsp + 0x10], rbx ; call r12
0x0000000000404fc8 : xor edi, edi ; mov rax, qword ptr [rax] ; add rsp, 8 ; jmp rax
0x000000000044b830 : xor edi, edi ; mov rax, rdi ; ret
0x0000000000447a40 : xor edi, edi ; mov rdx, qword ptr [rsp + 8] ; call r14
0x000000000043f9e2 : xor edi, edi ; mov rdx, rbx ; mov rsi, r12 ; call r14
0x00000000004ae616 : xor edi, edi ; pop rbx ; pop rbp ; jmp rax
0x00000000004ae4bb : xor edi, edi ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000479480 : xor edi, edx ; dec dword ptr [rax - 0x77] ; ret
0x000000000052d6e9 : xor edi, esi ; call rsp
0x000000000049164b : xor edx, dword ptr [r15 + 0xc] ; ret
0x00000000004fdb3e : xor edx, dword ptr [rax] ; ret
0x000000000049164c : xor edx, dword ptr [rdi + 0xc] ; ret
0x00000000004eec2b : xor edx, dword ptr [rsi + 7] ; ret
0x000000000045a45e : xor edx, eax ; mov qword ptr [rdi + 0x18], rdx ; ret
0x00000000004913df : xor edx, eax ; ret
0x0000000000402e61 : xor edx, edi ; mov qword ptr [rsi], rdx ; xor qword ptr [rax], rdi ; ret
0x00000000004b8161 : xor edx, edx ; add rsp, 8 ; mov eax, edx ; ret
0x00000000004a3d7d : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043d6b8 : xor edx, edx ; mov esi, 3 ; jmp rax
0x000000000046c526 : xor edx, edx ; mov esi, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000040fdb1 : xor edx, edx ; mov rax, r10 ; ret
0x00000000004601fa : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043bf9f : xor edx, edx ; mov rsi, rsp ; call rax
0x00000000004786c0 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004913de : xor edx, r8d ; ret
0x00000000004f5ae2 : xor esi, dword ptr [rdi + 0x51] ; pop rbp ; jg 0x4f5b22 ; ret
0x0000000000511893 : xor esi, ebx ; pushfq ; ret
0x000000000052a791 : xor esi, edx ; call rsp
0x0000000000406d40 : xor esi, esi ; call rax
0x00000000004b4e26 : xor esi, esi ; mov qword ptr [rsp + 8], r8 ; call qword ptr [rbx]
0x00000000004b0567 : xor esi, esi ; mov r15, qword ptr [rsp + 0x28] ; call 0x41c879
0x000000000043be66 : xor esi, esi ; mov rbx, rdi ; mov rdx, rsp ; call rax
0x0000000000440470 : xor esi, esi ; mov rdi, qword ptr [rbx] ; call rax
0x00000000004a985b : xor esi, esi ; mov rdi, qword ptr [rsp + 8] ; call r15
0x000000000047788a : xor esi, esi ; mov rdi, r13 ; call r12
0x00000000004a8cff : xor esi, esi ; mov rdi, rax ; call r12
0x00000000004a54a5 : xor esi, esi ; ret 0x4002
0x000000000052b441 : xor esi, esp ; call rsp
0x00000000005008c2 : xor esp, dword ptr [rbx] ; mov ebx, 0xa068aa40 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000515188 : xor esp, dword ptr [rsi + 0x74808c49] ; loop 0x515189 ; ret
0x000000000052b3f1 : xor esp, esi ; call rsp
0x0000000000511046 : xor esp, esi ; ret 0xd057
0x000000000041a821 : xor esp, esp ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004c7137 : xor qword ptr [r15 + 0x18], rax ; call r14
0x0000000000402e66 : xor qword ptr [rax], rdi ; ret
0x00000000004c688b : xor qword ptr [rbx + 0x40], rcx ; mov rdi, r13 ; call rdx
0x000000000040fdb0 : xor r10d, r10d ; mov rax, r10 ; ret
0x000000000040821d : xor r11, r11 ; lea rax, qword ptr [rsp + 8] ; ret
0x0000000000515187 : xor r12d, dword ptr [r14 + 0x74808c49] ; loop 0x51518a ; ret
0x0000000000440165 : xor r13d, r13d ; call rax
0x000000000047c23b : xor r13d, r13d ; jmp 0x47c249
0x00000000004ca3aa : xor r15d, ebp ; enter -0x163b, -0x11 ; rol esp, 1 ; ret
0x0000000000476d2a : xor r8d, r8d ; cmp edi, 0x10 ; je 0x476d41 ; ret
0x000000000043b7a0 : xor r8d, r8d ; xor ecx, ecx ; mov rdx, rax ; jmp 0x43b77f
0x000000000040fea8 : xor r9d, r9d ; mov rax, r9 ; ret
0x0000000000406f61 : xor r9d, r9d ; xor esi, esi ; call rax
0x000000000050e262 : xor rax, 0x5d5c0a0 ; lodsb al, byte ptr [rsi] ; ret
0x0000000000532524 : xor rax, 0x78480000 ; out dx, al ; call rbx
0x00000000004048be : xor rax, 0x89480100 ; ret
0x0000000000404c24 : xor rax, 0xc0854800 ; je 0x404c38 ; ret
0x0000000000484955 : xor rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000040448c : xor rax, rcx ; ret
0x000000000041ca08 : xor rax, rdx ; ret
0x000000000045a45d : xor rdx, rax ; mov qword ptr [rdi + 0x18], rdx ; ret
0x0000000000402e60 : xor rdx, rdi ; mov qword ptr [rsi], rdx ; xor qword ptr [rax], rdi ; ret
0x00000000004c1c74 : xorps xmm0, xmm0 ; pxor xmm1, xmm1 ; ret
0x00000000004c4629 : xorps xmm0, xmm1 ; ret
0x00000000004c46c9 : xorps xmm2, xmm1 ; ret

Unique gadgets found: 18656
